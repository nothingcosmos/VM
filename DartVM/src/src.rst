
dart/runtime/vm


ValueObject



allocation.cc
===============================================================================
ZoneAllocateクラス

allocationは、Isolateに対して行うらしい。

Isolate->currentZone->new()

allocation.h
===============================================================================

クラス定義
ValueObject
StackResource
  Isolate単位のスタックなのかも
  AllStatic
  ZoneAllocated

assembler.cc
===============================================================================
assemblerの定義

asmbufferとか、emitとか、labelの挿入とか
assembler.h
===============================================================================
assembler_arm.h
===============================================================================
assembler_ia32.cc
===============================================================================

ia32の命令単位でasm emitterを用意している


assembler_ia32.h
===============================================================================
assembler_macros.h
===============================================================================
今のところTryAllocateくらいしかないが。
後々増えていくんだろう。


assembler_macros_ia32.cc
===============================================================================

TryAllocateの実装

assembler_macros_ia32.h
===============================================================================
assembler_macros_x64.cc
===============================================================================
assembler_macros_x64.h
===============================================================================
assembler_x64.cc
===============================================================================
assembler_x64.h
===============================================================================



assert.h
===============================================================================
ast.cc
===============================================================================
ast.h
===============================================================================
ast_printer.cc
===============================================================================
ast_printer.h
===============================================================================
back
===============================================================================
base_isolate.h
===============================================================================
bigint_operations.cc
===============================================================================
bigint_operations.h
===============================================================================
bit_set.h
===============================================================================
bit_vector.cc
===============================================================================
bit_vector.h
===============================================================================
bitfield.h
===============================================================================
bitmap.cc
===============================================================================
bitmap.h
===============================================================================
boolfield.h
===============================================================================
bootstrap.cc
===============================================================================
bootstrap.h
===============================================================================
bootstrap_natives.cc
===============================================================================
bootstrap_natives.h
===============================================================================
bootstrap_nocorelib.cc
===============================================================================
cha.cc
===============================================================================
cha.h
===============================================================================
class_finalizer.cc
===============================================================================
class_finalizer.h
===============================================================================
class_table.cc
===============================================================================
class_table.h
===============================================================================
code_descriptors.cc
===============================================================================
code_descriptors.h
===============================================================================
code_generator.cc
===============================================================================
code_generator.h
===============================================================================
code_patcher.h
===============================================================================
code_patcher_arm.cc
===============================================================================
code_patcher_ia32.cc
===============================================================================
code_patcher_x64.cc
===============================================================================
compiler.cc
===============================================================================
compiler.h
===============================================================================
compiler_stats.cc
===============================================================================
compiler_stats.h
===============================================================================
constants_arm.h
===============================================================================
constants_ia32.h
===============================================================================
constants_x64.h
===============================================================================
cpu.h
===============================================================================
cpu_arm.cc
===============================================================================
cpu_ia32.cc
===============================================================================
cpu_x64.cc
===============================================================================
dart.cc
===============================================================================
dart.h
===============================================================================
dart_api_impl.cc
===============================================================================
dart_api_impl.h
===============================================================================
dart_api_message.cc
===============================================================================
dart_api_message.h
===============================================================================
dart_api_state.h
===============================================================================
dart_entry.cc
===============================================================================
dart_entry.h
===============================================================================
datastream.h
===============================================================================
debugger.cc
===============================================================================
debugger.h
===============================================================================
debugger_api_impl.cc
===============================================================================
debugger_arm.cc
===============================================================================
debugger_ia32.cc
===============================================================================
debugger_x64.cc
===============================================================================
debuginfo.h
===============================================================================
debuginfo_android.cc
===============================================================================
debuginfo_linux.cc
===============================================================================
debuginfo_macos.cc
===============================================================================
debuginfo_win.cc
===============================================================================
deopt_instructions.cc
===============================================================================
deopt_instructions.h
===============================================================================
disassembler.cc
===============================================================================
disassembler.h
===============================================================================
disassembler_arm.cc
===============================================================================
disassembler_ia32.cc
===============================================================================
disassembler_x64.cc
===============================================================================
double_conversion.cc
===============================================================================
double_conversion.h
===============================================================================
double_internals.h
===============================================================================
elfgen.h
===============================================================================
exceptions.cc
===============================================================================
exceptions.h
===============================================================================
flags.cc
===============================================================================
flags.h
===============================================================================
flow_graph.cc
===============================================================================
flow_graph.h
===============================================================================
flow_graph_allocator.cc
===============================================================================
flow_graph_allocator.h
===============================================================================
flow_graph_builder.cc
===============================================================================
flow_graph_builder.h
===============================================================================
flow_graph_compiler.cc
===============================================================================
flow_graph_compiler.h
===============================================================================
flow_graph_compiler_arm.cc
===============================================================================
flow_graph_compiler_arm.h
===============================================================================
flow_graph_compiler_ia32.cc
===============================================================================
flow_graph_compiler_ia32.h
===============================================================================
flow_graph_compiler_x64.cc
===============================================================================
flow_graph_compiler_x64.h
===============================================================================
flow_graph_inliner.cc
===============================================================================
flow_graph_inliner.h
===============================================================================
flow_graph_optimizer.cc
===============================================================================
flow_graph_optimizer.h
===============================================================================
freelist.cc
===============================================================================
freelist.h
===============================================================================
gc_callbacks.h
===============================================================================
gc_marker.cc
===============================================================================
gc_marker.h
===============================================================================
gc_sweeper.cc
===============================================================================
gc_sweeper.h
===============================================================================
gdbjit_android.cc
===============================================================================
gdbjit_android.h
===============================================================================
gdbjit_linux.cc
===============================================================================
gdbjit_linux.h
===============================================================================
globals.h
===============================================================================
grep.StackResource
===============================================================================
grep.ValueObject
===============================================================================
growable_array.h
===============================================================================

handles.cc
===============================================================================
handles.h
===============================================================================
handles_impl.h
===============================================================================
RAII用のHandle定義


hash_map.h
===============================================================================
ValueNumbering用のhash

hash_set.h
===============================================================================
heap.cc
===============================================================================
heap.h
===============================================================================
heap_profiler.cc
===============================================================================
heap_profiler.h
===============================================================================
il_printer.cc
===============================================================================
il_printer.h
===============================================================================
instructions.h
===============================================================================
instructions_ia32.cc
===============================================================================
instructions_ia32.h
===============================================================================
instructions_x64.cc
===============================================================================
instructions_x64.h
===============================================================================
intermediate_language.cc
===============================================================================
intermediate_language.h
===============================================================================
intermediate_language_ia32.cc
===============================================================================
intermediate_language_x64.cc
===============================================================================
intrinsifier.cc
===============================================================================
intrinsifier.h
===============================================================================
intrinsifier_arm.cc
===============================================================================
intrinsifier_ia32.cc
===============================================================================
intrinsifier_x64.cc
===============================================================================
isolate.cc
===============================================================================
isolate.h
===============================================================================
locations.cc
===============================================================================
locations.h
===============================================================================
longjump.cc
===============================================================================
longjump.h
===============================================================================
memory_region.cc
===============================================================================
memory_region.h
===============================================================================

message.cc
===============================================================================
message.h
===============================================================================
Message
MessageQueue

message_handler.cc
===============================================================================
message_handler.h
===============================================================================
message_handler
receive()側の処理を記述。
_handleMessage()

HandleMessages
で、主にメッセージを非同期にdequeし続ける。

native_arguments.cc
===============================================================================
native_arguments.h
===============================================================================

native関数の情報受け渡しを定義している。

native_entry.cc
===============================================================================
native_entry.h
===============================================================================
native_message_handler.cc
===============================================================================
native_message_handler.h
===============================================================================
object.cc
===============================================================================
object.h
===============================================================================

Function
  ContextScope

ClosureData
  ContextScope

object_set.h
===============================================================================
object_store.cc
===============================================================================
object_store.h
===============================================================================
os.h
===============================================================================
os_android.cc
===============================================================================
os_linux.cc
===============================================================================
os_macos.cc
===============================================================================
os_win.cc
===============================================================================
pages.cc
===============================================================================
pages.h
===============================================================================
parser.cc
===============================================================================
parser.h
===============================================================================
port.cc
===============================================================================
port.h
===============================================================================
random.cc
===============================================================================
random.h
===============================================================================

raw_object.cc
===============================================================================
raw_object.h
===============================================================================
raw系は、すべてobjectクラスの実データを定義する。
objectでは、操作のみ定義


raw_object_snapshot.cc
===============================================================================
resolver.cc
===============================================================================
resolver.h
===============================================================================
runtime_entry.h
===============================================================================
runtime_entry_arm.cc
===============================================================================
runtime_entry_ia32.cc
===============================================================================
runtime_entry_x64.cc
===============================================================================
scanner.cc
===============================================================================
scanner.h
===============================================================================

scavenger.cc
===============================================================================
scavenger.h
===============================================================================
GCのscavenger
sweepも定義してる。

scopes.cc
===============================================================================
scopes.h
===============================================================================
言語レベルのScopeを定義している。 {}これ
Scope内には、
LocalVariable
SourceLabel
LocalScope

LocalScopeが親子関係を管理して、
LocalScopeがSourceLabelやLocalScopeを内包して管理する。
他への紐付けとして、すべてindexで管理している。
int function_level
int loop_level
int context_level

上記indexは様々なところから参照されるが、
おもに、
ContextScope ClosureData
から参照される。

snapshot.cc
===============================================================================
snapshot.h
===============================================================================
snapshot_ids.h
===============================================================================
stack_frame.cc
===============================================================================
stack_frame.h
===============================================================================
stack_frame_arm.cc
===============================================================================
stack_frame_ia32.cc
===============================================================================
stack_frame_x64.cc
===============================================================================

store_buffer.cc
===============================================================================
store_buffer.h
===============================================================================
メモリのread/writey用のbuffer
bufferはpage単位になっていて、
同期用の処理も入っている。
gcからも、sweepする際に参照しているはず。


stub_code.cc
===============================================================================
stub_code.h
===============================================================================
stub_code_arm.cc
===============================================================================
stub_code_ia32.cc
===============================================================================
stub_code_x64.cc
===============================================================================

symbols.cc
===============================================================================
symbols.h
===============================================================================


thread.h
===============================================================================
thread_pool.cc
===============================================================================
thread_pool.h
===============================================================================
timer.cc
===============================================================================
timer.h
===============================================================================
token.cc
===============================================================================
token.h
===============================================================================

dartのtokenを定義している。
ここ見れば大体の予約語がみれる。


unicode.cc
===============================================================================
unicode.h
===============================================================================
unicode_data.cc
===============================================================================
verifier.cc
===============================================================================
verifier.h
===============================================================================
virtual_memory.cc
===============================================================================
virtual_memory.h
===============================================================================
virtual_memory_android.cc
===============================================================================
virtual_memory_linux.cc
===============================================================================
virtual_memory_macos.cc
===============================================================================
virtual_memory_win.cc
===============================================================================
visitor.h
===============================================================================
vm.gypi
===============================================================================
vm_sources.gypi
===============================================================================

zone.cc
===============================================================================
zone.h
===============================================================================
fast allocator

ZoneとStackZoneが存在する。
解放用にDeleteAll()を定義しており、Handle経由で呼び出される。
ZoneはRAII

StackZoneはIsolateが親。

Zoneの領域確保は、
Segment::Newを使用する。
Zoneで確保した領域は、すべてAligned


runtime/platform
===============================================================================
assert.cc          
assert.h           
c99_support_win.h  
globals.h          
hashmap.cc         
hashmap.h          

inttypes_support_win.h   
json.cc                  
json.h                   
platform_headers.gypi    
platform_sources.gypi    
thread.h                 

thread_android.cc  
thread_android.h   
thread_linux.cc    
thread_linux.h     
thread_macos.cc    
thread_macos.h     

thread_win.cc 
thread_win.h   
utils.cc        
utils.h         
utils_android.h 
utils_linux.h   
utils_macos.h  
utils_win.h    



