
###############################################################################



*******************************************************************************

ssa形式のirは、番号付けされている。
BitVectorで省エネ

analyze liveness
===============================================================================

AnalyzeLiveness()
  live_out初期化
  kill初期化
  live_in初期化

  ComputeInitialSets()
    blockを走査 i
      if IsJoinEntry()
        predのphiを収集して、
         kill mark
         
        自信のphiを拾って、
          phiをひろって、
            live_out mark
      instを走査 it
        if (!kill) live_in

  ComputeLiveInAddLiveOutSets()
    block走査
      UpdateLiveOut(block)
        blockのlive_outの集合に、block->succ()のlive_inを集合加算
      updateLiveIn(block)
        live_in->KillAndAdd(kill, live_out)
      if ()
        changed = true

build live ranges
===============================================================================

BuildLiveRanges()
  blockを走査
    range->AddUseIntervals(GetLiveRange())
    if IsParallelMove()
      
    Locationする


allocate cpu registers
===============================================================================

AllocateCPURegisters()
  while(unallocated)
    AdvanceActiveIntervals()
      FinalizeInterval()
    AllocateFreeRegister()
      LookAhadForHint()
      AssignFreeRegister()
      

  AdvanceActiveIntervals()


===============================================================================
===============================================================================

サブセクション
-------------------------------------------------------------------------------

===============================================================================
===============================================================================
===============================================================================
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

-------------------------------------------------------------------------------




===============================================================================


-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------





.. image:: xxx.png

.. literalinclude:: xxx.js

.. graphviz::


xxx ::

  xxx

.. code-block:: python
    :linenos:

.. literalinclude:: src/test.py

  :language: python
  :linenos:


