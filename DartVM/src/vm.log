------------------------------------------------------------------------
r34806 | iposva@google.com | 2014-04-08 09:34:14 +0900 (火, 08  4月 2014) | 5 lines

- Ensure the Null class is recognized when writing snapshots.

R=asiva@google.com

Review URL: https://codereview.chromium.org//225023033
------------------------------------------------------------------------
r34798 | hausner@google.com | 2014-04-08 06:30:54 +0900 (火, 08  4月 2014) | 7 lines

Add const static field optimization that got lost in last checkin

My last change list accidentally got rid of an optimization where the parser replaces const static field references with the value of the field. This causes many more compile-time “execute once” calls. This change adds back the special case.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//227863002
------------------------------------------------------------------------
r34793 | koda@google.com | 2014-04-08 03:40:45 +0900 (火, 08  4月 2014) | 16 lines

Reset growth control state after isolate initialization.

(a) When enabling the growth control, e.g. after isolate
initialization, the current usage should be the new basis for
growth control. This is consistent with the behavior before
r34747.

(b) Advise GC only when the number of allowed pages has been
(strictly) exceeded, rather than met. This is consistent with
the behavior before r34747.

Part (a) fixes the Havlak performance regression (3%).

R=iposva@google.com

Review URL: https://codereview.chromium.org//227683004
------------------------------------------------------------------------
r34787 | zra@google.com | 2014-04-08 02:56:59 +0900 (火, 08  4月 2014) | 5 lines

Removes stub from arm64 to fix build.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//227563003
------------------------------------------------------------------------
r34785 | hausner@google.com | 2014-04-08 02:31:32 +0900 (火, 08  4月 2014) | 11 lines

Implement deferred constant support

Compile time constants lose their const-ness if they are referred
to through a deferred prefix. This CL adds a flag to some ast node
types that remembers whether a field or closure was referred to
via a deferred prefix. If so, the compile-time const analysis flags
the value as non-const.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//226953002
------------------------------------------------------------------------
r34777 | fschneider@google.com | 2014-04-07 20:47:13 +0900 (月, 07  4月 2014) | 8 lines

Fix bug in closure call stub.

Since closure calls and method calls both use the same lazy-compile stub,
we need a GC-safe value in the IC data register also at closure calls.

TBR=srdjan@google.com

Review URL: https://codereview.chromium.org//224723017
------------------------------------------------------------------------
r34774 | fschneider@google.com | 2014-04-07 18:27:43 +0900 (月, 07  4月 2014) | 15 lines

Simplify and improve handling of IC and megamorphic cache miss handling.

Instead of going back and forth from stub code to C++, perform
only the lookup in C++ and call target functions only from
stub code.

noSuchMethod and implicit closure invocations are now also work with
the megamorphic cache. Before they would go slow-case in the megamorphic case.

This CL eliminates the InstanceFunctionLookup stub that was previously
used to handle noSuchMethod and implicit closure invocations.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//221173011
------------------------------------------------------------------------
r34749 | koda@google.com | 2014-04-05 07:13:59 +0900 (土, 05  4月 2014) | 5 lines

Extend Timer to track longest contiguous interval, and add GC timer.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//215893006
------------------------------------------------------------------------
r34747 | koda@google.com | 2014-04-05 06:04:48 +0900 (土, 05  4月 2014) | 17 lines

Corrected resubmssion of r34736.
Fix: Division by page size in NeedsGarbageCollection.
Original description:

Generalize the interface of page space controller.

Gather used/capacity/external into SpaceUsage object,
and use it for testing whether GC is needed before or
after an allocation.

This refactor does not affect policy, but prepares for:
1. Replacing promotion failure check/tracking.
2. Better growth control for external allocation.

TBR=iposva@google.com

Review URL: https://codereview.chromium.org//225303006
------------------------------------------------------------------------
r34741 | koda@google.com | 2014-04-05 03:39:10 +0900 (土, 05  4月 2014) | 5 lines

Revert r34736 due to slowdown.

TBR=sra@google.com

Review URL: https://codereview.chromium.org//225023011
------------------------------------------------------------------------
r34739 | regis@google.com | 2014-04-05 03:27:53 +0900 (土, 05  4月 2014) | 8 lines

Simplify and fix instantiation of recursive types.
Add tests for non-contractive types.
Cleanup language tests status file.
Enhance tracing of type finalization.

R=hausner@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//224793002
------------------------------------------------------------------------
r34737 | turnidge@google.com | 2014-04-05 03:05:37 +0900 (土, 05  4月 2014) | 8 lines

Begin implementing flag  --deoptimize-filter=FUNC for ia32.

Currently not functional - committing so that srdjan can investigate
why it doesn't work.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//226303002
------------------------------------------------------------------------
r34736 | koda@google.com | 2014-04-05 02:46:15 +0900 (土, 05  4月 2014) | 13 lines

Generalize the interface of page space controller.

Gather used/capacity/external into SpaceUsage object,
and use it for testing whether GC is needed before or
after an allocation.

This refactor does not affect policy, but prepares for:
1. Replacing promotion failure check/tracking.
2. Better growth control for external allocation.

R=iposva@google.com

Review URL: https://codereview.chromium.org//220723010
------------------------------------------------------------------------
r34717 | srdjan@google.com | 2014-04-04 04:44:18 +0900 (金, 04  4月 2014) | 5 lines

Add optimization for pow(base, 0.5) to the other architectures as well.

R=zra@google.com

Review URL: https://codereview.chromium.org//220723017
------------------------------------------------------------------------
r34715 | zra@google.com | 2014-04-04 03:26:11 +0900 (金, 04  4月 2014) | 7 lines

Adds subract, move wide immediate instructions to ARM64.

Also adds tests for move, add shift, add extended.

R=regis@google.com

Review URL: https://codereview.chromium.org//214233006
------------------------------------------------------------------------
r34681 | iposva@google.com | 2014-04-03 09:58:14 +0900 (木, 03  4月 2014) | 6 lines

- Handle doubles transferred in message snapshots specially.
- Do not encode doubles using integer compression.

R=asiva@google.com

Review URL: https://codereview.chromium.org//221973004
------------------------------------------------------------------------
r34661 | johnmccutchan@google.com | 2014-04-03 03:30:01 +0900 (木, 03  4月 2014) | 23 lines

Miscellaneous Observatory UI improvements

Update cursor over expander in profiler

Ressurect json-view

Show arrow in profiler tree

Clicking on <code-ref> link in profiler doesn't expand tree

<code-ref> only shows a link for Dart code

Port script-view to use script-inset

Add function source to function view

Add counters to isolate view

Add counters to isolate summary

R=turnidge@google.com

Review URL: https://codereview.chromium.org//221263002
------------------------------------------------------------------------
r34657 | srdjan@google.com | 2014-04-03 03:03:37 +0900 (木, 03  4月 2014) | 5 lines

Add flag --inlining-callee-size-threshold (80), that prevents inlining too large functions. 'Accidentally' restores performance of NBody. Improves compilation speed (dart analyzer and stress6 test)

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//222553002
------------------------------------------------------------------------
r34654 | zra@google.com | 2014-04-03 02:39:32 +0900 (木, 03  4月 2014) | 11 lines

Begins work on ARM64, first assembler test.

Most new code is in constants_arm64.h and
{assembler,disassembler,simulator}_arm64.{h,cc}

The rest of the CL just #def's out tests, modifies status files,
and adds UNIMPLEMENTED functions, etc.

R=regis@google.com

Review URL: https://codereview.chromium.org//221133002
------------------------------------------------------------------------
r34649 | ajohnsen@google.com | 2014-04-03 00:53:23 +0900 (木, 03  4月 2014) | 6 lines

Speed up snapshots of *int8lists, by using memmove.

BUG=https://code.google.com/p/dart/issues/detail?id=17951
R=asiva@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//221943002
------------------------------------------------------------------------
r34647 | ajohnsen@google.com | 2014-04-02 23:24:53 +0900 (水, 02  4月 2014) | 6 lines

Trigger old-space GC when scavange made the external heap of old-space larger than max old-space size.

BUG=
R=koda@google.com

Review URL: https://codereview.chromium.org//220113004
------------------------------------------------------------------------
r34643 | fschneider@google.com | 2014-04-02 21:37:48 +0900 (水, 02  4月 2014) | 15 lines

Introduce a lazy-compile stub for functions.

The function's code pointer is either a lazy-compile stub
or the compiled code. The function is compiled on invocation.

There is no need to check for null when invoking a function. This means
one check less when invoking functions via a stub. For this I added a  LazyCompile
stub.

Additional cleanup in Stackmap and PcDescriptors (remove unused code pointer,
and changed smi-lengh into a raw integer).

R=zra@google.com

Review URL: https://codereview.chromium.org//203523011
------------------------------------------------------------------------
r34625 | srdjan@google.com | 2014-04-02 08:39:56 +0900 (水, 02  4月 2014) | 3 lines

Fix builds for finicky compilers.

Review URL: https://codereview.chromium.org//221623002
------------------------------------------------------------------------
r34624 | srdjan@google.com | 2014-04-02 08:25:06 +0900 (水, 02  4月 2014) | 5 lines

Optimize pow(x, 0.5) to use sqrt instead.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//221433002
------------------------------------------------------------------------
r34620 | johnmccutchan@google.com | 2014-04-02 07:05:39 +0900 (水, 02  4月 2014) | 6 lines

Redo allocationprofile options

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//217323006
------------------------------------------------------------------------
r34612 | turnidge@google.com | 2014-04-02 04:45:57 +0900 (水, 02  4月 2014) | 17 lines

Change how we provide value previews in the vm service.

Rename the 'preview' property to 'valueAsString'.

Rework printing so that we only add 'valueAsString' when we need it
(num, String, etc.).

Change ToUserCString to be a String-only method.  Drop ToUserCString
for lists -- it was hokey and unused.  Max string length is now 1024
instead of 40.

Update tests.

BUG=
R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//219333011
------------------------------------------------------------------------
r34606 | turnidge@google.com | 2014-04-02 03:16:27 +0900 (水, 02  4月 2014) | 7 lines

Fix line number table generation for multiline strings with interpolation.

Share the line number table generation code between debugger and vm service.

R=hausner@google.com

Review URL: https://codereview.chromium.org//219993004
------------------------------------------------------------------------
r34601 | hausner@google.com | 2014-04-02 01:11:28 +0900 (水, 02  4月 2014) | 8 lines

Deferred prefix support in metadata

Deferred prefixes are never ok in metadata, since metadata is required
to be compile time constant.

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//219473007
------------------------------------------------------------------------
r34545 | hausner@google.com | 2014-03-29 09:25:16 +0900 (土, 29  3月 2014) | 3 lines

Fix code invalidation for deferred code

Review URL: https://codereview.chromium.org//217483008
------------------------------------------------------------------------
r34542 | iposva@google.com | 2014-03-29 08:39:36 +0900 (土, 29  3月 2014) | 7 lines

- Make ports be less predictable.
- Limit the range of port numbers to 30-bits.
- Parse the ports as 64-bit values when reading from the wire in the debugger protocol.

R=hausner@google.com

Review URL: https://codereview.chromium.org//217693002
------------------------------------------------------------------------
r34537 | rmacnak@google.com | 2014-03-29 07:38:32 +0900 (土, 29  3月 2014) | 6 lines

VM: Evaluate metadata on a class in the scope of its library not the scope of the class.

BUG=http://dartbug.com/17795
R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//217543004
------------------------------------------------------------------------
r34528 | turnidge@google.com | 2014-03-29 06:24:24 +0900 (土, 29  3月 2014) | 13 lines

Use tokenPos instead of line/col in the vm service.

Add line number information to the Script response.

Parse line number information in the observatory.

Update <script-ref> to take a pos argument

Add a new <script-inset> element which shows a code snippet.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//216883008
------------------------------------------------------------------------
r34520 | turnidge@google.com | 2014-03-29 05:21:09 +0900 (土, 29  3月 2014) | 13 lines

Rework the <field-view> page.

Give fields/functions a consistent notion of ownership.

Add field's script to the JSON.

Make page reload work again.

Fixup closure printing a bit.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//215213003
------------------------------------------------------------------------
r34494 | rmacnak@google.com | 2014-03-28 10:22:03 +0900 (金, 28  3月 2014) | 6 lines

Handle creating ParameterMirrors for the parameters of forwarding constructors.

BUG=http://dartbug.com/17823
R=hausner@google.com, regis@google.com

Review URL: https://codereview.chromium.org//212883009
------------------------------------------------------------------------
r34488 | asiva@google.com | 2014-03-28 08:05:57 +0900 (金, 28  3月 2014) | 5 lines

Use ASSERT instead of CHECK_ISOLATE in cases where we derive the isolate from the native Arguments structure.

R=iposva@google.com

Review URL: https://codereview.chromium.org//215293002
------------------------------------------------------------------------
r34485 | koda@google.com | 2014-03-28 07:11:39 +0900 (金, 28  3月 2014) | 10 lines

Reduce GC from external allocation.

Before, external allocs artificially reduced new space capacity.
Now, we separately limit on total external size in new space.

Makes scavenges less frequent, while still limiting total footprint.

R=iposva@google.com

Review URL: https://codereview.chromium.org//211593004
------------------------------------------------------------------------
r34481 | hausner@google.com | 2014-03-28 06:20:47 +0900 (金, 28  3月 2014) | 14 lines

Support deferred library prefix syntax

First step towards deferred library support:
- Parse the “deferred as” import clause.
- Implement p.loadLibrary() which returns a future that
  completes when the library is loaded.
- Treat type annotations of deferred types as malformed.
- Throw NoSuchMethodError when calling functions from
  unloaded libraries.
- Libraries are still read synchronously, but items in the
  library won’t be visible through the deferred prefix until
  the future returned by loadLibrary() completes.

Review URL: https://codereview.chromium.org//208323015
------------------------------------------------------------------------
r34475 | srdjan@google.com | 2014-03-28 01:43:40 +0900 (金, 28  3月 2014) | 5 lines

Fix bug in divpd x64.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//213193009
------------------------------------------------------------------------
r34460 | regis@google.com | 2014-03-27 08:38:18 +0900 (木, 27  3月 2014) | 8 lines

Detect and reject illegal recursive types (non-contractive types).
Fixed instantiation and equality of recursive types.
Added many asserts to detect issues with recursive types.
Disabled bad tests. They declare illegal types and will be fixed in a later cl.

R=hausner@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//211963003
------------------------------------------------------------------------
r34455 | srdjan@google.com | 2014-03-27 07:45:22 +0900 (木, 27  3月 2014) | 3 lines

Fix dartium build.

Review URL: https://codereview.chromium.org//213733002
------------------------------------------------------------------------
r34451 | srdjan@google.com | 2014-03-27 06:24:35 +0900 (木, 27  3月 2014) | 5 lines

Incremental tuning/cleanup of inlining: --print-inline-tree changed to --print-inlining-tree; print also methods that were not inlined.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//211873003
------------------------------------------------------------------------
r34438 | iposva@google.com | 2014-03-27 02:30:39 +0900 (木, 27  3月 2014) | 6 lines

- First step in refactoring ports with the goal of moving
  them closer into the VM implementation.

R=asiva@google.com

Review URL: https://codereview.chromium.org//196443009
------------------------------------------------------------------------
r34435 | turnidge@google.com | 2014-03-27 02:13:03 +0900 (木, 27  3月 2014) | 13 lines

Support Types in instance-ref/instance-view.

Refactor JSON printing for all instances to share more code.  This allows Types to act like Instances in Observatory.

Update the look and feel for the function-view page.

Add script info for functions.

Update tests.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//211283004
------------------------------------------------------------------------
r34420 | kasperl@google.com | 2014-03-26 20:38:30 +0900 (水, 26  3月 2014) | 9 lines

Revert "- Make ports be less predictable."

This reverts r34209 which is causing the x64 VM to hang when
running command-line applications from within the editor.

R=ricow@google.com, iposva@google.com
BUG=http://dartbug.com/17806

Review URL: https://codereview.chromium.org//212723002
------------------------------------------------------------------------
r34400 | rmacnak@google.com | 2014-03-26 09:44:54 +0900 (水, 26  3月 2014) | 5 lines

Implement MethodMirror.location in the VM.

R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//211243009
------------------------------------------------------------------------
r34391 | zra@google.com | 2014-03-26 06:30:51 +0900 (水, 26  3月 2014) | 7 lines

Avoids MIPS32r2 instructions on MIPS32.

Adds necessary feature detection to tell the difference.

R=regis@google.com

Review URL: https://codereview.chromium.org//211363007
------------------------------------------------------------------------
r34390 | johnmccutchan@google.com | 2014-03-26 06:28:44 +0900 (水, 26  3月 2014) | 6 lines

Add fullgc subcommand to allocationprofile

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//211373005
------------------------------------------------------------------------
r34377 | johnmccutchan@google.com | 2014-03-26 03:09:02 +0900 (水, 26  3月 2014) | 8 lines

Add isolate tag-profile model and UI.
Distinction between a Dart Error and a ServiceError/ServiceException.
Better Observatory behaviour when a ServiceError/ServiceExceptions occurs.
Display isolate's sticky error.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//205713004
------------------------------------------------------------------------
r34338 | johnmccutchan@google.com | 2014-03-25 06:58:45 +0900 (火, 25  3月 2014) | 6 lines

Fix PrintToJSONStream for oddball functions

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//196173022
------------------------------------------------------------------------
r34333 | turnidge@google.com | 2014-03-25 06:42:26 +0900 (火, 25  3月 2014) | 21 lines

Rework how ServiceObjects are created and cached in Observatory.

We now use a single cache, rather than per-type caches which simplifies the get() logic and makes it easier to add more model-types in the future.

Rework how isolates are created/stored/retrieved.  IsolateList is gone.

Add canCache and immutable to ServiceObjects and use them to inform when an object should be cached or reloaded.

Remove cache.dart, service.dart.

Add a notion of a ServiceObjectOwner.

Cleanups.

Etc.

Etc.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//204983008
------------------------------------------------------------------------
r34320 | ajohnsen@google.com | 2014-03-25 03:56:36 +0900 (火, 25  3月 2014) | 9 lines

Fix memory-issue String::fromCharCodes, where a GC could invalidate an address.

The constructions is now reordered, so the address is not extracted
until after allocation of the new string.

BUG=https://code.google.com/p/dart/issues/detail?id=17602
R=iposva@google.com

Review URL: https://codereview.chromium.org//209003009
------------------------------------------------------------------------
r34315 | koda@google.com | 2014-03-25 01:57:53 +0900 (火, 25  3月 2014) | 7 lines

Make all objects print at least their type in PrintToJSONStream.

Also check this in the unit test.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//209093002
------------------------------------------------------------------------
r34312 | zra@google.com | 2014-03-25 00:59:48 +0900 (火, 25  3月 2014) | 9 lines

Use more fpu multi-load/store instructions on ARM.

Addressing some TODOs in the ARM code. This appears
to be a slight performance win, and makes things a
bit cleaner.

R=regis@google.com

Review URL: https://codereview.chromium.org//208423006
------------------------------------------------------------------------
r34271 | koda@google.com | 2014-03-22 06:12:38 +0900 (土, 22  3月 2014) | 5 lines

Ensure PrintToJSONStream can be called on all heap objects without crashing.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//206003005
------------------------------------------------------------------------
r34259 | srdjan@google.com | 2014-03-22 02:32:59 +0900 (土, 22  3月 2014) | 5 lines

When deoptimizing use the code stored in the deopt information instead of current unoptimized code (could be different once deferred loading comes in).

R=hausner@google.com

Review URL: https://codereview.chromium.org//208533004
------------------------------------------------------------------------
r34258 | asiva@google.com | 2014-03-22 02:23:33 +0900 (土, 22  3月 2014) | 5 lines

Use a bit in the handle structure to indicate if it is a prologue weak handle instead of the tagging the address.

R=koda@google.com

Review URL: https://codereview.chromium.org//208443002
------------------------------------------------------------------------
r34257 | koda@google.com | 2014-03-22 01:31:32 +0900 (土, 22  3月 2014) | 7 lines

Assert that FreeListElement is never wrapped in a handle.

Previously, this just crashed with a segfault (since its vtable entry is 0).

R=asiva@google.com

Review URL: https://codereview.chromium.org//207153003
------------------------------------------------------------------------
r34256 | zra@google.com | 2014-03-22 01:26:21 +0900 (土, 22  3月 2014) | 5 lines

Implements unboxed Mints on ARM.

R=johnmccutchan@google.com, regis@google.com

Review URL: https://codereview.chromium.org//206503005
------------------------------------------------------------------------
r34251 | koda@google.com | 2014-03-22 00:01:51 +0900 (土, 22  3月 2014) | 3 lines

R=floitsch@google.com

Review URL: https://codereview.chromium.org//207303002
------------------------------------------------------------------------
r34250 | johnmccutchan@google.com | 2014-03-21 23:40:30 +0900 (金, 21  3月 2014) | 5 lines

Refactor to support multiple outputs in location summary

R=srdjan@google.com

Review URL: https://codereview.chromium.org//207063002
------------------------------------------------------------------------
r34216 | srdjan@google.com | 2014-03-21 08:53:58 +0900 (金, 21  3月 2014) | 5 lines

Print inlined tree using --print_inline_tree. Also added Function::ToQualifiedCString which prints only the class and function name.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//206503007
------------------------------------------------------------------------
r34209 | iposva@google.com | 2014-03-21 06:48:35 +0900 (金, 21  3月 2014) | 5 lines

- Make ports be less predictable.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//198463007
------------------------------------------------------------------------
r34208 | asiva@google.com | 2014-03-21 06:45:43 +0900 (金, 21  3月 2014) | 5 lines

Auto delete persistent weak handles during finalization after invoking the callback associated with the weak handle.

R=iposva@google.com

Review URL: https://codereview.chromium.org//205153002
------------------------------------------------------------------------
r34206 | koda@google.com | 2014-03-21 06:08:24 +0900 (金, 21  3月 2014) | 7 lines

Add 'address' vm service message that finds heap objects.

Will be used to navigate from heap map to individual objects.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//206583003
------------------------------------------------------------------------
r34204 | turnidge@google.com | 2014-03-21 06:00:10 +0900 (金, 21  3月 2014) | 22 lines

Add a VM page to the observatory.

Make the VM a ServiceObject.  Some refactoring in the ServiceObject
implementation.

IsolateList is no longer a ServiceObject.  It should eventually become more like our caches.

Support the /vm request in the vm.  Remove isolate list request.

Improvements to Isolate::PrintToJSONStream: always provide a
reasonable name.  Use the same code to produce isolate refs and
non-refs.

Improve isolate status message when the isolate is paused at
start/exit.  Add a resume link to the isolate view.

Add a navbar to the error page so that dartium users are less likely
to get stuck.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//206213004
------------------------------------------------------------------------
r34195 | koda@google.com | 2014-03-21 03:56:45 +0900 (金, 21  3月 2014) | 9 lines

Add class and address information to heap map; display on hover.

Display a string like "String @ 0xe97c3328" while hovering over the map.

Also add page separators (black).

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//204103009
------------------------------------------------------------------------
r34184 | asiva@google.com | 2014-03-21 02:07:45 +0900 (金, 21  3月 2014) | 5 lines

Fix an incorrect usage of reusable handles in Dart_Allocate.

R=iposva@google.com

Review URL: https://codereview.chromium.org//206633002
------------------------------------------------------------------------
r34181 | regis@google.com | 2014-03-21 01:41:59 +0900 (金, 21  3月 2014) | 12 lines

Support displaying of types in the observatory (back-end only for now):
- canonical type arguments cached in the global hash table
- subset of the above, but with cached instantiations
- canonical types cached by the type class

And of course, it should now be possible to display any type, e.g.
field types, function signature types, classes super types, interface types,
etc...

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//184653003
------------------------------------------------------------------------
r34128 | regis@google.com | 2014-03-20 03:48:57 +0900 (木, 20  3月 2014) | 8 lines

Fix canonicalization of types.
Add functions retrieving canonical types by their index or vice versa (used by
a future cl supporting types in vm service).
Add getters for type argument instantiations (used by future cl).

R=hausner@google.com

Review URL: https://codereview.chromium.org//203443012
------------------------------------------------------------------------
r34108 | ajohnsen@google.com | 2014-03-19 17:54:06 +0900 (水, 19  3月 2014) | 6 lines

Add SerializeNull and SerializeSmi benchmark for benchmarking serialization of the messages used inside of dart:io.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//159723003
------------------------------------------------------------------------
r34079 | johnmccutchan@google.com | 2014-03-19 08:32:36 +0900 (水, 19  3月 2014) | 5 lines

Support wedging isolates before startup or before exit.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//204003002
------------------------------------------------------------------------
r34065 | johnmccutchan@google.com | 2014-03-19 06:26:07 +0900 (水, 19  3月 2014) | 5 lines

Set VMTag from stubs when transitioning between Dart and Native

R=asiva@google.com, zra@google.com

Review URL: https://codereview.chromium.org//200693002
------------------------------------------------------------------------
r34064 | johnmccutchan@google.com | 2014-03-19 06:20:41 +0900 (水, 19  3月 2014) | 5 lines

Use VM tag in profile and add stack trace trie

R=asiva@google.com, turnidge@google.com

Review URL: https://codereview.chromium.org//201213004
------------------------------------------------------------------------
r34035 | iposva@google.com | 2014-03-19 02:55:10 +0900 (水, 19  3月 2014) | 7 lines

Fix http://dartbug.com/17555
- Do not try to finalize VM internal classes.
- Do not try to print the script of VM internal class.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//202853007
------------------------------------------------------------------------
r33790 | rmacnak@google.com | 2014-03-18 08:43:32 +0900 (火, 18  3月 2014) | 5 lines

Clean up ClosureMirror.invoke(#call, ...).

R=asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//196513004
------------------------------------------------------------------------
r33778 | iposva@google.com | 2014-03-18 06:27:24 +0900 (火, 18  3月 2014) | 5 lines

- Avoid exposing the 64-bit state of the PRNG to Dart code.

R=asiva@google.com

Review URL: https://codereview.chromium.org//199263005
------------------------------------------------------------------------
r33767 | srdjan@google.com | 2014-03-18 05:05:11 +0900 (火, 18  3月 2014) | 3 lines

Fix broken buil don Linux X64

Review URL: https://codereview.chromium.org//197283027
------------------------------------------------------------------------
r33766 | srdjan@google.com | 2014-03-18 04:55:13 +0900 (火, 18  3月 2014) | 5 lines

x64 code improvements and cleanups.

R=zra@google.com

Review URL: https://codereview.chromium.org//201013002
------------------------------------------------------------------------
r33755 | turnidge@google.com | 2014-03-18 02:43:07 +0900 (火, 18  3月 2014) | 7 lines

Rework library and class view pages.

Add expression evaluation support for libraries and classes.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//199363002
------------------------------------------------------------------------
r33736 | fschneider@google.com | 2014-03-17 19:31:33 +0900 (月, 17  3月 2014) | 14 lines

Alternative fix for .call invocation of closures.

This also covers "closurization" of the .call method.
This relies on the fact that f.call === f if f is a closure.
This means that adding a simple getter to _FunctionImpl that
 returns this is enough. No need for a separate dispatch.

This CL reverts the previous fix for issue 12602 (modulo the
additional tests).

BUG=dartbug.com/17473, dartbug.com/12602
R=iposva@google.com

Review URL: https://codereview.chromium.org//200193002
------------------------------------------------------------------------
r33704 | iposva@google.com | 2014-03-15 02:30:05 +0900 (土, 15  3月 2014) | 5 lines

- Do not rely on time to seed the default PRNG.

R=asiva@google.com

Review URL: https://codereview.chromium.org//200483003
------------------------------------------------------------------------
r33702 | johnmccutchan@google.com | 2014-03-15 02:03:38 +0900 (土, 15  3月 2014) | 6 lines

Show object pool on code page

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//197853005
------------------------------------------------------------------------
r33701 | johnmccutchan@google.com | 2014-03-15 01:16:21 +0900 (土, 15  3月 2014) | 6 lines

Basic tag infrastructure

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//195733009
------------------------------------------------------------------------
r33666 | johnmccutchan@google.com | 2014-03-14 06:18:27 +0900 (金, 14  3月 2014) | 5 lines

Fix C++11 compilation error

BUG=

Review URL: https://codereview.chromium.org//197763011
------------------------------------------------------------------------
r33665 | johnmccutchan@google.com | 2014-03-14 06:00:44 +0900 (金, 14  3月 2014) | 5 lines

Create a shadow table to track CodeRegions of reused code address space.

R=asiva@google.com, turnidge@google.com

Review URL: https://codereview.chromium.org//197803004
------------------------------------------------------------------------
r33662 | iposva@google.com | 2014-03-14 05:38:24 +0900 (金, 14  3月 2014) | 6 lines

- Implement a PauseTimerScope so that we can properly exclude
  times when a TimerScope is active.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//196413011
------------------------------------------------------------------------
r33657 | asiva@google.com | 2014-03-14 03:10:06 +0900 (金, 14  3月 2014) | 5 lines

Remove Dart_AddGcPrologueCallback and Dart_RemoveGcPrologueCallback from the Dart API.

R=iposva@google.com

Review URL: https://codereview.chromium.org//198103004
------------------------------------------------------------------------
r33651 | fschneider@google.com | 2014-03-13 23:28:07 +0900 (木, 13  3月 2014) | 13 lines

VM: Fix infinite recursion in optimization of of string interpolation.

Don't compile-time fold string interpolation when compiling
the interpolation function itself. This would otherwise case
an infiniti recursion.

Also check he result of calling the interpolation function before
casting to a String.

BUG=dartbug.com/17461
R=iposva@google.com

Review URL: https://codereview.chromium.org//196353012
------------------------------------------------------------------------
r33641 | fschneider@google.com | 2014-03-13 18:07:40 +0900 (木, 13  3月 2014) | 8 lines

Generate smaller unoptimized code for certain expressions.

Code for compound assignments, pre- and post-fix ++, --, cascades in
effect contexts is now smaller by 1 push/pop instructions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//197283004
------------------------------------------------------------------------
r33640 | fschneider@google.com | 2014-03-13 17:41:14 +0900 (木, 13  3月 2014) | 8 lines

Add aliasing disambiguation for typed data lists.

Typed list factories are now also recognized as allocation
instructions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//194773002
------------------------------------------------------------------------
r33625 | koda@google.com | 2014-03-13 08:12:48 +0900 (木, 13  3月 2014) | 10 lines

Correct capacity reporting for new space; show external size in Observatory.

Before, the reported capacity included *both* semi-spaces, which seems wrong.

Also exclude external size from capacity, to be consistent with old space and
the comment on Heap::CapacityInWords.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//196603009
------------------------------------------------------------------------
r33624 | srdjan@google.com | 2014-03-13 08:10:23 +0900 (木, 13  3月 2014) | 5 lines

Recognize _TypedListBase._cid native. Use Lists.copy instead of native _setRange if list is small. Restore performance of HttpServeStrings.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//197873005
------------------------------------------------------------------------
r33622 | asiva@google.com | 2014-03-13 07:39:15 +0900 (木, 13  3月 2014) | 6 lines

Remove the ability to allow multiple gc prologue and gc epilogue callbacks
to be registered at any given time. Dartium seems to use only one.

R=iposva@google.com

Review URL: https://codereview.chromium.org//197963002
------------------------------------------------------------------------
r33616 | srdjan@google.com | 2014-03-13 06:28:50 +0900 (木, 13  3月 2014) | 5 lines

Stop/restart compilation timer when running Dart code from within the parser. SMall perfromance fix.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//197923003
------------------------------------------------------------------------
r33612 | turnidge@google.com | 2014-03-13 06:08:19 +0900 (木, 13  3月 2014) | 5 lines

I forgot to filter a machine-dependent field in the service unit test.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//197763004
------------------------------------------------------------------------
r33609 | koda@google.com | 2014-03-13 05:54:27 +0900 (木, 13  3月 2014) | 5 lines

Fix arm/mac builds: cast enum.

TBR=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//195943003
------------------------------------------------------------------------
r33608 | koda@google.com | 2014-03-13 05:46:09 +0900 (木, 13  3月 2014) | 9 lines

Heap maps: add VM service message.

A heap map is serialized as arrays of sizes + class ids:

{"type":"HeapMap","id":"heapmap","pages":[[15,2,10,3,...,100,0],...,]}

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//197663006
------------------------------------------------------------------------
r33592 | turnidge@google.com | 2014-03-13 02:18:14 +0900 (木, 13  3月 2014) | 9 lines

Improve the instance-view page in observatory.

Add an eval-box element which is used to evaluate expressions.

Support expression evaluation for instances in the vm service.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//194623006
------------------------------------------------------------------------
r33576 | fschneider@google.com | 2014-03-12 23:02:27 +0900 (水, 12  3月 2014) | 15 lines

Fix invocation of closures via .call in the VM.

Calling closures via .call does now work in the VM - it was working in
dart2js already.  Calling .call on a closure is implemented to go through
a dispatcher method. These dispatcher methods are automatically created and
cached in the same way as NoSuchMethod- or field-invocation dispatchers.

This CL does not change the way regular closure invocation works in
the VM. It is therefore performance-neutral for normal closure calls.

BUG=dartbug.com/12602
TEST=language/call_test
R=iposva@google.com

Review URL: https://codereview.chromium.org//188703004
------------------------------------------------------------------------
r33570 | iposva@google.com | 2014-03-12 18:16:21 +0900 (水, 12  3月 2014) | 5 lines

- Fix formatting of generated sources.

R=hausner@google.com

Review URL: https://codereview.chromium.org//196653004
------------------------------------------------------------------------
r33566 | asiva@google.com | 2014-03-12 09:14:03 +0900 (水, 12  3月 2014) | 7 lines

Use CHECK_ISOLATE instead of DARTSCOPE for Dart_GetNativeInstanceField after
fixing Instance::IsValidFieldOffset to use a reusable handle instead of
creating a new one (this was the issue last time which caused assertions).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//196243002
------------------------------------------------------------------------
r33559 | asiva@google.com | 2014-03-12 07:07:22 +0900 (水, 12  3月 2014) | 5 lines

Return error object from Dart_Allocate when an error occurs.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//193513002
------------------------------------------------------------------------
r33555 | johnmccutchan@google.com | 2014-03-12 06:14:24 +0900 (水, 12  3月 2014) | 5 lines

Add compile timestamp to Code

R=asiva@google.com

Review URL: https://codereview.chromium.org//194813008
------------------------------------------------------------------------
r33552 | koda@google.com | 2014-03-12 05:27:44 +0900 (水, 12  3月 2014) | 10 lines

Fix external size accounting for prologue weak persistent handles.

Include prologue weak persistent handles (PWPH) when checking for promotion.

Since pointers have already been updated for PWPHs, use a bit in the handle to
remember whether the referent used to be in new space.

R=asiva@google.com

Review URL: https://codereview.chromium.org//193473002
------------------------------------------------------------------------
r33548 | johnmccutchan@google.com | 2014-03-12 04:27:52 +0900 (水, 12  3月 2014) | 6 lines

Code view tweaks and crasher fix

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//194503006
------------------------------------------------------------------------
r33545 | johnmccutchan@google.com | 2014-03-12 03:38:03 +0900 (水, 12  3月 2014) | 5 lines

Fix service test breakage

BUG=

Review URL: https://codereview.chromium.org//195613002
------------------------------------------------------------------------
r33544 | zra@google.com | 2014-03-12 03:28:30 +0900 (水, 12  3月 2014) | 9 lines

Disables TargetCPUFeatures::Cleanup().

Until the thread pool shutdown race is solved, we can't
do this cleanup because there may still be a thread
querying CPU features.

R=asiva@google.com

Review URL: https://codereview.chromium.org//195563002
------------------------------------------------------------------------
r33542 | johnmccutchan@google.com | 2014-03-12 02:59:45 +0900 (水, 12  3月 2014) | 5 lines

Unboxed Float64x2 fields and some misc fixes

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//195333002
------------------------------------------------------------------------
r33541 | johnmccutchan@google.com | 2014-03-12 02:48:09 +0900 (水, 12  3月 2014) | 10 lines

Switch Observatory to use only ServiceObject instances.

All fetched objects are upgraded to a ServiceObject.
ServiceObjectCache.
Uniform updating / refreshing.
Fix UTF8 string escaping in TextBuffer (should fix invalid character bug https://code.google.com/p/dart/issues/detail?id=16590)

R=turnidge@google.com

Review URL: https://codereview.chromium.org//192443004
------------------------------------------------------------------------
r33540 | srdjan@google.com | 2014-03-12 01:56:55 +0900 (水, 12  3月 2014) | 5 lines

Fix performance of setRange by avoiding going to Lists.copy which can become polymorphic.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//189443004
------------------------------------------------------------------------
r33531 | koda@google.com | 2014-03-11 23:43:27 +0900 (火, 11  3月 2014) | 5 lines

Include external size when printing heap stats.

R=iposva@google.com

Review URL: https://codereview.chromium.org//193563002
------------------------------------------------------------------------
r33527 | koda@google.com | 2014-03-11 23:11:25 +0900 (火, 11  3月 2014) | 8 lines

Replace RoundMicrosecondsTo* with non-rounding MicrosecondsTo*.

(The existing function didn't actually round, it just incorrectly added 0.5.)

BUG=dart:17348
R=iposva@google.com

Review URL: https://codereview.chromium.org//191743002
------------------------------------------------------------------------
r33523 | fschneider@google.com | 2014-03-11 18:39:23 +0900 (火, 11  3月 2014) | 23 lines

Add alias identity information to array allocations.

Loads/stores with non-escaping arrays can be disambiguated from loads/store
with unknown identity.

This enables better load elimination for non-escaping arrays.

For example in the following code:

test() {
  var a = new List(1);
  var b = new List(1);
  a[0] = 42;
  b[0] = 43;
  return a[0] + b[0];
}

we can now eliminate both loads a[0] and b[0] where before all stores to [0] were
considered to interfere with each other..

R=srdjan@google.com

Review URL: https://codereview.chromium.org//189543013
------------------------------------------------------------------------
r33506 | johnmccutchan@google.com | 2014-03-11 07:34:56 +0900 (火, 11  3月 2014) | 6 lines

Inline Float64x2 methods that take 1 argument

BUG=
R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//193183003
------------------------------------------------------------------------
r33504 | johnmccutchan@google.com | 2014-03-11 05:58:04 +0900 (火, 11  3月 2014) | 6 lines

Inline Float64x2 methods with zero arguments

BUG=
R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//192573008
------------------------------------------------------------------------
r33478 | fschneider@google.com | 2014-03-10 18:59:49 +0900 (月, 10  3月 2014) | 13 lines

Add alias disambiguation for VM fields.

This is needed for generalizing allocation sinking to
work with instance fields and plain field offsets.

MaterializeObject now works with  a set of Field/Smi objects
Right now this should be performance-neutral, but it already
simplifies the code be removing the fake fields previously used
for type arguments, closure function/context.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//189513003
------------------------------------------------------------------------
r33471 | asiva@google.com | 2014-03-08 09:26:29 +0900 (土, 08  3月 2014) | 6 lines

1. Restructure reusable handles to make individual Scopes for each handle type
2. Add a convenience macro to make use of reusable handle scopes easier

R=iposva@google.com

Review URL: https://codereview.chromium.org//187503002
------------------------------------------------------------------------
r33469 | koda@google.com | 2014-03-08 08:59:29 +0900 (土, 08  3月 2014) | 5 lines

Missing file from r33467.

TBR=asiva@google.com

Review URL: https://codereview.chromium.org//191683002
------------------------------------------------------------------------
r33467 | koda@google.com | 2014-03-08 08:53:32 +0900 (土, 08  3月 2014) | 9 lines

Track external allocated memory for weak persistent handles.

The amount of external allocation is tracked per generation
and informs GC policy.

BUG=dart:11471
R=asiva@google.com

Review URL: https://codereview.chromium.org//187113003
------------------------------------------------------------------------
r33463 | johnmccutchan@google.com | 2014-03-08 08:16:54 +0900 (土, 08  3月 2014) | 5 lines

Fix mips intermediate language

BUG=

Review URL: https://codereview.chromium.org//191553006
------------------------------------------------------------------------
r33459 | johnmccutchan@google.com | 2014-03-08 06:43:49 +0900 (土, 08  3月 2014) | 6 lines

Inline of Float64x2 operations round 1

BUG=
R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//183923026
------------------------------------------------------------------------
r33444 | zra@google.com | 2014-03-08 04:37:58 +0900 (土, 08  3月 2014) | 3 lines

Changes that somehow got lost from my last commit.

Review URL: https://codereview.chromium.org//189833006
------------------------------------------------------------------------
r33443 | iposva@google.com | 2014-03-08 04:37:04 +0900 (土, 08  3月 2014) | 6 lines

- Ensure that all names in local scopes are symbols.
- Avoid calling Equals when comparing names in local scopes.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//190753004
------------------------------------------------------------------------
r33442 | zra@google.com | 2014-03-08 04:17:36 +0900 (土, 08  3月 2014) | 13 lines

Adds support for ARMv6.

When we detect ARMv6, instead of using movw and
movt, this change loads each individual byte.
Although this is not the best way to achieve this,
a modification to store large constants in the
object pool would be more invasive. Further,
this change will be easier to back-out once
ARMv6 is obsolete.

R=regis@google.com

Review URL: https://codereview.chromium.org//183803024
------------------------------------------------------------------------
r33441 | rmacnak@google.com | 2014-03-08 04:00:20 +0900 (土, 08  3月 2014) | 7 lines

Reapply "Access to imports in the VM's runtime mirrors. Extend test coverage of the source mirrors."

Regenerate snapshot test due to change in the size of Namespace. Relate the types source mirror libraries dependencies to the runtime library dependencies.

BUG=http://dartbug.com/10360

Review URL: https://codereview.chromium.org//189843003
------------------------------------------------------------------------
r33435 | hausner@google.com | 2014-03-08 01:59:17 +0900 (土, 08  3月 2014) | 9 lines

Fix checked tests

Follow-on change to implicit static getter elimination. Class finalizer
needed to be updated accordingly so type checks are made on non-final
fields as well.

TBR

Review URL: https://codereview.chromium.org//191063002
------------------------------------------------------------------------
r33433 | hausner@google.com | 2014-03-08 01:20:11 +0900 (土, 08  3月 2014) | 11 lines

Eliminate more implicit getters

For some reason I don’t remember, we only attempt to optimize
away the implicit getter functions of const and final static
fields, but not non-final static fields. This change applies the
same optimization for all static fields, and also for all
top-level fields.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//189583003
------------------------------------------------------------------------
r33402 | rmacnak@google.com | 2014-03-07 07:45:29 +0900 (金, 07  3月 2014) | 3 lines

Revert "Access to imports in the VM's runtime mirrors. Extend test coverage of the source mirrors."

Review URL: https://codereview.chromium.org//189293002
------------------------------------------------------------------------
r33397 | rmacnak@google.com | 2014-03-07 07:02:29 +0900 (金, 07  3月 2014) | 6 lines

Access to imports in the VM's runtime mirrors. Extend test coverage of the source mirrors.

BUG=http://dartbug.com/10360
R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//154733003
------------------------------------------------------------------------
r33395 | srdjan@google.com | 2014-03-07 06:17:07 +0900 (金, 07  3月 2014) | 5 lines

Change --code-comments default to true. Code comments activated only if disassembly is activated.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//188963003
------------------------------------------------------------------------
r33392 | srdjan@google.com | 2014-03-07 04:32:18 +0900 (金, 07  3月 2014) | 5 lines

Force inlining of all known list operators [] and []=, to prevent occasional perfrormance degradation.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//188773004
------------------------------------------------------------------------
r33389 | srdjan@google.com | 2014-03-07 04:00:11 +0900 (金, 07  3月 2014) | 5 lines

More performance fixes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//183973035
------------------------------------------------------------------------
r33386 | turnidge@google.com | 2014-03-07 02:38:16 +0900 (金, 07  3月 2014) | 9 lines

Handle collected objects and expired handles more gracefully.

Prints <collected> or <expired>.

Added tooltips to explain these to users.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//177473004
------------------------------------------------------------------------
r33380 | johnmccutchan@google.com | 2014-03-07 01:48:49 +0900 (金, 07  3月 2014) | 7 lines

Display sample count and refresh time.
Fix some uninitialized variables.
Don't send disassembly by default.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//185563013
------------------------------------------------------------------------
r33363 | ajohnsen@google.com | 2014-03-06 18:16:41 +0900 (木, 06  3月 2014) | 6 lines

Fix fromEnvironment when called from isolates.

BUG=
R=sgjesse@google.com

Review URL: https://codereview.chromium.org//180243022
------------------------------------------------------------------------
r33344 | koda@google.com | 2014-03-06 06:09:19 +0900 (木, 06  3月 2014) | 8 lines

Pretenure large external typed data and strings.

Also fix an incorrect API comment about handle return type.

BUG=dart:17284
R=iposva@google.com

Review URL: https://codereview.chromium.org//180113009
------------------------------------------------------------------------
r33340 | asiva@google.com | 2014-03-06 04:24:02 +0900 (木, 06  3月 2014) | 11 lines

1. When reading a full snapshot use the class id from the snapshot instead
   of generating a new one. This ensures that assumptions made about the
   class id when generating a snapshot will still hold in the version that
   runs from a snapshot.

2. remove ObjectHistogram code as it is not used anymore and has been replaced
   by VM service.

R=johnmccutchan@google.com, regis@google.com

Review URL: https://codereview.chromium.org//187133004
------------------------------------------------------------------------
r33335 | turnidge@google.com | 2014-03-06 02:59:23 +0900 (木, 06  3月 2014) | 5 lines

Use HasResolvedTypeClass to avoid crash in Field::PrintToJSONStream.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//183023011
------------------------------------------------------------------------
r33334 | fschneider@google.com | 2014-03-06 02:58:46 +0900 (木, 06  3月 2014) | 8 lines

VM: Fix bug in aliasing computation.

Values flowing into arrays were not correctly computed as aliased.

TEST=tests/language/vm/load_to_load_forwarding_vm_test.dart
R=srdjan@google.com, vegorov@google.com

Review URL: https://codereview.chromium.org//184273005
------------------------------------------------------------------------
r33333 | srdjan@google.com | 2014-03-06 02:42:40 +0900 (木, 06  3月 2014) | 5 lines

Minor VM performance improvements based on profiling.

R=asiva@google.com

Review URL: https://codereview.chromium.org//185553015
------------------------------------------------------------------------
r33331 | fschneider@google.com | 2014-03-06 00:46:41 +0900 (木, 06  3月 2014) | 8 lines

Mark compiler-internal fields of closure objects as final.

Those fields are written once at allocation time. Marking them
as final improves code generation for closure allocation.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//187763002
------------------------------------------------------------------------
r33314 | srdjan@google.com | 2014-03-05 09:10:41 +0900 (水, 05  3月 2014) | 5 lines

Move StackOverflow check after context chaining at function entry so that the context is properly setup before stop at entry.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//183513015
------------------------------------------------------------------------
r33305 | turnidge@google.com | 2014-03-05 06:54:09 +0900 (水, 05  3月 2014) | 5 lines

Remove overassertive assert.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//187053002
------------------------------------------------------------------------
r33299 | hausner@google.com | 2014-03-05 05:44:51 +0900 (水, 05  3月 2014) | 11 lines

Always evaluate e in (e is T)

(e is T) is compiled  to a throw TypeError when T is malformed.
This change makes sure that e is evaluated even though it is
ignored. We need to do this due to possible side effects.

Fixes issue 17253

R=regis@google.com

Review URL: https://codereview.chromium.org//185553018
------------------------------------------------------------------------
r33294 | srdjan@google.com | 2014-03-05 04:52:21 +0900 (水, 05  3月 2014) | 5 lines

When running compile-all, clear code after compiling so that we do not out too much pressure on GC and measure the compilation instead.

R=asiva@google.com

Review URL: https://codereview.chromium.org//186623005
------------------------------------------------------------------------
r33288 | hausner@google.com | 2014-03-05 03:44:53 +0900 (水, 05  3月 2014) | 11 lines

Fix error message when assigning to a local const variable

Remove front-end optimization that turned load local const
value into a load literal. Change backend to recognize loading
of const locals. This fixes the error message automagically.

Fix for issue 17258

R=srdjan@google.com

Review URL: https://codereview.chromium.org//186853003
------------------------------------------------------------------------
r33286 | iposva@google.com | 2014-03-05 03:20:03 +0900 (水, 05  3月 2014) | 9 lines

Fix dartbug.com/17261
- Make sure to preserve type arguments when morphing a growable
  array to a fixed sized array.
- Small performance optimization for getting the number of type
  parameters in a class.

R=asiva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//186673003
------------------------------------------------------------------------
r33282 | asiva@google.com | 2014-03-05 03:11:19 +0900 (水, 05  3月 2014) | 10 lines

Pass in the isolate parameter to the weak persistent callback handler so that
there is no need to access the current isolate in the callback and delete
path (this code is run while a GC is in progress).

See https://codereview.chromium.org/185643003/ for corresponding changes
in dartium

R=iposva@google.com

Review URL: https://codereview.chromium.org//186003002
------------------------------------------------------------------------
r33267 | fschneider@google.com | 2014-03-04 20:53:16 +0900 (火, 04  3月 2014) | 9 lines

Change deoptimization description for materialized objects.

Use field offset instead of fields as arguments in the deoptimization
instructions for materialization of objects. This is to prepare for
materializing contexts and fixed-size arrays when doing allocation sinking.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//183683013
------------------------------------------------------------------------
r33254 | asiva@google.com | 2014-03-04 09:35:45 +0900 (火, 04  3月 2014) | 7 lines

Use a tag bit for indicating prologue weak persistent handles, this avoids
the costly lookup to determine if a handle is a prologue weak persistent
handle or a regular weak persistent handle in Dart_DeleteWeakPersistentHandle

R=iposva@google.com

Review URL: https://codereview.chromium.org//177093010
------------------------------------------------------------------------
r33253 | hausner@google.com | 2014-03-04 08:27:44 +0900 (火, 04  3月 2014) | 21 lines

Fix type checks with malformed types

Parser must continue to parse the rest of an expression that contains
a type test with a malformed type.

Before:
'file:XXX’: error: line 5 pos 12: ')' expected
  if (3 is X && 2 == 2) print("foo");

After:
'file:XXX’: malformed type: line 5 pos 12: type 'X' is not loaded
  if (3 is X && 2 == 2) print("foo");
           ^
type error.
#0      main (file:XXX:5:12)
#1      _startIsolate.isolateStartHandler (dart:isolate-patch/isolate_patch.dart:216)
#2      _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:115)

R=regis@google.com

Review URL: https://codereview.chromium.org//183743015
------------------------------------------------------------------------
r33231 | fschneider@google.com | 2014-03-04 03:08:59 +0900 (火, 04  3月 2014) | 15 lines

Better inlining of type tests.

The optimizing compiler can replace a type test with a cid-comparison
under certain conditions. This CL translates the instance-of call
into a inline comparison in the optimizer and not - as previously -
in the code generator. This results in better generated code for
like

if (x is y) {...}

when y does not have sub-classes and does not have type arguments.

R=regis@google.com

Review URL: https://codereview.chromium.org//178193020
------------------------------------------------------------------------
r33220 | johnmccutchan@google.com | 2014-03-04 00:39:06 +0900 (火, 04  3月 2014) | 9 lines

Add user resetable accumulator to allocation profiler.
Display aggregate of new and old space in a separate table.
Speed up display of tables by 10x.
Fix heap display bug (heap stats were always for new space).
Keep sort across refreshes.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//173013004
------------------------------------------------------------------------
r33203 | fschneider@google.com | 2014-03-03 19:24:59 +0900 (月, 03  3月 2014) | 9 lines

Inline context allocation in optimized code.

Instead of just calling the generic stub in optimized code, there is now
inlined code to handle allocation and initialization of the context. A
deferred code path handles inline allocation failure.

R=regis@google.com

Review URL: https://codereview.chromium.org//182303005
------------------------------------------------------------------------
r33177 | johnmccutchan@google.com | 2014-03-01 07:55:53 +0900 (土, 01  3月 2014) | 5 lines

Cleanup native, collected, and stub code handling in profiler

R=iposva@google.com, turnidge@google.com

Review URL: https://codereview.chromium.org//182703003
------------------------------------------------------------------------
r33148 | asiva@google.com | 2014-02-28 12:22:16 +0900 (金, 28  2月 2014) | 3 lines

Fix dartium crasher, use DARTSCOPE when getting/setting native fields as it creates a Handle.

Review URL: https://codereview.chromium.org//180153009
------------------------------------------------------------------------
r33142 | asiva@google.com | 2014-02-28 08:38:39 +0900 (金, 28  2月 2014) | 8 lines

1. Added new versions of Api::UnWrapStringHandle Api::UnWrapInstanceHandle to
   use a reused handle instead of creating a new one
2. Use CHEK_ISOLATE instead of DARTSCOPE in some of the API functions where
   no handles are created

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//181843007
------------------------------------------------------------------------
r33141 | rmacnak@google.com | 2014-02-28 08:24:05 +0900 (金, 28  2月 2014) | 6 lines

Fix VM crash when parsing what looks like a closure call during metadata evaluation.

BUG=http://dartbug.com/17141
R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//180313003
------------------------------------------------------------------------
r33129 | johnmccutchan@google.com | 2014-02-28 04:35:57 +0900 (金, 28  2月 2014) | 6 lines

Turn stack walking verification into a flag

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//183633002
------------------------------------------------------------------------
r33125 | johnmccutchan@google.com | 2014-02-28 03:14:51 +0900 (金, 28  2月 2014) | 5 lines

Add flag to pin and service command to release isolates

BUG=

Review URL: https://codereview.chromium.org//181503006
------------------------------------------------------------------------
r33124 | johnmccutchan@google.com | 2014-02-28 03:07:22 +0900 (金, 28  2月 2014) | 5 lines

Fix usage of heap_

BUG=

Review URL: https://codereview.chromium.org//183113005
------------------------------------------------------------------------
r33122 | johnmccutchan@google.com | 2014-02-28 02:39:04 +0900 (金, 28  2月 2014) | 5 lines

Stop creating dummy call frames when calling out to C functions

R=asiva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//180243013
------------------------------------------------------------------------
r33118 | fschneider@google.com | 2014-02-28 01:31:58 +0900 (金, 28  2月 2014) | 12 lines

Fix bug in load elimination with multiple phis.

The in-set has to be computed on the out-sets of the predecessors with
the phi-moves of the predecessor applied. This is now done on a temporary
copy of out, instead of the out-set itself - otherwise the phi-moves may
 be applied more than once to the same set.

BUG=http://dartbug.com/17159
TEST=tests/language/vm/load_to_load_forwarding_vm_test.dart
R=vegorov@chromium.org

Review URL: https://codereview.chromium.org//183303002
------------------------------------------------------------------------
r33112 | iposva@google.com | 2014-02-27 18:57:46 +0900 (木, 27  2月 2014) | 3 lines

- Actually allocate memory.

Review URL: https://codereview.chromium.org//182943002
------------------------------------------------------------------------
r33111 | iposva@google.com | 2014-02-27 18:40:08 +0900 (木, 27  2月 2014) | 3 lines

- Another necessary const_cast.

Review URL: https://codereview.chromium.org//182903002
------------------------------------------------------------------------
r33110 | iposva@google.com | 2014-02-27 18:33:44 +0900 (木, 27  2月 2014) | 3 lines

- Sort out confusion between malloc/free and new/delete.

Review URL: https://codereview.chromium.org//182883002
------------------------------------------------------------------------
r33105 | hausner@google.com | 2014-02-27 10:14:15 +0900 (木, 27  2月 2014) | 10 lines

Fix stepping after a breakpoint

The first “step over” command after a breakpoint was accidentally
converted into a “step into”.

Fixes issue 17074

R=regis@google.com

Review URL: https://codereview.chromium.org//178623003
------------------------------------------------------------------------
r33104 | asiva@google.com | 2014-02-27 09:34:43 +0900 (木, 27  2月 2014) | 5 lines

Avoid creation of a handle when ssetting native fields for the first time.

R=iposva@google.com

Review URL: https://codereview.chromium.org//176963015
------------------------------------------------------------------------
r33101 | johnmccutchan@google.com | 2014-02-27 08:36:39 +0900 (木, 27  2月 2014) | 5 lines

Disable jit dump output by default

BUG=

Review URL: https://codereview.chromium.org//181593006
------------------------------------------------------------------------
r33098 | johnmccutchan@google.com | 2014-02-27 07:30:25 +0900 (木, 27  2月 2014) | 5 lines

Add support for dumping code in jitdump file format

R=iposva@google.com

Review URL: https://codereview.chromium.org//23437046
------------------------------------------------------------------------
r33096 | johnmccutchan@google.com | 2014-02-27 07:20:07 +0900 (木, 27  2月 2014) | 6 lines

Always inline byte views and math functions

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//178713003
------------------------------------------------------------------------
r33074 | regis@google.com | 2014-02-27 03:38:47 +0900 (木, 27  2月 2014) | 6 lines

Allocate instance closures similarly to regular closures, i.e. without a
specific stub and runtime call.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//178233003
------------------------------------------------------------------------
r33059 | fschneider@google.com | 2014-02-26 21:12:40 +0900 (水, 26  2月 2014) | 11 lines

VM: Replace StoreVMField with StoreInstanceField.

This simplifies a lot of code in the optimizer and avoids the confusion
and errors due to mismatch input operands when using StoreVMField.

I added a separate constructor for LoadFieldInstr to avoid having
to explicily set the associated field there.

R=regis@google.com

Review URL: https://codereview.chromium.org//179443004
------------------------------------------------------------------------
r33058 | fschneider@google.com | 2014-02-26 20:44:03 +0900 (水, 26  2月 2014) | 5 lines

VM: Eliminate a redundant store of the context at function entry.

R=iposva@google.com

Review URL: https://codereview.chromium.org//179003005
------------------------------------------------------------------------
r33036 | johnmccutchan@google.com | 2014-02-26 06:41:57 +0900 (水, 26  2月 2014) | 8 lines

Code regions now have list of callers and callees.
Address ticks track exclusive / inclusive separately.
Code regions only receive one inclusive tick per sample regardless of how many times they appear in the sample's stack trace.
Provide useful name for most stub functions.

R=asiva@google.com, turnidge@google.com

Review URL: https://codereview.chromium.org//168833005
------------------------------------------------------------------------
r33030 | hausner@google.com | 2014-02-26 03:48:37 +0900 (水, 26  2月 2014) | 5 lines

Fix formatting issue from previous CL

TBR: iposva

Review URL: https://codereview.chromium.org//179083005
------------------------------------------------------------------------
r33028 | hausner@google.com | 2014-02-26 03:01:35 +0900 (水, 26  2月 2014) | 9 lines

Better error message for assignment to final local variables

“No top-level getter found” becomes “cannot assign to final variable xxx”.

Fixes issue 16782.

R=iposva@google.com

Review URL: https://codereview.chromium.org//177633008
------------------------------------------------------------------------
r32987 | zra@google.com | 2014-02-25 05:54:41 +0900 (火, 25  2月 2014) | 3 lines

Fixes wrong query string in ARM/Linux CPU feature detection.

Review URL: https://codereview.chromium.org//177933008
------------------------------------------------------------------------
r32980 | zra@google.com | 2014-02-25 04:28:30 +0900 (火, 25  2月 2014) | 6 lines

Updates refactoring of CPU feature detection
with fix that uses cpuid for Intel/Linux.

R=asiva@google.com

Review URL: https://codereview.chromium.org//136303012
------------------------------------------------------------------------
r32975 | hausner@google.com | 2014-02-25 03:40:51 +0900 (火, 25  2月 2014) | 9 lines

Fix mixin of patched classes

When mixing in functions that were patched into the mixin class, set the “origin” to the patch class so we find the right source location to parse the function.

Fixes issue 16230

R=regis@google.com

Review URL: https://codereview.chromium.org//177653006
------------------------------------------------------------------------
r32959 | fschneider@google.com | 2014-02-24 21:15:55 +0900 (月, 24  2月 2014) | 7 lines

Revert r32930 (Add more timing information in the VM to track time...)

It caused severe performance regressions that should be addressed.

TBR=asiva@google.com

Review URL: https://codereview.chromium.org//177733002
------------------------------------------------------------------------
r32940 | regis@google.com | 2014-02-22 08:09:02 +0900 (土, 22  2月 2014) | 7 lines

Modify growth policy for table of canonical types in each class.
Modify growth policy for cache of type arguments instantiations.
Add language test for generic closure.

R=iposva@google.com

Review URL: https://codereview.chromium.org//175403004
------------------------------------------------------------------------
r32939 | iposva@google.com | 2014-02-22 07:44:39 +0900 (土, 22  2月 2014) | 5 lines

- Restore the better error message.

R=asiva@google.com

Review URL: https://codereview.chromium.org//170313008
------------------------------------------------------------------------
r32938 | hausner@google.com | 2014-02-22 07:40:11 +0900 (土, 22  2月 2014) | 9 lines

Handle stepping requests after isolate interrupt event

Adding test case provided by jacobr.

Fix issue 17008

R=jacobr@google.com, regis@google.com

Review URL: https://codereview.chromium.org//175533003
------------------------------------------------------------------------
r32930 | asiva@google.com | 2014-02-22 06:30:29 +0900 (土, 22  2月 2014) | 5 lines

Add more timing information in the VM to track time spent is dart code Vs native code.

R=johnmccutchan@google.com, turnidge@google.com

Review URL: https://codereview.chromium.org//137483010
------------------------------------------------------------------------
r32905 | asiva@google.com | 2014-02-22 01:53:23 +0900 (土, 22  2月 2014) | 8 lines

Add Dart_GetNativeFieldsOfArgument to get all the native fields of a dart
object. This is especially useful for dartium which has two native fields
the type id and the native implementation field for the wrapper. This allows
for both values to be extracted in one call.

R=vsm@google.com

Review URL: https://codereview.chromium.org//174393004
------------------------------------------------------------------------
r32900 | lrn@google.com | 2014-02-21 22:59:36 +0900 (金, 21  2月 2014) | 3 lines

Remove test change after revert code change.

Review URL: https://codereview.chromium.org//167913005
------------------------------------------------------------------------
r32898 | lrn@google.com | 2014-02-21 22:34:29 +0900 (金, 21  2月 2014) | 3 lines

Doesn't work as written when int != intptr_t.

Review URL: https://codereview.chromium.org//175083003
------------------------------------------------------------------------
r32896 | lrn@google.com | 2014-02-21 22:15:16 +0900 (金, 21  2月 2014) | 9 lines

Add internal operation that converts a growable list to a fixed list.

The conversion breaks the original list, but doesn't copy data.
Currently only used in List.from(Iterable).

BUG= http://dartbug.com/9458
R=floitsch@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//134893003
------------------------------------------------------------------------
r32891 | fschneider@google.com | 2014-02-21 21:12:29 +0900 (金, 21  2月 2014) | 43 lines

Explicit conversions for Float32 array loads/stores.

Added two new IL instructions: DoubleToFloat and FloatToDouble.

This enables store-to-load forwarding for Float32 arrays which was
not working before because of the implicit conversions.

Loads are now translated as:

v3 <- LoadIndexed(v2, v1)
v4 <- FloatToDouble(v3)

Stores:

v5 <- DoubleToFloat(v4)
      StoreIndexed(v7, v6, v5)

There is no explicit representation for float values because
they are never used in a deoptimization environment. The only
real uses are at FloatToDouble and StoreIndexed.

For example when copying a value from one Float32 array to another
there is no intermediate conversions anymore

a[0] = b[0] before:

  movss xmm1,[ebx+0x7]
  cvtss2sd xmm1,xmm1
  cvtsd2ss xmm2,xmm1
  movss [edx+0x7],xmm2

after:

  movss xmm1,[ebx+0x7]
  movss [edx+0x7],xmm1

Also in this change:
  Eliminate GuardField based on cid information of list factories.
  GC unused symbols

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//172293004
------------------------------------------------------------------------
r32874 | johnmccutchan@google.com | 2014-02-21 08:05:50 +0900 (金, 21  2月 2014) | 5 lines

Use the correct value offset for Float64x2 on ARM

BUG=

Review URL: https://codereview.chromium.org//174353003
------------------------------------------------------------------------
r32870 | johnmccutchan@google.com | 2014-02-21 06:10:07 +0900 (金, 21  2月 2014) | 6 lines

Rework Sample class

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//174213002
------------------------------------------------------------------------
r32869 | johnmccutchan@google.com | 2014-02-21 05:41:54 +0900 (金, 21  2月 2014) | 5 lines

Unbox/Box Float64x2 and inline typed array loads and stores

R=fschneider@google.com

Review URL: https://codereview.chromium.org//172653002
------------------------------------------------------------------------
r32831 | iposva@google.com | 2014-02-20 08:35:55 +0900 (木, 20  2月 2014) | 6 lines

Another round of cleanups for http://www.dartbug.com/15922
- Address warnings about 64-bit to 32-bit conversions.

R=ajohnsen@google.com, asiva@google.com

Review URL: https://codereview.chromium.org//169893003
------------------------------------------------------------------------
r32819 | iposva@google.com | 2014-02-20 05:50:48 +0900 (木, 20  2月 2014) | 4 lines

Fix build:
- Remove unused stack_lower_.

Review URL: https://codereview.chromium.org//172523003
------------------------------------------------------------------------
r32809 | johnmccutchan@google.com | 2014-02-20 04:15:16 +0900 (木, 20  2月 2014) | 9 lines

Switch from linear search for code region to binary search.
Add a SampleVisitor for iterating over SampleBuffer.
Move stack walking class out of header into source file.

Processing 6.5 million stack frames went from 28 seconds to 741 millis.

R=asiva@google.com

Review URL: https://codereview.chromium.org//151143003
------------------------------------------------------------------------
r32773 | turnidge@google.com | 2014-02-19 10:02:09 +0900 (水, 19  2月 2014) | 5 lines

Don't forget to subtract materialization instructions when computing the offset of the frame pointer after deoptimization.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//171513003
------------------------------------------------------------------------
r32769 | johnmccutchan@google.com | 2014-02-19 07:38:11 +0900 (水, 19  2月 2014) | 6 lines

Allow for embedder provided service request handlers

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//170943003
------------------------------------------------------------------------
r32760 | turnidge@google.com | 2014-02-19 04:45:36 +0900 (水, 19  2月 2014) | 7 lines

Improved how closures are displayed by <instance-ref>.

Make <optimized out> look a bit nicer.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//167713002
------------------------------------------------------------------------
r32756 | regis@google.com | 2014-02-19 04:30:03 +0900 (水, 19  2月 2014) | 4 lines

Simplify type argument instantiation cache lookup by introducing an array
of 1 zero Smi.

Review URL: https://codereview.chromium.org//169223005
------------------------------------------------------------------------
r32751 | johnmccutchan@google.com | 2014-02-19 02:50:26 +0900 (水, 19  2月 2014) | 6 lines

Trace VM service requests

BUG=
R=turnidge@google.com

Review URL: https://codereview.chromium.org//164503002
------------------------------------------------------------------------
r32749 | johnmccutchan@google.com | 2014-02-19 02:41:11 +0900 (水, 19  2月 2014) | 5 lines

Enable polymorphic inlining of StringBase [] and StringBase codeUnitAt.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//161853002
------------------------------------------------------------------------
r32735 | fschneider@google.com | 2014-02-18 19:10:06 +0900 (火, 18  2月 2014) | 10 lines

MIPS: Fix bug in allocation stub's slow path.

The CL r32697 that changed the argument count of the AllocateObject
runtime function from 3 to 2 did not correctly adjust SP before
the runtime call.

BUG=dartbug.com/16873
R=regis@google.com

Review URL: https://codereview.chromium.org//167893006
------------------------------------------------------------------------
r32708 | turnidge@google.com | 2014-02-15 03:04:42 +0900 (土, 15  2月 2014) | 8 lines

Handle contexts which have been optimized out.

Expand list of expected object types seen on the stack.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//163433003
------------------------------------------------------------------------
r32707 | turnidge@google.com | 2014-02-15 02:48:25 +0900 (土, 15  2月 2014) | 3 lines

Add expandable instances and lists to the vm service.

Review URL: https://codereview.chromium.org//164183003
------------------------------------------------------------------------
r32706 | regis@google.com | 2014-02-15 02:43:11 +0900 (土, 15  2月 2014) | 5 lines

Avoid repeated resolution of types by marking them as resolved.

R=hausner@google.com

Review URL: https://codereview.chromium.org//165523002
------------------------------------------------------------------------
r32697 | fschneider@google.com | 2014-02-14 22:03:35 +0900 (金, 14  2月 2014) | 23 lines

Simplify generated code for object allocation with type arguments.

The motivation for the change is to make allocation sinking more
general when type arguments are in play. As a result I cleaned up the code
dealing with constructor type arguments as follows:

* Remove ExtractConstructorTypeArguments and ExtractConstructorInstantiator
from the intermediate language.

* The allocation stub takes now 1 argument (instead of 2) for parameterized
classes.

* The allocation stub always get an instantiated type arguments object
as input. It does not need to do a lookup in the instantiations array anymore.

* The code for looking up cached instantiated type arguments is moved
to the InstantiateTypeArguments instruction. This instruction is now also
used for object allocation. I'm not sure how relevant the cache lookup is
performance-wise. dart2js compilation did not show any regression without it.

R=regis@google.com

Review URL: https://codereview.chromium.org//163683006
------------------------------------------------------------------------
r32672 | johnmccutchan@google.com | 2014-02-14 05:53:35 +0900 (金, 14  2月 2014) | 5 lines

Only inline Int32/Uint32 list view stores if we can unbox integers.

BUG=

Review URL: https://codereview.chromium.org//164133003
------------------------------------------------------------------------
r32656 | johnmccutchan@google.com | 2014-02-14 00:54:33 +0900 (金, 14  2月 2014) | 5 lines

Inline polymorphic typed array view stores

R=fschneider@google.com

Review URL: https://codereview.chromium.org//160613002
------------------------------------------------------------------------
r32647 | fschneider@google.com | 2014-02-13 20:59:22 +0900 (木, 13  2月 2014) | 10 lines

Fix crash bug in free list when allocating write protected memory.

Re-enable write protection of code pages.

I added cc tests that cover two corner conditions that caused the old code to crash.

TEST=vm/FreeList
R=asiva@google.com

Review URL: https://codereview.chromium.org//150563007
------------------------------------------------------------------------
r32636 | regis@google.com | 2014-02-13 09:14:36 +0900 (木, 13  2月 2014) | 6 lines

Make cycle checking of super interfaces linear instead of quadratic by marking
classes as checked (issue 16343).

R=asiva@google.com

Review URL: https://codereview.chromium.org//162163002
------------------------------------------------------------------------
r32624 | regis@google.com | 2014-02-13 06:18:59 +0900 (木, 13  2月 2014) | 7 lines

Do not resolve type arguments when only a resolved type class is needed to
calculate number of type arguments during type finalization (issue 16640).
Add regression test.

R=asiva@google.com

Review URL: https://codereview.chromium.org//160753004
------------------------------------------------------------------------
r32605 | turnidge@google.com | 2014-02-13 02:13:02 +0900 (木, 13  2月 2014) | 3 lines

Fix assertion failure encountered in vm service.

Review URL: https://codereview.chromium.org//148523018
------------------------------------------------------------------------
r32584 | asiva@google.com | 2014-02-12 09:29:28 +0900 (水, 12  2月 2014) | 5 lines

Use passed in isolate when creating handles in the snapshot reader object.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//160153002
------------------------------------------------------------------------
r32577 | rmacnak@google.com | 2014-02-12 05:41:32 +0900 (水, 12  2月 2014) | 7 lines

Add TypeMirror.isSubtypeOf, TypeMirror.isAssignableTo, ClassMirror.isSubclassOf to the API, the VM runtime mirrors and the source mirrors.

BUG=http://dartbug.com/12439
BUG=http://dartbug.com/13856
R=gbracha@google.com, johnniwinther@google.com, regis@google.com

Review URL: https://codereview.chromium.org//126823004
------------------------------------------------------------------------
r32565 | asiva@google.com | 2014-02-12 03:12:08 +0900 (水, 12  2月 2014) | 6 lines

Fix compilation error.
../../dart/runtime/vm/freelist.cc:126:32: warning: converting to non-pointer type ‘uword {aka long unsigned int}’ from NULL [-Wconversion-null]

R=zra@google.com

Review URL: https://codereview.chromium.org//150863006
------------------------------------------------------------------------
r32560 | zra@google.com | 2014-02-12 01:05:43 +0900 (水, 12  2月 2014) | 6 lines

Reverts refactoring of CPU feature detection for
assertion failure in Dartium.

R=asiva@google.com

Review URL: https://codereview.chromium.org//142663004
------------------------------------------------------------------------
r32549 | fschneider@google.com | 2014-02-11 19:17:03 +0900 (火, 11  2月 2014) | 5 lines

Fix flag to switch write protection of code pages on/off.

TBR=iposva@google.com

Review URL: https://codereview.chromium.org//138913016
------------------------------------------------------------------------
r32547 | ricow@google.com | 2014-02-11 18:38:10 +0900 (火, 11  2月 2014) | 3 lines

Disable write protect mode temporarily until we have a fix for the random crashes

Review URL: https://codereview.chromium.org//156423004
------------------------------------------------------------------------
r32524 | regis@google.com | 2014-02-11 08:37:06 +0900 (火, 11  2月 2014) | 5 lines

Write the type arguments instantiations field to full snapshots only.

R=asiva@google.com

Review URL: https://codereview.chromium.org//151773006
------------------------------------------------------------------------
r32522 | hausner@google.com | 2014-02-11 07:28:07 +0900 (火, 11  2月 2014) | 5 lines

Small cleanup: move all library private key code to Library class

R=regis@google.com

Review URL: https://codereview.chromium.org//149643007
------------------------------------------------------------------------
r32510 | iposva@google.com | 2014-02-11 03:40:20 +0900 (火, 11  2月 2014) | 7 lines

- Zap the allocated object when allocating uninitialized memory in debug.
- Do not run any smart code when recreating type arguments from a snapshot.
- Adjust assertions.

R=asiva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//157053007
------------------------------------------------------------------------
r32493 | fschneider@google.com | 2014-02-10 21:18:06 +0900 (月, 10  2月 2014) | 20 lines

Landing: Write protect executable pages in the VM.

Change executable pages to be read/execute but not writable by default.

All pages are made temporarily writable just before a full GC, because both
the mark and sweep phases write to the pages. When allocating in a page and
when patching code, the pages are made temporarily writable.

The order of allocation of Code and Instructions objects is changed so that
a GC will not occur after Instructions is allocated. (A full GC would
render the Instructions unwritable.) A scoped object is used to make memory
protection simpler.

Original CL: https://codereview.chromium.org/106593002/

I added a cc test that is expected to crash.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//136563002
------------------------------------------------------------------------
r32489 | fschneider@google.com | 2014-02-10 19:30:07 +0900 (月, 10  2月 2014) | 13 lines

Improve constant propagation for type arguments.

The instruction to extract type arguments are now fully supported
in constant propagation.

I also added cid-information to non-instance constants (like e.g.
type arguments).  This will enable more opportunities
for allocation sinking because it requires the type arguments to
 be known constant.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//157593003
------------------------------------------------------------------------
r32468 | zra@google.com | 2014-02-09 07:27:27 +0900 (日, 09  2月 2014) | 7 lines

Refactors some CPU feature detection into new class CpuInfo, and uses new information in VM service.

This change rewrites the code from the ARM assembler for parsing /proc/cpuinfo on Linux and Android, and collects it into a CpuInfo class that can be used for other architectures as well. This code is in cpuinfo_*.cc. /proc/cpuinfo equivalents are used for Mac and Windows. CpuInfo is used by the VM service to report on the hardware dart is running on. In the future CpuInfo can also be used here to provide more information.

R=iposva@google.com, johnmccutchan@google.com

Review URL: https://codereview.chromium.org//120723003
------------------------------------------------------------------------
r32461 | rmacnak@google.com | 2014-02-08 10:18:18 +0900 (土, 08  2月 2014) | 7 lines

Avoid printing the full token stream and doing line/column position calculations when extracting the source of a function where we don't have the original source.

Brings mirrors_reader_test from 2 minutes to 11 seconds on the standalone VM.

R=iposva@google.com

Review URL: https://codereview.chromium.org//133813008
------------------------------------------------------------------------
r32460 | srdjan@google.com | 2014-02-08 09:02:22 +0900 (土, 08  2月 2014) | 5 lines

Disable hoisting CheckClass due to excessive deoptimization (issue 16285). Detect that a deoptimization was caused by hoisted check class instruction and disable hoisting of CheckClassInstr for that function. This is a short-term solution to fix excessive deoptimization causing slow start-ups.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//157833004
------------------------------------------------------------------------
r32457 | regis@google.com | 2014-02-08 08:02:54 +0900 (土, 08  2月 2014) | 5 lines

Fix snapshotting of TypeArguments.

R=asiva@google.com

Review URL: https://codereview.chromium.org//132623007
------------------------------------------------------------------------
r32447 | regis@google.com | 2014-02-08 04:54:33 +0900 (土, 08  2月 2014) | 9 lines

Implement eager instantiation and canonicalization of type arguments at run
time using a cache in uninstantiated type arguments.
Remove InstantiatedTypeArguments class.
Fix a bug in optimized code: do not update unused type test cache for Smi.
Fix a bug in optimized code on ARM and MIPS in type test cache lookup.

R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//154393003
------------------------------------------------------------------------
r32439 | johnmccutchan@google.com | 2014-02-08 02:43:21 +0900 (土, 08  2月 2014) | 11 lines

Keep list of existing isolates.
List is only updated when isolates are created / destroyed.
ThreadInterrupter now walks list of isolates.
Scheduling an isolate for interrupts is now lockless.
Setting a current isolate is now lockless.
Working on Linux, Mac, and Windows.
Assert that the isolate isn't on two threads at once.

R=asiva@google.com

Review URL: https://codereview.chromium.org//128653004
------------------------------------------------------------------------
r32431 | johnmccutchan@google.com | 2014-02-08 01:45:30 +0900 (土, 08  2月 2014) | 6 lines

Fix movups disassembly on IA32

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//148383018
------------------------------------------------------------------------
r32429 | johnmccutchan@google.com | 2014-02-08 00:30:25 +0900 (土, 08  2月 2014) | 5 lines

Extend StoreInstanceFieldInstr and LoadFieldInstr to support reusable Float32x4 boxes on IA32, X64, and ARM.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//150063004
------------------------------------------------------------------------
r32397 | asiva@google.com | 2014-02-07 09:43:18 +0900 (金, 07  2月 2014) | 5 lines

Add new Dart API function Dart_IsolateData which returns the peer isolate data associated with an isolate.

R=iposva@google.com

Review URL: https://codereview.chromium.org//148453016
------------------------------------------------------------------------
r32386 | asiva@google.com | 2014-02-07 06:42:35 +0900 (金, 07  2月 2014) | 5 lines

Change Dart_QualifiedTypeName to use VM code directly and not use the dart api function

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//156733002
------------------------------------------------------------------------
r32385 | hausner@google.com | 2014-02-07 06:32:31 +0900 (金, 07  2月 2014) | 22 lines

Introduce cache of resolved names in library

A name that is not resolved in the local scope gets looked up
in the global scope of the library to which the code being compiled
belongs. The local name dictionary gets searched first, then the
dictionary of each imported library (and and their re-exported
libraries.) Each dictionary lookup includes the lookup of the
mangled getter and setter names, which means that we concatenate
the same name many times.

This change introduces a cache that stores the result of a previous
name lookup, including negative lookup results. The latter is important
to speed up the resolution of names that are not in the global name
space, e.g. class members like .length in lists.

Experiments running dart2js (with VM option --compile_all) show
that this reduces the number of name mangling calls by a factor of 10
and speeds up compiling dart2js by 15%.

R=asiva@google.com

Review URL: https://codereview.chromium.org//135123011
------------------------------------------------------------------------
r32384 | srdjan@google.com | 2014-02-07 06:21:31 +0900 (金, 07  2月 2014) | 5 lines

Improve inlining decision: --inline_getters_setters_smaller_than (default 10). Don not inline getters that are too large.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//133073019
------------------------------------------------------------------------
r32382 | srdjan@google.com | 2014-02-07 05:55:16 +0900 (金, 07  2月 2014) | 3 lines

Fix bot breakage: math unary instruction has side effects (throws exception if argument is not a number) and therefore cannot be eliminated if there are no uses.

Review URL: https://codereview.chromium.org//156973002
------------------------------------------------------------------------
r32381 | srdjan@google.com | 2014-02-07 04:55:53 +0900 (金, 07  2月 2014) | 5 lines

Fix issue 16592: Do not attempt to merge operations that do not have uses, otherwise we add force uses to them (temporary array to hold two results) and the graph verification fails(no SSA temp but has uses).

R=iposva@google.com

Review URL: https://codereview.chromium.org//135553005
------------------------------------------------------------------------
r32368 | johnmccutchan@google.com | 2014-02-07 02:20:56 +0900 (金, 07  2月 2014) | 3 lines

Enable sampling profiler by default on MacOS

Review URL: https://codereview.chromium.org//151053003
------------------------------------------------------------------------
r32346 | asiva@google.com | 2014-02-06 08:42:06 +0900 (木, 06  2月 2014) | 6 lines

Enter and Exit scope when calling into the native library tag handler
instead of relying on an outer enclosing scope.

R=hausner@google.com

Review URL: https://codereview.chromium.org//141803019
------------------------------------------------------------------------
r32343 | rmacnak@google.com | 2014-02-06 08:03:46 +0900 (木, 06  2月 2014) | 5 lines

Optimize getField by caching a closure generated from eval.

R=iposva@google.com

Review URL: https://codereview.chromium.org//144383007
------------------------------------------------------------------------
r32337 | srdjan@google.com | 2014-02-06 06:14:00 +0900 (木, 06  2月 2014) | 5 lines

Fix crash in VM when patching static calls. When the target code is optimized, it is possible that the target function has its code disconnected due to its optimized code being deoptimized and its unoptimized code not being used. In such case recompile the target.

R=zra@google.com

Review URL: https://codereview.chromium.org//141733009
------------------------------------------------------------------------
r32335 | srdjan@google.com | 2014-02-06 05:31:57 +0900 (木, 06  2月 2014) | 5 lines

Mark optimized code that used CHA for optimization so that lazy class 'finalization' does not invalidate that code.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//150923002
------------------------------------------------------------------------
r32322 | johnmccutchan@google.com | 2014-02-06 00:30:40 +0900 (木, 06  2月 2014) | 6 lines

Fix disassembler crash with profiler

BUG=
R=fschneider@google.com

Review URL: https://codereview.chromium.org//154733002
------------------------------------------------------------------------
r32271 | asiva@google.com | 2014-02-04 10:12:55 +0900 (火, 04  2月 2014) | 7 lines

Add a UpdatedGuardedCidBit to Class object so that we don't have
to iterate over all the classes and it's fields to update the
GuardedCid value on each call to Dart_Allocate.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//153103004
------------------------------------------------------------------------
r32254 | rmacnak@google.com | 2014-02-04 03:11:57 +0900 (火, 04  2月 2014) | 6 lines

Fix handling of CRLF line endings in Script::GetSnippet.

BUG=http://dartbug.com/16098
R=hausner@google.com

Review URL: https://codereview.chromium.org//132773006
------------------------------------------------------------------------
r32237 | fschneider@google.com | 2014-02-03 18:46:18 +0900 (月, 03  2月 2014) | 11 lines

Fix wrongly recorded uses after polymorphic inlining.

When inlining function bodies at a polymorphic site, uses at the
callee graph entry need to be removed since this block
is removed in the process of inlining.

BUG=dartbug.com/16404
TEST=pkgbuild/samples/searchable_list
R=srdjan@google.com

Review URL: https://codereview.chromium.org//151653002
------------------------------------------------------------------------
r32227 | srdjan@google.com | 2014-02-01 09:49:32 +0900 (土, 01  2月 2014) | 5 lines

Fix issue 16375: disallow marking null-constant types as non-nullable. The issue occurs for strict equal comparisons, with both inputs being null.

R=iposva@google.com

Review URL: https://codereview.chromium.org//151833002
------------------------------------------------------------------------
r32199 | johnmccutchan@google.com | 2014-02-01 01:45:23 +0900 (土, 01  2月 2014) | 5 lines

Refactor unboxed fields code in preparation of reusable SIMD boxes.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//136753012
------------------------------------------------------------------------
r32196 | johnmccutchan@google.com | 2014-02-01 00:28:05 +0900 (土, 01  2月 2014) | 5 lines

Add Float64x2, Float64x2List, etc... with runtime and dart2js implementations

R=sra@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//148043003
------------------------------------------------------------------------
r32194 | fschneider@google.com | 2014-01-31 22:26:48 +0900 (金, 31  1月 2014) | 21 lines

Inline recognized List factory in the flow graph optimizer.

The call to the native List factory is lowered into IL instructions if
the length is known to be a valid smi.

This is mostly performance neutral. The acutal allocation now takes place
in the array allocation stub instead of the intrinsic code (and the runtime
List_allocate in case the fast case path fails).

This is a preparation for enabling allocation sinking for arrays and will
be extended to handle type list allocation as well. This way the allocation
site is explicitly represented as a CreateArrayInstr, instead of just being
a static call.

Another benefit is that this allows to simplify the special handling of
recognized factory calls in the optimizer once all array types are handled
this way.

R=johnmccutchan@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//138523004
------------------------------------------------------------------------
r32193 | lrn@google.com | 2014-01-31 22:11:25 +0900 (金, 31  1月 2014) | 7 lines

Make _Utf8Encoder create its buffer through an external function.

This allows the VM to use a Uint8List, where dart2js still has to use a plain List (due to versions of IE not supporting typed data).

R=floitsch@google.com

Review URL: https://codereview.chromium.org//144473004
------------------------------------------------------------------------
r32183 | hausner@google.com | 2014-01-31 08:38:35 +0900 (金, 31  1月 2014) | 9 lines

Prevent accidental breakpoints in non-debuggable code

Prevent setting accidental breakpoints in implicit getter
and setter functions, and in initializer expressions that
are inlined in field declarations.

R=regis@google.com

Review URL: https://codereview.chromium.org//147353005
------------------------------------------------------------------------
r32165 | hausner@google.com | 2014-01-31 03:08:02 +0900 (金, 31  1月 2014) | 9 lines

Find all compiled copies of a function when setting breakpoint

Fixes a bug where the debugger did not find a compiled implicit
closure if the non-closureized version had not been compiled yet,
thus failing to set a breakpoint.

R=regis@google.com

Review URL: https://codereview.chromium.org//149853004
------------------------------------------------------------------------
r32157 | fschneider@google.com | 2014-01-30 21:12:31 +0900 (木, 30  1月 2014) | 15 lines

Fix stack height assertion code and free up a bit in the Function tag bits.

The bit has_finally was only used to skip the checking of the stack height
at return statements: There was an unused value floating on top of the
expression stack in unoptimized code if the finally block preceded a normal
return statement. Normallyi, that does not cause harm. Optimized code is not
affected since it has a fixed stack size for expression evaluation.

This CL fixes the stack height for functions with try-finally by introducing
a temporary local where the return value is saved before an inlined
finally-block.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//149603003
------------------------------------------------------------------------
r32151 | johnmccutchan@google.com | 2014-01-30 09:26:03 +0900 (木, 30  1月 2014) | 3 lines

Setup valid pool pointer in assembler tests

Review URL: https://codereview.chromium.org//148523014
------------------------------------------------------------------------
r32150 | hausner@google.com | 2014-01-30 08:47:23 +0900 (木, 30  1月 2014) | 10 lines

Handle all debugger stepping with the isolate single step flag

Eliminate stepping with “internal” breakpoints. We can now handle
stepping in recursive functions properly. On the other hand, code
does not run at full speed between step commands, since a runtime
call to the debugger is necessary at each safe point.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//149123003
------------------------------------------------------------------------
r32148 | johnmccutchan@google.com | 2014-01-30 08:13:24 +0900 (木, 30  1月 2014) | 6 lines

IA32 and X64 assembler Float64x2 additions

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//130803013
------------------------------------------------------------------------
r32147 | zra@google.com | 2014-01-30 08:07:50 +0900 (木, 30  1月 2014) | 7 lines

Fixes ABI bug in MIPS.

Adds test for native extensions with autoscoping set to false.

R=asiva@google.com

Review URL: https://codereview.chromium.org//131103025
------------------------------------------------------------------------
r32142 | johnmccutchan@google.com | 2014-01-30 06:51:25 +0900 (木, 30  1月 2014) | 5 lines

Add Google Charts to Observatory and use it in allocation profiler

R=turnidge@google.com

Review URL: https://codereview.chromium.org//148153007
------------------------------------------------------------------------
r32140 | regis@google.com | 2014-01-30 06:10:53 +0900 (木, 30  1月 2014) | 8 lines

Share the same type parameters of a mixin application class to propagate
identical type arguments to the super type and to the mixin type, thereby
allowing for further optimizations, such as instantiator vector reuse or
sharing of type arguments with the super class.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//149723002
------------------------------------------------------------------------
r32128 | turnidge@google.com | 2014-01-30 03:40:12 +0900 (木, 30  1月 2014) | 20 lines

Post-meetup feature extravaganza.

Remodel the top-level isolate summary page.

Add variables to stack frames in the stack trace.

Stop putting small integers and bools in the object id ring.

Rework how we pass down null references (and null-like references like
uninitialized values).

Collect all isolate timers by default.

Change the lifetime of IsolateSpawnState so that we can refer to it
later to know how an isolate started up.  Stop pretending that
IsolateSpawnState is a void*.  Clean up vestigial IsolateStartData.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//145323002
------------------------------------------------------------------------
r32071 | hausner@google.com | 2014-01-29 01:36:42 +0900 (水, 29  1月 2014) | 8 lines

Fix debugger stepping

Recently I eliminated PC descriptors for some calls. This change
makes sure we handle single stepping on those call sites properly.

R=regis@google.com

Review URL: https://codereview.chromium.org//148783002
------------------------------------------------------------------------
r32070 | fschneider@google.com | 2014-01-29 00:31:25 +0900 (水, 29  1月 2014) | 15 lines

Fix bug in iteration over DelaySet.

The set may be modfied while iterating over it. I create
a temporary vector with a copy of the iterator range for
iteration.

This seems to fix the frequent crash with certain Polymer apps
in Dartium

BUG=dartbug.com/16231
R=iposva@google.com

Committed: https://code.google.com/p/dart/source/detail?r=32063

Review URL: https://codereview.chromium.org//132903009
------------------------------------------------------------------------
r32065 | fschneider@google.com | 2014-01-28 21:12:29 +0900 (火, 28  1月 2014) | 5 lines

Revert r32064, r32064 to fix Windows build.

TBR=ricow@google.com

Review URL: https://codereview.chromium.org//148263011
------------------------------------------------------------------------
r32064 | fschneider@google.com | 2014-01-28 21:00:31 +0900 (火, 28  1月 2014) | 5 lines

Attempt to fix windows VM build.

TBR=srdjan@google.com

Review URL: https://codereview.chromium.org//142043011
------------------------------------------------------------------------
r32063 | fschneider@google.com | 2014-01-28 19:25:58 +0900 (火, 28  1月 2014) | 13 lines

Fix bug in iteration over DelaySet.

The set may be modfied while iterating over it. I create
a temporary vector with a copy of the iterator range for
iteration.

This seems to fix the frequent crash with certain Polymer apps
in Dartium

BUG=dartbug.com/16231
R=iposva@google.com

Review URL: https://codereview.chromium.org//132903009
------------------------------------------------------------------------
r32042 | rmacnak@google.com | 2014-01-28 08:50:45 +0900 (火, 28  1月 2014) | 6 lines

VM: Fix crash when a type error is encountered while evaluating metadata in checked mode.

BUG=http://dartbug.com/16321
R=hausner@google.com

Review URL: https://codereview.chromium.org//148263007
------------------------------------------------------------------------
r32022 | johnmccutchan@google.com | 2014-01-28 01:55:38 +0900 (火, 28  1月 2014) | 5 lines

Use portable stack slot constants in profiler

R=zra@google.com

Review URL: https://codereview.chromium.org//148433002
------------------------------------------------------------------------
r32016 | fschneider@google.com | 2014-01-27 21:02:37 +0900 (月, 27  1月 2014) | 5 lines

Fix bug in aliasing computation for constant index.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//148273002
------------------------------------------------------------------------
r32014 | fschneider@google.com | 2014-01-27 20:06:48 +0900 (月, 27  1月 2014) | 24 lines

Improve aliasing info for load elimination of array loads.

The optimizer can now track side effects to array locations
at a constant index when eliminating array loads. Stores to
arrays with a constant index affect loads from arrays
at the same constant index _and_ loads from an unknown (non-constant)
index. Stores to an array with an unknown index affect all array loads.

For instance code like

var a = new List(2);
a[0] = 123;
a[1] = 456;
print(a[0] + a[1]);

we can now eliminate both loads from a[0] and a[1], where before
only the loads from a[1] was eliminated.

I changed the internal encoding of Alias to use BitField instead of
plain integers. This makes it a little easire to extend.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//145133009
------------------------------------------------------------------------
r32006 | hausner@google.com | 2014-01-25 08:55:11 +0900 (土, 25  1月 2014) | 9 lines

Ensure the debugger keeps a reference to code objects

Keep the code object in a breakpoint object rather than the
function object. This ensures that the GC can’t collect the
code object while there are breakpoints for the function.

R=zra@google.com

Review URL: https://codereview.chromium.org//143263012
------------------------------------------------------------------------
r32000 | srdjan@google.com | 2014-01-25 07:00:04 +0900 (土, 25  1月 2014) | 5 lines

Cleanups.

R=regis@google.com

Review URL: https://codereview.chromium.org//146843008
------------------------------------------------------------------------
r31978 | johnmccutchan@google.com | 2014-01-23 04:21:22 +0900 (木, 23  1月 2014) | 5 lines

Track live instance and allocation counts for classes.

R=iposva@google.com

Review URL: https://codereview.chromium.org//51653006
------------------------------------------------------------------------
r31970 | johnmccutchan@google.com | 2014-01-22 09:46:30 +0900 (水, 22  1月 2014) | 5 lines

Code coverage in Observatory

R=turnidge@google.com

Review URL: https://codereview.chromium.org//143973005
------------------------------------------------------------------------
r31969 | hausner@google.com | 2014-01-22 08:46:26 +0900 (水, 22  1月 2014) | 7 lines

Rename kDummyTokenIndex to kNoSourcePos

Addresses comment to previous change list.

R=regis@google.com

Review URL: https://codereview.chromium.org//144343002
------------------------------------------------------------------------
r31966 | hausner@google.com | 2014-01-22 06:49:42 +0900 (水, 22  1月 2014) | 11 lines

Make safe points in generated code invisible to the debugger

- remove some PC descriptors that are part of implicit, synthesized
  code, e.g. generated null checks in == methods, implicit constructors,
  implicitly generated code in user constructors, etc.
- ignore single step callbacks on PC descriptors that are part of
  synthesized code.

R=regis@google.com

Review URL: https://codereview.chromium.org//137003006
------------------------------------------------------------------------
r31965 | regis@google.com | 2014-01-22 05:54:21 +0900 (水, 22  1月 2014) | 5 lines

Relax assert in case a type is first canonicalized at run time (issue 16239).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//143893006
------------------------------------------------------------------------
r31961 | srdjan@google.com | 2014-01-22 02:44:29 +0900 (水, 22  1月 2014) | 5 lines

Be more aggressive when inlining getters and setters (we assume they are typically simple, efficient functions). +15% on Box2D.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//143643002
------------------------------------------------------------------------
r31958 | johnmccutchan@google.com | 2014-01-22 01:42:35 +0900 (水, 22  1月 2014) | 6 lines

Adds an empty PcDescriptors instance to the VM-isolate.
All newly created code objects point to the empty PcDescriptors instance.

R=iposva@google.com

Review URL: https://codereview.chromium.org//142233002
------------------------------------------------------------------------
r31956 | fschneider@google.com | 2014-01-22 01:02:12 +0900 (水, 22  1月 2014) | 11 lines

Fix bug in flow-graph loop detection.

With OSR there can be multiple loops that share one common loop header.
These loops must be treated as one loop, otherwise
side effects are not correctly computed.

BUG=dartbug.com/16151
TEST=language/osr_test
R=srdjan@google.com

Review URL: https://codereview.chromium.org//144053002
------------------------------------------------------------------------
r31948 | fschneider@google.com | 2014-01-20 19:43:41 +0900 (月, 20  1月 2014) | 9 lines

Revert r31601 (Use constants from the frame at OSR entry...).

Because this CL also changed the way spill slots are allocated for
catch entry blocks it caused invalid code for optimized try-catch
under certain conditions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//141163009
------------------------------------------------------------------------
r31944 | regis@google.com | 2014-01-18 10:03:22 +0900 (土, 18  1月 2014) | 6 lines

Handle wrong method invocation of a type parameter (fix issue 13134).
Add test.

R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//134083005
------------------------------------------------------------------------
r31932 | hausner@google.com | 2014-01-18 06:32:58 +0900 (土, 18  1月 2014) | 7 lines

Get rid of dynamic call debug stub

This leaves only one debugger stub function. Yay.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//140743010
------------------------------------------------------------------------
r31931 | johnmccutchan@google.com | 2014-01-18 06:16:44 +0900 (土, 18  1月 2014) | 12 lines

Change Code object serialization format to use 50% less space.
Update observatory to support new format
Cache code objects inside observatory isolate
Profiler updates cache of code objects
Profiler can display annotated disassembly objects
Code objects now display sample ticks
Fix error viewer
Start using the logging package.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//135843006
------------------------------------------------------------------------
r31928 | hausner@google.com | 2014-01-18 04:09:46 +0900 (土, 18  1月 2014) | 17 lines

Eliminate another debugger stub

This change replaces https://codereview.chromium.org/135213002/

The specialized debugger stub call for static method calls is
no longer needed. It was introduced because once upon a time, the
static method call stub used to patch the call site when the target
was compiled. The VM stopped patching unoptimized static calls a
long time ago. Thus we can treat a static call like a regular runtime
call when patching it to set a breakpoint.

Bonus fix: single step runtime callback on mips was broken. The
enter/leave stub frame were missing.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//140793010
------------------------------------------------------------------------
r31927 | johnmccutchan@google.com | 2014-01-18 02:14:08 +0900 (土, 18  1月 2014) | 5 lines

Ensure Sample instance_size is always set.

BUG=

Review URL: https://codereview.chromium.org//136293004
------------------------------------------------------------------------
r31924 | johnmccutchan@google.com | 2014-01-18 01:32:51 +0900 (土, 18  1月 2014) | 6 lines

Add flag to control number of stack frames collected by profiler

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//131853007
------------------------------------------------------------------------
r31901 | regis@google.com | 2014-01-17 07:56:35 +0900 (金, 17  1月 2014) | 6 lines

Make a type malbounded if one of its type arguments is malbounded, even if
independently of the declared bounds for the type (fix issue 16149).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//140913005
------------------------------------------------------------------------
r31898 | hausner@google.com | 2014-01-17 06:15:17 +0900 (金, 17  1月 2014) | 15 lines

Fix several little buglets with stepping

No need to halt on single step if there is a breakpoint on the
same location. While looking at the resulting test failures, I
discovered that the step_in_equals test was not at all testing
what it was meant to test. It happened to pass because of a
related bug in the parser. Decided to abandon that test and
instead check that we can break at == even if one of the operands
is null.

Added ability to match line numbers in the debugger tests.

R=regis@google.com

Review URL: https://codereview.chromium.org//135843003
------------------------------------------------------------------------
r31885 | fschneider@google.com | 2014-01-16 23:13:24 +0900 (木, 16  1月 2014) | 8 lines

Undo workaround for a bug with compile-type of the context value.

I think this was fixed already with https://codereview.chromium.org/102053010/.

BUG=dartbug.com/15652
R=srdjan@google.com

Review URL: https://codereview.chromium.org//133853002
------------------------------------------------------------------------
r31877 | lrn@google.com | 2014-01-16 21:06:38 +0900 (木, 16  1月 2014) | 9 lines

Revert "Rename internal library dart:_collection-dev to dart:_internal."

Dartium needs updating too.

Committed: https://code.google.com/p/dart/source/detail?r=31827

R=floitsch@google.com

Review URL: https://codereview.chromium.org//133273011
------------------------------------------------------------------------
r31875 | lrn@google.com | 2014-01-16 20:48:07 +0900 (木, 16  1月 2014) | 5 lines

Revert "Make VM TypedList not implement ByteBuffer."

Html transferable test fails to send buffer as buffer.

Review URL: https://codereview.chromium.org//137783019
------------------------------------------------------------------------
r31873 | lrn@google.com | 2014-01-16 19:18:41 +0900 (木, 16  1月 2014) | 6 lines

Make VM TypedList not implement ByteBuffer.

BUG= http://dartbug.com/10136
R=asiva@google.com, sra@google.com

Review URL: https://codereview.chromium.org//138033002
------------------------------------------------------------------------
r31867 | iposva@google.com | 2014-01-16 14:05:35 +0900 (木, 16  1月 2014) | 7 lines

First round of http://dartbug.com/15922:
- Address warnings about 64-bit to 32-bit conversions.
- Remove heap profiler.

R=asiva@google.com

Review URL: https://codereview.chromium.org//139043003
------------------------------------------------------------------------
r31862 | srdjan@google.com | 2014-01-16 09:15:02 +0900 (木, 16  1月 2014) | 5 lines

Similar fix to merging trunc-div/mod: only one merge for now.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//131333004
------------------------------------------------------------------------
r31859 | iposva@google.com | 2014-01-16 09:01:55 +0900 (木, 16  1月 2014) | 8 lines

Fix http://dartbug.com/16111
- Use all bits from the seed value even if passed a Bigint.
- Fix out of bounds access in BigintOperations.
- Remove obsolete implementation note.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//136453012
------------------------------------------------------------------------
r31858 | srdjan@google.com | 2014-01-16 08:12:41 +0900 (木, 16  1月 2014) | 5 lines

Fix issue 16103: incorrect merging of sin/cos.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//140233002
------------------------------------------------------------------------
r31857 | regis@google.com | 2014-01-16 07:48:42 +0900 (木, 16  1月 2014) | 3 lines

Unfriend RawType (missed in cl 133273015).

Review URL: https://codereview.chromium.org//136453010
------------------------------------------------------------------------
r31854 | regis@google.com | 2014-01-16 06:54:15 +0900 (木, 16  1月 2014) | 5 lines

Replace debugging code with asserts in snapshotter.

R=asiva@google.com

Review URL: https://codereview.chromium.org//133273015
------------------------------------------------------------------------
r31849 | turnidge@google.com | 2014-01-16 05:45:39 +0900 (木, 16  1月 2014) | 11 lines

Allow root level requests in the vm service.

Move /cpu to the root level.

Move PostReply to the command handlers.  This will allow command
handlers to reply asynchronously (by delegating elsewhere) if they
need to.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//131973007
------------------------------------------------------------------------
r31845 | srdjan@google.com | 2014-01-16 04:14:45 +0900 (木, 16  1月 2014) | 5 lines

Fix 16099: Invocation's positionalArguments contains an immutable array.

R=asiva@google.com

Review URL: https://codereview.chromium.org//139663003
------------------------------------------------------------------------
r31844 | srdjan@google.com | 2014-01-16 04:09:02 +0900 (木, 16  1月 2014) | 5 lines

Fix issue 16103: Prevent recursive triggering of optimizer by resetting the optimization counter threshold before calling the compiler.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//139263005
------------------------------------------------------------------------
r31843 | regis@google.com | 2014-01-16 03:56:10 +0900 (木, 16  1月 2014) | 7 lines

Leave uninitialized type arguments of a type being finalized as null instead of
temporarily setting them to dynamic for improved code robustness, since dealing
with a null type is less forgiving than dealing with dynamic.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//137983006
------------------------------------------------------------------------
r31827 | lrn@google.com | 2014-01-15 21:27:44 +0900 (水, 15  1月 2014) | 5 lines

Revert "Rename internal library dart:_collection-dev to dart:_internal."

Dartium needs updating too.

Review URL: https://codereview.chromium.org//133273011
------------------------------------------------------------------------
r31823 | lrn@google.com | 2014-01-15 18:24:46 +0900 (水, 15  1月 2014) | 6 lines

Rename internal library dart:_collection-dev to dart:_internal.

BUG= http://dartbug.com/14140
R=floitsch@google.com

Review URL: https://codereview.chromium.org//133893007
------------------------------------------------------------------------
r31812 | hausner@google.com | 2014-01-15 08:27:13 +0900 (水, 15  1月 2014) | 10 lines

Fix debugger stub patching on x64 architecture

Instead of patching the entry in the object pool, patch the offset
into the pool at the call site.

SIMARM and SIMMIPS will have to be fixed the same way in a later change.

R=iposva@google.com

Review URL: https://codereview.chromium.org//131853006
------------------------------------------------------------------------
r31811 | johnmccutchan@google.com | 2014-01-15 08:05:57 +0900 (水, 15  1月 2014) | 5 lines

Fix mac build breakage in dart_api_impl.cc

BUG=

Review URL: https://codereview.chromium.org//137443008
------------------------------------------------------------------------
r31809 | johnmccutchan@google.com | 2014-01-15 07:34:43 +0900 (水, 15  1月 2014) | 6 lines

Split service into VM and embedder specific bits.
Move most service sources into the VM.

R=asiva@google.com

Review URL: https://codereview.chromium.org//125103004
------------------------------------------------------------------------
r31807 | regis@google.com | 2014-01-15 07:30:59 +0900 (水, 15  1月 2014) | 5 lines

Share mixin type with interface type in mixin application classes.

R=hausner@google.com

Review URL: https://codereview.chromium.org//138273005
------------------------------------------------------------------------
r31797 | asiva@google.com | 2014-01-15 04:55:46 +0900 (水, 15  1月 2014) | 6 lines

1. Delete prolog weak persistent handles when shutting down an isolate
2. Remove the peer_ field from RawExternalTypedData as it is not used anywhere

R=iposva@google.com

Review URL: https://codereview.chromium.org//136853004
------------------------------------------------------------------------
r31794 | regis@google.com | 2014-01-15 03:41:27 +0900 (水, 15  1月 2014) | 6 lines

Support bounded mixins in the VM (fix issue 14453).
Add tests.

R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//137543004
------------------------------------------------------------------------
r31786 | johnmccutchan@google.com | 2014-01-15 00:18:47 +0900 (水, 15  1月 2014) | 7 lines

Use a shared profile buffer

May need to follow this up with a bump in the buffer size.

R=iposva@google.com

Review URL: https://codereview.chromium.org//134463002
------------------------------------------------------------------------
r31771 | iposva@google.com | 2014-01-14 09:52:58 +0900 (火, 14  1月 2014) | 3 lines

- Properly detag the pointer before using it.

Review URL: https://codereview.chromium.org//136193004
------------------------------------------------------------------------
r31765 | iposva@google.com | 2014-01-14 07:46:19 +0900 (火, 14  1月 2014) | 8 lines

Fix dartbug.com/15963:
- Properly serialize and deserialize RawInstance which represent the Object class.
- Initialize the last word to null even for AllocateUnitialized to ensure the
  properly formed objects even for misaligned objects.

R=asiva@google.com

Review URL: https://codereview.chromium.org//130563005
------------------------------------------------------------------------
r31753 | vegorov@google.com | 2014-01-14 04:33:05 +0900 (火, 14  1月 2014) | 10 lines

Ensure that MaterializeObject has relaxed RequiredInputRepresentation.

Instruction itself is essentially a part of a deoptimization enviroment and thus can deal with any representation.

Default RequiredInputRepresentation is too strict and require tagged representation for all inputs which leads to ineffecient code: SelectRepresentations pass which is run while materializations are still in the graph will insert redundant boxing.

R=srdjan@google.com
BUG=dart:16063

Review URL: https://codereview.chromium.org//136923004
------------------------------------------------------------------------
r31752 | johnmccutchan@google.com | 2014-01-14 03:41:08 +0900 (火, 14  1月 2014) | 6 lines

Support unboxed SIMD types in AllocationSinking

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//25509007
------------------------------------------------------------------------
r31696 | johnmccutchan@google.com | 2014-01-11 02:24:11 +0900 (土, 11  1月 2014) | 5 lines

Fix profile sample buffer leak

BUG=

Review URL: https://codereview.chromium.org//132903004
------------------------------------------------------------------------
r31685 | hausner@google.com | 2014-01-10 08:56:08 +0900 (金, 10  1月 2014) | 8 lines

Delete obsolete debug stub

Remove the debug stub that became obsolete with the recent rewrite
of how we handle breakpoints at return statements.

R=regis@google.com

Review URL: https://codereview.chromium.org//132793002
------------------------------------------------------------------------
r31678 | hausner@google.com | 2014-01-10 06:50:20 +0900 (金, 10  1月 2014) | 9 lines

Debugger no longer causes top level variable initialization

When a top-level variable has not been initialized yet, the
debugger reports a value of ‘null’ rather than causing a side
effect of running the initializer code.

R=jacobr@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//126653003
------------------------------------------------------------------------
r31639 | johnmccutchan@google.com | 2014-01-09 09:33:54 +0900 (木, 09  1月 2014) | 5 lines

Disable profiler for Dartium bots

BUG=

Review URL: https://codereview.chromium.org//129983002
------------------------------------------------------------------------
r31631 | johnmccutchan@google.com | 2014-01-09 07:42:12 +0900 (木, 09  1月 2014) | 3 lines

Temporary disable of thread interrupter on Linux

Review URL: https://codereview.chromium.org//129223005
------------------------------------------------------------------------
r31628 | srdjan@google.com | 2014-01-09 06:45:05 +0900 (木, 09  1月 2014) | 5 lines

Fix 15721: When checking for bad overrides we must eagerly finalize superclasses.

R=regis@google.com

Review URL: https://codereview.chromium.org//128263005
------------------------------------------------------------------------
r31626 | johnmccutchan@google.com | 2014-01-09 05:52:39 +0900 (木, 09  1月 2014) | 3 lines

Make Dart_EnterIsolate faster with profiler enabled. Enable profiler again.

Review URL: https://codereview.chromium.org//129303002
------------------------------------------------------------------------
r31621 | srdjan@google.com | 2014-01-09 04:09:56 +0900 (木, 09  1月 2014) | 7 lines

Fix issue 14366: in case of a type check error and conflicting type names being the same, prefix type names with their library names. Example:

type 'myLib.My' is not a subtype of type 'My' of 'm'.

R=regis@google.com

Review URL: https://codereview.chromium.org//128803003
------------------------------------------------------------------------
r31618 | johnmccutchan@google.com | 2014-01-09 03:41:05 +0900 (木, 09  1月 2014) | 3 lines

Disable profiler

Review URL: https://codereview.chromium.org//128953002
------------------------------------------------------------------------
r31616 | asiva@google.com | 2014-01-09 02:49:27 +0900 (木, 09  1月 2014) | 5 lines

Fix for Issue 15911, use IsInlinable() to determine if TryInlineRecognizedMethod needs to be called. Set is_inlinable to false when a function is marked as not optimizable.

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//126683002
------------------------------------------------------------------------
r31607 | fschneider@google.com | 2014-01-08 22:07:53 +0900 (水, 08  1月 2014) | 11 lines

Fix bug in specialization of IC-data.

My previous change to use constants for OSR values if possible
uncovered a bug when narrowing IC-data based on type information:

If the exising IC data don't agree with the static type information,
don't specialize.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//128113003
------------------------------------------------------------------------
r31601 | fschneider@google.com | 2014-01-08 20:27:10 +0900 (水, 08  1月 2014) | 16 lines

Use constants from the frame at OSR entry.

The code for reserving stack slots for OSR entry values is shared with the
code for reserving stack slots for try/catch. It does not handle them
optimally (reserving slots above the desired ones and copying them down,
instead of directly reserving the desired one). This CL simplifies allocation
of spill slots for try-catch as well.

This is an rebased version of Kevin's original CL
(https://codereview.chromium.org/102173003/).
I removed an invalid assertion and removed more code that became unnecessary
with this change.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//125943002
------------------------------------------------------------------------
r31600 | fschneider@google.com | 2014-01-08 19:27:01 +0900 (水, 08  1月 2014) | 20 lines

Generate smaller unoptimized code for local variable loads.

Use memory operands in unoptimized code on ia32 and x64 to
push local variables on the expression stack.

Instead of

mov eax, [ebp+index]
push eax

generate

push [ebp+index]

ARM/MIPS are unchanged. They don't have an instruction
for pushing a memory operand directly.

R=zra@google.com

Review URL: https://codereview.chromium.org//113893010
------------------------------------------------------------------------
r31584 | regis@google.com | 2014-01-08 06:55:07 +0900 (水, 08  1月 2014) | 6 lines

Use a trail instead of a mark bit when processing recursive types in the VM
(issue 15595).

R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//109593003
------------------------------------------------------------------------
r31576 | srdjan@google.com | 2014-01-08 06:12:37 +0900 (水, 08  1月 2014) | 5 lines

Fix disassembler crash when mistaking integer values for objects.

R=iposva@google.com

Review URL: https://codereview.chromium.org//125263002
------------------------------------------------------------------------
r31575 | hausner@google.com | 2014-01-08 06:10:47 +0900 (水, 08  1月 2014) | 15 lines

Add debugger steps in local variable assignments

This allows the debugger to single step and break on local
variable assignments in unoptimized code. Checks are only added if
the right hand side of the assignment has no safepoints where
the debugger would stop anyway.

Interestingly, generated code size is only 0.1% bigger, so the
cost is negligible.

Addresses issue 10403.

R=iposva@google.com

Review URL: https://codereview.chromium.org//125033007
------------------------------------------------------------------------
r31536 | fschneider@google.com | 2014-01-07 18:58:45 +0900 (火, 07  1月 2014) | 22 lines

Fix bug and refactor optimized try-catch.

 When untagged values flow into a exception-throwing instruction
 they need to be converted eagerly. Catch block entries assume all
 values are tagged at the entry.

 I changed the generation of moves at throwing
 instructions in try-catch: Instead of manuallu emitting moves,
 construct a parallel move and use the resolver to emit the native code.
 This eliminates a lot of duplicated code from all platforms.

 It will also allow to re-use stack space that is currently allocated
 separately for each individual try-catch in a function.

 I added a few more unrelated minor changes in various parts of the VM
 * Simpilify guard code generation
 * Resolve refactoring TODO in deoptimization
 * Improve names

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//125103002
------------------------------------------------------------------------
r31528 | srdjan@google.com | 2014-01-07 09:48:46 +0900 (火, 07  1月 2014) | 5 lines

Fix 15413: setRange for views with overlapping buffers.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//124383007
------------------------------------------------------------------------
r31521 | johnmccutchan@google.com | 2014-01-07 08:32:37 +0900 (火, 07  1月 2014) | 5 lines

Fix sample reuse in profiler ring buffer

R=efortuna@google.com

Review URL: https://codereview.chromium.org//101223011
------------------------------------------------------------------------
r31504 | srdjan@google.com | 2014-01-07 06:22:14 +0900 (火, 07  1月 2014) | 5 lines

Compute range for Smi multiplication. Especially useful when working on canvas (Uint8ClampedList).

R=fschneider@google.com

Review URL: https://codereview.chromium.org//122573002
------------------------------------------------------------------------
r31463 | zra@google.com | 2014-01-04 10:23:43 +0900 (土, 04  1月 2014) | 12 lines

Replaces LongJump with LongJumpScope.

LongJump required explicitly restoring the old
long jump base before function return. This was
sometimes forgotten, leading to crashes. This
change puts the base restoration into the
destructor so that it happens automatically on
return.

R=iposva@google.com

Review URL: https://codereview.chromium.org//108383007
------------------------------------------------------------------------
r31449 | hausner@google.com | 2014-01-04 05:50:32 +0900 (土, 04  1月 2014) | 9 lines

Fix setting breakpoint in non-finalized class.

This fixes issue 15870

Also added test case and verified manually that test case fails before this fix.

R=iposva@google.com, jacobr@google.com

Review URL: https://codereview.chromium.org//116223006
------------------------------------------------------------------------
r31448 | johnmccutchan@google.com | 2014-01-04 05:32:08 +0900 (土, 04  1月 2014) | 3 lines

Fix checked mode failure of FindFunctionIndex

Review URL: https://codereview.chromium.org//121553005
------------------------------------------------------------------------
r31447 | johnmccutchan@google.com | 2014-01-04 04:55:50 +0900 (土, 04  1月 2014) | 10 lines

Build map of code regions and address ticks for profile report.
Profile pauses should be less than 500 ms even when handling 120,000 samples (2 minutes @ 1000 hz).
Code objects are referenced by hex address: "code/cafebabe".
Test for retrieving code objects over the service.
Remove old profile tool scripts. Replaced by dprof (https://github.com/dart-lang/dprof) and Observatory UI for profiler.
Support for stable service refs to implicit closures and dispatcher functions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//100103011
------------------------------------------------------------------------
r31443 | asiva@google.com | 2014-01-04 03:47:38 +0900 (土, 04  1月 2014) | 6 lines

Add Dart API method Dart_SetPersistentHandle to enable setting the value of
a persistent handle.

R=iposva@google.com

Review URL: https://codereview.chromium.org//116473004
------------------------------------------------------------------------
r31436 | srdjan@google.com | 2014-01-03 08:55:37 +0900 (金, 03  1月 2014) | 5 lines

Use 'fabs' instead of 'abs' where appropriate.

R=zra@google.com

Review URL: https://codereview.chromium.org//123543002
------------------------------------------------------------------------
r31435 | hausner@google.com | 2014-01-03 08:31:52 +0900 (金, 03  1月 2014) | 9 lines

Make return statements single steppable

Replace the code smashing breakpoints at function returns with a call
to a runtime stub that checks whether the debugger is single stepping.
The call to the stub is only emitted in unoptimized code.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//106053011
------------------------------------------------------------------------
r31431 | zra@google.com | 2014-01-03 05:53:55 +0900 (金, 03  1月 2014) | 7 lines

Adds missing calls to reset long_jump_base.

Fixes Issue 15744.

R=hausner@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//108513016
------------------------------------------------------------------------
r31428 | srdjan@google.com | 2014-01-03 05:11:41 +0900 (金, 03  1月 2014) | 5 lines

Less register pressure: allow stack location for index argument of array bound check instruction. Implement on ia32 only, since only few registers are available there.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//103333006
------------------------------------------------------------------------
r31408 | iposva@google.com | 2013-12-31 09:27:16 +0900 (火, 31 12月 2013) | 5 lines

- Allow to pre-filter before calling the FindObjectVisitor.

R=asiva@google.com, johnmccutchan@google.com

Review URL: https://codereview.chromium.org//110883016
------------------------------------------------------------------------
r31405 | asiva@google.com | 2013-12-31 04:55:28 +0900 (火, 31 12月 2013) | 6 lines

Implement GetNativeReceiver without handles under a NoGCScope, this should
eliminate the hot InitializeHandle calls that were observed in the profile.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//101153005
------------------------------------------------------------------------
r31401 | iposva@google.com | 2013-12-31 02:50:19 +0900 (火, 31 12月 2013) | 5 lines

- Avoid returning "<optimized out>" strings as contexts.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//93733006
------------------------------------------------------------------------
r31395 | srdjan@google.com | 2013-12-28 06:36:26 +0900 (土, 28 12月 2013) | 5 lines

Fix instruction removal for 'as' test; the bug caused us to stop optimizing after an 'as' test.

R=zra@google.com

Review URL: https://codereview.chromium.org//103553006
------------------------------------------------------------------------
r31386 | johnmccutchan@google.com | 2013-12-28 01:56:21 +0900 (土, 28 12月 2013) | 5 lines

Some cleanups

R=asiva@google.com

Review URL: https://codereview.chromium.org//116343004
------------------------------------------------------------------------
r31377 | srdjan@google.com | 2013-12-27 07:15:37 +0900 (金, 27 12月 2013) | 5 lines

Fix typo: enable cid guessing for equality operators as well.

R=hausner@google.com

Review URL: https://codereview.chromium.org//121433002
------------------------------------------------------------------------
r31372 | hausner@google.com | 2013-12-27 05:53:58 +0900 (金, 27 12月 2013) | 18 lines

Change how debugger handles source breakpoints

- Identify a source breakpoint by a script and a token position
  rather than a function object.
- When a new breakpoint is set, iterate over all compiled functions
  to see whether code breakpoints must be set.

This change fixes issues with functions that get compiled several
times, for example as implicit closures or a copies of mixin
functions or local closures of mixing functions. We did not detect
all duplicates of functions.

Eliminated recently introduced const modifiers in SourceBreakpoint
class. They tend to be in the way because several accessor methods
of SourceBreakpoint compute data lazily and modify the object as a
side effect.

Review URL: https://codereview.chromium.org//117133005
------------------------------------------------------------------------
r31370 | hausner@google.com | 2013-12-27 02:27:09 +0900 (金, 27 12月 2013) | 7 lines

Detect missing with clause in mixing applications

Fixes 15758.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//102443008
------------------------------------------------------------------------
r31360 | johnmccutchan@google.com | 2013-12-21 08:31:55 +0900 (土, 21 12月 2013) | 5 lines

Fix release mode crash in String::DecodeURI.

BUG=

Review URL: https://codereview.chromium.org//101653007
------------------------------------------------------------------------
r31358 | johnmccutchan@google.com | 2013-12-21 07:35:55 +0900 (土, 21 12月 2013) | 10 lines

Refactor VM service IDs:

- IDs are strings which can be concatenated together like paths.
- Isolate ID is now "/isolates/XXX"
- Function, field, class, library, and script IDs are now stable.
- Introduce <type-ref> tags.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//98253009
------------------------------------------------------------------------
r31356 | turnidge@google.com | 2013-12-21 07:30:23 +0900 (土, 21 12月 2013) | 22 lines

Keep track of current "pause" event in the debugger.

This will allow us (later) to make nice descriptions of the state of
an isolate, e.g. "isolate 7112 is paused due to breakpoint 2" or
"isolate 7112 is paused due to interrupt" or "isolate 7112 is
running".

Use a new Pause() function to call the event handler during a pause.
It does some shared checking, setup, teardown.

Minor change in isolate interrupt handling - before we were not
setting 'in_event_handler_' in this case.  Now we set 'pause_event_'
here, which will guard against recursive pauses in this case.

Reviewer: not sure what I think about all the names I used here.
"pause_event_" is very similar to PausedEvent but means something
different, as it includes pauses, interrupts, and (maybe) exceptions.
Dunno.

R=hausner@google.com

Review URL: https://codereview.chromium.org//118603002
------------------------------------------------------------------------
r31347 | srdjan@google.com | 2013-12-21 05:11:38 +0900 (土, 21 12月 2013) | 5 lines

Optimize string length one comparisons by comparing char codes only. Implemented for one byte strings only at the moment. Will add other string types/mixed compares later.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//105143011
------------------------------------------------------------------------
r31340 | zra@google.com | 2013-12-21 02:51:34 +0900 (土, 21 12月 2013) | 28 lines

Simplifies standalone VM Android build.

This change also avoids the need to
do another 'gclient runhooks' when switching
between Android and Linux builds, and between
IA32 and ARM Android builds.

gyp does not allow 'libraries' sections inside of
configurations. Therefore, since some architecture
specific paths, libraries, etc. must be specified
on the Android NDK's linker command line, to avoid
re-gyping when switching between Android IA32 and ARM,
this change moves the architecture specific linker
flags to a script, android_link.py.

To avoid re-gyping when swtiching between Linux and
Android, this change creates new configurations
that specify the target OS as well as the the target
architecture, e.g. ReleaseLinuxARM or ReleaseAndroidARM
instead of ReleaseARM.

This change also adds a --toolchain flag to build.py,
and removes obsoleted logic for setting up the Android
build.

R=iposva@google.com

Review URL: https://codereview.chromium.org//105223002
------------------------------------------------------------------------
r31336 | regis@google.com | 2013-12-20 23:26:53 +0900 (金, 20 12月 2013) | 4 lines

Add missing ResolveType call (fix issue 15738).
Remove unused parameter from ResolveType.

Review URL: https://codereview.chromium.org//113163008
------------------------------------------------------------------------
r31332 | fschneider@google.com | 2013-12-20 21:21:09 +0900 (金, 20 12月 2013) | 5 lines

Revert r31326.

TBR=johnmccutchan@google.com,

Review URL: https://codereview.chromium.org//118133004
------------------------------------------------------------------------
r31326 | fschneider@google.com | 2013-12-20 18:41:42 +0900 (金, 20 12月 2013) | 19 lines

Use parallel move resolver for optimized try-catch.

This CL has no change in functionality and is purely clean up and
refactoring. Instead of manually generating the moves at throwing
instructions in try-catch, construct a parallel move and use the resolver
to emit the native code. This eliminates a lot of duplicated code
from all platforms.

It will also allow to re-use stack space that is currently allocated
separately for each individual try-catch in a function.

I added a few more unrelated minor changes in various parts of the VM
* Simpilify guard code generation
* Resolve refactoring TODO in deoptimization
* Improve names

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//119213002
------------------------------------------------------------------------
r31325 | regis@google.com | 2013-12-20 18:20:55 +0900 (金, 20 12月 2013) | 5 lines

Convert InstantiatedTypeArguments to TypeArguments upon canonicalization.

R=iposva@google.com

Review URL: https://codereview.chromium.org//106793007
------------------------------------------------------------------------
r31324 | fschneider@google.com | 2013-12-20 18:18:40 +0900 (金, 20 12月 2013) | 5 lines

Update double unboxing heuristic.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//119103002
------------------------------------------------------------------------
r31311 | asiva@google.com | 2013-12-20 09:15:13 +0900 (金, 20 12月 2013) | 6 lines

Change Dart_GetNativeBooleanArgument to use class Ids and direct
pointer comparision of the singleton objects to determine value.

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//113763004
------------------------------------------------------------------------
r31286 | asiva@google.com | 2013-12-20 02:47:56 +0900 (金, 20 12月 2013) | 8 lines

Allow the native resolver to setup whether it needs the Dart API scope to
be setup automatically or not when a native function is invoked.
This would allow the embedder to treat some native functions as leaf
functions whose invocation can be very light.

R=hausner@google.com, zra@google.com

Review URL: https://codereview.chromium.org//117723002
------------------------------------------------------------------------
r31247 | johnmccutchan@google.com | 2013-12-19 09:29:51 +0900 (木, 19 12月 2013) | 5 lines

Bucket unknown symbols by PC and demangle native symbols

R=iposva@google.com

Review URL: https://codereview.chromium.org//100133004
------------------------------------------------------------------------
r31244 | johnmccutchan@google.com | 2013-12-19 08:11:20 +0900 (木, 19 12月 2013) | 5 lines

Add flag to control profiler rate

R=asiva@google.com

Review URL: https://codereview.chromium.org//118673002
------------------------------------------------------------------------
r31238 | iposva@google.com | 2013-12-19 05:52:35 +0900 (木, 19 12月 2013) | 6 lines

- Promote objects early when a large percentage is being
  copied during a scavenge.

R=zra@google.com

Review URL: https://codereview.chromium.org//98693010
------------------------------------------------------------------------
r31233 | turnidge@google.com | 2013-12-19 02:45:17 +0900 (木, 19 12月 2013) | 7 lines

Handle vmservice messages while at breakpoint.

Allow rudimentary inspection of breakpoints from vmservice.

R=hausner@google.com, johnmccutchan@google.com

Review URL: https://codereview.chromium.org//113513004
------------------------------------------------------------------------
r31230 | srdjan@google.com | 2013-12-19 01:55:12 +0900 (木, 19 12月 2013) | 5 lines

Constant propagation in LoadIndexed when inputs are array/string and index constants.

R=fschneider@google.com, johnmccutchan@google.com

Review URL: https://codereview.chromium.org//102973007
------------------------------------------------------------------------
r31229 | fschneider@google.com | 2013-12-19 00:46:39 +0900 (木, 19 12月 2013) | 10 lines

Fix bug in double unboxing.

The state bit that record if a field is unboxed or not has to be checked
in unoptimized code as well, since that code does not change when deoptimizing.

I also compacted the kind_bits bit field in the Field class to start from bit 0.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//106623006
------------------------------------------------------------------------
r31227 | fschneider@google.com | 2013-12-19 00:30:07 +0900 (木, 19 12月 2013) | 9 lines

Fix invalid aliasing in type propagation of AssertAssignable.

We have to create a copy when computing the initial type for AssertAssignable
instead of using the CompileType of the input operand. Aliasing can cause
invalid elimination of checks after strengthening of asserts.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//102283004
------------------------------------------------------------------------
r31209 | zra@google.com | 2013-12-18 07:22:12 +0900 (水, 18 12月 2013) | 5 lines

Adds CPU message type to vm service.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//98253007
------------------------------------------------------------------------
r31207 | asiva@google.com | 2013-12-18 07:07:41 +0900 (水, 18 12月 2013) | 6 lines

Changes to interpret the optimizable bit based on whether the function
is native or not.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//101753005
------------------------------------------------------------------------
r31205 | iposva@google.com | 2013-12-18 06:11:18 +0900 (水, 18 12月 2013) | 6 lines

- Remove the reply_port from the VM internal message object.
- Adjust all the uses of this API.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//93873015
------------------------------------------------------------------------
r31199 | rmacnak@google.com | 2013-12-18 03:02:14 +0900 (水, 18 12月 2013) | 3 lines

Remove dead isLocalPort from the VM mirrors implementation.

Review URL: https://codereview.chromium.org//115153007
------------------------------------------------------------------------
r31198 | iposva@google.com | 2013-12-18 02:42:26 +0900 (水, 18 12月 2013) | 5 lines

- Use named constant kNullable instead of true.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//105403008
------------------------------------------------------------------------
r31197 | zra@google.com | 2013-12-18 02:34:09 +0900 (水, 18 12月 2013) | 5 lines

Fixes Unimplemented crasher on MIPS.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//108533005
------------------------------------------------------------------------
r31194 | iposva@google.com | 2013-12-18 01:59:14 +0900 (水, 18 12月 2013) | 7 lines

- Use canonicalized type of non-parameterized classes when
  available.
- Do not attempt to make types for objects of Context.

R=fschneider@google.com, regis@google.com

Review URL: https://codereview.chromium.org//102053010
------------------------------------------------------------------------
r31193 | johnmccutchan@google.com | 2013-12-18 01:57:18 +0900 (水, 18 12月 2013) | 5 lines

Fix signed unsigned comparison error

BUG=

Review URL: https://codereview.chromium.org//98333008
------------------------------------------------------------------------
r31192 | johnmccutchan@google.com | 2013-12-18 01:48:55 +0900 (水, 18 12月 2013) | 6 lines

Fix crash walking call stack on Linux.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//116703003
------------------------------------------------------------------------
r31175 | johnmccutchan@google.com | 2013-12-17 07:35:55 +0900 (火, 17 12月 2013) | 5 lines

Only interrupt thread don't record sample. Narrowing in on flaky crash on Linux.

TBR

Review URL: https://codereview.chromium.org//113133010
------------------------------------------------------------------------
r31173 | johnmccutchan@google.com | 2013-12-17 05:54:19 +0900 (火, 17 12月 2013) | 3 lines

Remove reference to ucontext_t until other Signal related functions on Android are implemented.

Review URL: https://codereview.chromium.org//103403007
------------------------------------------------------------------------
r31172 | srdjan@google.com | 2013-12-17 05:05:00 +0900 (火, 17 12月 2013) | 3 lines

The name of InternalError class has changed to _InternalError.

Review URL: https://codereview.chromium.org//102763003
------------------------------------------------------------------------
r31171 | johnmccutchan@google.com | 2013-12-17 04:54:46 +0900 (火, 17 12月 2013) | 3 lines

Add missing include file for Android build

Review URL: https://codereview.chromium.org//116013003
------------------------------------------------------------------------
r31170 | johnmccutchan@google.com | 2013-12-17 03:52:15 +0900 (火, 17 12月 2013) | 9 lines

* Introduce ThreadInterrupter which calls a TLS set callback when thread is interrupted.
* Threads can only register and unregister themselves with ThreadInterrupter.
* Profiler is no longer involved in interrupting threads. It's just a callback and the buffer.
* Profiler operates lock free using an atomic operation to reserve sample in sample buffer.
* Linux, Mac, and Windows done.

R=asiva@google.com

Review URL: https://codereview.chromium.org//109803002
------------------------------------------------------------------------
r31164 | fschneider@google.com | 2013-12-17 00:11:31 +0900 (火, 17 12月 2013) | 21 lines

Add mutable double boxes for fields.

This allows the optimizing compiler to generate unboxed loads/stores
to fields containing double values. The double value is stored
in a reusable double object.

Unboxed loads/stores are generated for optimized code. Unoptimized code
allocates a new double on loads. To avoid performance regressions
for fields that are only written few times (e.g. only in the constructor)
I put a heuristic in place that
compares the usage count of setters and getters. Unboxed operations
are only generated if the setter is invoked a significant amount of
times (threshold is 10% of getter invocations).

The CL is so big because it changes the way LocationSummmary
is allocated: We now have a bit to generate different summaries
for optimized and unoptimized code.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//99573005
------------------------------------------------------------------------
r31158 | ajohnsen@google.com | 2013-12-16 21:56:37 +0900 (月, 16 12月 2013) | 11 lines

Alternative Timer implementation using simply list-based priority heap.

The current implementation is not memory-optimized yet, to make it
easier to review.

BUG=
R=fschneider@google.com, lrn@google.com, sgjesse@google.com

Committed: https://code.google.com/p/dart/source/detail?r=31132

Review URL: https://codereview.chromium.org//99203010
------------------------------------------------------------------------
r31144 | turnidge@google.com | 2013-12-14 04:36:40 +0900 (土, 14 12月 2013) | 14 lines

Add GrowableObjectArray::ToUserCString().

Prints a decent representation of a list, subject to length
constraints.  Prints the length of the list if it is truncated.

e.g.

[]
[1,2,3]
["0123456789",...](length:4)

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//100603011
------------------------------------------------------------------------
r31140 | rmacnak@google.com | 2013-12-14 03:33:45 +0900 (土, 14 12月 2013) | 8 lines

VM: Support calling through getters in InstanceMirror.delegate.

Implement without accessing private members of dart:core. Fix language test expecting wrong return value.

BUG=http://dartbug.com/15138
R=fschneider@google.com

Review URL: https://codereview.chromium.org//114713002
------------------------------------------------------------------------
r31137 | srdjan@google.com | 2013-12-14 02:15:05 +0900 (土, 14 12月 2013) | 13 lines

Restoring the remaining CL 104893003. For instance call representing numerical comparisons and binary operations (double and Smi supported for now) that were never visited before optimization occurs, we guess the cids if one of the argument cids is known, e.g. ‘a == 1’ we guess that a is also going to be 1 thus avoiding emitting an IC-call in optimized code and propagating the type accordingly.

Remove AssertAssignableInstr::RecomputeType as it may cause incorrect behavior: it changes the type of its value based on input, the graph below will then incorrectly remove CheckSmi.

v27 <- BinaryMintOp:14(..

v28 <- AssertAssignable(v27)
CheckSmi(v28)
v17 <- BinarySmiOp:86(+, v28, v12)

R=fschneider@google.com

Review URL: https://codereview.chromium.org//114543004
------------------------------------------------------------------------
r31131 | floitsch@google.com | 2013-12-13 22:05:28 +0900 (金, 13 12月 2013) | 7 lines

Isolate.spawn{Uri} only reports errors asynchronously.

It is generally considered bad style to throw synchronous and asynchronous errors. This CL catches all synchronous errors and reports them in the asynchronous future that is returned.

R=iposva@google.com, lrn@google.com

Review URL: https://codereview.chromium.org//88783002
------------------------------------------------------------------------
r31111 | turnidge@google.com | 2013-12-13 06:33:25 +0900 (金, 13 12月 2013) | 5 lines

Remove old stack-walking code.  The new code seems to be doing fine.

R=hausner@google.com

Review URL: https://codereview.chromium.org//113953003
------------------------------------------------------------------------
r31087 | regis@google.com | 2013-12-12 07:51:19 +0900 (木, 12 12月 2013) | 11 lines

Introduce class TypeRef in the VM to fully support recursive types.
Fix issues 15244, 15148, 14869, 14000, and 13688 (was closed, but fragile).

Note that the current solution is not final as it may not be correct in more
complex cases not yet covered by language tests.
The final solution will require a 'trail' instead of a simple mark bit to
prevent operations involving recursive types to diverge.

R=asiva@google.com

Review URL: https://codereview.chromium.org//103913005
------------------------------------------------------------------------
r31085 | srdjan@google.com | 2013-12-12 07:25:38 +0900 (木, 12 12月 2013) | 5 lines

Some cleanups, fixes. Parts of the cid guessing CL that was revrted.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//112243002
------------------------------------------------------------------------
r31074 | turnidge@google.com | 2013-12-12 03:03:42 +0900 (木, 12 12月 2013) | 14 lines

Add an instance view page to the vmservice.

We can use this view to browse the field values of objects and explore
the heap a bit.

----------

Add field lists to the class and instance view pages.

Add field-ref and instance-ref elements.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//110703002
------------------------------------------------------------------------
r31039 | srdjan@google.com | 2013-12-11 06:16:02 +0900 (水, 11 12月 2013) | 3 lines

Revert r31036, because of bit redness.

Review URL: https://codereview.chromium.org//101373006
------------------------------------------------------------------------
r31036 | srdjan@google.com | 2013-12-11 04:09:44 +0900 (水, 11 12月 2013) | 5 lines

For instance call representing numerical comparisons and binary operations (double and Smi supported for now) that were never visited before optimization occurs, we guess the cids if one of the argument cids is known, e.g. ‘a == 1’ we guess that a is also going to be 1 thus avoiding emitting an IC-call in optimized code and propagating the type accordingly.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//104893003
------------------------------------------------------------------------
r31029 | hausner@google.com | 2013-12-11 02:41:05 +0900 (水, 11 12月 2013) | 7 lines

Transmit breakpoint id on paused event

Breakpoint callback get an additional parameter to receive the id of the breakpoint that was hit, or 0 if the debugger pauses due to stepping.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//110913002
------------------------------------------------------------------------
r31024 | zra@google.com | 2013-12-11 01:43:06 +0900 (水, 11 12月 2013) | 8 lines

Fixes bug in far branches on MIPS.

Also increases test coverage of far branches on
ARM and MIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//107293008
------------------------------------------------------------------------
r31020 | fschneider@google.com | 2013-12-11 00:23:14 +0900 (水, 11 12月 2013) | 11 lines

VM: Generalize using propagated cids for to >1 arguments.

When ic-data are missing (optimized code that was not executed yet),
the compiler tries to fill in information calculated with type propagation.
The approach was only used for calls with 1 tested argument. This
enables it for all calls where we want to use propagated type
information if ic-data are missing.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//110703004
------------------------------------------------------------------------
r30996 | turnidge@google.com | 2013-12-10 04:47:23 +0900 (火, 10 12月 2013) | 44 lines

Add Instance::ToUserCString.

-----

Often ToCString returns a representation which would be weighty or
unsightly to users.  Instance::ToUserCString tries to return a
representation that will be more familiar to end users.

ToUserCString will be used in the vmservice to produce interesting
instance preview strings w/o calling toString.  No doubt we will find
other uses for it too.

For example, strings are represented more as they would be in a user
program, with quotes and escapes: ("this\nis\ta\n\ntest") instead of (this
is        a

test).

I intend to add better representations for short lists and maps
later, e.g. ([1,2]) instead of (Instance(length:2) of '_GrowableList').
I've added some tests to track current behavior.

Fix a problem where the vm internal names for private classes were
leaking out through ToCString.  This is problematic because Dart's
default toString relies on ToCString (which surprised me).  This fix
will be user-visible and, darn it, it's the right thing to do.  For
example, before toString (in Dart) might yield:

  Instance of '_MyPrivateClass@43df89GARBAGE4389'

Now it will yield:

  Instance of '_MyPrivateClass'

(as an aside, do those single-quotes around the class name add any
meaning here?)

Massage the output of ToString for GrowableObjectArray to be more
consistent with other instance ToString output.  This should not be user
visible, as lists define a reasonable toString.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//100833005
------------------------------------------------------------------------
r30970 | hausner@google.com | 2013-12-07 07:06:15 +0900 (土, 07 12月 2013) | 8 lines

Fix source location of mixins in stack trace

We need to use the origin library, not the owner library,
for the source location of functions. This fixes issue 15185.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//108903002
------------------------------------------------------------------------
r30909 | hausner@google.com | 2013-12-06 04:15:00 +0900 (金, 06 12月 2013) | 9 lines

Fix assignable syntax analysis

My previous change has a bug in it that I didn’t trip over
because I ran test with a version that masked the assertion with
a compilation error.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//107023002
------------------------------------------------------------------------
r30904 | hausner@google.com | 2013-12-06 03:15:21 +0900 (金, 06 12月 2013) | 18 lines

Detect illegal assignable expressions

The AST cannot distinguish between (x) and x. Adding a check
to the VM compiler that detects syntactically illegal assignments
like (x) = 0. The existing checks only analyze the AST so we
didn’t detect some illegal cases.

Looking at the source to detect syntactically illegal left hand
expressions is a bit ugly because we can’t easily look at
previous tokens. This change rewinds the token iterator a few
positions and then moves forward to check whether the last token
of the expression is an identifier or a closing bracket ].

Added new test. We did not have a single test case for this :)

R=regis@google.com

Review URL: https://codereview.chromium.org//106843002
------------------------------------------------------------------------
r30887 | fschneider@google.com | 2013-12-05 20:17:06 +0900 (木, 05 12月 2013) | 10 lines

Small cleanup and more test coverage for guarded fields.

Some cases of field guards for guarded length  were not covered by our tests.

Otherwise I removed redundant conditions that are either impossible
or always true from the code generator for GuardFieldInstr.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//104583002
------------------------------------------------------------------------
r30849 | kmillikin@google.com | 2013-12-04 19:37:01 +0900 (水, 04 12月 2013) | 9 lines

Remove extraneous assembly comment.

It is not necessary to have a comment at deferred code for each live
floating-point register.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//104143003
------------------------------------------------------------------------
r30846 | fschneider@google.com | 2013-12-04 19:32:43 +0900 (水, 04 12月 2013) | 14 lines

Mark native functions when they are created.

Until now the parser marked native functions as native when parsing.

This may be too late for some functions. E.g. the native typed list
constructor may not be invoked because the intrinsic code is executed
instead (unless for example new-space allocation fails).

This causes missing type information when optimizing functions using
those recognized factory functions like Uint8List._new.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//99373002
------------------------------------------------------------------------
r30829 | srdjan@google.com | 2013-12-04 07:07:16 +0900 (水, 04 12月 2013) | 3 lines

Removed debuggging printf.

Review URL: https://codereview.chromium.org//102213003
------------------------------------------------------------------------
r30827 | srdjan@google.com | 2013-12-04 07:00:27 +0900 (水, 04 12月 2013) | 6 lines

Merge sin(a), cos(a) into one instruction. On IA32 use x87 fsincos operation, on x64 call runtime routine whihc merges sin/cos intos sincos.
TODO: Implement for ARM and MIPS.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//92433002
------------------------------------------------------------------------
r30823 | hausner@google.com | 2013-12-04 04:19:54 +0900 (水, 04 12月 2013) | 8 lines

VM debugger: fix closures in mixed-in functions

Avoid assertion in debugger when compiling closures in mixin
functions.

R=asiva@google.com

Review URL: https://codereview.chromium.org//102453002
------------------------------------------------------------------------
r30737 | johnmccutchan@google.com | 2013-11-28 07:21:22 +0900 (木, 28 11月 2013) | 5 lines

Disable profiler

BUG=

Review URL: https://codereview.chromium.org//92953002
------------------------------------------------------------------------
r30733 | johnmccutchan@google.com | 2013-11-28 06:51:02 +0900 (木, 28 11月 2013) | 6 lines

Switch SetupIsolateForProfiling to use calloc instead of new []

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//92513002
------------------------------------------------------------------------
r30732 | johnmccutchan@google.com | 2013-11-28 04:54:52 +0900 (木, 28 11月 2013) | 6 lines

List scripts in library and display script source

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//59283007
------------------------------------------------------------------------
r30728 | johnmccutchan@google.com | 2013-11-28 03:03:20 +0900 (木, 28 11月 2013) | 5 lines

Fix race discovered by Valgrind

R=asiva@google.com

Review URL: https://codereview.chromium.org//92123002
------------------------------------------------------------------------
r30688 | srdjan@google.com | 2013-11-27 09:11:32 +0900 (水, 27 11月 2013) | 5 lines

Rename FinalizeTypeHierarchy to ProcessPendingClasses.

R=regis@google.com

Review URL: https://codereview.chromium.org//83983004
------------------------------------------------------------------------
r30686 | johnmccutchan@google.com | 2013-11-27 08:46:27 +0900 (水, 27 11月 2013) | 7 lines

Support Bigint parameters in Int32x4 constructor

https://code.google.com/p/dart/issues/detail?id=15130

R=srdjan@google.com

Review URL: https://codereview.chromium.org//88983004
------------------------------------------------------------------------
r30680 | johnmccutchan@google.com | 2013-11-27 07:03:58 +0900 (水, 27 11月 2013) | 5 lines

Disable profiler on Windows

TBR

Review URL: https://codereview.chromium.org//88943004
------------------------------------------------------------------------
r30673 | srdjan@google.com | 2013-11-27 03:18:24 +0900 (水, 27 11月 2013) | 5 lines

Use range information to omit checks in TRUNCDIV/MOD operations.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//81623003
------------------------------------------------------------------------
r30669 | johnmccutchan@google.com | 2013-11-26 23:28:47 +0900 (火, 26 11月 2013) | 5 lines

Guard against profiler shutdown race

In response to: https://codereview.chromium.org/87643003/

Review URL: https://codereview.chromium.org//88403002
------------------------------------------------------------------------
r30666 | ajohnsen@google.com | 2013-11-26 18:41:19 +0900 (火, 26 11月 2013) | 12 lines

Disable profiler, as profiler shutdown is racing with isolates.

Some tests using isolates, crashes with the following assertion error:

  runtime/vm/profiler.cc:237: error: expected: initialized_

It turns out that ProfileManager::Shutdown is called, while there are still isolates running. The comment in runtime/vm/dart.cc:152 seams to explain the issue.

BUG=
R=sgjesse@google.com

Review URL: https://codereview.chromium.org//87643003
------------------------------------------------------------------------
r30655 | johnmccutchan@google.com | 2013-11-26 09:48:09 +0900 (火, 26 11月 2013) | 3 lines

Ensure profiler manager thread has shutdown before main thread

Review URL: https://codereview.chromium.org//86793002
------------------------------------------------------------------------
r30647 | johnmccutchan@google.com | 2013-11-26 07:06:33 +0900 (火, 26 11月 2013) | 7 lines

- Fix MonitorData ASSERT failure in thread_win:
E:\b\build\slave\vm-win32-debug-russian-be\build\dart\runtime\platform/thread_win.h:66: error: expected: next_ == NULL.
- Reduce sample buffer size by an order of magnitude (this should fix .
- Disable profiler on simulators.
- Only sample when scheduled thread id matches current thread id.

Review URL: https://codereview.chromium.org//85333006
------------------------------------------------------------------------
r30642 | iposva@google.com | 2013-11-26 05:47:21 +0900 (火, 26 11月 2013) | 5 lines

- Add missing header file to vm_sources.gypi.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//86193004
------------------------------------------------------------------------
r30636 | rmacnak@google.com | 2013-11-26 03:31:20 +0900 (火, 26 11月 2013) | 6 lines

Add demangle utility to Dartium's dart:html. Demangle typedef names in UserVisibleName.

BUG=http://dartbug.com/14892
R=asiva@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//79023010
------------------------------------------------------------------------
r30633 | johnmccutchan@google.com | 2013-11-26 00:41:10 +0900 (火, 26 11月 2013) | 5 lines

Always update scheduled thread id

TBR

Review URL: https://codereview.chromium.org//84993005
------------------------------------------------------------------------
r30622 | fschneider@google.com | 2013-11-25 21:57:21 +0900 (月, 25 11月 2013) | 12 lines

Generalize if-conversion to arbitrary smi comparisons.

Until now only == and != comparisons were supported.

Further changes are:
 Remove flag FLAG_new_identity_spec: It is not needed anymore.
 Invoke Canonicalize another time before branch optimizations.
 Fixes support for TestSmiInstr with the branch-simplifier pass.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//78733002
------------------------------------------------------------------------
r30608 | johnmccutchan@google.com | 2013-11-25 10:42:50 +0900 (月, 25 11月 2013) | 5 lines

Guard against an isolate being scheduled twice

TBR

Review URL: https://codereview.chromium.org//83623004
------------------------------------------------------------------------
r30607 | johnmccutchan@google.com | 2013-11-25 08:33:41 +0900 (月, 25 11月 2013) | 8 lines

- SetupIsolateForProfiling before SetCurrent is called on an isolate for the first time.
- ProfilerManager::Shutdown no longer frees isolate profiling data for registered isolates. Each isolate will free its own data when shutdown.
- Fix monitor timeout test to disable signal delivery.
- Do not walk the call stack in signal handler.

TBR

Review URL: https://codereview.chromium.org//84813002
------------------------------------------------------------------------
r30604 | zra@google.com | 2013-11-24 04:09:23 +0900 (日, 24 11月 2013) | 11 lines

Fixes FindCodeObject test.

After enabling GC of unoptimized code, functions cannot be
used as proxies for unoptimized code. This change, creates
ZoneHanldes for compiled code in the FindCodeObject test,
so that later when functions are used to refer to code,
we can be sure that the code will be there.

TBR: iposva

Review URL: https://codereview.chromium.org//82713009
------------------------------------------------------------------------
r30603 | johnmccutchan@google.com | 2013-11-24 01:20:41 +0900 (日, 24 11月 2013) | 5 lines

Implement PC, FP, and SP getters on Linux ARM

TBR

Review URL: https://codereview.chromium.org//84123006
------------------------------------------------------------------------
r30602 | johnmccutchan@google.com | 2013-11-23 09:26:35 +0900 (土, 23 11月 2013) | 8 lines

- Fix shutdown race.
- Move signal blocking out of dart.cc and isolate.cc and into profiler.cc.
- Nest scope objects explicitly.
- Add missing signal block in ProfilerManager::ShutdownIsolateForProfiling.

R=iposva@google.com

Review URL: https://codereview.chromium.org//83093004
------------------------------------------------------------------------
r30600 | zra@google.com | 2013-11-23 09:17:28 +0900 (土, 23 11月 2013) | 14 lines

Fixes a couple problems with GC of unoptimized code.

1. Instead of making a pass before the Marking phase,
   this change does not visit code pointers in functions
   during marking. Then after marking, if the code has
   still not been marked, code pointers in functions
   are nulled out.
2. Since code pointers in functions may be nulled out,
   functions are no longer used as proxies for code in
   deoptimization info.

R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//70183010
------------------------------------------------------------------------
r30596 | turnidge@google.com | 2013-11-23 08:02:11 +0900 (土, 23 11月 2013) | 5 lines

Add field and function view for libraries.  Rough cut.

R=iposva@google.com

Review URL: https://codereview.chromium.org//82793004
------------------------------------------------------------------------
r30587 | zra@google.com | 2013-11-23 06:53:14 +0900 (土, 23 11月 2013) | 5 lines

Removes obsolete MIPS ifdef from FindCodeObject test.

R=regis@google.com

Review URL: https://codereview.chromium.org//84073003
------------------------------------------------------------------------
r30582 | srdjan@google.com | 2013-11-23 02:59:23 +0900 (土, 23 11月 2013) | 7 lines

Do not eagerly finalize classes in CHA, instead regard unfinalized classes as ’non-existent’ and only invalidate optimized code at finalization of the class.
Rename FinalizePendingClasses to FinalizePendingClassInterfaces as the class finalization occurs lazily.
TODO: add dependency information to deoptimize/remove only relevant optimized code.

R=regis@google.com

Review URL: https://codereview.chromium.org//81333003
------------------------------------------------------------------------
r30559 | johnmccutchan@google.com | 2013-11-22 09:57:24 +0900 (金, 22 11月 2013) | 5 lines

Disable profiler

TBR

Review URL: https://codereview.chromium.org//82343002
------------------------------------------------------------------------
r30558 | iposva@google.com | 2013-11-22 09:41:11 +0900 (金, 22 11月 2013) | 3 lines

- Update use of kPageSize in ifdef'd MIPS code.

Review URL: https://codereview.chromium.org//82293002
------------------------------------------------------------------------
r30557 | iposva@google.com | 2013-11-22 08:48:41 +0900 (金, 22 11月 2013) | 5 lines

- Convert HeapPages to use word sizes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//81923002
------------------------------------------------------------------------
r30555 | zra@google.com | 2013-11-22 08:18:53 +0900 (金, 22 11月 2013) | 5 lines

Pushes 0 for PC marker in runtime call stubs on ARM and MIPS.

R=iposva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//77413004
------------------------------------------------------------------------
r30546 | regis@google.com | 2013-11-22 06:30:51 +0900 (金, 22 11月 2013) | 5 lines

Improve type test and type equality for generics (issue 15148).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//81363002
------------------------------------------------------------------------
r30545 | johnmccutchan@google.com | 2013-11-22 06:30:19 +0900 (金, 22 11月 2013) | 5 lines

Disable native symbol resolver on WindowsDisable native symbol resolver on Windows

TBR

Review URL: https://codereview.chromium.org//81513004
------------------------------------------------------------------------
r30536 | srdjan@google.com | 2013-11-22 02:56:54 +0900 (金, 22 11月 2013) | 5 lines

Merge TRUNCDIV and MOD into one instruction. Icorporated feedback from CL https://codereview.chromium.org/68663003

R=fschneider@google.com

Review URL: https://codereview.chromium.org//79653002
------------------------------------------------------------------------
r30533 | iposva@google.com | 2013-11-22 02:26:22 +0900 (金, 22 11月 2013) | 9 lines

- Ensure that classes are finalized before their description is
  being generated for the observatory.
- Reset the state that a class is being currently parsed.
- Move the deployed polymer app to a location where it is not
  being overwritten by the tools.
- Do not rely on Dart SDK binaries being in your path.
- Check for errors when invoking dart2js as part of build.dart.

Review URL: https://codereview.chromium.org//77043010
------------------------------------------------------------------------
r30529 | zra@google.com | 2013-11-22 01:41:02 +0900 (金, 22 11月 2013) | 5 lines

Fixes ARM SIMD vabsqs instruction in the simulator.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//77553008
------------------------------------------------------------------------
r30496 | ajohnsen@google.com | 2013-11-21 15:12:01 +0900 (木, 21 11月 2013) | 6 lines

Add optimized String.fromCharCodes path for Uint8List and Int8List.

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//74423005
------------------------------------------------------------------------
r30491 | rmacnak@google.com | 2013-11-21 09:11:31 +0900 (木, 21 11月 2013) | 5 lines

Fix crash evaluating metadata with super in a const constructor argument.

R=hausner@google.com

Review URL: https://codereview.chromium.org//76963003
------------------------------------------------------------------------
r30489 | rmacnak@google.com | 2013-11-21 08:48:24 +0900 (木, 21 11月 2013) | 3 lines

Revert "De-mangle private identifiers returned by the debugger API."

Review URL: https://codereview.chromium.org//79773003
------------------------------------------------------------------------
r30488 | johnmccutchan@google.com | 2013-11-21 08:42:15 +0900 (木, 21 11月 2013) | 5 lines

Disable profiler

TBR

Review URL: https://codereview.chromium.org//79783002
------------------------------------------------------------------------
r30478 | johnmccutchan@google.com | 2013-11-21 02:57:56 +0900 (木, 21 11月 2013) | 5 lines

Attempt at enabling profiler

BUG=

Review URL: https://codereview.chromium.org//78713003
------------------------------------------------------------------------
r30442 | lrn@google.com | 2013-11-20 18:14:30 +0900 (水, 20 11月 2013) | 9 lines

Fix VM not accepting static methods for Isolate.spawn.

BUG= http://dartbug.com/3011

Committed: https://code.google.com/p/dart/source/detail?r=30300

R=iposva@google.com

Review URL: https://codereview.chromium.org//68813002
------------------------------------------------------------------------
r30436 | rmacnak@google.com | 2013-11-20 10:40:17 +0900 (水, 20 11月 2013) | 6 lines

De-mangle private identifiers returned by the debugger API.

BUG=http://dartbug.com/14892
R=asiva@google.com

Review URL: https://codereview.chromium.org//76423004
------------------------------------------------------------------------
r30433 | rmacnak@google.com | 2013-11-20 10:21:22 +0900 (水, 20 11月 2013) | 7 lines

Remove an invalid assert in converting a dart.core.Stacktrace to a debugger stacktrace.

Fixes an Aw, Snap when trying to debug an OutOfMemory error on debug builds of Dartium.

R=asiva@google.com

Review URL: https://codereview.chromium.org//76653004
------------------------------------------------------------------------
r30431 | johnmccutchan@google.com | 2013-11-20 09:14:40 +0900 (水, 20 11月 2013) | 5 lines

Fix Android build ?

BUG=

Review URL: https://codereview.chromium.org//76723003
------------------------------------------------------------------------
r30430 | srdjan@google.com | 2013-11-20 08:43:40 +0900 (水, 20 11月 2013) | 5 lines

Better printing of MathUnaryInstr.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//68643009
------------------------------------------------------------------------
r30429 | johnmccutchan@google.com | 2013-11-20 08:39:26 +0900 (水, 20 11月 2013) | 5 lines

Android build

BUG=

Review URL: https://codereview.chromium.org//76883002
------------------------------------------------------------------------
r30428 | johnmccutchan@google.com | 2013-11-20 08:25:28 +0900 (水, 20 11月 2013) | 5 lines

Fix Android build and disable profiler

TBR

Review URL: https://codereview.chromium.org//64363003
------------------------------------------------------------------------
r30424 | johnmccutchan@google.com | 2013-11-20 07:14:43 +0900 (水, 20 11月 2013) | 5 lines

Always use the isolate's stack range. The SP register value from the signal handler context may be in kernel space and cannot be used to narrow the safe stack range.

TBR

Review URL: https://codereview.chromium.org//76563004
------------------------------------------------------------------------
r30420 | johnmccutchan@google.com | 2013-11-20 04:11:41 +0900 (水, 20 11月 2013) | 5 lines

Post landing fixes

TBR

Review URL: https://codereview.chromium.org//65983005
------------------------------------------------------------------------
r30419 | johnmccutchan@google.com | 2013-11-20 03:26:10 +0900 (水, 20 11月 2013) | 6 lines

Sampling profiler

BUG=4350
R=asiva@google.com

Review URL: https://codereview.chromium.org//25909002
------------------------------------------------------------------------
r30414 | fschneider@google.com | 2013-11-19 22:50:55 +0900 (火, 19 11月 2013) | 6 lines

Move and clean up some class declarations in intermediate_language.h.

This way definitions of inline methods in BranchInstr can reside inside
the class declarations.

Review URL: https://codereview.chromium.org//59873010
------------------------------------------------------------------------
r30397 | kmillikin@google.com | 2013-11-19 20:37:11 +0900 (火, 19 11月 2013) | 13 lines

Use the VM's graph builder nesting stack for loop depth and context level.

Use the code's nesting to maintain the context level rather than explicitly
tracking it in the graph builder.  Nested blocks know their scope and the
nesting stack can be searched to find the current context level.

Nested loops now increment and decrement the graph builder's loop depth
while they are on the nesting stack, though the loop depth state is still
kept in the graph builder itself.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//63903005
------------------------------------------------------------------------
r30393 | fschneider@google.com | 2013-11-19 19:38:37 +0900 (火, 19 11月 2013) | 10 lines

Remove dead code from IfThenElse and StrictCompare in the compiler.

The code for these cases is either completely unused or can only be hit with
canonicalization and constant propagation turned off. Since this is not tested,
and does not bring any performance benefit for the default configuration it is
best to just remove it.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//62203018
------------------------------------------------------------------------
r30385 | rmacnak@google.com | 2013-11-19 10:02:26 +0900 (火, 19 11月 2013) | 6 lines

Handle undefined field/getter access from arguments to const constructors in metadata, and related problematic cases.

BUG=http://dartbug.com/13817
R=hausner@google.com

Review URL: https://codereview.chromium.org//68333007
------------------------------------------------------------------------
r30383 | regis@google.com | 2013-11-19 08:31:12 +0900 (火, 19 11月 2013) | 6 lines

Distinguish between malformed and malbounded types more efficiently using the
recently introduced LanguageError 'kind' field.

R=hausner@google.com

Review URL: https://codereview.chromium.org//75713002
------------------------------------------------------------------------
r30367 | srdjan@google.com | 2013-11-19 03:56:23 +0900 (火, 19 11月 2013) | 5 lines

Remove intrinsified version of fsin, fcos. The optimized code calls into runtime, which may use different way to compute sin/cos.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//75203003
------------------------------------------------------------------------
r30339 | fschneider@google.com | 2013-11-18 21:30:03 +0900 (月, 18 11月 2013) | 5 lines

Add another internal function to the list of invisible functions.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//75183002
------------------------------------------------------------------------
r30336 | kmillikin@google.com | 2013-11-18 20:39:14 +0900 (月, 18 11月 2013) | 12 lines

Introduce a nesting stack to the flow graph builder.

Statically track nested blocks, loops, and switches while constructing
the flow graph.  Use the nesting stack as a mapping from source labels
(class SourceLabel) to their flow-graph targets (class JoinEntryInstr).

This removes the indirect dependence of the AST on the intermediate
language and the mutable compiler state from the AST.

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//71703002
------------------------------------------------------------------------
r30325 | iposva@google.com | 2013-11-16 09:17:52 +0900 (土, 16 11月 2013) | 5 lines

- Convert heap sizes to words from bytes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//70993002
------------------------------------------------------------------------
r30323 | rmacnak@google.com | 2013-11-16 08:42:23 +0900 (土, 16 11月 2013) | 6 lines

Add an API function to get a debugger stack trace from an error handle.

BUG=http://dartbug.com/14322
R=asiva@google.com

Review URL: https://codereview.chromium.org//51793002
------------------------------------------------------------------------
r30321 | rmacnak@google.com | 2013-11-16 07:44:44 +0900 (土, 16 11月 2013) | 5 lines

Drop "Impl" suffix from local mirror class names.

R=asiva@google.com

Review URL: https://codereview.chromium.org//63393003
------------------------------------------------------------------------
r30308 | regis@google.com | 2013-11-16 03:54:24 +0900 (土, 16 11月 2013) | 5 lines

Lazily format LanguageError messages (fix issue 15069).

R=iposva@google.com

Review URL: https://codereview.chromium.org//68113028
------------------------------------------------------------------------
r30302 | lrn@google.com | 2013-11-15 20:28:23 +0900 (金, 15 11月 2013) | 9 lines

Make SendPortImpl_internalSend not take a reply port as argument.

The reply port is still there in the internal Message structure,
where it is used by control messages.

BUG= http://dartbug.com/14731
R=fschneider@google.com

Review URL: https://codereview.chromium.org//73783002
------------------------------------------------------------------------
r30301 | lrn@google.com | 2013-11-15 20:23:47 +0900 (金, 15 11月 2013) | 5 lines

Revert "Fix VM not accepting static methods for Isolate.spawn."

Comitted by mistake.

Review URL: https://codereview.chromium.org//73893004
------------------------------------------------------------------------
r30300 | lrn@google.com | 2013-11-15 19:28:32 +0900 (金, 15 11月 2013) | 5 lines

Fix VM not accepting static methods for Isolate.spawn.

BUG= http://dartbug.com/3011

Review URL: https://codereview.chromium.org//68813002
------------------------------------------------------------------------
r30293 | hausner@google.com | 2013-11-15 07:19:23 +0900 (金, 15 11月 2013) | 3 lines

Address comment from vm-based keyword symbols CL

Review URL: https://codereview.chromium.org//64273012
------------------------------------------------------------------------
r30289 | hausner@google.com | 2013-11-15 04:42:14 +0900 (金, 15 11月 2013) | 5 lines

Add closure object type to debugger wire protocol

R=devoncarew@google.com

Review URL: https://codereview.chromium.org//61153006
------------------------------------------------------------------------
r30285 | hausner@google.com | 2013-11-15 04:14:16 +0900 (金, 15 11月 2013) | 8 lines

Add Dart keyword symbols to the VM isolate

Remove the keyword symbol table from object store, and remove
keyword table initialization from Scanner constructor.

R=regis@google.com

Review URL: https://codereview.chromium.org//72923002
------------------------------------------------------------------------
r30280 | rmacnak@google.com | 2013-11-15 03:37:50 +0900 (金, 15 11月 2013) | 5 lines

Filter frames from debugger stack based on visibility rather than "debuggability" (steppability).

R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//68113019
------------------------------------------------------------------------
r30277 | regis@google.com | 2013-11-15 02:42:39 +0900 (金, 15 11月 2013) | 5 lines

Rename mixin typedef to mixin application alias in VM.

R=hausner@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//71693003
------------------------------------------------------------------------
r30250 | regis@google.com | 2013-11-14 05:58:17 +0900 (木, 14 11月 2013) | 7 lines

Do not skip unfinalized interfaces while checking type bounds at finalization
time (fix issue 14721).
Fix BoundedType::ToCString() to handle a null type parameter.

R=hausner@google.com

Review URL: https://codereview.chromium.org//68113013
------------------------------------------------------------------------
r30243 | fschneider@google.com | 2013-11-14 03:21:27 +0900 (木, 14 11月 2013) | 16 lines

Streamline code generator for branches and comparisons.

This is another refactoring step. It turn all comparisons
 to be generated after the same pattern and removes duplicated
 code from each of the different comparisons (smi, mint, double, etc.)

A comparison as an expression now follows the same patterns as a comparison
inside a branch. It just adds a common epilogue to materialize the boolean
result.

In another CL this common epilogue will be generated by reusing the IfThenElse
IL instruction.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//64483002
------------------------------------------------------------------------
r30239 | johnmccutchan@google.com | 2013-11-14 03:09:41 +0900 (木, 14 11月 2013) | 6 lines

Add ability for Function to generate source

BUG=
R=hausner@google.com

Review URL: https://codereview.chromium.org//60993002
------------------------------------------------------------------------
r30237 | johnmccutchan@google.com | 2013-11-14 02:49:50 +0900 (木, 14 11月 2013) | 5 lines

TraceBuffer implementation with tests

R=iposva@google.com

Review URL: https://codereview.chromium.org//50413003
------------------------------------------------------------------------
r30234 | fschneider@google.com | 2013-11-14 01:22:58 +0900 (木, 14 11月 2013) | 12 lines

Fix bug with deoptimization targets.

In the second pass of inserting representation conversions (SelectRepresentations)
we may insert sequences of Unbox/Box instructions that are eliminated
by canonicalization later. However, inserting conversions requires a deoptimization id as
deoptimization target. Return kNoDeoptId for Box-instructions since they don't need a real
deoptimization target.

BUG=dartbug.com/14808
R=srdjan@google.com

Review URL: https://codereview.chromium.org//71373005
------------------------------------------------------------------------
r30233 | srdjan@google.com | 2013-11-14 01:01:41 +0900 (木, 14 11月 2013) | 5 lines

Fixes issue 14742. Dart API may allocate objects without calling the constructor, this messes up the nullability tracking in the VM. Simple fix for now: initialize fields nullability, type, length if allocated via Dart API.

R=asiva@google.com

Review URL: https://codereview.chromium.org//70983002
------------------------------------------------------------------------
r30232 | fschneider@google.com | 2013-11-14 00:57:26 +0900 (木, 14 11月 2013) | 5 lines

Constant propagation support for type asserts.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//70133004
------------------------------------------------------------------------
r30227 | kmillikin@google.com | 2013-11-13 23:08:11 +0900 (水, 13 11月 2013) | 10 lines

Simplify the desugaring of catch clauses.

Rather than if/then/continue (where the continue does not match the
semantics of Dart's continue), use if/then/else.  This removes the
unnecessary goto and label as a step toward streamlining support for
jumping in the compiler backend.

R=hausner@google.com

Review URL: https://codereview.chromium.org//63983005
------------------------------------------------------------------------
r30204 | iposva@google.com | 2013-11-13 04:43:44 +0900 (水, 13 11月 2013) | 5 lines

- Fix string conversion warnings.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//70613002
------------------------------------------------------------------------
r30178 | rmacnak@google.com | 2013-11-12 08:08:38 +0900 (火, 12 11月 2013) | 5 lines

Ensure constructorName symbols include private manglings.

R=asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//53883002
------------------------------------------------------------------------
r30177 | regis@google.com | 2013-11-12 07:59:48 +0900 (火, 12 11月 2013) | 7 lines

Check type bounds of redirecting factories (issue 14699).
Add tests for malbounded redirecting factories.
Clean up bound checking code and type error reporting code.

R=hausner@google.com

Review URL: https://codereview.chromium.org//66033006
------------------------------------------------------------------------
r30162 | hausner@google.com | 2013-11-12 03:22:05 +0900 (火, 12 11月 2013) | 7 lines

Add Dart_GetClosureInfo

Will be used by debugger wire protocol.

R=regis@google.com

Review URL: https://codereview.chromium.org//65383007
------------------------------------------------------------------------
r30153 | fschneider@google.com | 2013-11-11 22:01:54 +0900 (月, 11 11月 2013) | 9 lines

Cleanup of code generation for StrictCompare.

The case of two constant operands does not occur unless certain optimizations
are turned off. It is not necessary to have a special handling in the code
generator for this case.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//60883003
------------------------------------------------------------------------
r30124 | asiva@google.com | 2013-11-09 04:40:07 +0900 (土, 09 11月 2013) | 6 lines

ARM and MIPS changes which correspond to the initial change submitted in
https://codereview.chromium.org/63093003/

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//62953014
------------------------------------------------------------------------
r30120 | rmacnak@google.com | 2013-11-09 02:54:59 +0900 (土, 09 11月 2013) | 7 lines

Use the runtime for generic subsitution of variable types, return types, parameter types.

BUG=http://dartbug.com/14613
BUG=http://dartbug.com/14156
R=gbracha@google.com, regis@google.com

Review URL: https://codereview.chromium.org//62273003
------------------------------------------------------------------------
r30119 | srdjan@google.com | 2013-11-09 02:42:45 +0900 (土, 09 11月 2013) | 5 lines

Constant fold strict comparison based on incoming types: different (exact) types means that the result is false. LoadStaticField computes type for final fields. Make a temporary buffer final.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//57703004
------------------------------------------------------------------------
r30098 | asiva@google.com | 2013-11-08 13:23:08 +0900 (金, 08 11月 2013) | 3 lines

Fix build break.

Review URL: https://codereview.chromium.org//63753003
------------------------------------------------------------------------
r30097 | asiva@google.com | 2013-11-08 11:41:03 +0900 (金, 08 11月 2013) | 3 lines

Fix build break on the bots.

Review URL: https://codereview.chromium.org//63993003
------------------------------------------------------------------------
r30088 | asiva@google.com | 2013-11-08 09:25:40 +0900 (金, 08 11月 2013) | 14 lines

Fix for issue 14790 - Crash when using dartium devtools

The stack frame iteration during GC was missing one slot in stub frames that
did not save the pool pointer.

- This change makes all stub frames uniform, i.e they always save/restore the pool pointer. This ensures that we will traverse all slots on the stack.

- A new constant called kFirstObjectSlotFromFp has been added which is used as the slot to start stack traversal.

(The ARM and MIPs changes will be in a different CL)

R=iposva@google.com, regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//63093003
------------------------------------------------------------------------
r30080 | hausner@google.com | 2013-11-08 07:43:07 +0900 (金, 08 11月 2013) | 8 lines

Fix breakpoints in mixin methods

When a function is compiled that originates from a mixing class, we
must use the original function to check for pending breakpoints.

Fixes issue 12361

Review URL: https://codereview.chromium.org//65343002
------------------------------------------------------------------------
r30075 | srdjan@google.com | 2013-11-08 06:50:26 +0900 (金, 08 11月 2013) | 5 lines

Inline integer modulo operation.

R=zra@google.com

Review URL: https://codereview.chromium.org//61123003
------------------------------------------------------------------------
r30063 | turnidge@google.com | 2013-11-08 03:53:28 +0900 (金, 08 11月 2013) | 15 lines

Deoptimize closure functions in DeoptimizeWorld. This was causing
some breakpoints to be skipped when set in optimized closure
functions.

Update implicit_closure_function() to always return null for
factories. Factories use the shared data_ field for another purpose.
This fixes an assertion failure when HasImplicitClosureFunciton is
called for a factory.

Add a TODO for an assertion failure in Class::Name which is not in the
scope of this change.

(patched from an earlier review)

Review URL: https://codereview.chromium.org//64173005
------------------------------------------------------------------------
r30058 | fschneider@google.com | 2013-11-08 02:27:16 +0900 (金, 08 11月 2013) | 10 lines

VM: Fix identical comparisons with bigints.

The optimizing compiler did not properly preserve registers across
the runtime call that occurs when using identical with bigints.

BUG=http://dartbug.com/14903
TEST=tests/language/vm/regress_14903_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//64723002
------------------------------------------------------------------------
r30042 | fschneider@google.com | 2013-11-07 20:47:04 +0900 (木, 07 11月 2013) | 31 lines

Cleanup of branch code generation (no change in functionality).

This CL is the first step in refactoring the way branches and comparisons
are generated.

1. Move helper functions from flow_graph_compiler_xyz.cc to
intermediate_language_xyz.cc.

2. Remove IL class ControlInstruction. It was only implemented by BranchInstr.
All functions provided are moved to BranchInstr.

3. When generating branch code for comparisons, pass the successor labels explicitly
instead of getting them from the branch. This will allow us to provide different labels
when materialize a bool value of a comparison.

4. Move some common code for IfThenElseInstr from the platform-specific files
into intermediate_language.cc and simplify it.

The goal is to enable if-conversion of arbitrary comparisons. Right now,
the code for == is hard-coded in IfThenElseInstr (and duplicated, too). This
means that e.g. "a < b ? 0 : 1" cannot be optimized.

As a result, IfThenElseInstr can be used to materialize the boolean  value of
a comparison. This way the complication of having ComparisonInstr both as a
normal instruction and as wrapped inside a BranchInstr can be simplified.
Comparisons would no longer appear as plain instructions in the IL, but only
wrapped inside either a Branch or an IfThenElse(true, false).

R=zra@google.com

Review URL: https://codereview.chromium.org//62133002
------------------------------------------------------------------------
r30021 | asiva@google.com | 2013-11-07 09:52:24 +0900 (木, 07 11月 2013) | 5 lines

Temporary fix for Bug 14790 Use EnterStubFrameWithPP for breakpoint handler stubs that have result objects on the stack.

R=iposva@google.com

Review URL: https://codereview.chromium.org//59073012
------------------------------------------------------------------------
r30012 | johnmccutchan@google.com | 2013-11-07 08:47:54 +0900 (木, 07 11月 2013) | 6 lines

Take representation into account in ConstantPropagator::VisitInstanceOfInstr

BUG=
R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//25604003
------------------------------------------------------------------------
r30003 | hausner@google.com | 2013-11-07 07:07:31 +0900 (木, 07 11月 2013) | 8 lines

Fix try-catch for sure

Fix scoping of user-defined exception and stack trace variables in
catch clause.

R=regis@google.com

Review URL: https://codereview.chromium.org//63033003
------------------------------------------------------------------------
r29985 | fschneider@google.com | 2013-11-07 03:28:37 +0900 (木, 07 11月 2013) | 11 lines

VM: Fix double comparisons using != and NaN in optimized code.

With a double x

x == double.NAN should false and x != double.NAN should be true.

TEST=tests/language/double_nan_comparison_test.dart
BUG=https://code.google.com/p/dart/issues/detail?id=14867
R=srdjan@google.com

Review URL: https://codereview.chromium.org//62443002
------------------------------------------------------------------------
r29966 | fschneider@google.com | 2013-11-06 21:13:29 +0900 (水, 06 11月 2013) | 14 lines

Merge (x & y) == 0 pattern to emit a single test instruction.

This is based on a previous uncommitted CL by vegorov@
(https://codereview.chromium.org/14251023/).

It is rebased and fixes a bug in the MIPS implementation: BranchOnCondition
requires the comparison result in fixed registers CMPRES1/CMPRES2.

Remove register alias TMP1 (=TMP) and CMPRES (=CMPRES1). It is confusing to
have them around and easy to forget that they are actually the same.

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//59613005
------------------------------------------------------------------------
r29964 | fschneider@google.com | 2013-11-06 20:02:34 +0900 (水, 06 11月 2013) | 8 lines

Avoid redundant assertion code in equality comparisons in checked mode.

The result of an equality operation only needs to be checked if it is
negated.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//57383006
------------------------------------------------------------------------
r29954 | hausner@google.com | 2013-11-06 10:21:32 +0900 (水, 06 11月 2013) | 8 lines

Undo change 29900

Undo a gratuitous change to the parser.

@kmillikin: please at least be courteous enough to ask one of the front-end
authors to review a change that is not a pressing issue, such as style preferences.

Review URL: https://codereview.chromium.org//61413002
------------------------------------------------------------------------
r29950 | iposva@google.com | 2013-11-06 09:59:46 +0900 (水, 06 11月 2013) | 11 lines

- Add a per-isolate pseudo random number generator to the
  VM internals. This PRNG is not used to generate random
  numbers in Dart code.
- Use the PRNG to generate JIT cookies for large constants
  if needed during assembly.
- Add the possibility to set an external entropy source
  for the PRNG through the C API.

R=asiva@google.com

Review URL: https://codereview.chromium.org//59773007
------------------------------------------------------------------------
r29949 | hausner@google.com | 2013-11-06 09:33:36 +0900 (水, 06 11月 2013) | 3 lines

Revert 29947

Review URL: https://codereview.chromium.org//60343006
------------------------------------------------------------------------
r29947 | hausner@google.com | 2013-11-06 09:05:25 +0900 (水, 06 11月 2013) | 9 lines

Fix scoping of catch clause variables

Fix recent regression in try-catch and fix scoping of exception
object and stack trace variable. Add test to ensure shadowing of
these variables is possible.

R=regis@google.com

Review URL: https://codereview.chromium.org//60943003
------------------------------------------------------------------------
r29933 | zra@google.com | 2013-11-06 05:45:25 +0900 (水, 06 11月 2013) | 5 lines

Impelments IfThenElse instruction for ARM and MIPS.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//58003003
------------------------------------------------------------------------
r29929 | srdjan@google.com | 2013-11-06 04:27:46 +0900 (水, 06 11月 2013) | 8 lines

In preparation of inlining remainder and modulo binary Smi operations:
- Add REM token
- Fix checking of function fingerprints.
- Remove unused intrinsic for remainder (the function gets inlined and intrinsic is not generated)

R=hausner@google.com

Review URL: https://codereview.chromium.org//59933004
------------------------------------------------------------------------
r29924 | regis@google.com | 2013-11-06 03:46:13 +0900 (水, 06 11月 2013) | 11 lines

Complete latest spec changes regarding malformed types (see issue 14006).
Update language tests and mark them as failing in dart2js as appropriate.
Mark a few co19 tests as failing.
Mark a dart2js test as failing due to unresolved types.

Unfortunately, https://codereview.chromium.org/53583003/ was uncomplete and
missed a few mappings of malformed types to dynamic.

R=hausner@google.com

Review URL: https://codereview.chromium.org//57133004
------------------------------------------------------------------------
r29914 | hausner@google.com | 2013-11-06 01:51:50 +0900 (水, 06 11月 2013) | 7 lines

boolean expressions with null are never potentially const

Fix issue 13394

R=srdjan@google.com

Review URL: https://codereview.chromium.org//49503009
------------------------------------------------------------------------
r29900 | kmillikin@google.com | 2013-11-05 21:49:14 +0900 (火, 05 11月 2013) | 12 lines

Clean up Parser::ParseTryStatement in the VM.

Streamline the implementation, factor out repeated code, rename some cryptic
identifiers, and fix a misspelling.

Also, disentangle an implicit include dependency: class_finalizer.cc was
getting code_generator.h implicitly from something included (unnecessarily
as it turns out) by parser.h.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//59683002
------------------------------------------------------------------------
r29889 | kmillikin@google.com | 2013-11-05 20:20:59 +0900 (火, 05 11月 2013) | 8 lines

Flatten the AST for try/catch.

Flatten a pair of blocks where the outer one is solely used to hold
the bindings of the parameters and to contain the inner one.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//59523002
------------------------------------------------------------------------
r29887 | fschneider@google.com | 2013-11-05 19:46:39 +0900 (火, 05 11月 2013) | 5 lines

Reland bug fix from r29800 for merging into branch.

TBR=

Review URL: https://codereview.chromium.org//59633002
------------------------------------------------------------------------
r29886 | fschneider@google.com | 2013-11-05 19:43:55 +0900 (火, 05 11月 2013) | 3 lines

Revert a bug fix included in r29800 to re-land it for merging.

Review URL: https://codereview.chromium.org//59623002
------------------------------------------------------------------------
r29873 | iposva@google.com | 2013-11-05 13:45:14 +0900 (火, 05 11月 2013) | 3 lines

- Avoid deep recursions when executing type tests.

Review URL: https://codereview.chromium.org//58923002
------------------------------------------------------------------------
r29865 | iposva@google.com | 2013-11-05 09:55:41 +0900 (火, 05 11月 2013) | 6 lines

Fix http://dartbug.com/14763
- Find main in the exported names of the root library.
- Unify how the main function is called from spawnUri
  and the initial isolate.

Review URL: https://codereview.chromium.org//48713013
------------------------------------------------------------------------
r29849 | johnmccutchan@google.com | 2013-11-05 06:56:59 +0900 (火, 05 11月 2013) | 5 lines

This is the final breaking change in dart:typed_data needed for Dart 1.0. We need this change because the ECMAScript SIMD specification only includes Int32x4 and Int32x4List and our types must match.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//56023004
------------------------------------------------------------------------
r29835 | hausner@google.com | 2013-11-05 03:53:58 +0900 (火, 05 11月 2013) | 8 lines

Compile time error on forward references to functions

Like variables, names of functions must not be referenced
before they are declared.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//49253006
------------------------------------------------------------------------
r29822 | iposva@google.com | 2013-11-05 02:27:11 +0900 (火, 05 11月 2013) | 5 lines

- Remove support for the non-used Dart_kLibraryTag in the C API.

R=asiva@google.com

Review URL: https://codereview.chromium.org//57663003
------------------------------------------------------------------------
r29818 | asiva@google.com | 2013-11-05 01:51:48 +0900 (火, 05 11月 2013) | 5 lines

Compute next field offset correctly.

R=iposva@google.com

Review URL: https://codereview.chromium.org//56033002
------------------------------------------------------------------------
r29815 | kmillikin@google.com | 2013-11-05 01:05:08 +0900 (火, 05 11月 2013) | 8 lines

Restore 0-based temporary index numbering in the VM compiler.

Compiler temporary indexes (used for printing) were inadvertently changed to
1-based numbering.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//57423003
------------------------------------------------------------------------
r29802 | kmillikin@google.com | 2013-11-04 20:58:14 +0900 (月, 04 11月 2013) | 5 lines

Fix VM compilation.

Compilation was broken by an unclean merge.

Review URL: https://codereview.chromium.org//57583003
------------------------------------------------------------------------
r29801 | kmillikin@google.com | 2013-11-04 20:48:45 +0900 (月, 04 11月 2013) | 8 lines

Move temp_index from the graph visitors to the graph builder.

This is the only bit of state that besides the current instruction
that is threaded through the visitors.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//55543003
------------------------------------------------------------------------
r29800 | fschneider@google.com | 2013-11-04 20:32:52 +0900 (月, 04 11月 2013) | 15 lines

Change == into an instance call to allow polymorphic inlining of ==.

In unoptimized code equality is now just another instance call.

The optimizer replaces it with a specialized implementation based on static
 type information and type feedback.

Many of the manual optimizations of == in the optimizer are now just handled
 by the generic inliner, plus polymorphic inlining of == calls is now possible.
This also eliminates the need for a lot of duplicated code in the backend.

I adapted the inlining heuristics to compensate for the slightly larger
inital flow graph size.

Review URL: https://codereview.chromium.org//27307005
------------------------------------------------------------------------
r29797 | fschneider@google.com | 2013-11-04 19:08:47 +0900 (月, 04 11月 2013) | 48 lines

VM: Fix initialization of statics in presence of exceptions.

In a static- or top-level variable v

var v = expr
static v = expr

If the initializer expression expr throws, the VM throws a
CyclicInitializationError when loading v afterwards, even though
this has nothing to do with cyclic initialization.

I'm changing the way implicit static getters and static initializers are
compiled. Static initializers are invoked from static getters.

They look as follows:

get:v {
  if (field.value === transition_sentinel) {
    field.value = null;
    throw new CyclicInitializationError();
  }
  if (field.value === sentinel) {
    field.value = transition_sentinel;
    init:v();
  }
  return field.value;
}


init:v {
  try {
    field.value = expr;
  } catch {
    if (field.value === transition_sentinel) {
      field.value = null;
    }
    rethrow;
  }
}

BUG=http://dartbug.com/5802
TEST=language/lazy_static3_test,
language/throwing_lazy_variable_test,
co19/Language/12_Expressions/30_Identifier_Reference_A08_t02

R=hausner@google.com

Review URL: https://codereview.chromium.org//54713003
------------------------------------------------------------------------
r29793 | kmillikin@google.com | 2013-11-04 17:12:12 +0900 (月, 04 11月 2013) | 7 lines

Remove some unused fields from class SourceLabel.

We no longer need assembler labels in the AST.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//55943002
------------------------------------------------------------------------
r29770 | hausner@google.com | 2013-11-02 06:28:31 +0900 (土, 02 11月 2013) | 16 lines

Compile time error if name is used before variable is declared

Implement proper semantics if a name has been referenced in a
block and later a variable with that same name is declared.

Fix library code that was wrong.

Add new language test, delete a couple of tests that are
outdated, file co19 bug 649.

Dart2js and dart2dart are not yet implementing these compile-time
errors.

R=iposva@google.com

Review URL: https://codereview.chromium.org//51533003
------------------------------------------------------------------------
r29741 | fschneider@google.com | 2013-11-01 19:39:09 +0900 (金, 01 11月 2013) | 13 lines

Fix bug with guarded fields and deserialization.

Since deserialization does not involve the normal object construction
procedure, any values written there won't be reflected in the guarded field
type. This results in incorrect optimized code because deoptimization of
dependent code objects in not triggered.

This CL adds tracking of field types and guarded list length when creating
objects via deserialization.

R=iposva@google.com

Review URL: https://codereview.chromium.org//50243004
------------------------------------------------------------------------
r29723 | johnmccutchan@google.com | 2013-11-01 16:09:54 +0900 (金, 01 11月 2013) | 5 lines

SIMD shuffle API changes

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//51373004
------------------------------------------------------------------------
r29720 | rmacnak@google.com | 2013-11-01 10:19:31 +0900 (金, 01 11月 2013) | 7 lines

Handle metadata with qualified identifiers.

BUG=http://dartbug.com/11857
BUG=http://dartbug.com/14652
R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//40863002
------------------------------------------------------------------------
r29717 | srdjan@google.com | 2013-11-01 08:09:43 +0900 (金, 01 11月 2013) | 5 lines

Cleanups.

R=regis@google.com

Review URL: https://codereview.chromium.org//53753003
------------------------------------------------------------------------
r29696 | asiva@google.com | 2013-11-01 05:41:59 +0900 (金, 01 11月 2013) | 5 lines

Cleanup StaticResolveType, it does not seem to be used anywhere.

R=regis@google.com

Review URL: https://codereview.chromium.org//50523018
------------------------------------------------------------------------
r29694 | rmacnak@google.com | 2013-11-01 05:36:32 +0900 (金, 01 11月 2013) | 8 lines

Raise an exception instead of crashing when attempting to pass a MirrorReference between isolates.

Fix warnings in isolate illegal values tests.

BUG=http://dartbug.com/14584
R=asiva@google.com

Review URL: https://codereview.chromium.org//51393002
------------------------------------------------------------------------
r29686 | srdjan@google.com | 2013-11-01 03:16:50 +0900 (金, 01 11月 2013) | 5 lines

Fix issue 14659: intrinsic method must check if the start, end arguments are Smi.

R=zra@google.com

Review URL: https://codereview.chromium.org//54463004
------------------------------------------------------------------------
r29683 | zra@google.com | 2013-11-01 02:32:06 +0900 (金, 01 11月 2013) | 5 lines

Fixing fingerprint.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//51113015
------------------------------------------------------------------------
r29680 | fschneider@google.com | 2013-11-01 01:49:55 +0900 (金, 01 11月 2013) | 14 lines

VM: Fix checked mode crash (issue 13831).

The AST for static getters differs between parsing the first time, and
subsequent parsings. This leads to a mismatch in deoptimization-ids
between the optimized and the unoptimized code.

This CL avoids creating different ASTs for the same static getters. To allow
better inlining of these getters, the initialization expression is wrapped in a
hidden static initializer-function. As a result the size of such getters is
constant and does not depend on the initializer expression.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//51123003
------------------------------------------------------------------------
r29674 | kmillikin@google.com | 2013-10-31 23:39:17 +0900 (木, 31 10月 2013) | 9 lines

Fix a bug in typecasts in the VM.

When a typecast is evaluated solely for its side effects and the check
is eliminated in the flow graph builder, the subexpression is not
evaluated.  This is wrong.  Fix by evaluating the subexpression.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//50293007
------------------------------------------------------------------------
r29642 | sgjesse@google.com | 2013-10-31 14:46:57 +0900 (木, 31 10月 2013) | 20 lines

Implement fromEnvironment on bool, int and String

This implements const constructor fromEnvironment on bool, int and
String.

The VM have the added -Dname=value option to define the value for the
properties. All values are provided by using the -D - nothing is read
from the environment.

If the resulting value is null or - in the case of int.fromEnvironment
- not a number an ArgumentError is thrown.

This CL does not have any implementation for dart2js.

This is a continuation of the change
https://chromiumcodereview.appspot.com/24975002 by iposva@
BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//50983002
------------------------------------------------------------------------
r29639 | johnmccutchan@google.com | 2013-10-31 13:57:38 +0900 (木, 31 10月 2013) | 5 lines

Add Uint32x4List to typed_data

R=asiva@google.com, srdjan@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//51333005
------------------------------------------------------------------------
r29610 | srdjan@google.com | 2013-10-31 08:51:42 +0900 (木, 31 10月 2013) | 6 lines

Improve indexOf for one byte string receiver to work with other string classes.
Optimize access to core class’s class-ids.

R=zra@google.com

Review URL: https://codereview.chromium.org//47073009
------------------------------------------------------------------------
r29608 | regis@google.com | 2013-10-31 08:30:32 +0900 (木, 31 10月 2013) | 11 lines

Implement latest spec changes regarding malformed types (see issue 14006):
- a malformed type used in a is, as, or catch type test results in a dynamic
  type error being thrown.
- a malformed type is not mapped to dynamic anymore.

For now, this applies to type tests in checked mode as well, but discussion is
still on-going.

R=hausner@google.com

Review URL: https://codereview.chromium.org//53583003
------------------------------------------------------------------------
r29577 | zra@google.com | 2013-10-31 03:57:55 +0900 (木, 31 10月 2013) | 11 lines

Adds support for ARM softfp calling convention.

The cross-compiler with the Android NDK doesn't support
the 'hard' calling convention, so we need both. I've
added a preprocessor define to the gyp file for the
standalone vm indicating support for 'hard' so that I
don't have to modify the Dartium gyp files.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//52803002
------------------------------------------------------------------------
r29572 | asiva@google.com | 2013-10-31 02:51:36 +0900 (木, 31 10月 2013) | 3 lines

Fix RawObject::IsVMHeapObject to use Contains instead of relying on the mark bit.

Review URL: https://codereview.chromium.org//51253003
------------------------------------------------------------------------
r29537 | lrn@google.com | 2013-10-30 21:25:02 +0900 (水, 30 10月 2013) | 6 lines

Remove deprecated dart:utf library.

BUG= http://dartbug.com/12843
R=fschneider@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//48133002
------------------------------------------------------------------------
r29533 | kmillikin@google.com | 2013-10-30 20:38:39 +0900 (水, 30 10月 2013) | 16 lines

Reapply "Do not directly load smi constants larger than a 16 bit..."

Reapply "Do not directly load smi constants larger than a 16 bit payload on
ia32" with a bugfix.  The predicate Assembler::IsSafeSmi incorrectly
returned true for non-smis on non-ia32 platforms.

Original summary: Instead of emitting a large smi constant directly as an
immediate, xor the smi with a random 32-bit cookie at compile time, emit
code to move that into a register and then to xor the register with the
cookie.

Original codereview: https://codereview.chromium.org/48743002/

R=fschneider@google.com

Review URL: https://codereview.chromium.org//51333006
------------------------------------------------------------------------
r29472 | srdjan@google.com | 2013-10-30 03:18:40 +0900 (水, 30 10月 2013) | 6 lines

Improve string library performance. String concat and indexOf.
Rename String concatAll to concatRange. Optimize concatRange for OneByteStrings (avoids natives), optimize indexOf for one character onByteStrings.

R=iposva@google.com

Review URL: https://codereview.chromium.org//42443002
------------------------------------------------------------------------
r29464 | zra@google.com | 2013-10-30 02:44:56 +0900 (水, 30 10月 2013) | 5 lines

Disables collection of infrequently used unoptimized code.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//51083002
------------------------------------------------------------------------
r29460 | regis@google.com | 2013-10-30 02:04:21 +0900 (水, 30 10月 2013) | 5 lines

Implement stricter rule about self referencing typedefs (fix issue 13675).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//49853004
------------------------------------------------------------------------
r29458 | whesse@google.com | 2013-10-30 01:49:42 +0900 (水, 30 10月 2013) | 8 lines

Revert "Do not directly load smi constants larger than a 16 bit payload on ia32."

There is an assertion failure on debug VM tests.

BUG=
R=fschneider@google.com

Review URL: https://codereview.chromium.org//46873004
------------------------------------------------------------------------
r29439 | kmillikin@google.com | 2013-10-29 21:19:12 +0900 (火, 29 10月 2013) | 23 lines

Do not directly load smi constants larger than a 16 bit payload on ia32.

Instead of emitting a large smi constant directly as an immediate, xor the
smi with a random 32-bit cookie at compile time, emit code to move that into
a register and then to xor the register with the cookie.

1. In unoptimized code constants are always loaded into a register in
   ConstantInstr::EmitNativeCode.  Change it to load safely.

2. In optimized code constants loaded into a register for use by an
   instruction are loaded by ParallelMoveResolver::EmitMove.  Change it to
   load safely.

3. In optimized code some instructions allow constants as inputs.  These are
   reflected with an input location of Location::RegisterOrConstant (or
   similar) or else Location::Constant.  For the former allocate a register
   if the constant is unsafe, and for the latter check for safety before
   allowing the constant input.

BUG=https://code.google.com/p/dart/issues/detail?id=1742
R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//48743002
------------------------------------------------------------------------
r29435 | whesse@google.com | 2013-10-29 20:33:34 +0900 (火, 29 10月 2013) | 8 lines

Remove dart:platform library.

This reverts commits r29154, r29244, r29251, r29268, and r29272.
The dart:io Platform class will not be moved to a dart:platform library.

R=ajohnsen@google.com

Review URL: https://codereview.chromium.org//50573002
------------------------------------------------------------------------
r29418 | sgjesse@google.com | 2013-10-29 17:45:32 +0900 (火, 29 10月 2013) | 13 lines

Remove the reply port form the native isolate handler

The handler function for a native isolate no longer gets an explicit
reply port. Instead the reply port must be sent as part of the message
if required.

The Dart_CObject structure now exposes the send ports in a message to
a native isolate.

R=asiva@google.com, floitsch@google.com, whesse@google.com
BUG=

Review URL: https://codereview.chromium.org//43483004
------------------------------------------------------------------------
r29404 | iposva@google.com | 2013-10-29 09:04:59 +0900 (火, 29 10月 2013) | 3 lines

- Add missing header file to the dependencies.

Review URL: https://codereview.chromium.org//50103002
------------------------------------------------------------------------
r29400 | zra@google.com | 2013-10-29 06:58:10 +0900 (火, 29 10月 2013) | 12 lines

Modifies assertion for possibly null code pointer.

A callee function's code pointer may be nulled by a
GC pass during inlining. The code itself is still
around because the inlining function retains a
reference, but a future change will ensure that
the GC pass doesn't null code pointers in inlined
functions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//48833004
------------------------------------------------------------------------
r29397 | hausner@google.com | 2013-10-29 06:38:57 +0900 (火, 29 10月 2013) | 7 lines

Throw CyclicInitializationError instead of string

For some reason, I had to regenerate the snapshot for test standalone/issue14236_source.dart. The checked-in snapshot crashed with my change. We don't know yet why. Siva is looking at this separately.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//38563005
------------------------------------------------------------------------
r29390 | jacobr@google.com | 2013-10-29 05:23:19 +0900 (火, 29 10月 2013) | 6 lines

Fix to asiva's code review comments on TBR Cl.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//49613002
------------------------------------------------------------------------
r29389 | fschneider@google.com | 2013-10-29 05:20:11 +0900 (火, 29 10月 2013) | 9 lines

VM: Fix bug in polymorphic inlining of recognized methods.

The inliner has to insert a redefinition of the receiver to
prevent illegal hoisting of instructions that depend on the
receiver class id.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//47933004
------------------------------------------------------------------------
r29388 | turnidge@google.com | 2013-10-29 05:12:37 +0900 (火, 29 10月 2013) | 5 lines

Don't inline functions if they have an active breakpoint.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//41613002
------------------------------------------------------------------------
r29374 | rmacnak@google.com | 2013-10-29 02:25:47 +0900 (火, 29 10月 2013) | 6 lines

Test reflecting on an object that implements Function but has no call method.

BUG=http://dartbug.com/13957
R=asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//26777002
------------------------------------------------------------------------
r29323 | iposva@google.com | 2013-10-27 23:34:23 +0900 (日, 27 10月 2013) | 11 lines

Reland https://code.google.com/p/dart/source/detail?r=29315:
- Make sure to keep the main/control port opened until the
  isolate is finished.
- Account for the number of opened control ports to be able
  to determine whether there are live ports.
- Ensure that the spawned isolated is kept alive until the
  initial startup message can be handled.
- Add more isolate tracing output.
- Use the control port for the debugger id.

Review URL: https://codereview.chromium.org//47573002
------------------------------------------------------------------------
r29318 | jacobr@google.com | 2013-10-27 07:55:43 +0900 (日, 27 10月 2013) | 6 lines

Add Dart_LibraryId method unblocking landing 45613003. TBR

BUG=
R=sra@google.com

Review URL: https://codereview.chromium.org//47293002
------------------------------------------------------------------------
r29317 | iposva@google.com | 2013-10-27 06:50:38 +0900 (日, 27 10月 2013) | 4 lines

- Revert parts of r29315 while attempting to reproduce
  unexplained buildbot failures locally.

Review URL: https://codereview.chromium.org//47233002
------------------------------------------------------------------------
r29315 | iposva@google.com | 2013-10-27 05:50:20 +0900 (日, 27 10月 2013) | 9 lines

- Make sure to keep the main/control port opened until the
  isolate is finished.
- Account for the number of opened control ports to be able
  to determine whether there are live ports.
- Fix imports in snapshotted test.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//46173002
------------------------------------------------------------------------
r29298 | regis@google.com | 2013-10-26 08:02:48 +0900 (土, 26 10月 2013) | 7 lines

Disallow explicit parameter default values in redirecting factory (issue 13662).
Add language test.
Fix usage in core lib.

R=hausner@google.com

Review URL: https://codereview.chromium.org//45833002
------------------------------------------------------------------------
r29276 | regis@google.com | 2013-10-26 04:46:32 +0900 (土, 26 10月 2013) | 6 lines

Register synthesized mixin application classes in the library and reuse them
when possible (fix issue 14318).

R=asiva@google.com, hausner@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//42723003
------------------------------------------------------------------------
r29271 | floitsch@google.com | 2013-10-26 04:23:00 +0900 (土, 26 10月 2013) | 5 lines

Very simple version of Isolates.

R=ajohnsen@google.com, iposva@google.com, kasperl@google.com, lrn@google.com

Review URL: https://codereview.chromium.org//27215002
------------------------------------------------------------------------
r29266 | srdjan@google.com | 2013-10-26 03:00:27 +0900 (土, 26 10月 2013) | 5 lines

Specialize string equality for various string classes. Add intrinsics for one/two-byte string equality. Improves sudoku_solver by 10%.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//41573003
------------------------------------------------------------------------
r29240 | lrn@google.com | 2013-10-25 19:30:34 +0900 (金, 25 10月 2013) | 6 lines

Remove dart:json

BUG= http://dartbug.com/12843
R=floitsch@google.com, fschneider@google.com

Review URL: https://codereview.chromium.org//40323002
------------------------------------------------------------------------
r29239 | kmillikin@google.com | 2013-10-25 19:17:10 +0900 (金, 25 10月 2013) | 12 lines

Record a correct deoptimization environment for slow-path code.

Slow-path code is not marked as a call, so the deoptimization environment
built by the register allocator can contain unspilled registers.  However,
all registers are spilled before the call.  Compute the spill slot for all
registers and change the ones in the deoptimization environment to be
spilled.

BUG=https://code.google.com/p/dart/issues/detail?id=13995
R=fschneider@google.com

Review URL: https://codereview.chromium.org//26823006
------------------------------------------------------------------------
r29218 | iposva@google.com | 2013-10-25 07:08:33 +0900 (金, 25 10月 2013) | 6 lines

- Account for hidden frames when concatenating throw and
  catch traces.

R=asiva@google.com

Review URL: https://codereview.chromium.org//41503004
------------------------------------------------------------------------
r29212 | hausner@google.com | 2013-10-25 06:42:39 +0900 (金, 25 10月 2013) | 11 lines

It's a compile-time error if a const constructor call fails

Making it a compile-time error if a const constructor call
fails. Also improve error message when invoking dart code during
compilation fails.

Fixes issue 14302

R=srdjan@google.com

Review URL: https://codereview.chromium.org//40683002
------------------------------------------------------------------------
r29209 | zra@google.com | 2013-10-25 06:26:15 +0900 (金, 25 10月 2013) | 15 lines

Disconnects code objects from infrequently used unoptimized functions.

Every 30 seconds (configurable by --code-collection-interval),
before a MarkSweep collection, this change halves a function's
usage count if it is unoptimized. If the function's usage count
reaches 0 as a result of this halving, it sets the function's
code pointers to null. Then, if the code object isn't marked
during the MarkSweep, it will be collected.

This change also checks for null code pointers in various
places, and recompiles/reconnects code if needed.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//27802002
------------------------------------------------------------------------
r29194 | hausner@google.com | 2013-10-25 03:54:52 +0900 (金, 25 10月 2013) | 10 lines

Properly report error for certain expressions that must be const

Issue error message instead of hitting assertion for an expression that
contains an assignment but is expected to be const.

Fixes security issue 13941

R=regis@google.com

Review URL: https://codereview.chromium.org//41113002
------------------------------------------------------------------------
r29178 | asiva@google.com | 2013-10-25 01:41:22 +0900 (金, 25 10月 2013) | 10 lines

Fix for issue 14236:
Retain script path of parent isolate when spawnFunction is called so that
it works when using script snapshots.

The test case issue14236_test.dart is a script snapshot whose original source
file path is issue14236_source.dart

R=iposva@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//35393003
------------------------------------------------------------------------
r29155 | ajohnsen@google.com | 2013-10-24 16:13:25 +0900 (木, 24 10月 2013) | 6 lines

Add missing line to gyp file.

BUG=
R=sgjesse@google.com

Review URL: https://codereview.chromium.org//38983004
------------------------------------------------------------------------
r29154 | ajohnsen@google.com | 2013-10-24 15:56:36 +0900 (木, 24 10月 2013) | 18 lines

Add empty dart:platform library.

dart:platform will be a library that contains information about the runtime
platform. While it's not written in stones, this is examples of properties that
may be queried:

- OS
- Browser
- Browser version
- Dart Version
- numberOfProcessors
- pathSeparator
- Native or JS VM

BUG=
R=ahe@google.com, asiva@google.com, floitsch@google.com, iposva@google.com, kasperl@google.com

Review URL: https://codereview.chromium.org//32683002
------------------------------------------------------------------------
r29153 | iposva@google.com | 2013-10-24 14:45:09 +0900 (木, 24 10月 2013) | 7 lines

Fix bug 13827:
- Do not attempt to GC old space while in full growth mode when creating
  the token stream for a newly loaded source file.

R=bak@google.com

Review URL: https://codereview.chromium.org//33753005
------------------------------------------------------------------------
r29136 | iposva@google.com | 2013-10-24 09:16:55 +0900 (木, 24 10月 2013) | 6 lines

- Don't mix the collection of Error.stackTrace with the collection of
  the stack trace for try-catch.

R=asiva@google.com

Review URL: https://codereview.chromium.org//38343004
------------------------------------------------------------------------
r29126 | hausner@google.com | 2013-10-24 06:15:25 +0900 (木, 24 10月 2013) | 12 lines

Implement type checks for switch expression

If the switch expression is not compatible with the case clause
constants, we must report a runtime error. Implement this by annotating
the temporary variable holding the switch expression with the correct
type.

Issue 7274

R=regis@google.com

Review URL: https://codereview.chromium.org//34413007
------------------------------------------------------------------------
r29123 | regis@google.com | 2013-10-24 06:03:11 +0900 (木, 24 10月 2013) | 6 lines

Report compile-time error for const factories redirecting to malformed type
(fix issue 14305).

R=iposva@google.com

Review URL: https://codereview.chromium.org//29013005
------------------------------------------------------------------------
r29118 | srdjan@google.com | 2013-10-24 05:37:18 +0900 (木, 24 10月 2013) | 5 lines

Move Stringinterpolation constant folding from constant propagator to canonicalizer. StrinIterpolateInstr cannot directlly refer to interpolation arguments but only to the array that holds them, therefore constant propagation cannot be applied.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//34523007
------------------------------------------------------------------------
r29110 | iposva@google.com | 2013-10-24 04:08:36 +0900 (木, 24 10月 2013) | 20 lines

- Ensure that the token stream from generated source matches the
  original token stream in the presence of combinations of
  multiline string and string interpolation. If not this will
  cause mismatches when accessing code snippets, e.g when
  reporting parser errors or assertions.
- Ensure that ScanAll and ScanTo are in sync when adding or
  counting tokens.
- Added unit test for multiline strings and interpolation.
- Expanded GenerateSource unit test to iterate through all
  loaded libraries.
- Do not report columns for compilation errors in snapshotted
  code.
- Do not report columns from exceptions and errors when dealing
  with snapshotted code.
- Remove length field from TokenDescriptor. It was unused.
- Remove TokenStream::ComputeTokenPosition. It was unused.

R=fschneider@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//36323003
------------------------------------------------------------------------
r29097 | fschneider@google.com | 2013-10-24 01:18:20 +0900 (木, 24 10月 2013) | 9 lines

Fix VM issue 1372: super constructor invocation with redirection.

A redirecting super constructor simply passes the phase parameter
on to the target which executes the corresponding phase.

BUG=https://code.google.com/p/dart/issues/detail?id=1372
R=hausner@google.com

Review URL: https://codereview.chromium.org//35693010
------------------------------------------------------------------------
r29092 | zra@google.com | 2013-10-24 00:56:35 +0900 (木, 24 10月 2013) | 7 lines

Fixes ARM SIMD IL bug.

Issue 14341

R=fschneider@google.com

Review URL: https://codereview.chromium.org//37413002
------------------------------------------------------------------------
r29088 | fschneider@google.com | 2013-10-24 00:29:02 +0900 (木, 24 10月 2013) | 7 lines

VM: Fix evaluation order when throwing an AbstractClassInstantiationError.

BUG=https://code.google.com/p/dart/issues/detail?id=13420
TEST=Language/12_Expressions/12_Instance_Creation/1_New_A06_t12
R=zra@google.com

Review URL: https://codereview.chromium.org//37193002
------------------------------------------------------------------------
r29087 | fschneider@google.com | 2013-10-24 00:27:09 +0900 (木, 24 10月 2013) | 7 lines

Use enums for the index of IL operands.

Addressing comments from a previous CL (https://codereview.chromium.org/28633003/).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//35893012
------------------------------------------------------------------------
r29066 | johnmccutchan@google.com | 2013-10-23 18:18:52 +0900 (水, 23 10月 2013) | 7 lines

This CL enables the polymorphic inliner to inline loads on typed array views.

It also contains a small cleanup so that the signatures of BuildByteArrayViewLoad and BuildByteArrayViewStore match.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//26191002
------------------------------------------------------------------------
r29049 | rmacnak@google.com | 2013-10-23 09:12:09 +0900 (水, 23 10月 2013) | 6 lines

Test for OscillatorNode.type=. Fix bug in StringGetPeerHelper when passed an immediate object. Fix asserts when getting typed data address to allow for empty arrays.

BUG=http://dartbug.com/11984
R=asiva@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//28973003
------------------------------------------------------------------------
r29045 | regis@google.com | 2013-10-23 07:36:42 +0900 (水, 23 10月 2013) | 6 lines

Fix language tests for redirecting factories (issue 14297).
Use target constructor name in redirecting factory errors.

R=hausner@google.com

Review URL: https://codereview.chromium.org//34903006
------------------------------------------------------------------------
r29042 | regis@google.com | 2013-10-23 07:12:07 +0900 (水, 23 10月 2013) | 5 lines

Report correct error message in case of super invocation (fix issue 8208).

R=hausner@google.com

Review URL: https://codereview.chromium.org//30533004
------------------------------------------------------------------------
r29030 | rmacnak@google.com | 2013-10-23 04:53:14 +0900 (水, 23 10月 2013) | 8 lines

VM: Always return immutable collections from the mirrors.

Fix assert in partial demangling. Fix inappropriate compilation when handling parameters.

BUG=http://dartbug.com/14027
R=ahe@google.com, asiva@google.com

Review URL: https://codereview.chromium.org//34533003
------------------------------------------------------------------------
r29012 | iposva@google.com | 2013-10-23 02:40:30 +0900 (水, 23 10月 2013) | 5 lines

- Name the enum containing the bootstrap library ids.

R=asiva@google.com

Review URL: https://codereview.chromium.org//32633006
------------------------------------------------------------------------
r29001 | fschneider@google.com | 2013-10-23 01:03:48 +0900 (水, 23 10月 2013) | 12 lines

Fix bug with load elimination in checked mode.

Definitions that are redefined through AssertAssignable must be
unwrapped to number loads/stores correctly for them.

Fix test expectations for tests that are passing now that the
corresponding co19 test was changed.

BUG=https://code.google.com/p/dart/issues/detail?id=13543
R=srdjan@google.com

Review URL: https://codereview.chromium.org//35093002
------------------------------------------------------------------------
r28999 | hausner@google.com | 2013-10-23 00:44:28 +0900 (水, 23 10月 2013) | 13 lines

Do not generate a compile-time error if there is more than one catch-all clause

This includes catch clauses with malformed types, which are essentially
catch-all clauses.

The spec does not mandate such a compile-time error. (It probably did a long
time ago.)

Fixes issue 8601, 12159, 13019

R=iposva@google.com

Review URL: https://codereview.chromium.org//33813003
------------------------------------------------------------------------
r28972 | rmacnak@google.com | 2013-10-22 09:00:08 +0900 (火, 22 10月 2013) | 6 lines

Generic typedefs and their referents.

BUG=http://dartbug.com/12282
R=regis@google.com

Review URL: https://codereview.chromium.org//27728004
------------------------------------------------------------------------
r28964 | hausner@google.com | 2013-10-22 07:13:42 +0900 (火, 22 10月 2013) | 11 lines

Allow string literal concatenation in import clauses

Added benefit: if there is no interpolation in any of the adjacent
string literals, the compiler concatenates the strings without
invoking Dart code.

Fixes issues 12521, 6877

R=regis@google.com

Review URL: https://codereview.chromium.org//32513007
------------------------------------------------------------------------
r28946 | rmacnak@google.com | 2013-10-22 05:12:49 +0900 (火, 22 10月 2013) | 5 lines

Hide MirroredCompilationErrror behind a flag until post-1.0. Remove VM reference to MirroredUncaughtExceptionError.

R=asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//28053005
------------------------------------------------------------------------
r28944 | asiva@google.com | 2013-10-22 04:53:31 +0900 (火, 22 10月 2013) | 5 lines

Remove deprecated call Dart_Error from the API. There are no uses of it.

R=turnidge@google.com

Review URL: https://codereview.chromium.org//26751005
------------------------------------------------------------------------
r28943 | regis@google.com | 2013-10-22 04:49:19 +0900 (火, 22 10月 2013) | 6 lines

Report use of malbounded interface in type test.
Fix language tests related to malbounded types (issues 14123, 14131, 14132).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//33313003
------------------------------------------------------------------------
r28931 | fschneider@google.com | 2013-10-21 22:59:56 +0900 (月, 21 10月 2013) | 15 lines

Fix bugs in load elimination and type propagation.

Load elimination should consider the representation of loads/stores
when numbering places. Different representations result now in different
places so that there can't be mixed representations at phis after
load elimination.

Removed the flag --propagate-types because type propagation is required
for correctness of smi-check hoisting. Therefore, switching it off does not
 make sense anymore.

BUG=https://code.google.com/p/dart/issues/detail?id=6663, https://code.google.com/p/dart/issues/detail?id=14271
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//28633003
------------------------------------------------------------------------
r28856 | fschneider@google.com | 2013-10-18 21:56:47 +0900 (金, 18 10月 2013) | 9 lines

VM: Fix bug in optimization of identical comparisons.

When the propagated type information of a value refers to a generic
type parameter, assume that it can be a number. In that case we can't
eliminate the number check.

TBR=srdjan@google.com

Review URL: https://codereview.chromium.org//29023002
------------------------------------------------------------------------
r28851 | fschneider@google.com | 2013-10-18 20:13:59 +0900 (金, 18 10月 2013) | 17 lines

Optimize identical-comparisons based on propagated type information.

If the propagated type allows, eliminate the check for numbers at
identical operations in optimized code.

The previous optimizaton was done before full type propagation was run
and was therefore not very effective.

* Made flow-graph printing having no side-effects: calling Type() lazily
initializes the type_ and reaching_type_ fields of Value and Definition.
Access fields directly when printing instead.

Also, fixed two random spelling mistakes.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//27727002
------------------------------------------------------------------------
r28827 | zra@google.com | 2013-10-18 06:29:57 +0900 (金, 18 10月 2013) | 10 lines

Adds special case in ARM cpu feature detection.

Qualcomm Krait CPUs in Nexus 4 and 7 misreport non-support
for integer division. This change checks the model string
reported by /proc/cpuinfo and enables integer division if
we are on one of these CPUs.

R=regis@google.com

Review URL: https://codereview.chromium.org//27731003
------------------------------------------------------------------------
r28815 | rmacnak@google.com | 2013-10-18 03:49:27 +0900 (金, 18 10月 2013) | 6 lines

Remove conflict between type parameter and method/field from typevariable_mirror_metadata_test. Remove irregularity in metadata lookup naming that dealt with allow their co-existence.

BUG=http://dartbug.com/13327
BUG=http://dartbug.com/14016

Review URL: https://codereview.chromium.org//27525007
------------------------------------------------------------------------
r28809 | asiva@google.com | 2013-10-18 02:49:45 +0900 (金, 18 10月 2013) | 5 lines

Fix issue 13942 - Dart_Error function invokes OS::VSNPrint with the "format" string containing data derived from the string

R=iposva@google.com

Review URL: https://codereview.chromium.org//27694005
------------------------------------------------------------------------
r28808 | hausner@google.com | 2013-10-18 02:39:08 +0900 (金, 18 10月 2013) | 15 lines

Check that class member names do not conflict with type parameters

Implement check that member names do not conflict with type
parameters. Simplify name checks in class namespace.
Mark typevariable_mirror_metadata_test as failing now that we
report the proper compile time errors. (The test expects no errors.)
Some co19 tests expect a name conflict between a setter X= and type
parameter X. This is still in flux from a language perspective. This
change list does not introduce an compile error for this case.

Fix for issue 13701.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//27619002
------------------------------------------------------------------------
r28803 | zra@google.com | 2013-10-18 00:08:59 +0900 (金, 18 10月 2013) | 12 lines

Fixes a bug in runtime call stub on arm and mips.

GC was failing to visit the last argument to
runtime calls because the stack frame iterator
expects the same layout in the runtime call
stub as with other frames. Using the stub entry
macro ensures that the last argument is in the
expected place.

R=regis@google.com

Review URL: https://codereview.chromium.org//27588004
------------------------------------------------------------------------
r28802 | fschneider@google.com | 2013-10-17 23:01:04 +0900 (木, 17 10月 2013) | 15 lines

Improve canonicalization of strict comparisons and bool negation.

This CL generalizes the existing optimization to handle all combinations

expr === true
expr !== true
expr === false
expr !== false

including lhs and rhs swapped. It also adds canonicalization of boolean
negation.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//27705003
------------------------------------------------------------------------
r28768 | rmacnak@google.com | 2013-10-17 09:16:34 +0900 (木, 17 10月 2013) | 7 lines

Generic instantiations of mixins and interfaces. Equality of type parameters.

BUG=http://dartbug.com/14113
BUG=http://dartbug.com/14114
R=regis@google.com

Review URL: https://codereview.chromium.org//27610002
------------------------------------------------------------------------
r28759 | iposva@google.com | 2013-10-17 08:15:11 +0900 (木, 17 10月 2013) | 6 lines

- Add more data collection to the scavenger.
- Fix runtime/PRESUBMIT.py script.

R=asiva@google.com

Review URL: https://codereview.chromium.org//27604002
------------------------------------------------------------------------
r28749 | srdjan@google.com | 2013-10-17 05:53:03 +0900 (木, 17 10月 2013) | 3 lines

Temporary disable string-interpolation constant folding until failures witj --optimization-counter-threshold=5 are resolved.

Review URL: https://codereview.chromium.org//27581002
------------------------------------------------------------------------
r28741 | srdjan@google.com | 2013-10-17 03:12:08 +0900 (木, 17 10月 2013) | 6 lines

Add new style of string interpolation optimization: new nodes, working constant folding.
TODO: partial constant fold of incoming arguments.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//27192005
------------------------------------------------------------------------
r28736 | asiva@google.com | 2013-10-17 02:40:07 +0900 (木, 17 10月 2013) | 7 lines

- Rearrange bits in the bitfields to get better compaction, this reduces
initial snapshot size by about 500 bytes.
- Fix initialization problem with redirecting factory bit

R=rmacnak@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//26565006
------------------------------------------------------------------------
r28723 | fschneider@google.com | 2013-10-16 22:07:58 +0900 (水, 16 10月 2013) | 16 lines

VM: Fix bug with evaluation order of static setter invocation.

This fixes the case for an assignment of the form
v=e
where v is unknown. The right-hand side of the assignment
has to be evaluated before throwing a NoSuchMethodError.

I moved the generation of the NoSuchMethodError out of
the parser to the flow-graph builder, where the right-hand side
argument is evaluated before throwing.

BUG=https://code.google.com/p/dart/issues/detail?id=13494
TEST=co19/Language/12_Expressions/18_Assignment_A01_t07
R=hausner@google.com

Review URL: https://codereview.chromium.org//25842003
------------------------------------------------------------------------
r28712 | lrn@google.com | 2013-10-16 18:02:46 +0900 (水, 16 10月 2013) | 5 lines

Change "typedef" to "class" in core library and related tests.

R=floitsch@google.com, johnniwinther@google.com

Review URL: https://codereview.chromium.org//27300003
------------------------------------------------------------------------
r28698 | regis@google.com | 2013-10-16 09:38:55 +0900 (水, 16 10月 2013) | 7 lines

Throw a dynamic type error instead of a CastError in a type cast with a
malbounded type (fix issue 14123).
Regression test is not checked in yet (see https://codereview.chromium.org/27378002/)

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//27420002
------------------------------------------------------------------------
r28695 | rmacnak@google.com | 2013-10-16 09:15:10 +0900 (水, 16 10月 2013) | 6 lines

Do not hide membership of implementation classes in dart:core.

BUG=http://dartbuc.com/12141
R=ahe@google.com, asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//27226003
------------------------------------------------------------------------
r28684 | regis@google.com | 2013-10-16 06:24:44 +0900 (水, 16 10月 2013) | 7 lines

Allow an interface to be (mal)bounded (fix issue 14118).
Regression test is pending, but not checked in yet
(see https://codereview.chromium.org/27378002/).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//27238011
------------------------------------------------------------------------
r28671 | turnidge@google.com | 2013-10-16 03:35:07 +0900 (水, 16 10月 2013) | 10 lines

When a value has been optimized away by the compiler, set its value to
"<optimized out>".  This will make it less confusing for people using
the debugger.

- Added constant_dead() to the flow graph.
- Added Symbols::OptimizedOut().

R=fschneider@google.com

Review URL: https://codereview.chromium.org//27339003
------------------------------------------------------------------------
r28670 | regis@google.com | 2013-10-16 03:31:31 +0900 (水, 16 10月 2013) | 6 lines

Cache number of type arguments in class object instead of recalculating it.
Reduce size of num_native_fields field in class object.

R=asiva@google.com

Review URL: https://codereview.chromium.org//26682003
------------------------------------------------------------------------
r28669 | turnidge@google.com | 2013-10-16 03:17:36 +0900 (水, 16 10月 2013) | 5 lines

Allow access to context variables in optimized/inlined frames.

R=asiva@google.com

Review URL: https://codereview.chromium.org//27226004
------------------------------------------------------------------------
r28652 | hausner@google.com | 2013-10-16 01:13:02 +0900 (水, 16 10月 2013) | 9 lines

Implement new mixin application syntax

Implment the class X = S with M syntax, add warning on deprecated
typedef syntax. Also convert a handful of tests. More tests to
be converted subsequently.

R=regis@google.com

Review URL: https://codereview.chromium.org//27223005
------------------------------------------------------------------------
r28646 | fschneider@google.com | 2013-10-16 00:15:47 +0900 (水, 16 10月 2013) | 10 lines

VM: Fix bug in canonicalization of identical in the optimizing compiler.

Make sure that BranchInstr::Canonicalize does not mutate it's input before
all conditions for the optimzations to take place are met. Otherwise, bailing out
leaves the affected comparison instruction in an invalid state.

BUG=https://code.google.com/p/dart/issues/detail?id=14109
R=srdjan@google.com

Review URL: https://codereview.chromium.org//26451006
------------------------------------------------------------------------
r28620 | srdjan@google.com | 2013-10-15 08:32:00 +0900 (火, 15 10月 2013) | 3 lines

Forgot to submit the cleanup.

Review URL: https://codereview.chromium.org//27271002
------------------------------------------------------------------------
r28619 | srdjan@google.com | 2013-10-15 08:21:52 +0900 (火, 15 10月 2013) | 5 lines

Cleanups, refactoring in anticipation of new string interpolation nodes. Removed unnecessary code.

R=hausner@google.com

Review URL: https://codereview.chromium.org//27006003
------------------------------------------------------------------------
r28614 | srdjan@google.com | 2013-10-15 06:47:39 +0900 (火, 15 10月 2013) | 5 lines

Add back native tracing to optimized code. Tracing natives is an important part of perfromance analysis and should therefore be available in optiumized VM as well. No performance implications are expected.

R=asiva@google.com

Review URL: https://codereview.chromium.org//27226002
------------------------------------------------------------------------
r28594 | turnidge@google.com | 2013-10-15 02:35:35 +0900 (火, 15 10月 2013) | 8 lines

Fix a typo in debugger.cc that was causing variable bounds checking to
be done on the frame context instead of the variable's context.

Update the unit test.

R=hausner@google.com

Review URL: https://codereview.chromium.org//27038005
------------------------------------------------------------------------
r28578 | fschneider@google.com | 2013-10-14 21:21:40 +0900 (月, 14 10月 2013) | 11 lines

Improve --optimization-filter to accept a comma-separated list of strings.

Only functions where the fully-qualified name contains one of the strings supplied
as substring will be optimized.

This helps tracking down bugs in the optimizing compiler that occur when a
large number of optimized functions are involved.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//25446003
------------------------------------------------------------------------
r28551 | rmacnak@google.com | 2013-10-12 05:56:14 +0900 (土, 12 10月 2013) | 7 lines

Add proper API for creating private symbols wrt a library.

BUG=http://dartbug.com/13355
BUG=http://dartbug.com/12358
R=ahe@google.com, asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//24631003
------------------------------------------------------------------------
r28539 | regis@google.com | 2013-10-12 03:36:25 +0900 (土, 12 10月 2013) | 8 lines

Overlap type arguments of a type with the type arguments of its super type
when possible. Overlapping may be partial.
Add flag --overlap-type-arguments controlling this optimization for debugging
and performance measurement (default is true).

R=hausner@google.com

Review URL: https://codereview.chromium.org//26955002
------------------------------------------------------------------------
r28538 | turnidge@google.com | 2013-10-12 03:15:32 +0900 (土, 12 10月 2013) | 8 lines

Add unit tests to cover stack inspect in the presence of closure calls
for both optimized and non-optimized code.

Fix an assert which was broken.

R=iposva@google.com

Review URL: https://codereview.chromium.org//27054002
------------------------------------------------------------------------
r28521 | fschneider@google.com | 2013-10-12 00:44:36 +0900 (土, 12 10月 2013) | 13 lines

VM: Fix performance regression introduced by r28408.

Change the AST for static consts so that they don't
end up translated as calls, and so that we don't rely
on the inliner to fold them away).

Instead I generate a LoadStatic AST node that will be
constant folded in the flow graph builder.

BUG=https://code.google.com/p/dart/issues/detail?id=13954
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//27020002
------------------------------------------------------------------------
r28495 | rmacnak@google.com | 2013-10-11 10:51:11 +0900 (金, 11 10月 2013) | 7 lines

Substitution for type variables in mirrors on instantiated generics.

BUG=http://dartbug.com/12282
BUG=http://dartbug.com/13808
R=gbracha@google.com, regis@google.com

Review URL: https://codereview.chromium.org//26344006
------------------------------------------------------------------------
r28488 | regis@google.com | 2013-10-11 08:30:42 +0900 (金, 11 10月 2013) | 6 lines

Disallow extending a malformed type (issue 13940).
Add language test and update dart2js status (issue 13994 filed).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//26888005
------------------------------------------------------------------------
r28474 | regis@google.com | 2013-10-11 05:45:09 +0900 (金, 11 10月 2013) | 5 lines

Allow malbounded literal types (fix issue 13952).

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//26866005
------------------------------------------------------------------------
r28470 | turnidge@google.com | 2013-10-11 04:00:31 +0900 (金, 11 10月 2013) | 3 lines

Fix checked mode failure

Review URL: https://codereview.chromium.org//26842003
------------------------------------------------------------------------
r28469 | turnidge@google.com | 2013-10-11 03:22:56 +0900 (金, 11 10月 2013) | 3 lines

Fix compiler error that wasn't showing up on my platform.

Review URL: https://codereview.chromium.org//26901002
------------------------------------------------------------------------
r28468 | turnidge@google.com | 2013-10-11 03:15:53 +0900 (金, 11 10月 2013) | 25 lines

Allow the debugger to inspect local variables from optimized and
inlined frames.

------------

Most remaining deoptimization code from the code generator moves to
DeoptContext.  This allows the code to be reused by the debugger.
There is some rework of the code along the way.  The remaining code in
the code generator is simpler.

Implement the ability to deopt a frame to an Array.  Each inlined
frame accesses its locals from this array at some fixed offset.

Refactor the Debugger::CollectStackTrace code.  New code is int
Debugger::CollectStackTraceNew.  There is a flag --use_new_stacktrace
which can be used to revert back to the old version.  I intend to
remove this flag shortly, after any dust clears.

Added a unit test which makes sure that we can inspect locals from
optimized and inlined frames.  Tested this code in the dart editor
debugger as well.

R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//26255004
------------------------------------------------------------------------
r28467 | johnmccutchan@google.com | 2013-10-11 02:43:50 +0900 (金, 11 10月 2013) | 5 lines

Forward stores to loads for SIMD arrays

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25809002
------------------------------------------------------------------------
r28454 | fschneider@google.com | 2013-10-10 23:28:01 +0900 (木, 10 10月 2013) | 10 lines

Bump inlining size threshold.

This is to compensate for the increase in AST/flow graph size
after changing the way access to static final consts is compiled
in r28408.

BUG=https://code.google.com/p/dart/issues/detail?id=13954
R=srdjan@google.com

Review URL: https://codereview.chromium.org//26836002
------------------------------------------------------------------------
r28423 | hausner@google.com | 2013-10-10 07:05:27 +0900 (木, 10 10月 2013) | 5 lines

Optimize away empty string sections in string interpolation

R=srdjan@google.com

Review URL: https://codereview.chromium.org//26726004
------------------------------------------------------------------------
r28416 | rmacnak@google.com | 2013-10-10 05:40:11 +0900 (木, 10 10月 2013) | 6 lines

Implement constructor kinds in the VM mirrors.

BUG=http://dartbug.com/13798
R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//26436004
------------------------------------------------------------------------
r28408 | hausner@google.com | 2013-10-10 02:33:10 +0900 (木, 10 10月 2013) | 12 lines

Final variables induce a setter that throws NSME

Clean up handling of const and final variables. They induce a
setter that throws a NSME, rather than a compile-time error.

Delay the AST conversion of loading a const field into loading
the literal value. The conversion is now done when we know
that the load in on the right hand side of an expression.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//26703002
------------------------------------------------------------------------
r28391 | asiva@google.com | 2013-10-09 08:10:39 +0900 (水, 09 10月 2013) | 12 lines

Fix snapshot generation to ensure that the snapshot does not contain
the instance size of internal VM defined classes. These classes have
non word fields and the instance_size_in_words will not be correct
across different platforms.

This fixes the Dartium for Android build issue (snapshot is generated
on the host which is 64 bit and loaded later into a 32 bit process
on Android).

R=iposva@google.com, zra@google.com

Review URL: https://codereview.chromium.org//26247007
------------------------------------------------------------------------
r28378 | zra@google.com | 2013-10-09 05:42:43 +0900 (水, 09 10月 2013) | 8 lines

Use the methods recommended by ARM to flush ICache.

This allows us to remove selecting different versions of
inline assembly depending on ABI, thumb, etc. in our code.

R=regis@google.com

Review URL: https://codereview.chromium.org//26543002
------------------------------------------------------------------------
r28372 | srdjan@google.com | 2013-10-09 03:54:00 +0900 (水, 09 10月 2013) | 5 lines

Last cleanup int -> intptr_t. Also removed a hack (boolean is not an integer).

R=asiva@google.com

Review URL: https://codereview.chromium.org//26345002
------------------------------------------------------------------------
r28367 | asiva@google.com | 2013-10-09 02:09:01 +0900 (水, 09 10月 2013) | 5 lines

Use HasTypeArguments instead of first computing NumTypeArguments();

R=regis@google.com

Review URL: https://codereview.chromium.org//26331004
------------------------------------------------------------------------
r28366 | asiva@google.com | 2013-10-09 01:42:30 +0900 (水, 09 10月 2013) | 8 lines

- Dart_ObjectIsType was allowing classes as parameter, changed it to only
allow types.
- Return canonical Dart_Null, Dart_True and Dart_False handles instead of
creating a new handle

R=srdjan@google.com

Review URL: https://codereview.chromium.org//26306006
------------------------------------------------------------------------
r28365 | zra@google.com | 2013-10-09 01:08:48 +0900 (水, 09 10月 2013) | 5 lines

Adds Android as an allowed OS for ARM build.

R=regis@google.com

Review URL: https://codereview.chromium.org//26510002
------------------------------------------------------------------------
r28349 | rmacnak@google.com | 2013-10-08 10:08:59 +0900 (火, 08 10月 2013) | 6 lines

Correctly report the type of initializing formals declared without an explicit type to be the type of the corresponding field.

BUG=http://dartbug.com/11281
R=gbracha@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//26346002
------------------------------------------------------------------------
r28324 | srdjan@google.com | 2013-10-08 05:19:37 +0900 (火, 08 10月 2013) | 5 lines

Cleanups: int -> intptr_t for "array" lengths, memory sizes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//26294002
------------------------------------------------------------------------
r28319 | regis@google.com | 2013-10-08 03:38:31 +0900 (火, 08 10月 2013) | 5 lines

Rewrite Class::HasTypeArguments() for efficiency.

R=asiva@google.com

Review URL: https://codereview.chromium.org//26072002
------------------------------------------------------------------------
r28289 | regis@google.com | 2013-10-05 07:56:53 +0900 (土, 05 10月 2013) | 6 lines

It is not an error anymore to leave an instance final field uninitialized.
Fix issues 11054 and 12157.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//26023005
------------------------------------------------------------------------
r28286 | srdjan@google.com | 2013-10-05 07:08:55 +0900 (土, 05 10月 2013) | 5 lines

Fix runtimeType for strings, integers and double: return their interface type.

R=asiva@google.com

Review URL: https://codereview.chromium.org//25674017
------------------------------------------------------------------------
r28282 | iposva@google.com | 2013-10-05 05:50:16 +0900 (土, 05 10月 2013) | 9 lines

- Harden coverage generation, by not attempting to compile
  un-compilable functions.
- Only register closure functions in the class when they
  have been properly setup.
- Make sure to compile closure functions when calling CompileAll.

R=hausner@google.com

Review URL: https://codereview.chromium.org//25954003
------------------------------------------------------------------------
r28276 | asiva@google.com | 2013-10-05 05:00:48 +0900 (土, 05 10月 2013) | 6 lines

Add a new method Dart_InvokeConstructor to allow invocation of generative
constructors on an object that has already been allocated using Dart_Allocate.

R=regis@google.com

Review URL: https://codereview.chromium.org//25675009
------------------------------------------------------------------------
r28275 | srdjan@google.com | 2013-10-05 04:43:18 +0900 (土, 05 10月 2013) | 5 lines

Fix issue 13474. Simplify graph builder for Boolean operators AND, OR: do not optimize code when the result of the Boolean operator is not used.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//25630002
------------------------------------------------------------------------
r28257 | fschneider@google.com | 2013-10-04 18:51:27 +0900 (金, 04 10月 2013) | 9 lines

Fix bug in inlining of []= operators.

When inserting the StoreIndexedInstruction, it needs the
environment of the call attached to it.

BUG=https://code.google.com/p/dart/issues/detail?id=13797
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//25991002
------------------------------------------------------------------------
r28248 | asiva@google.com | 2013-10-04 07:17:48 +0900 (金, 04 10月 2013) | 10 lines

Fix for 12312 (Dartium crash when reloading after running tests).

Add framework for Dart_Cleanup which will cleanup stuff on exit.
Ideally the VM isolate should be shutdown in Dart_Terminate but we don't
seem to have a clean thread pool shutdown as a result of which there are
racing isolates.

R=iposva@google.com

Review URL: https://codereview.chromium.org//25674009
------------------------------------------------------------------------
r28235 | regis@google.com | 2013-10-04 03:32:09 +0900 (金, 04 10月 2013) | 6 lines

Skip AssertAssignable in code generator if optimizer could establish that
destination type is dynamic or Object (issue 13795).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25898002
------------------------------------------------------------------------
r28234 | hausner@google.com | 2013-10-04 03:17:16 +0900 (金, 04 10月 2013) | 9 lines

Compile error on const instance variables

Another little step towards full spec compliance.

Issue 11051

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25873005
------------------------------------------------------------------------
r28229 | rmacnak@google.com | 2013-10-04 01:38:19 +0900 (金, 04 10月 2013) | 5 lines

Make the implementations of InstanceMirror.hashCode use dart:core's identityHashCode.

R=ahe@google.com, lrn@google.com

Review URL: https://codereview.chromium.org//25099003
------------------------------------------------------------------------
r28202 | fschneider@google.com | 2013-10-03 18:43:50 +0900 (木, 03 10月 2013) | 9 lines

Polymorphic inlining for []= operators.

This CL allows the inliner to do polymorphic inlining of recognized
[]= operators. Before, only monomorphic calls were handled in the
optimizer.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25411004
------------------------------------------------------------------------
r28190 | iposva@google.com | 2013-10-03 11:37:32 +0900 (木, 03 10月 2013) | 4 lines

Fix build:
- Update Symbol name.

Review URL: https://codereview.chromium.org//25463004
------------------------------------------------------------------------
r28189 | iposva@google.com | 2013-10-03 09:15:14 +0900 (木, 03 10月 2013) | 8 lines

- Rename arrays to lists:
  _ObjectArray -> _List
  _GrowableObjectArray -> _GrowableList
  _ImmutableArray -> _ImmutableList

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25813002
------------------------------------------------------------------------
r28182 | hausner@google.com | 2013-10-03 06:08:24 +0900 (木, 03 10月 2013) | 7 lines

Add type check to const conditional expression evaluation

issue 13746

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25456005
------------------------------------------------------------------------
r28180 | iposva@google.com | 2013-10-03 05:52:15 +0900 (木, 03 10月 2013) | 5 lines

- Fix typos and add comments.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25790004
------------------------------------------------------------------------
r28176 | srdjan@google.com | 2013-10-03 03:48:07 +0900 (木, 03 10月 2013) | 3 lines

Disable string interpolation optimization until fixed.

Review URL: https://codereview.chromium.org//25417003
------------------------------------------------------------------------
r28175 | srdjan@google.com | 2013-10-03 02:49:14 +0900 (木, 03 10月 2013) | 5 lines

Optimize string interpolation by running it at compile time if all inputs are constant. This is done during constant propagation, however, the argument construction instructions must be removed manually. It is unclear how safe it is to modify graph during constant propagation.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24837002
------------------------------------------------------------------------
r28167 | johnmccutchan@google.com | 2013-10-03 00:57:31 +0900 (木, 03 10月 2013) | 6 lines

Fix GuardFieldInstr on IA32

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//25555008
------------------------------------------------------------------------
r28159 | fschneider@google.com | 2013-10-02 22:27:55 +0900 (水, 02 10月 2013) | 14 lines

Bug fix in load elimination,  constant propagation for LoadClassId.

Handle LoadClassId in constant propagation. This helps with eliminating
unreachable code after polymorphic inlining. It exposed a bug which is
also fixed in this CL.

Redefinitions of values have to be considered for load/store forwarding:
Loads/stores to an object defined by a RedefinitionInstr (inserted by
polymorphic inlining) must be treated properly as loads/stores to the
original object.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//25640004
------------------------------------------------------------------------
r28158 | bak@google.com | 2013-10-02 22:01:56 +0900 (水, 02 10月 2013) | 8 lines

- Eliminated the excessive prefixing in the renamer of dart2dart.
- Increased a table size from 128 to 1024. Used in the parser for token compression.
  Startup is now twice as fast for app that has been through dart2dart.
  (this is a temporary fix for issue 13747)

R=kasperl@google.com

Review URL: https://codereview.chromium.org//25713002
------------------------------------------------------------------------
r28135 | jacobr@google.com | 2013-10-02 08:48:45 +0900 (水, 02 10月 2013) | 6 lines

Respond to Ivan's code review comments from previous TBR cl.

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//25418002
------------------------------------------------------------------------
r28131 | hausner@google.com | 2013-10-02 08:00:08 +0900 (水, 02 10月 2013) | 7 lines

Support compile time constant conditional expressions

Per latest spec (section 12.1, 0.61 draft)

R=regis@google.com

Review URL: https://codereview.chromium.org//25505008
------------------------------------------------------------------------
r28112 | turnidge@google.com | 2013-10-02 04:34:12 +0900 (水, 02 10月 2013) | 16 lines

Refactor some deoptimization code.

Primarily this change moves deoptimization state/code out of Isolate
and into DeoptContext (formerly DeoptimizationContext).  The lifetime
of DeoptizationContext changes to survive through the entire
deoptimization process.

Some minor renaming.  DeoptizationContext -> DeoptContext to make it
consistent with DeoptInstr and to save my wrists.

New files deferred_object.{cc,h} contain a bunch of the stuff lifted
from isolate.{cc,h}.

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//24834002
------------------------------------------------------------------------
r28109 | srdjan@google.com | 2013-10-02 03:48:37 +0900 (水, 02 10月 2013) | 5 lines

Factor out throwing of argument error.

R=asiva@google.com

Review URL: https://codereview.chromium.org//25566002
------------------------------------------------------------------------
r28107 | regis@google.com | 2013-10-02 03:26:05 +0900 (水, 02 10月 2013) | 7 lines

Do not share type arguments of mixin types, but clone them to avoid finalization
errors when cycles are involved (issue 13688).
Add regression test.

R=hausner@google.com

Review URL: https://codereview.chromium.org//25569002
------------------------------------------------------------------------
r28106 | rmacnak@google.com | 2013-10-02 03:23:24 +0900 (水, 02 10月 2013) | 7 lines

Make ClassMirror.newInstance deal with reordered etc type arguments for redirecting factories.

BUG=http://dartbug.com/11781
BUG=http://dartbug.com/13365
R=regis@google.com

Review URL: https://codereview.chromium.org//25097005
------------------------------------------------------------------------
r28104 | hausner@google.com | 2013-10-02 02:22:39 +0900 (水, 02 10月 2013) | 7 lines

Disallow double in case clauses and const map literal keys

Implements the latest Spec decisions and clarifications.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//25561002
------------------------------------------------------------------------
r28102 | srdjan@google.com | 2013-10-02 01:48:12 +0900 (水, 02 10月 2013) | 5 lines

Improve performance of string buffer by modifying concatAll native to allow growable array and an interval. Eliminate unnecessary check for String elements in release mode.

R=asiva@google.com

Review URL: https://codereview.chromium.org//25087006
------------------------------------------------------------------------
r28087 | kmillikin@google.com | 2013-10-01 20:17:44 +0900 (火, 01 10月 2013) | 6 lines

x64: Use a short encoding of addq and subq for 32-bit immediates.

BUG=https://code.google.com/p/dart/issues/detail?id=13681
R=fschneider@google.com

Review URL: https://codereview.chromium.org//25491002
------------------------------------------------------------------------
r28085 | kmillikin@google.com | 2013-10-01 19:22:47 +0900 (火, 01 10月 2013) | 11 lines

Pattern match on generated code to find edge counters.

In unoptimized code, use platform-specific pattern matching on generated
code to find edge counter arrays.  Previously we searched pointer offsets,
but that does not work on platforms that encode the edge counters as indexes
into an object pool (i.e., x64, ARM, MIPS).

BUG=
R=fschneider@google.com, zra@google.com

Review URL: https://codereview.chromium.org//24744002
------------------------------------------------------------------------
r28084 | fschneider@google.com | 2013-10-01 19:10:50 +0900 (火, 01 10月 2013) | 14 lines

Dart VM: Simplify code generation for equality operators.

By inserting the necessary checks for null inside the callee
at the AST level, the code generation of == operations can be
greatly simplified.

This is a performance-neutral change and a step for allowing
generic inlining of arbitrary == methods. So far we could only
inline them for a common set of types in the flow graph
optimizer.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//24203004
------------------------------------------------------------------------
r28076 | jacobr@google.com | 2013-10-01 09:45:13 +0900 (火, 01 10月 2013) | 5 lines

TBR: fix build break

BUG=

Review URL: https://codereview.chromium.org//25415002
------------------------------------------------------------------------
r28075 | jacobr@google.com | 2013-10-01 09:27:50 +0900 (火, 01 10月 2013) | 5 lines

TBR: fix build break

BUG=

Review URL: https://codereview.chromium.org//25392003
------------------------------------------------------------------------
r28073 | jacobr@google.com | 2013-10-01 09:08:01 +0900 (火, 01 10月 2013) | 6 lines

Fix for issue where external one byte strings cannot be escaped. This occured in practice when requesting all library names for a Polymer.dart example The likely reason why the issue occurs in this case but not others is that some of the libraries are generated using data urls. Added some tests for EscapeSpecialCharacters as it did not have any tests.

BUG=
R=hausner@google.com

Review URL: https://codereview.chromium.org//25344002
------------------------------------------------------------------------
r28069 | zra@google.com | 2013-10-01 07:11:24 +0900 (火, 01 10月 2013) | 5 lines

Fixed x64 assembler tests that load large immediates.

R=asiva@google.com

Review URL: https://codereview.chromium.org//25354002
------------------------------------------------------------------------
r28067 | zra@google.com | 2013-10-01 05:19:23 +0900 (火, 01 10月 2013) | 5 lines

Eliminates more large immediates from x64 code.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//25118002
------------------------------------------------------------------------
r28066 | zra@google.com | 2013-10-01 05:17:48 +0900 (火, 01 10月 2013) | 9 lines

Adds the BreakpointRuntime stub to ARM and MIPS.

Also:
- Makes some stub calls patachable.
- Updates pkg.status for an unrelated failing test.

R=regis@google.com

Review URL: https://codereview.chromium.org//25092010
------------------------------------------------------------------------
r28064 | hausner@google.com | 2013-10-01 03:49:32 +0900 (火, 01 10月 2013) | 9 lines

Fix expression evaluation in library context

- Use correct source for patch functions when class
  finalizer reports error
- Reinstate support for class in Dart_EvaluateExpr

R=regis@google.com

Review URL: https://codereview.chromium.org//25284003
------------------------------------------------------------------------
r28052 | fschneider@google.com | 2013-09-30 23:29:44 +0900 (月, 30  9月 2013) | 5 lines

Revert r28050 due to crashes with --optimization-counter-threshold=5.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//25277002
------------------------------------------------------------------------
r28050 | fschneider@google.com | 2013-09-30 21:41:28 +0900 (月, 30  9月 2013) | 20 lines

Optimize conditional branches that have same true/false targets.

Branches that have the same true/false target, or where both
target blocks reach the same common join block via empty blocks
can be replaced by a goto to the common join block.

In code like this

var a = unknown();
var b = null;
if (a == null || b == null) {
  ...
}

it eliminates the test (a == null) if b is known to be null. Until now,
the compiler could only eliminate the test for b, if a was known.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23549020
------------------------------------------------------------------------
r28032 | asiva@google.com | 2013-09-28 08:50:13 +0900 (土, 28  9月 2013) | 4 lines

Rename NativeReceiver to NativeArg0 as this method is used not necessarily
to access the receiver in dartium. It is used to access the first argument.

Review URL: https://codereview.chromium.org//25136002
------------------------------------------------------------------------
r28030 | mlippautz@google.com | 2013-09-28 08:22:49 +0900 (土, 28  9月 2013) | 19 lines

Improve code coverage generation.

- Remove function name from output.
- Remove column from output (side effect: We can use fast version of
  GetTokenLocation())
- Insert HANDLESCOPES
- Fold source file entries where easily possible, i.e., fold consecutive entries
  created by functions in the same source file.
- Change format to

  [{
     "source": "...",
     "hits": [<line>,<hitcount>, ...]
   }, ... ]

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//24654003
------------------------------------------------------------------------
r28028 | asiva@google.com | 2013-09-28 07:22:23 +0900 (土, 28  9月 2013) | 7 lines

- Add special access for receiver as it is a frequently used operation
- Merge closure/instance function bitfields into one bitfield to simplify
  access to arguments.

R=regis@google.com

Review URL: https://codereview.chromium.org//25062003
------------------------------------------------------------------------
r28026 | srdjan@google.com | 2013-09-28 06:00:59 +0900 (土, 28  9月 2013) | 5 lines

Add a is_recognized bit to function kind field. Improves performance of method recognizer and thus the compilation speed.

R=asiva@google.com

Review URL: https://codereview.chromium.org//25050004
------------------------------------------------------------------------
r28017 | asiva@google.com | 2013-09-28 01:55:20 +0900 (土, 28  9月 2013) | 5 lines

Fix 13594.

R=iposva@google.com

Review URL: https://codereview.chromium.org//24785002
------------------------------------------------------------------------
r28015 | hausner@google.com | 2013-09-28 01:40:33 +0900 (土, 28  9月 2013) | 5 lines

Slight optimization of case clause type checks

Address review comment.

Review URL: https://codereview.chromium.org//24915002
------------------------------------------------------------------------
r28000 | fschneider@google.com | 2013-09-27 19:27:47 +0900 (金, 27  9月 2013) | 11 lines

Bug fix and cleanup of inlining of recognized [] methods.

1. Fix a bug with polymorphic inlining of [] on platforms that
don't support inlined SIMD ops (e.g. MIPS),
or unboxed int32/uint32. (ia32 with SSE <4.1).

2. Cleanup of duplicate code.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24567003
------------------------------------------------------------------------
r27983 | sra@google.com | 2013-09-27 11:01:43 +0900 (金, 27  9月 2013) | 3 lines

Revert "Revert "Reinstate type checks in Math.min and Math.max""

Review URL: https://codereview.chromium.org//24918003
------------------------------------------------------------------------
r27982 | mlippautz@google.com | 2013-09-27 10:28:12 +0900 (金, 27  9月 2013) | 8 lines

Implementation for ClosureMirror.findInContext.

Fixes issue 5897.

BUG=https://code.google.com/p/dart/issues/detail?id=5897
R=asiva@google.com, gbracha@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//23633002
------------------------------------------------------------------------
r27981 | sra@google.com | 2013-09-27 10:15:58 +0900 (金, 27  9月 2013) | 3 lines

Revert "Reinstate type checks in Math.min and Math.max"

Review URL: https://codereview.chromium.org//24911003
------------------------------------------------------------------------
r27980 | sra@google.com | 2013-09-27 09:45:08 +0900 (金, 27  9月 2013) | 7 lines

Reinstate type checks in Math.min and Math.max

See Issue 11906 for discussion.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23658055
------------------------------------------------------------------------
r27979 | regis@google.com | 2013-09-27 09:26:22 +0900 (金, 27  9月 2013) | 5 lines

Support forwarding constructors for mixin typedefs (issue 11888).

R=hausner@google.com

Review URL: https://codereview.chromium.org//24896002
------------------------------------------------------------------------
r27968 | hausner@google.com | 2013-09-27 03:54:15 +0900 (金, 27  9月 2013) | 9 lines

Check types of case expressions

Implement checks to make sure all case expressions are of the same type and other restrictions.

This change assumes that it's ok to use double values in switch expressions. Will verify with those who are in the know.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//24768004
------------------------------------------------------------------------
r27964 | johnmccutchan@google.com | 2013-09-27 02:18:10 +0900 (金, 27  9月 2013) | 6 lines

Fix --gc_at_alloc

BUG=13619
R=asiva@google.com

Review URL: https://codereview.chromium.org//24775002
------------------------------------------------------------------------
r27950 | fschneider@google.com | 2013-09-26 22:12:59 +0900 (木, 26  9月 2013) | 13 lines

Fix optimized Math.pow on x64 with NaN exponents.

The libc implementation used by the optimized code differs
from the expected behaviour. It does not return double.NaN
as the Dart implementation of pow when the exponent is NaN.

The test fails when running with  a low optimization-counter-threshold=5.

BUG=https://code.google.com/p/dart/issues/detail?id=13543
TEST=math/double_pow_test
R=srdjan@google.com

Review URL: https://codereview.chromium.org//24695003
------------------------------------------------------------------------
r27919 | asiva@google.com | 2013-09-26 07:54:07 +0900 (木, 26  9月 2013) | 5 lines

Minor cleanup for the Null string case.

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//24660002
------------------------------------------------------------------------
r27916 | rmacnak@google.com | 2013-09-26 06:42:13 +0900 (木, 26  9月 2013) | 7 lines

Implement closurization of regular methods in ObjectMirror.getField in the VM.

BUG=http://dartbug.com/13001
BUG=http://dartbug.com/13002
R=asiva@google.com

Review URL: https://codereview.chromium.org//23441073
------------------------------------------------------------------------
r27895 | hausner@google.com | 2013-09-26 02:26:55 +0900 (木, 26  9月 2013) | 5 lines

Discard first line of multiline string if only whitespace

R=iposva@google.com

Review URL: https://codereview.chromium.org//24493007
------------------------------------------------------------------------
r27885 | zra@google.com | 2013-09-26 00:30:08 +0900 (木, 26  9月 2013) | 5 lines

Loads some large Smis from the object pool on x64.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//23594011
------------------------------------------------------------------------
r27882 | fschneider@google.com | 2013-09-26 00:00:53 +0900 (木, 26  9月 2013) | 6 lines

Fix x64 assembler in roundsd and pxor.

BUG=https://code.google.com/p/dart/issues/detail?id=13543
R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//24568002
------------------------------------------------------------------------
r27874 | fschneider@google.com | 2013-09-25 20:04:55 +0900 (水, 25  9月 2013) | 10 lines

VM: Fix CHA for Object.

Class hierarchy analysis does not track subclasses of Object.
Therefore, it needs to safely assume that any functions has an override.

This fixes test failures when running with --optimization-counter-threshold=5.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24558002
------------------------------------------------------------------------
r27868 | ajohnsen@google.com | 2013-09-25 18:20:40 +0900 (水, 25  9月 2013) | 6 lines

Re-enable VM isolate tests.

BUG=https://code.google.com/p/dart/issues/detail?id=6890
R=ricow@google.com

Review URL: https://codereview.chromium.org//24542002
------------------------------------------------------------------------
r27863 | bak@google.com | 2013-09-25 15:18:52 +0900 (水, 25  9月 2013) | 5 lines

Fixed an overflow bug in the compare function used by the heap histogram sorting.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23441082
------------------------------------------------------------------------
r27856 | hausner@google.com | 2013-09-25 07:16:19 +0900 (水, 25  9月 2013) | 7 lines

Eliminate legacy support for throw without expression.

Issue 13533.

R=mlippautz@google.com

Review URL: https://codereview.chromium.org//23910003
------------------------------------------------------------------------
r27850 | regis@google.com | 2013-09-25 05:26:12 +0900 (水, 25  9月 2013) | 6 lines

Address comments of committed change https://codereview.chromium.org/24397002/
Fix typo in Matthias last commit.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23452055
------------------------------------------------------------------------
r27833 | iposva@google.com | 2013-09-25 02:32:40 +0900 (水, 25  9月 2013) | 5 lines

- Use simplified token location call where appropriate.

R=asiva@google.com, hausner@google.com, mlippautz@google.com

Review URL: https://codereview.chromium.org//23850014
------------------------------------------------------------------------
r27827 | johnmccutchan@google.com | 2013-09-25 01:23:46 +0900 (水, 25  9月 2013) | 5 lines

Cleanup bit casting methods between SIMD types

R=zra@google.com

Review URL: https://codereview.chromium.org//24240020
------------------------------------------------------------------------
r27826 | hausner@google.com | 2013-09-25 01:14:28 +0900 (水, 25  9月 2013) | 13 lines

Improve NoSuchMethodError error messages

- Don't say there is no constructor with name X if there is one
  that has incompatible parameter list.
- Better error message when mismatched optional parameters are passed.
  (Prviously only the number of parameters was considered, but not
  names of named parameters for example.)

Fixes issue 6189.

R=regis@google.com

Review URL: https://codereview.chromium.org//24395007
------------------------------------------------------------------------
r27801 | fschneider@google.com | 2013-09-24 17:21:48 +0900 (火, 24  9月 2013) | 6 lines

Fix range checks for typed data in native code and the optimizer.

TEST=tests/standalone/typed_data_test.dart
R=asiva@google.com

Review URL: https://codereview.chromium.org//24239003
------------------------------------------------------------------------
r27791 | regis@google.com | 2013-09-24 09:25:01 +0900 (火, 24  9月 2013) | 7 lines

Support mixin application typedef as mixin in the VM (issues 9383, 12773).
Disallow Object as mixin (issue 10952).
Detect illegal cycles in mixins.

R=hausner@google.com

Review URL: https://codereview.chromium.org//24397002
------------------------------------------------------------------------
r27789 | asiva@google.com | 2013-09-24 08:53:39 +0900 (火, 24  9月 2013) | 16 lines

- Added Dart_GetNativeIsolateData so that the bindings code can access the IsolateCurrentData
  where possible without having to invoke Isolate::Current()
- Modified lookupWrapper to accept DartDOMData as a parameter so that the return to Dart functions
  won't invoke Isolate::Current()

Some Dromaeo numbers before this change:
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-attr getAttribute runs-per-second 1162.2
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-attr element_property_access runs-per-second 1255.6

after this change:
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-attr getAttribute runs-per-second 1237.6
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-attr element_property_access runs-per-second 1385.4

R=rmacnak@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//24376005
------------------------------------------------------------------------
r27786 | mlippautz@google.com | 2013-09-24 08:24:59 +0900 (火, 24  9月 2013) | 7 lines

Make Script::GetTokenLocation() and Script::TokenRangeAtLine() use token streams
where possible.

BUG=
R=hausner@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//24359005
------------------------------------------------------------------------
r27778 | johnmccutchan@google.com | 2013-09-24 01:58:49 +0900 (火, 24  9月 2013) | 5 lines

Add private TypedList getters and setters to the invisible list

R=asiva@google.com

Review URL: https://codereview.chromium.org//24285002
------------------------------------------------------------------------
r27774 | rmacnak@google.com | 2013-09-24 01:23:06 +0900 (火, 24  9月 2013) | 5 lines

Make Dart_IdentityEqual live up to its sepc and not leak boxing implementation detail. (Reland r27542.)

R=asiva@google.com

Review URL: https://codereview.chromium.org//24254004
------------------------------------------------------------------------
r27760 | fschneider@google.com | 2013-09-23 22:17:39 +0900 (月, 23  9月 2013) | 8 lines

Fix Linux perf profiling support.

This was broken after r27726 because Isolate::Current() is
NULL when the PerfCodeObserver is initialized.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24364002
------------------------------------------------------------------------
r27757 | fschneider@google.com | 2013-09-23 20:52:09 +0900 (月, 23  9月 2013) | 7 lines

VM: Fix bug in constant propagation with integer division and modulo.

BUG=https://code.google.com/p/dart/issues/detail?id=13498
TEST=tests/language/div_with_power_of_two2_test.dart
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24360002
------------------------------------------------------------------------
r27742 | fschneider@google.com | 2013-09-23 17:43:14 +0900 (月, 23  9月 2013) | 11 lines

Small cleanup in FlowGraphOptimizer.

Move inlining of Float32x4 and Uint32x4 getters into TryInliningRecognizedMethod.

Remove obsolete TODOs: The cases described are all handled by conventional
inlining. Unless there is a good performance or compilation-time reason, there is no reason
to add more cases to FlowGraphOptimizer.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//24108004
------------------------------------------------------------------------
r27727 | iposva@google.com | 2013-09-21 08:12:47 +0900 (土, 21  9月 2013) | 5 lines

- Fix C++11 string literal requirements.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23464105
------------------------------------------------------------------------
r27726 | iposva@google.com | 2013-09-21 06:37:48 +0900 (土, 21  9月 2013) | 6 lines

- Write the coverage data to a file instead of printing to stdout.
- Explicitly include lines with zero hits.

R=asiva@google.com, mlippautz@google.com

Review URL: https://codereview.chromium.org//24255013
------------------------------------------------------------------------
r27724 | rmacnak@google.com | 2013-09-21 06:17:19 +0900 (土, 21  9月 2013) | 3 lines

Remove Dart_[Qualified]ClassName.

Review URL: https://codereview.chromium.org//24252014
------------------------------------------------------------------------
r27719 | rmacnak@google.com | 2013-09-21 03:48:09 +0900 (土, 21  9月 2013) | 5 lines

Qualify calls from embedding API functions to other embedding API functions to appease the Windows build.

TBR

Review URL: https://codereview.chromium.org//23757063
------------------------------------------------------------------------
r27715 | rmacnak@google.com | 2013-09-21 03:29:56 +0900 (土, 21  9月 2013) | 5 lines

Never return a Dart_Handle on a dart::Class from the embedding API.

R=asiva@google.com

Review URL: https://codereview.chromium.org//24210003
------------------------------------------------------------------------
r27711 | mlippautz@google.com | 2013-09-21 01:36:45 +0900 (土, 21  9月 2013) | 8 lines

Use newline tokens when generating source from tokenstream.

Line numbers in generated source now match the actual source.

BUG=
R=iposva@google.com

Review URL: https://codereview.chromium.org//24272007
------------------------------------------------------------------------
r27710 | asiva@google.com | 2013-09-21 01:25:12 +0900 (土, 21  9月 2013) | 21 lines

- Modify toDart to first do a simple lookup in the appropriate table before going down the templatized
  morass of switch statements
- Add a returnToDart function so that the WeakPersistent Handle returned from a lookup/create of the wrapper
  could be returned as is without the need to call Dart_handleFromWeakPersistentHandle
- Use Dart_SetDoubleReturnValue for doubles

some DromaeoDartium numbers before this change:

CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-query getElementsByTagName(div) runs-per-second 84240.6
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-traverse nextSibling runs-per-second 207.91683326669332
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-query getElementsByTagName(*) runs-per-second 69599.2

some DromaeoDartium numbers after this change:

CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-query getElementsByTagName(div) runs-per-second 104252.4
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-traverse nextSibling runs-per-second 366.8
CONSOLE MESSAGE: RESULT: Dromaeo-drt dartium-dart dom-query getElementsByTagName(*) runs-per-second 94922.6

R=rmacnak@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//23681014
------------------------------------------------------------------------
r27700 | sgjesse@google.com | 2013-09-20 21:25:08 +0900 (金, 20  9月 2013) | 9 lines

Replace the memcpy macro with a lint check.

This fixes the build under libc++.  It also allows us to check the
Windows and Android code.  While at it, replace all uncaught instances
of memcpy with memmove.

R=sgjesse@google.com

Review URL: https://codereview.chromium.org//23578046
------------------------------------------------------------------------
r27699 | fschneider@google.com | 2013-09-20 21:14:06 +0900 (金, 20  9月 2013) | 8 lines

Clean up handling of guarded fields in the flow graph builder.

FlowGraphBuilder has a zone-allocated list of fields and passes it
on to the FlowGraph.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23589008
------------------------------------------------------------------------
r27695 | fschneider@google.com | 2013-09-20 19:35:01 +0900 (金, 20  9月 2013) | 10 lines

Reland: Fix bug in field type tracking and polymorphic inlining.

Original CL: https://codereview.chromium.org/24096018/

This fixes the bug by changing FlowGraphBuilder to a zone object
because it is needed by the inliner later in the pipeline.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24315002
------------------------------------------------------------------------
r27685 | sra@google.com | 2013-09-20 10:16:38 +0900 (金, 20  9月 2013) | 11 lines

Special-case for Bigint single-digit division

1. Detect when the divisor is a single Chunk (aka digit) and use a fast algorithm (speeds up toRadixString)

2. Use the fast algorithm directly in Bigint.toString()

This makes printing of Bigints much faster, but there is more that could be done.

R=asiva@google.com, floitsch@google.com

Review URL: https://codereview.chromium.org//23440022
------------------------------------------------------------------------
r27684 | johnmccutchan@google.com | 2013-09-20 09:59:42 +0900 (金, 20  9月 2013) | 5 lines

Expose field data, use class id, and merge all collections into "objects"

R=asiva@google.com

Review URL: https://codereview.chromium.org//24075002
------------------------------------------------------------------------
r27683 | rmacnak@google.com | 2013-09-20 09:33:24 +0900 (金, 20  9月 2013) | 5 lines

Setup the pool pointer when entering Dart from C++ so the intrinsic functions may rely on it being valid.

R=asiva@google.com, zra@google.com

Review URL: https://codereview.chromium.org//23480098
------------------------------------------------------------------------
r27682 | hausner@google.com | 2013-09-20 09:12:55 +0900 (金, 20  9月 2013) | 5 lines

Properly parse symbol literals in top-level expression

R=iposva@google.com

Review URL: https://codereview.chromium.org//23531075
------------------------------------------------------------------------
r27678 | hausner@google.com | 2013-09-20 07:02:45 +0900 (金, 20  9月 2013) | 9 lines

Fix function type parameter parsing

Corner case of final variables was wrong. In most cases, this went undetected because of the permissive type system of dart.

Fixes issue 13367.

R=regis@google.com

Review URL: https://codereview.chromium.org//24269010
------------------------------------------------------------------------
r27677 | mlippautz@google.com | 2013-09-20 06:46:50 +0900 (金, 20  9月 2013) | 13 lines

Introduce newline tokens into the token stream.

CL only introduces the tokens into the compressed token stream. We do not
use the newline tokens (yet).

Overhead:
snapshot: 6.4% (860k/808k)
compressed token stream (gen_snapshot): 21% (314312/259907)

BUG=
R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//23452043
------------------------------------------------------------------------
r27675 | asiva@google.com | 2013-09-20 05:32:16 +0900 (金, 20  9月 2013) | 5 lines

Revert 
https://code.google.com/p/dart/source/detail?r=27655
as it is causing dartium build breakage.

Review URL: https://codereview.chromium.org//23583054
------------------------------------------------------------------------
r27674 | sra@google.com | 2013-09-20 04:51:55 +0900 (金, 20  9月 2013) | 7 lines

Add bsr to ia32 disassembler

bsr is generated for bitLength.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23645015
------------------------------------------------------------------------
r27671 | hausner@google.com | 2013-09-20 03:08:26 +0900 (金, 20  9月 2013) | 3 lines

More fingerprint fixes, and fixing the FP verification option

Review URL: https://codereview.chromium.org//24249004
------------------------------------------------------------------------
r27669 | hausner@google.com | 2013-09-20 02:52:48 +0900 (金, 20  9月 2013) | 3 lines

Change more fingerprints

Review URL: https://codereview.chromium.org//23976007
------------------------------------------------------------------------
r27668 | hausner@google.com | 2013-09-20 02:39:16 +0900 (金, 20  9月 2013) | 7 lines

Implement symbol literals in the VM compiler

Issue 12171

R=iposva@google.com

Review URL: https://codereview.chromium.org//24240010
------------------------------------------------------------------------
r27655 | fschneider@google.com | 2013-09-19 20:21:11 +0900 (木, 19  9月 2013) | 16 lines

Fix bug in field type tracking and polymorphic inlining.

When inlining implicit getters via the polymorphic inliner
(and not through the flow graph optimizer) the fields loaded
must be added to the list of guarded fields that trigger
deoptimization when a store violated the field type guard.

Also, this CL avoids adding fields to the list from inlining
candidates that do not get inlined after all. Previously, the
optimizer pass on the callee graph would add guarded fields
even if the final graph does not get inlined.

TEST=tests/language/vm/optimized_guarded_field_test.dart
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24096018
------------------------------------------------------------------------
r27628 | hausner@google.com | 2013-09-19 01:02:30 +0900 (木, 19  9月 2013) | 10 lines

Fix redirecting constructors

Field initializer expressions must not be executed in redirecting
constructors.

Fixes issue 13347

R=regis@google.com

Review URL: https://codereview.chromium.org//23542051
------------------------------------------------------------------------
r27627 | fschneider@google.com | 2013-09-19 00:41:45 +0900 (木, 19  9月 2013) | 15 lines

Polymorphic inlining of [] operations.

This CL adds the necessary parts to enable polymorphic
inlining of recognized methods. For now it handles only
[]-calls. This helps code that deals with e.g. growable
and fixed-length lists.

The basic idea is to adapt the code in the flow graph
optimizer so that it can be used from the generic inliner.
Currently this adds a bit of boilerplate code which I intend
to reduce when adding more recognized methods to be handled.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23684059
------------------------------------------------------------------------
r27625 | fschneider@google.com | 2013-09-19 00:17:00 +0900 (木, 19  9月 2013) | 5 lines

Fix assertion in the parser about operator precedence.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24078019
------------------------------------------------------------------------
r27613 | lrn@google.com | 2013-09-18 21:32:47 +0900 (水, 18  9月 2013) | 14 lines

Change the order of bitwise operators and equality/relational operators.

Gives bitwise operators precedence above that of equality/relational operators.

This means that
  a & mask == something
no longer needs parentheses.

Since bitwise operators didn't work on booleans, and there are probably very few custom operator&'s that accept a boolean, this is expected to not break existing code.

BUG= http://dartbug.com/114
R=hausner@google.com, kasperl@google.com

Review URL: https://codereview.chromium.org//23710024
------------------------------------------------------------------------
r27602 | kmillikin@google.com | 2013-09-18 19:16:11 +0900 (水, 18  9月 2013) | 13 lines

Fix an off-by-one error in deoptimization compression.

When compressing the deoptimization info, suffixes of length one are not
shared (the compression is the same length as the original, but more
indirect).  However, they were grafted onto the trie as if they were shared,
i.e., one level lower than they should be.

Add debug code to verify the compression/decompression round trip.

BUG=dartbug.com/13273
R=fschneider@google.com

Review URL: https://codereview.chromium.org//23788012
------------------------------------------------------------------------
r27589 | mlippautz@google.com | 2013-09-18 10:16:07 +0900 (水, 18  9月 2013) | 10 lines

Catch potential integer overflows in bigint operations.

strlen() returns a size_t which usually is unsigned long. Since we assign it to
intptr_t, we need to check for a potential integer overflow. The (albeit very
unlikely) case is lengths>2G on 32bit platforms.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//23754006
------------------------------------------------------------------------
r27581 | jacobr@google.com | 2013-09-18 05:52:22 +0900 (水, 18  9月 2013) | 8 lines

Make Dart_ScriptGetTokenInfo account for line_offset() and col_offset()

Cleanup bugs in wrapExpressionAsClosure Fix bug in how setters were handled and filter out 'this' from local variables list.

BUG=
R=hausner@google.com

Review URL: https://codereview.chromium.org//23526056
------------------------------------------------------------------------
r27574 | zra@google.com | 2013-09-18 01:28:06 +0900 (水, 18  9月 2013) | 5 lines

Cleanup of some comparisons on ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//23622037
------------------------------------------------------------------------
r27545 | ricow@google.com | 2013-09-17 15:29:47 +0900 (火, 17  9月 2013) | 5 lines

Revert revision 27542 "Make Dart_IdentityEqual live up to its spec and not leak boxing implementation detail."

This is causing checked mode failures on all vm bots.

Review URL: https://codereview.chromium.org//23587024
------------------------------------------------------------------------
r27542 | rmacnak@google.com | 2013-09-17 10:30:30 +0900 (火, 17  9月 2013) | 5 lines

Make Dart_IdentityEqual live up to its spec and not leak boxing implementation detail.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23464073
------------------------------------------------------------------------
r27541 | rmacnak@google.com | 2013-09-17 10:10:45 +0900 (火, 17  9月 2013) | 5 lines

Make Dart_FunctionOwner return handles on Types rather than Classes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23757051
------------------------------------------------------------------------
r27539 | rmacnak@google.com | 2013-09-17 09:06:28 +0900 (火, 17  9月 2013) | 5 lines

Add Dart_QualifiedClassName.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23851038
------------------------------------------------------------------------
r27536 | asiva@google.com | 2013-09-17 06:58:00 +0900 (火, 17  9月 2013) | 5 lines

Allocate pending_classes array in new gen.

R=hausner@google.com

Review URL: https://codereview.chromium.org//24187002
------------------------------------------------------------------------
r27535 | asiva@google.com | 2013-09-17 06:57:46 +0900 (火, 17  9月 2013) | 7 lines

Use CHECK_ISOLATE instead of the more heavy DARTSCOPE for
Dart_HandleFromPersistent and DartHandleFromWeakPersistent. These
functions do not allocate any VM handles.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23537051
------------------------------------------------------------------------
r27523 | mlippautz@google.com | 2013-09-17 01:53:24 +0900 (火, 17  9月 2013) | 8 lines

Add metadata to type parameters. Reflective access is provided by TypeVariableMirror.

Addresses issue 10906.

BUG=https://code.google.com/p/dart/issues/detail?id=10906
R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//23872010
------------------------------------------------------------------------
r27507 | zra@google.com | 2013-09-14 08:36:32 +0900 (土, 14  9月 2013) | 3 lines

Revert last commit

Review URL: https://codereview.chromium.org//23889034
------------------------------------------------------------------------
r27506 | zra@google.com | 2013-09-14 08:29:14 +0900 (土, 14  9月 2013) | 5 lines

Allows build of the standalone VM for ARM adroid.

R=iposva@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//23788009
------------------------------------------------------------------------
r27505 | hausner@google.com | 2013-09-14 06:37:16 +0900 (土, 14  9月 2013) | 7 lines

Make hidden initializing formal parameters invisible to the debugger

Fixes issue 13143.

R=regis@google.com

Review URL: https://codereview.chromium.org//23460040
------------------------------------------------------------------------
r27494 | zra@google.com | 2013-09-14 03:10:04 +0900 (土, 14  9月 2013) | 7 lines

Fixes slow object pool search on x64.

Issue 13144.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23723008
------------------------------------------------------------------------
r27490 | iposva@google.com | 2013-09-14 01:55:57 +0900 (土, 14  9月 2013) | 5 lines

- More use of pre-allocated read-only handles.

R=zra@google.com

Review URL: https://codereview.chromium.org//23510006
------------------------------------------------------------------------
r27466 | kasperl@google.com | 2013-09-13 16:52:11 +0900 (金, 13  9月 2013) | 6 lines

Double the default heap size on 64-bit platforms to account for all pointers taking up twice the amount of memory.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//24113004
------------------------------------------------------------------------
r27461 | hausner@google.com | 2013-09-13 08:45:41 +0900 (金, 13  9月 2013) | 7 lines

Make "as" a built-in identifier aka pseudo keyword

Fixes issues 12551, 13021

R=regis@google.com

Review URL: https://codereview.chromium.org//23542041
------------------------------------------------------------------------
r27446 | hausner@google.com | 2013-09-13 05:44:34 +0900 (金, 13  9月 2013) | 8 lines

Detect illegal class member names

Make it a compile time error if a class member has the same name
as the class.

Fixes issue 13236.

Review URL: https://codereview.chromium.org//23513044
------------------------------------------------------------------------
r27445 | iposva@google.com | 2013-09-13 05:44:26 +0900 (金, 13  9月 2013) | 7 lines

- Tighten assertions in the X64 assembler related to object pool usage.
- Adjust code passing objects into the assembler.
- Fix stack smashing bug in test.

R=zra@google.com

Review URL: https://codereview.chromium.org//23454032
------------------------------------------------------------------------
r27440 | jacobr@google.com | 2013-09-13 02:45:42 +0900 (金, 13  9月 2013) | 6 lines

Add "function" as an argument to Dart_ActivationFrameInfo

BUG=
R=hausner@google.com

Review URL: https://codereview.chromium.org//23609032
------------------------------------------------------------------------
r27425 | fschneider@google.com | 2013-09-12 19:42:26 +0900 (木, 12  9月 2013) | 7 lines

Fix bug with deoptimization of SIMD Uint32x4 values.

The deoptimizer created the wrong kind of value for those.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23983030
------------------------------------------------------------------------
r27420 | johnmccutchan@google.com | 2013-09-12 16:29:20 +0900 (木, 12  9月 2013) | 5 lines

Do not eliminate GuardFieldInstr when guarding list length.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//24094004
------------------------------------------------------------------------
r27418 | mlippautz@google.com | 2013-09-12 10:06:43 +0900 (木, 12  9月 2013) | 9 lines

Fix reparsing of function parameters that include type parameters.

The parser is now properly initializing parsed_function/current_function to make
internal lookups work (instead of crashing).

BUG=
R=hausner@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//24019007
------------------------------------------------------------------------
r27417 | rmacnak@google.com | 2013-09-12 09:48:16 +0900 (木, 12  9月 2013) | 7 lines

Fill in type arguments when creating an object from the mirrors or embedding API.

BUG=http://dartbug.com/13186
BUG=http://dartbug.com/12921
R=regis@google.com

Review URL: https://codereview.chromium.org//23983026
------------------------------------------------------------------------
r27395 | mlippautz@google.com | 2013-09-12 01:56:12 +0900 (木, 12  9月 2013) | 12 lines

Checks CObject lengths in native API.

Also converts the API to use intptr_t instead of a mixture of int64_t and int. Internally all variable length objects have lengths and maximum values represented as intptr_t (actually Smi ranges). In order to check for these maximum lengths we need to have a common type for 32 and 64 bit platforms.

Helping constructs like IOBuffer can still use 64bit lengths, but have to check that there values are actually in the domain of intptr_t as soon as internal objects are created.

Addresses issue 4314.

BUG=
R=asiva@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//23532048
------------------------------------------------------------------------
r27393 | hausner@google.com | 2013-09-12 01:21:25 +0900 (木, 12  9月 2013) | 7 lines

Update unresolved name handling with library prefixes

Fixes issue 12913

R=iposva@google.com

Review URL: https://codereview.chromium.org//23480064
------------------------------------------------------------------------
r27390 | mlippautz@google.com | 2013-09-12 01:10:43 +0900 (木, 12  9月 2013) | 9 lines

Remove unreachable code in mirrors.

The only case where we do not set the name in the constructor is for anonymous
mixin applications.

BUG=
R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//23531037
------------------------------------------------------------------------
r27377 | kmillikin@google.com | 2013-09-11 21:32:58 +0900 (水, 11  9月 2013) | 10 lines

Fix a bug in block reordering/block compaction.

The compiler assumes (a) the graph entry is followed in the block order by
its normal entry, and (b) the normal entry block is non-empty.  There is not
necessarily true, so stop assuming it.

BUG=https://code.google.com/p/dart/issues/detail?id=13101
R=fschneider@google.com

Review URL: https://codereview.chromium.org//23766021
------------------------------------------------------------------------
r27363 | regis@google.com | 2013-09-11 09:41:07 +0900 (水, 11  9月 2013) | 8 lines

Simplify VM internal representation of a mixin application clause (MixinAppType
object) by removing some redundant field and type arguments.
Tolerate mixins with wrong number of type arguments and update tests.
Note: this is a first cleanup step in preparation of more mixin bug fixes.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23619026
------------------------------------------------------------------------
r27362 | zra@google.com | 2013-09-11 08:46:09 +0900 (水, 11  9月 2013) | 5 lines

Better handling of zero in compare and branch for MIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//23537030
------------------------------------------------------------------------
r27348 | iposva@google.com | 2013-09-11 03:11:29 +0900 (水, 11  9月 2013) | 4 lines

- Add missing AddProperty function, which was lost during reformatting.
- Reenable vmservice tests.

Review URL: https://codereview.chromium.org//23781005
------------------------------------------------------------------------
r27346 | iposva@google.com | 2013-09-11 02:47:55 +0900 (水, 11  9月 2013) | 3 lines

- Disallow copy constructors.

Review URL: https://codereview.chromium.org//23903034
------------------------------------------------------------------------
r27345 | iposva@google.com | 2013-09-11 02:31:37 +0900 (水, 11  9月 2013) | 3 lines

- Add missing explicit in constructor.

Review URL: https://codereview.chromium.org//24088007
------------------------------------------------------------------------
r27344 | iposva@google.com | 2013-09-11 02:21:59 +0900 (水, 11  9月 2013) | 8 lines

- Base JSON stream printing on stack objects.
- Simplify creation of a JSONStream.

- Add experimental coverage output to the VM.

R=asiva@google.com, johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23875015
------------------------------------------------------------------------
r27338 | hausner@google.com | 2013-09-11 00:30:52 +0900 (水, 11  9月 2013) | 12 lines

Fix debugger expression evaluation for top-level functions

The temporary class that holds the expression to be evaluated
must be marked as finalized.

Added Jacob's closure tests.

Fixes issue 13192.

R=jacobr@google.com

Review URL: https://codereview.chromium.org//23825006
------------------------------------------------------------------------
r27312 | hausner@google.com | 2013-09-10 06:52:40 +0900 (火, 10  9月 2013) | 19 lines

Update handling of ambiguous name references

Update VM to latest spec. Referencing a name that is imported
from more than one library is no longer a compile-time error.
If one of the sources of an ambiguous reference is a dart library,
the dart library declaration is automatically hidden.

Also fixes a bug where looking up a getter name in a library
found the getter even though the name is filtered out in the
'hide' combinator.

Long-term we should fix the need for repeatedly convert between
the mangled getter and setter names and the untangled name.

Fixes 12915, 12913, 12724.

R=regis@google.com

Review URL: https://codereview.chromium.org//23484020
------------------------------------------------------------------------
r27303 | vsm@google.com | 2013-09-10 02:35:27 +0900 (火, 10  9月 2013) | 5 lines

Fix compiler warning

R=asiva@google.com

Review URL: https://codereview.chromium.org//24075003
------------------------------------------------------------------------
r27302 | mlippautz@google.com | 2013-09-10 02:26:07 +0900 (火, 10  9月 2013) | 5 lines

"Reverting 27298"

BUG=

Review URL: https://codereview.chromium.org//23816010
------------------------------------------------------------------------
r27298 | mlippautz@google.com | 2013-09-10 01:50:41 +0900 (火, 10  9月 2013) | 8 lines

Add length checks to ApiMessageWriter.

Addresses issue 4314.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//23479010
------------------------------------------------------------------------
r27295 | zra@google.com | 2013-09-10 00:39:26 +0900 (火, 10  9月 2013) | 5 lines

Sets a register aside on x64 for use as a pool-pointer. It is loaded and restored from the code object on Frame entry and exit. All LoadObject calls that can, and many calls and jumps through ExternalLabels now use the pool-pointer. The --compiler-stats flag when running dart2js indicates that code size is reduced ~13%, and more is probably possible.

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//22825023
------------------------------------------------------------------------
r27292 | kmillikin@google.com | 2013-09-09 23:54:45 +0900 (月, 09  9月 2013) | 9 lines

Fix the flag --reorder-basic-blocks so it works to disable reordering.

Temporarily set the flag to false by default to avoid a bad interaction
between block reordering and empty block compaction (dartbug.com/13101).

BUG=https://code.google.com/p/dart/issues/detail?id=13101
R=fschneider@google.com

Review URL: https://codereview.chromium.org//23523039
------------------------------------------------------------------------
r27291 | johnmccutchan@google.com | 2013-09-09 23:45:59 +0900 (月, 09  9月 2013) | 5 lines

Add cvtsd2ss into X64 disassembler

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23653014
------------------------------------------------------------------------
r27288 | johnmccutchan@google.com | 2013-09-09 21:39:52 +0900 (月, 09  9月 2013) | 5 lines

Fix large performance regression in Box2D, MD5, and SHA1 benchmarks caused by https://codereview.chromium.org/22915008/

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23684036
------------------------------------------------------------------------
r27282 | kmillikin@google.com | 2013-09-09 19:20:55 +0900 (月, 09  9月 2013) | 20 lines

Change --print-ast output to be more regular.

The print-ast output is useful for debugging front end issues.  It is a mix
of fully-parenthesized prefix notation (i.e., Lisp S-expressions) with some
infix.

It is not valid S-expressions for various other reasons.  Most obviously, it
uses ' (single quote) instead of " (double quote) to delimit strings.

This change makes the print-ast output a valid Scheme S-expression.  It can
be pretty printed by copying it, quoting it (by preceding it with a single
quote), and evaluating it at the REPL of a Scheme implementation.

Also, the AST node pretty names are changed to predictably match the class
name.  It doesn't seem helpful to have them be arbitrary.

BUG=
R=regis@google.com

Review URL: https://codereview.chromium.org//23923005
------------------------------------------------------------------------
r27280 | johnmccutchan@google.com | 2013-09-09 14:48:01 +0900 (月, 09  9月 2013) | 5 lines

Replace guarded list length field loads with constants

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23584002
------------------------------------------------------------------------
r27279 | johnmccutchan@google.com | 2013-09-09 06:44:42 +0900 (月, 09  9月 2013) | 5 lines

Tests for GuardField length check along with bug fixes

R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//22915008
------------------------------------------------------------------------
r27269 | sra@google.com | 2013-09-07 07:22:26 +0900 (土, 07  9月 2013) | 19 lines

Esoteric bit operations.

- bit length
- truncate to signed fixed width integer
- truncate to unsigned fixed width integer

This change is motivated by a program that spends 20-30% of its time here:
    // TODO(5828): Replace this with a bit-length method on int when available.
    int n_bitLength = this.n.toRadixString(2).length;

See Also
https://code.google.com/p/dart/issues/detail?id=5828#c3
https://code.google.com/p/dart/issues/detail?id=6486#c2
https://code.google.com/p/dart/issues/detail?id=5798#c5
https://code.google.com/p/dart/issues/detail?id=12008

R=lrn@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23645003
------------------------------------------------------------------------
r27256 | srdjan@google.com | 2013-09-07 03:14:53 +0900 (土, 07  9月 2013) | 5 lines

For trigonometric functions call to C-libraries: they are faster than x87 operations (3% on Box2D). This also enables quicker trigonometrics on ARM and MIPS. TODO: Make InvokeMathCFunction more flexible so that it can handle both static and instance calls

R=zra@google.com

Review URL: https://codereview.chromium.org//22853009
------------------------------------------------------------------------
r27254 | jacobr@google.com | 2013-09-07 02:54:05 +0900 (土, 07  9月 2013) | 6 lines

Fix bug where Script files that only contained patches were lost from the list of LoadedScripts() This resulted in incorrect stack traces for int.parse Many Script files containing patches also contained non-patch classes or top level members and so they still worked.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//23982002
------------------------------------------------------------------------
r27248 | fschneider@google.com | 2013-09-06 22:55:24 +0900 (金, 06  9月 2013) | 22 lines

Remove inlining restriction of calls to the == operator.

This CL is the first step in enabling full inlining of == calls.
Previously, calls to any function with the name "==" were not considered
for inlining because super-calls were not handled correctly. Instead
  of implementing == semantics for super calls in the back-end, the parser
now expands super calls to == into 

let t1 = left, t2 = right {
  (t1 === null  || t2 === null) ? t1 === t2
                                : static_call(super.==, t1, t2)
}

This change removes a bit of platform-specific assembly. Normal instance calls
to == are still translated as before. Expanding those at the AST level would
incur a too high cost in terms of (unoptimized) code size, and also would be
an obstruction for optimizations of equality. The plan is to expand those
only at optimization time if there is an inlineable instance call to ==.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23627009
------------------------------------------------------------------------
r27244 | kmillikin@google.com | 2013-09-06 20:54:26 +0900 (金, 06  9月 2013) | 24 lines

Disentangle AstNode::Name and AstNode::ShortName.

The Name function is used for pretty printing except that for a few
node types we rely on a specific name for implementation correctness.
Overriding the pretty printing function to get out a type name, or a
variable name, or an operator symbol name, is risky.

1. Code that relies on the semantics of the name will break if the
   pretty name is changed.

2. Pretty printing is less useful.  For instance, LoadLocalNode just
   prints the variable name (twice, once as the AST constructor and
   once in quotes as the variable name).  This is confusing if the
   variable happens to have the same name as one of the other pretty
   names, e.g., args or seq.

Now, there is a virtual function to get the pretty name but classes do
not change it to communicate other information (type names, variable
names, operator names).

BUG=
R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23960003
------------------------------------------------------------------------
r27218 | hausner@google.com | 2013-09-06 07:27:52 +0900 (金, 06  9月 2013) | 6 lines

Be consistent with number scanning

If 1.e+2 is interpreted as an integer literal followed by other tokens, then
so should 1e be interpreted as an integer literal followed by identifier e.

Review URL: https://codereview.chromium.org//23996003
------------------------------------------------------------------------
r27216 | hausner@google.com | 2013-09-06 07:11:50 +0900 (金, 06  9月 2013) | 10 lines

Fix number scanning

Removing an old, Dash-era hack that makes 2is a faulty number
literal rather than the number 2 followed by the identifier or
keyword "is".

Also fix number_identifier_test.dart which contains an access
to a non-existent getter "memberName" of class NoSuchMethodError.

Review URL: https://codereview.chromium.org//23711004
------------------------------------------------------------------------
r27209 | srdjan@google.com | 2013-09-06 05:25:00 +0900 (金, 06  9月 2013) | 5 lines

Traverse inlined frames lazily when printing the stacktrace. No need to carry separate function and code array, since function can always be extracted from code.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23964003
------------------------------------------------------------------------
r27189 | fschneider@google.com | 2013-09-05 20:07:09 +0900 (木, 05  9月 2013) | 3 lines

Small code cleanup in the assembler/simulator.

Review URL: https://codereview.chromium.org//23578013
------------------------------------------------------------------------
r27168 | sra@google.com | 2013-09-05 08:58:37 +0900 (木, 05  9月 2013) | 5 lines

Implement BigintOperations::MultiplyWithDigit

R=iposva@google.com

Review URL: https://codereview.chromium.org//23479024
------------------------------------------------------------------------
r27166 | asiva@google.com | 2013-09-05 08:42:13 +0900 (木, 05  9月 2013) | 8 lines

1. Add flag --trace-api to trace API function invocation
2. Add tracing of external native functions under --trace-natives flag
3. Added a _printCurrentStacktrace() function so that one could get a
   dart stack trace under 'gdb' when in a native or runtime function.

R=regis@google.com

Review URL: https://codereview.chromium.org//23453035
------------------------------------------------------------------------
r27157 | regis@google.com | 2013-09-05 07:21:36 +0900 (木, 05  9月 2013) | 6 lines

Keep track of the application of a mixin type to a mixin application class,
which includes setting up its type parameters (fix issue 12871).

R=asiva@google.com

Review URL: https://codereview.chromium.org//23453024
------------------------------------------------------------------------
r27140 | srdjan@google.com | 2013-09-05 04:36:20 +0900 (木, 05  9月 2013) | 5 lines

Change inlined stack frame iterator to use code and pc instead of frame.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23494026
------------------------------------------------------------------------
r27136 | hausner@google.com | 2013-09-05 03:00:02 +0900 (木, 05  9月 2013) | 9 lines

Make showHide combinators work with getter/setter names

Adding test language/import_show_test.dart

Fixes issue 9535

R=regis@google.com

Review URL: https://codereview.chromium.org//23810003
------------------------------------------------------------------------
r27134 | rmacnak@google.com | 2013-09-05 02:12:28 +0900 (木, 05  9月 2013) | 5 lines

Support named and optional positional arguments in reflective invocation.

R=ahe@google.com, regis@google.com

Review URL: https://codereview.chromium.org//23604003
------------------------------------------------------------------------
r27082 | rmacnak@google.com | 2013-09-04 07:50:15 +0900 (水, 04  9月 2013) | 7 lines

Implement ParameterMirror.metadata.

BUG=http://dartbug.com/10906
BUG=http://dartbug.com/11418
R=asiva@google.com

Review URL: https://codereview.chromium.org//23224016
------------------------------------------------------------------------
r27079 | hausner@google.com | 2013-09-04 07:19:27 +0900 (水, 04  9月 2013) | 13 lines

Do not export library prefix names used in a library

The spec is unclear whether library prefix names are part of
the export namespace of a library or whether they are private
to that library. The latter makes more sense and is what dart2js
implements, so here's a VM change that implements the same
behavior. Spec will be clarified.

Fixes issue 12713.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23613006
------------------------------------------------------------------------
r27075 | rmacnak@google.com | 2013-09-04 05:11:11 +0900 (水, 04  9月 2013) | 7 lines

Implement InstanceMirror.== in dart2js and InstanceMirror.hashCode in the VM and dart2js.

BUG=http://dartbug.com/12909
BUG=http://dartbug.com/12919
R=ahe@google.com, asiva@google.com

Review URL: https://codereview.chromium.org//23460013
------------------------------------------------------------------------
r27072 | zra@google.com | 2013-09-04 03:23:43 +0900 (水, 04  9月 2013) | 10 lines

Preserves callee-saved FPU registers on ARM

Preserves callee-saved FPU registers on ARM when
going from C++ to Dart code. Adds assertions to
the simulator to make sure this is being done
correctly.

R=regis@google.com

Review URL: https://codereview.chromium.org//23549013
------------------------------------------------------------------------
r27063 | zra@google.com | 2013-09-04 00:17:02 +0900 (水, 04  9月 2013) | 5 lines

Saves callee-saved fpu registers on MIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//23671003
------------------------------------------------------------------------
r27058 | fschneider@google.com | 2013-09-03 23:02:53 +0900 (火, 03  9月 2013) | 15 lines

Simplify compilation of relational operators.

Instead of having a separate IL instructions relational comparisons
are built as normal instance calls initially. When optimized, we replace
the instance call with a smi/double/mint comparison instruction.

This enables generic inlining of relational operator calls and simplifies
code generation, too.

Merging comparisons with branches is done in the optimizing compiler's
branch simplification phase.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23757016
------------------------------------------------------------------------
r27037 | fschneider@google.com | 2013-09-03 19:56:43 +0900 (火, 03  9月 2013) | 8 lines

Follow-up fix to my change to IsPowerOfTwo: Alignment of one means no alignment, not zero.

We assert that the alignment is a power of two. Therefore, platforms that do not need 
alignment should return alignment of one instead of zero.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23745008
------------------------------------------------------------------------
r27033 | fschneider@google.com | 2013-09-03 18:28:34 +0900 (火, 03  9月 2013) | 17 lines

Fix a compiler bug caused by Utils::IsPowerOfTwo treating zero as a power of two.

The IsPowerOfTwo function is used together with ShiftForPowerOfTwo.  Both function
do not work with zero. This caused the optimizing compiler to generate invalid code
for the expression

x ? 0 : 0

where it assumed that if one of the constants is a power-of-two, it can
be computed by (1 << n). We check for 0 in a number of places, but instead
I decided to fix Utils::IsPowerOfTwo itself and remove unnecessary checks
for the zero case.

TEST=tests/language/vm/if_conversion_vm_test.dart, runtime/vm/utils_test.cc
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23604024
------------------------------------------------------------------------
r27009 | fschneider@google.com | 2013-09-02 19:43:59 +0900 (月, 02  9月 2013) | 14 lines

Fix bug with reflection on VM-internal native methods.

My previous approach was not enough, since methods can
be invoked via reflection before they are parsed/compiled.

This CL fixes the problem at hand, but I'd like a more general
approach to mark those methods. Maybe an annotation at the declaration
would be better.

I also refactored the test case as suggested in the previous code review.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23458008
------------------------------------------------------------------------
r26985 | lrn@google.com | 2013-09-02 14:57:49 +0900 (月, 02  9月 2013) | 15 lines

Change the field and constructor parameter types of NoSuchMethodError to Symbol.

The NSME uses strings for names. It should use symbols.

This change modifies the VM libraries only enough to make the signature change
not crash. It will probably need cleanup to ensure that symbols are passed
to the internal constructor directly, instead of strings that have to be
converted.

(Also fixes a type error in Map.fromIterable that was hit by the code).

BUG= http://dartbug.com/11190
R=ahe@google.com, regis@google.com

Review URL: https://codereview.chromium.org//23486007
------------------------------------------------------------------------
r26963 | srdjan@google.com | 2013-08-31 09:26:47 +0900 (土, 31  8月 2013) | 5 lines

If a rethrow is encountered in the catch block, then its handler must be marked that it needs stacktrace. Fix issue r12584.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23691024
------------------------------------------------------------------------
r26962 | sra@google.com | 2013-08-31 09:14:53 +0900 (土, 31  8月 2013) | 7 lines

Fix for Issue 12833

Eliminate limit on size for bignum multiply by storing extra overflow bits for column sums.

R=floitsch@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//23455014
------------------------------------------------------------------------
r26957 | hausner@google.com | 2013-08-31 08:09:35 +0900 (土, 31  8月 2013) | 7 lines

Fix crash with cyclic exports

Issue 6060, 6595

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23658007
------------------------------------------------------------------------
r26941 | srdjan@google.com | 2013-08-31 05:47:02 +0900 (土, 31  8月 2013) | 5 lines

Last round of cleanups in exception handler, before going to the next stage.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23531008
------------------------------------------------------------------------
r26933 | iposva@google.com | 2013-08-31 03:01:18 +0900 (土, 31  8月 2013) | 5 lines

- Reapply change r26880.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23494014
------------------------------------------------------------------------
r26924 | mlippautz@google.com | 2013-08-31 01:01:10 +0900 (土, 31  8月 2013) | 6 lines

Add checks catching potential integer overflows.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//23691013
------------------------------------------------------------------------
r26909 | kmillikin@google.com | 2013-08-30 20:19:22 +0900 (金, 30  8月 2013) | 8 lines

Revert "Compress memory usage. Imprive speed of finding exception handle..."

This reverts svn revision 26880.  That change has broken stack traces for
exceptions, making it impossible to use them for debugging Dart code.

BUG=https://code.google.com/p/dart/issues/detail?id=12940

Review URL: https://codereview.chromium.org//23512004
------------------------------------------------------------------------
r26898 | hausner@google.com | 2013-08-30 08:24:23 +0900 (金, 30  8月 2013) | 8 lines

Evaluation of expression in context of library top-level

Third and final part of expression evaluation in the context
of an (object|class|library).

R=iposva@google.com

Review URL: https://codereview.chromium.org//23514020
------------------------------------------------------------------------
r26888 | srdjan@google.com | 2013-08-30 04:38:40 +0900 (金, 30  8月 2013) | 5 lines

Improve performance of exception handling: quicker (and correcter) determination if the exception class extends class Error.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23638003
------------------------------------------------------------------------
r26880 | srdjan@google.com | 2013-08-30 01:47:49 +0900 (金, 30  8月 2013) | 5 lines

Compress memory usage. Imprive speed of finding exception handlers: if a code does not have any handlers, do not reaverse the PC descriptors.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23691008
------------------------------------------------------------------------
r26879 | iposva@google.com | 2013-08-30 01:45:07 +0900 (金, 30  8月 2013) | 5 lines

- Identified more loops that need handle scopes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23503007
------------------------------------------------------------------------
r26867 | fschneider@google.com | 2013-08-29 21:32:05 +0900 (木, 29  8月 2013) | 15 lines

Allow inlining of methods that have an intrinsic translation.

This works because I changed the compiler so that it always emit
the full unoptimized code for all intrinsic methods in a previous CL
As a result deoptimization works for those methods like for normal
methods.

Also, code for some recognized getter methods is moved to the flow
graph builder, so that there is no need for special handling in
the flow graph optimizer. This part of the change is
should be performance-neutral.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23756002
------------------------------------------------------------------------
r26829 | regis@google.com | 2013-08-29 09:08:02 +0900 (木, 29  8月 2013) | 6 lines

Move the assertion checking the number of arguments passed to a runtime entry
from the entry to the macro.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23621008
------------------------------------------------------------------------
r26827 | zra@google.com | 2013-08-29 08:39:43 +0900 (木, 29  8月 2013) | 8 lines

Evaluates arguments before throwing a NoSuchMethodError in constructor
calls and static function calls.

Fixes issue 12820.

R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23482004
------------------------------------------------------------------------
r26826 | regis@google.com | 2013-08-29 08:07:14 +0900 (木, 29  8月 2013) | 6 lines

Fix the previously ineffective assert checking the number of arguments passed to
a runtime entry in the VM.

R=asiva@google.com

Review URL: https://codereview.chromium.org//23672011
------------------------------------------------------------------------
r26824 | rmacnak@google.com | 2013-08-29 07:55:53 +0900 (木, 29  8月 2013) | 12 lines

More reflection of mixin applications in the VM.

*Provide ClassMirror.mixin
*Hide extra class on the inheritance chain introduced in mixin typedefs
*Give mixin applications a simpleName that matches the source language syntax
*Update mixin_test to distinguish between members and constructors
*Update mixin_test for the mixin application naming scheme

BUG=http://dartbug.com/12464
R=ahe@google.com, asiva@google.com

Review URL: https://codereview.chromium.org//23190003
------------------------------------------------------------------------
r26823 | srdjan@google.com | 2013-08-29 07:42:21 +0900 (木, 29  8月 2013) | 5 lines

Mark exception handlers if they have a stacktrace specified. Do not build a stacktrace if the handler has no stacktrace.

R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//23445012
------------------------------------------------------------------------
r26798 | iposva@google.com | 2013-08-29 01:02:43 +0900 (木, 29  8月 2013) | 5 lines

- Allow the collection of intermediate values during long BigintOperations.

R=asiva@google.com, floitsch@google.com

Review URL: https://codereview.chromium.org//23537003
------------------------------------------------------------------------
r26773 | kmillikin@google.com | 2013-08-28 18:17:07 +0900 (水, 28  8月 2013) | 10 lines

Collect edge count profiling data and reorder basic blocks.

In unoptimized code, collect edge counts for all edges.  Use the counts
to reorder basic blocks in optimized code.  Basic blocks are reordered
by using Pettis and Hansen's "Profile Guided Code Positioning" bottom-up
algorithm.

R=fschneider@google.com, regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//18111006
------------------------------------------------------------------------
r26770 | kmillikin@google.com | 2013-08-28 17:38:56 +0900 (水, 28  8月 2013) | 9 lines

Change Bool::Get to return a handle instead of a pointer to a raw object.

Replace occurrences of 'expr ? Bool::True() : Bool::False()' with simply
'Bool::Get(expr)' and analogously for its negation.  The pointer to the raw
object can still be extracted with 'Bool::Get(expr).raw()'.

R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23480005
------------------------------------------------------------------------
r26767 | lrn@google.com | 2013-08-28 16:56:12 +0900 (水, 28  8月 2013) | 9 lines

Made old dart:json library use convert to parse JSON.

Make convert library use "null" as marker for top-level value in reviver calls.
Moved JSON implementation into convert_patch files.
Move error classes into convert library, and reexport from dart:json.

R=floitsch@google.com

Review URL: https://codereview.chromium.org//23554004
------------------------------------------------------------------------
r26749 | hausner@google.com | 2013-08-28 08:07:59 +0900 (水, 28  8月 2013) | 10 lines

Require case expressions to be compile-time constants

Remove legacy semantics in switch statement compilation.

Still to be added: analysis that all case expressions are
of the same type.

R=regis@google.com

Review URL: https://codereview.chromium.org//23640004
------------------------------------------------------------------------
r26743 | iposva@google.com | 2013-08-28 05:47:14 +0900 (水, 28  8月 2013) | 5 lines

- Remove support for the old "get foo()" - style syntax.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23619004
------------------------------------------------------------------------
r26730 | mlippautz@google.com | 2013-08-28 02:31:09 +0900 (水, 28  8月 2013) | 8 lines

Implement ParameterMirror.{isFinal,hasDefaultValue,defaultValue}.

Fixes issue 12196 and partially addresses issue 12430.

BUG=
R=ahe@google.com, asiva@google.com, gbracha@google.com

Review URL: https://codereview.chromium.org//23020025
------------------------------------------------------------------------
r26719 | hausner@google.com | 2013-08-28 01:41:33 +0900 (水, 28  8月 2013) | 9 lines

Add compilation error on named parameters with private names

Remove bogus test cases.

Fixes issue 5743, 3502

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23478005
------------------------------------------------------------------------
r26716 | iposva@google.com | 2013-08-28 01:15:42 +0900 (水, 28  8月 2013) | 5 lines

- Avoid doubly implementing Function.

R=regis@google.com

Review URL: https://codereview.chromium.org//23493007
------------------------------------------------------------------------
r26705 | johnmccutchan@google.com | 2013-08-27 20:22:17 +0900 (火, 27  8月 2013) | 5 lines

Remove LoadFieldInstr with no uses

R=fschneider@google.com

Review URL: https://codereview.chromium.org//23574002
------------------------------------------------------------------------
r26703 | fschneider@google.com | 2013-08-27 20:11:48 +0900 (火, 27  8月 2013) | 14 lines

Always generate full unoptimized code for intrinsified methods.

Until now, we skipped regular code generation for some intrinsics
because the body was unreachable (no slow case).

With inlining and optimizing those methods, we may need the 
unoptimized code for deoptimization support. Instead of deciding
case-by-case which of these methods may potentially deoptimize,
we always generate the full unoptimized code now, together
with the corresponding deoptimization info.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22866025
------------------------------------------------------------------------
r26680 | rmacnak@google.com | 2013-08-27 09:47:42 +0900 (火, 27  8月 2013) | 6 lines

Remember metadata positions for mixin and function typedefs.

BUG=http://dartbug.com/10906
R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//23437007
------------------------------------------------------------------------
r26677 | regis@google.com | 2013-08-27 08:24:01 +0900 (火, 27  8月 2013) | 8 lines

More cleanup related to malformed and malbounded types.
Remove support for warnings in parser and related flags.
Rename flag --error-on-malformed-type to --error-on-bad-type, since it covers
both malformed and malbounded types (also closer to --error-on-bad-override).

R=hausner@google.com

Review URL: https://codereview.chromium.org//23465004
------------------------------------------------------------------------
r26668 | hausner@google.com | 2013-08-27 05:59:16 +0900 (火, 27  8月 2013) | 7 lines

JSON string decoding for VM debugger

The VM must properly decode JSON strings it receives.

R=regis@google.com

Review URL: https://codereview.chromium.org//23439002
------------------------------------------------------------------------
r26665 | regis@google.com | 2013-08-27 02:56:02 +0900 (火, 27  8月 2013) | 15 lines

Distinguish between malformed and malbounded types (fix issues 12552 and 12554).
Add test.
Update status files.

Explanation of change: A malbounded type argument should not be mapped to
dynamic, as is a malformed type argument.
This change also adds a bunch of TODOs related to the encounter of malbounded
types in unexpected places.
A follow-up change will address these TODOs, add more tests, and may simplify
code that is still handling malformed types where they cannot occur anymore
after the spec simplified their handling.

R=hausner@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23190035
------------------------------------------------------------------------
r26662 | srdjan@google.com | 2013-08-27 02:38:51 +0900 (火, 27  8月 2013) | 5 lines

Fix corner cases for double pow operation.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//23072044
------------------------------------------------------------------------
r26659 | mlippautz@google.com | 2013-08-27 02:14:07 +0900 (火, 27  8月 2013) | 8 lines

Fix Function.end_token_pos() and implement MethodMirror.source getter.

Move .source getter from ClosureMirror to MethodMirror (as the TODO already suggested) and provide an implementation.

BUG=
R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//23038010
------------------------------------------------------------------------
r26658 | asiva@google.com | 2013-08-27 02:06:17 +0900 (火, 27  8月 2013) | 5 lines

Fix issue 12718 - crash when the trying to access context variables in a frame.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23410002
------------------------------------------------------------------------
r26645 | kmillikin@google.com | 2013-08-26 21:37:21 +0900 (月, 26  8月 2013) | 6 lines

Fold equals and not equals comparisons for constant strings.

BUG=https://code.google.com/p/dart/issues/detail?id=12530
R=fschneider@google.com

Review URL: https://codereview.chromium.org//22842014
------------------------------------------------------------------------
r26634 | kmillikin@google.com | 2013-08-26 19:56:24 +0900 (月, 26  8月 2013) | 9 lines

Cleanup of deoptimization environment copying functions.

Change the deoptimization environment copying functions so that they
crash rather than safely copying NULL environments.

BUG=https://code.google.com/p/dart/issues/detail?id=12616
R=iposva@google.com

Review URL: https://codereview.chromium.org//23190029
------------------------------------------------------------------------
r26629 | fschneider@google.com | 2013-08-26 18:46:30 +0900 (月, 26  8月 2013) | 15 lines

Fix crash in optimized code caused by missing IC data.

When inling intrinsified methods like String.isEmpty that are
not native, we have to emit the full unoptimized code so that
those method can be correctly optimized and inlined later.

Also, remove an invalid assertion in the type propagator: ToNullableCid
may be called on values from the callee graph in the inliner where
type propagation has not yet been performed.

BUG=https://code.google.com/p/dart/issues/detail?id=12691
TEST=tests/language/optimized_isempty_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//23123012
------------------------------------------------------------------------
r26625 | fschneider@google.com | 2013-08-26 18:19:54 +0900 (月, 26  8月 2013) | 10 lines

Mark private methods of core libraries as invisible in the VM.

This prevents accessing them via reflection which should not
be allowed since they are often handled specially by the compiler.
Those functions also will not be shown in stacktraces.

TEST=tests/language/reflect_core_vm_test.dart
R=rmacnak@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//23019013
------------------------------------------------------------------------
r26617 | hausner@google.com | 2013-08-24 07:42:41 +0900 (土, 24  8月 2013) | 8 lines

Evaluate expression in the context of a class

Allows debugger to evaluate an expression in the context of a
static method of a class.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23102019
------------------------------------------------------------------------
r26604 | johnmccutchan@google.com | 2013-08-24 02:48:14 +0900 (土, 24  8月 2013) | 5 lines

Avoid array bounds check when allowed by guarded field.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23003026
------------------------------------------------------------------------
r26585 | fschneider@google.com | 2013-08-23 17:49:05 +0900 (金, 23  8月 2013) | 11 lines

Fix allocation of indices for try-blocks.

The compiler has the assumptions that try-index starts
at zero for each function: The list of exception handlers
is a dense array indexed using the try-index.

BUG=https://code.google.com/p/dart/issues/detail?id=12615
TEST=tests/language/regress_12615_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//22909032
------------------------------------------------------------------------
r26561 | asiva@google.com | 2013-08-23 07:05:22 +0900 (金, 23  8月 2013) | 6 lines

The peer pointer was not being setup at all, fixed that and added a test case
for it.

R=iposva@google.com

Review URL: https://codereview.chromium.org//22876025
------------------------------------------------------------------------
r26549 | hausner@google.com | 2013-08-23 04:45:13 +0900 (金, 23  8月 2013) | 9 lines

Remove assertion in compile-time constant map literals

We had a left-over assertion that keys are strings.

Fixes issue 12505.

R=regis@google.com

Review URL: https://codereview.chromium.org//23004015
------------------------------------------------------------------------
r26544 | zra@google.com | 2013-08-23 03:24:20 +0900 (金, 23  8月 2013) | 5 lines

Adds Uint32x4 add/sub for ARM.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23366003
------------------------------------------------------------------------
r26538 | asiva@google.com | 2013-08-23 02:10:37 +0900 (金, 23  8月 2013) | 9 lines

- Setup a peer for read only strings that are not externalized in
Dart_MakeExternalString so that it is not necessary to create
a new reference for it everytime it is accessed in native code.

- Removed unused function Dart_ExternalStringGetPeer

R=iposva@google.com

Review URL: https://codereview.chromium.org//22980022
------------------------------------------------------------------------
r26522 | johnmccutchan@google.com | 2013-08-22 23:11:58 +0900 (木, 22  8月 2013) | 5 lines

Final cleanup of InsertConversion

R=fschneider@google.com

Review URL: https://codereview.chromium.org//23060019
------------------------------------------------------------------------
r26514 | fschneider@google.com | 2013-08-22 20:03:41 +0900 (木, 22  8月 2013) | 9 lines

Correctly clone comparisons in branch optimizations of Dart VM.

When cloning comparisons of branches, the type feedback
of some comparisons was lost, resulting in slower generic code
instead of type-specialized code.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//23011043
------------------------------------------------------------------------
r26491 | hausner@google.com | 2013-08-22 08:55:59 +0900 (木, 22  8月 2013) | 7 lines

Detect circular dependencies in compile time constants

Fix issue 1681

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22897019
------------------------------------------------------------------------
r26490 | srdjan@google.com | 2013-08-22 08:46:50 +0900 (木, 22  8月 2013) | 5 lines

Fix fingerprint checking and report functions that have disappeared.

R=hausner@google.com

Review URL: https://codereview.chromium.org//22912022
------------------------------------------------------------------------
r26487 | asiva@google.com | 2013-08-22 08:45:02 +0900 (木, 22  8月 2013) | 5 lines

Fix signature of Dart_SetIntegerReturnValue.

R=vsm@google.com

Review URL: https://codereview.chromium.org//22897020
------------------------------------------------------------------------
r26485 | asiva@google.com | 2013-08-22 08:20:30 +0900 (木, 22  8月 2013) | 8 lines

Added Dart API methods:
Dart_GetNativeIntegerArgument
Dart_GetNativeDoubleArgument
Dart_GetNativeBooleanArgument

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23300004
------------------------------------------------------------------------
r26480 | johnmccutchan@google.com | 2013-08-22 07:22:53 +0900 (木, 22  8月 2013) | 5 lines

Fold Box(Unbox(v)) and Unbox(Box(v)) for Float32x4 and Uint32x4

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23144003
------------------------------------------------------------------------
r26470 | srdjan@google.com | 2013-08-22 05:36:08 +0900 (木, 22  8月 2013) | 5 lines

Fix performance regression on Tracer: recognize _doublePow in Math.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23068020
------------------------------------------------------------------------
r26445 | hausner@google.com | 2013-08-22 02:22:30 +0900 (木, 22  8月 2013) | 11 lines

Fix debugger stack traces

This change fixes the lookup of exception handlers that are
contained in activation frames that are not user-visible
(e.g. frames in dart library code).

Fixes issue 12318 (https://code.google.com/p/dart/issues/detail?id=12318)

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23000011
------------------------------------------------------------------------
r26444 | regis@google.com | 2013-08-22 02:22:18 +0900 (木, 22  8月 2013) | 6 lines

Fix bound checking in self referencing type (issue 12553).
Added test.

R=hausner@google.com

Review URL: https://codereview.chromium.org//23295020
------------------------------------------------------------------------
r26433 | johnmccutchan@google.com | 2013-08-22 00:32:45 +0900 (木, 22  8月 2013) | 5 lines

Initial support for length guards on final fields.

R=regis@google.com, srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//22851003
------------------------------------------------------------------------
r26429 | fschneider@google.com | 2013-08-21 21:58:08 +0900 (水, 21  8月 2013) | 27 lines

Polymorphic inlining for some recognized methods in the optimizing compiler.

The optimizing compiler currently recognizes a certain frequent native methods
like array length or string length and provides an inlined implementation.
Inlining does currently not work for polymorphic call sites of these methods.  
This CL enables also polymorphic inlining in the case of .length getters for
arrays and strings.

1. The method is recognized at flow graph build time. The builder creates
 the body of the method for both compilers (non-optimizing and optimizing).
 Native methods that are not recognized, are translated as before using a NativeCall
 IL instruction.

2. The flow graph inliner handles recognized methods in the same manner as normal methods.
Until now intrinsic and recognized method could not be inlined. This CL enables it.

3. There is no need for an intrinsic assembly implementation because recognized methods
have an IL implementation that does not call into the C++ runtime. I left the intrinsics
in for now, but they can be removed if there is not noticable performance benefit anymore.

4. The inlining heuristics are tweaked in a way that enables more aggressive inlining
of recognized methods: +1 level of inlining depths, call sites of recognized methods are
not counted in the inlining heuristic.

R=kmillikin@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//22839003
------------------------------------------------------------------------
r26394 | johnmccutchan@google.com | 2013-08-21 06:35:53 +0900 (水, 21  8月 2013) | 5 lines

Add signMask getter to Float32x4

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//22947006
------------------------------------------------------------------------
r26387 | jacobr@google.com | 2013-08-21 05:24:11 +0900 (水, 21  8月 2013) | 5 lines

fix cpp11 compile errors

R=asiva@google.com

Review URL: https://codereview.chromium.org//23072026
------------------------------------------------------------------------
r26358 | johnmccutchan@google.com | 2013-08-20 23:34:06 +0900 (火, 20  8月 2013) | 5 lines

Add add and subtract operations to Uint32x4

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23018009
------------------------------------------------------------------------
r26340 | lrn@google.com | 2013-08-20 17:13:13 +0900 (火, 20  8月 2013) | 6 lines

Remove int.pow and double.pow from VM library.

BUG= http://dartbug.com/10268
R=regis@google.com

Review URL: https://codereview.chromium.org//23129005
------------------------------------------------------------------------
r26331 | regis@google.com | 2013-08-20 09:17:49 +0900 (火, 20  8月 2013) | 6 lines

Skip over unfinalized interface types during a compile-time subtype check in
order to postpone bound checking to run time (fix issue 12501).

R=asiva@google.com

Review URL: https://codereview.chromium.org//23102006
------------------------------------------------------------------------
r26328 | hausner@google.com | 2013-08-20 07:17:09 +0900 (火, 20  8月 2013) | 5 lines

Evaluate expression in context of an object

This is the core functionality needed for the debugger.

Review URL: https://codereview.chromium.org//23067006
------------------------------------------------------------------------
r26325 | johnmccutchan@google.com | 2013-08-20 04:57:22 +0900 (火, 20  8月 2013) | 5 lines

Add packed add and subtract to IA32 and X64 assemblers

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23129014
------------------------------------------------------------------------
r26302 | regis@google.com | 2013-08-17 08:39:41 +0900 (土, 17  8月 2013) | 9 lines

Report compile-time errors for conflicting overrides as specified by latest
language spec (fix issue 12342).
Add override conflict tests.
Update status files.
Add support for 'ok' status in multi-tests.

R=hausner@google.com

Review URL: https://codereview.chromium.org//22999022
------------------------------------------------------------------------
r26281 | johnmccutchan@google.com | 2013-08-17 01:53:32 +0900 (土, 17  8月 2013) | 5 lines

Cleanup conversion insertion in unboxed -> unboxed case.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22991007
------------------------------------------------------------------------
r26278 | johnmccutchan@google.com | 2013-08-17 01:19:18 +0900 (土, 17  8月 2013) | 6 lines

Replace shuffle getters with shuffle method and masks.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//23134002
------------------------------------------------------------------------
r26239 | zra@google.com | 2013-08-16 08:10:28 +0900 (金, 16  8月 2013) | 5 lines

Adds check for ARM neon support to optimizer.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//23011026
------------------------------------------------------------------------
r26205 | rmacnak@google.com | 2013-08-16 03:34:23 +0900 (金, 16  8月 2013) | 6 lines

Cleanup making Null a public class of dart:core in the VM. Remove special cases for Null in lookup and compile-time type tests.

BUG=http://dartbug.com/12364
R=asiva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//22819005
------------------------------------------------------------------------
r26202 | asiva@google.com | 2013-08-16 02:10:07 +0900 (金, 16  8月 2013) | 5 lines

Simplify access to peer pointer for external strings.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23118006
------------------------------------------------------------------------
r26197 | zra@google.com | 2013-08-16 01:12:38 +0900 (金, 16  8月 2013) | 5 lines

Fixes bug in MIPS IL.

TBR: regis, srdjan

Review URL: https://codereview.chromium.org//23095007
------------------------------------------------------------------------
r26175 | lrn@google.com | 2013-08-15 18:12:19 +0900 (木, 15  8月 2013) | 11 lines

Add Null class to dart:core.

Make dart2js accept this class as the type of `null`.

Dart2js still fails on tests on the form: x is Null
VM does not recognize Null as the type of `null`.

BUG= http://dartbug.com/12382
R=fschneider@google.com, karlklose@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//23012003
------------------------------------------------------------------------
r26169 | srdjan@google.com | 2013-08-15 08:45:13 +0900 (木, 15  8月 2013) | 3 lines

Add double unary operation (negate). This is a replica of the destrpyed CL https://chromiumcodereview.appspot.com/23219002/

Review URL: https://codereview.chromium.org//22999011
------------------------------------------------------------------------
r26151 | asiva@google.com | 2013-08-15 05:57:13 +0900 (木, 15  8月 2013) | 3 lines

Comment out check in native fields injection until issue 12455 is resolved.

Review URL: https://codereview.chromium.org//23215002
------------------------------------------------------------------------
r26146 | asiva@google.com | 2013-08-15 05:42:44 +0900 (木, 15  8月 2013) | 5 lines

Minor cleanup.

R=regis@google.com

Review URL: https://codereview.chromium.org//23152003
------------------------------------------------------------------------
r26144 | vsm@google.com | 2013-08-15 05:18:16 +0900 (木, 15  8月 2013) | 12 lines

Remove test for native resolver

This check asserts that a type with a native field must be in a
library with a native resolver.  It won't be true with custom elements
- which inherit from dart:html and inherit a native field - but are
otherwise in user libraries.

I'm just removing the check altogether here.

R=asiva@google.com

Review URL: https://codereview.chromium.org//22950003
------------------------------------------------------------------------
r26143 | johnmccutchan@google.com | 2013-08-15 05:11:02 +0900 (木, 15  8月 2013) | 6 lines

Insert dummy conversion instruction for impossible conversion requests.

BUG=12417
R=srdjan@google.com

Review URL: https://codereview.chromium.org//22859007
------------------------------------------------------------------------
r26131 | iposva@google.com | 2013-08-15 02:54:18 +0900 (木, 15  8月 2013) | 5 lines

- Avoid double iteration when accessing anonymous classes.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//23072013
------------------------------------------------------------------------
r26130 | zra@google.com | 2013-08-15 02:34:31 +0900 (木, 15  8月 2013) | 5 lines

Fixes scanning of Utf16 surrogate pairs in string literals.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23000008
------------------------------------------------------------------------
r26127 | regis@google.com | 2013-08-15 00:52:41 +0900 (木, 15  8月 2013) | 7 lines

Make sure type information is not lost in snapshots created in production mode,
since they can be executed in checked mode.
Add snapshot test.

R=hausner@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//23094003
------------------------------------------------------------------------
r26122 | srdjan@google.com | 2013-08-15 00:12:39 +0900 (木, 15  8月 2013) | 5 lines

Fix for running with --throw_on_javascript_int_overflow: recognize pattern (a << b) & mask and test for overflow only after the mask.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//22640019
------------------------------------------------------------------------
r26114 | fschneider@google.com | 2013-08-14 20:43:50 +0900 (水, 14  8月 2013) | 14 lines

Fix equality of implicit closures in the Dart VM.

This CL also lifts the restriction that classes could not
extends or implement 'Function'.

BUG=https://code.google.com/p/dart/issues/detail?id=10849
BUG=https://code.google.com/p/dart/issues/detail?id=12411

TEST=tests/language/bound_closure_equality_test.dart,
tests/language/black_listed_test.dart

R=iposva@google.com

Review URL: https://codereview.chromium.org//22425006
------------------------------------------------------------------------
r26095 | hausner@google.com | 2013-08-14 08:45:20 +0900 (水, 14  8月 2013) | 10 lines

Fix top-level map literals

This is the remaining part that needed to be done to implement
map literals with arbitrary keys.

Fixes issue 10472

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22835005
------------------------------------------------------------------------
r26086 | mlippautz@google.com | 2013-08-14 06:38:36 +0900 (水, 14  8月 2013) | 7 lines

ParameterMirror: Implement some missing getters.

Fixes issue 11334 and issue 11684 and issue 11567.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21624006
------------------------------------------------------------------------
r26080 | mlippautz@google.com | 2013-08-14 05:11:23 +0900 (水, 14  8月 2013) | 15 lines

Move the begin token (token_pos) of explicit functions to the start of the function declaration.

This fixes setting the breakpoints when the signature of function declarations is spread across multiple lines.

Example:
int
get
foo
=>
42;

BUG=
R=hausner@google.com

Review URL: https://codereview.chromium.org//22916006
------------------------------------------------------------------------
r26063 | fschneider@google.com | 2013-08-14 02:05:46 +0900 (水, 14  8月 2013) | 9 lines

Clean up VM class DartFunction.

DartFunction was the VM-internal class associated with
the Dart class "Function". It does not have any functionality
on it and therefore we don't need a VM-internal class for it.

R=iposva@google.com

Review URL: https://codereview.chromium.org//23026004
------------------------------------------------------------------------
r26046 | asiva@google.com | 2013-08-13 10:19:25 +0900 (火, 13  8月 2013) | 13 lines

Added following dart API changes to enable more efficient access based
on the dartium usage pattern:
- Dart_GetNativeStringArgument (gets a String object, peer etc. directly from
  the native arguments)
- Dart_SetWeakHandleReturnValue (allows a weak handle to be passed to the
  return value, this ensures a new local handle does not have to be created
  from a weak handle just to return a value)
- Dart_StringGetProperties (gets some common properties of a string, avoids
  multiple API calls to set up a native string)

R=srdjan@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//22632010
------------------------------------------------------------------------
r26044 | asiva@google.com | 2013-08-13 09:16:16 +0900 (火, 13  8月 2013) | 5 lines

Fix the stack trace when there are C++ frames in between dart frames.

R=iposva@google.com

Review URL: https://codereview.chromium.org//22938002
------------------------------------------------------------------------
r26043 | rmacnak@google.com | 2013-08-13 09:11:42 +0900 (火, 13  8月 2013) | 7 lines

Ensure the classes void and dynamic have empty arrays for fields, functions, etc. Move their Types to the VM isolate, and as a side-effect they are now canonicalized.

BUG=http://dartbug.com/12071
BUG=http://dartbug.com/12246
R=asiva@google.com, iposva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//22902002
------------------------------------------------------------------------
r26037 | zra@google.com | 2013-08-13 06:45:41 +0900 (火, 13  8月 2013) | 5 lines

Bug fix and status file updates for MIPS HW.

R=regis@google.com

Review URL: https://codereview.chromium.org//22828004
------------------------------------------------------------------------
r26027 | regis@google.com | 2013-08-13 05:28:52 +0900 (火, 13  8月 2013) | 11 lines

Implement updated method overriding rules in the vm (issue 11495).
Introduce --error-on-bad-override flag and use it when generating snapshots.
Fix signature checking when patching methods.
Fix errors in patch files.
Fix receiver type of constructors.
Fix finalization of mixin application typedefs.
Update tests and status files.

R=asiva@google.com

Review URL: https://codereview.chromium.org//22685007
------------------------------------------------------------------------
r26024 | asiva@google.com | 2013-08-13 04:50:28 +0900 (火, 13  8月 2013) | 5 lines

Fix minor bug which was causing throw of Null to not be recognized properly.

R=iposva@google.com

Review URL: https://codereview.chromium.org//22889002
------------------------------------------------------------------------
r26014 | srdjan@google.com | 2013-08-13 02:54:36 +0900 (火, 13  8月 2013) | 5 lines

Fix issue  12369: compare kind of unary math instruction and not only the inputs to determine if attributes are equal.

R=regis@google.com

Review URL: https://codereview.chromium.org//22892002
------------------------------------------------------------------------
r25982 | rmacnak@google.com | 2013-08-10 06:54:30 +0900 (土, 10  8月 2013) | 9 lines

Move Null class out of the VM isolate.

BUG=http://dartbug.com/12071
BUG=http://dartbug.com/12128
BUG=http://dartbug.com/12319
BUG=http://dartbug.com/12337
R=iposva@google.com

Review URL: https://codereview.chromium.org//22638011
------------------------------------------------------------------------
r25981 | rmacnak@google.com | 2013-08-10 06:27:28 +0900 (土, 10  8月 2013) | 6 lines

Fix name of libraries without a library declaration to be the empty string.

BUG=10580
R=asiva@google.com

Review URL: https://codereview.chromium.org//22642003
------------------------------------------------------------------------
r25976 | srdjan@google.com | 2013-08-10 05:26:52 +0900 (土, 10  8月 2013) | 5 lines

Fix a register allocation bug on IA32 and throw_on_javascript_int_overflow.

R=zra@google.com

Review URL: https://codereview.chromium.org//22674010
------------------------------------------------------------------------
r25974 | zra@google.com | 2013-08-10 04:51:11 +0900 (土, 10  8月 2013) | 5 lines

Allows compiler bailout to handle errors of any type.

R=asiva@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//22389004
------------------------------------------------------------------------
r25967 | zra@google.com | 2013-08-10 02:23:30 +0900 (土, 10  8月 2013) | 5 lines

Changes the flag for using far branches from static to volatile.

R=fschneider@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//22424008
------------------------------------------------------------------------
r25961 | hausner@google.com | 2013-08-09 19:19:56 +0900 (金, 09  8月 2013) | 5 lines

Prevent recursive exception notification in debugger

Fixes bug 12329.

Review URL: https://codereview.chromium.org//22638015
------------------------------------------------------------------------
r25944 | rmacnak@google.com | 2013-08-09 05:25:46 +0900 (金, 09  8月 2013) | 5 lines

Make ClosureMirror handle instances of user-defined classes that implement call.

R=asiva@google.com

Review URL: https://codereview.chromium.org//22625003
------------------------------------------------------------------------
r25942 | rmacnak@google.com | 2013-08-09 05:06:56 +0900 (金, 09  8月 2013) | 6 lines

Reflection on generics.

BUG=
R=ahe@google.com, regis@google.com

Review URL: https://codereview.chromium.org//22292002
------------------------------------------------------------------------
r25938 | srdjan@google.com | 2013-08-09 03:31:53 +0900 (金, 09  8月 2013) | 5 lines

Fix Issue 12322: the analysis requires stored guarded_cid to be returned when requested; only when computing result of LoadField instruction should we not trust guarded_cid for externalizable cids.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//22335005
------------------------------------------------------------------------
r25930 | rmacnak@google.com | 2013-08-09 01:50:11 +0900 (金, 09  8月 2013) | 6 lines

Fix attempt to find metadata of a library with no metadata.

BUG=12206
R=hausner@google.com

Review URL: https://codereview.chromium.org//22460008
------------------------------------------------------------------------
r25929 | cbracken@google.com | 2013-08-09 01:40:45 +0900 (金, 09  8月 2013) | 5 lines

Cleanup: Use array syntax instead of pointer arithmetic

R=asiva@google.com

Review URL: https://codereview.chromium.org//22381002
------------------------------------------------------------------------
r25928 | srdjan@google.com | 2013-08-09 01:19:23 +0900 (金, 09  8月 2013) | 5 lines

Add a performance assert that we do not emit a null check for smi class-ids. Instead we should use CheckSmiInstr which does a bit test.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//22629005
------------------------------------------------------------------------
r25927 | johnmccutchan@google.com | 2013-08-09 00:44:21 +0900 (金, 09  8月 2013) | 6 lines

Remove race(s) in vmservice tests.

BUG=https://code.google.com/p/dart/issues/detail?id=12294
R=iposva@google.com

Review URL: https://codereview.chromium.org//22607005
------------------------------------------------------------------------
r25922 | hausner@google.com | 2013-08-08 20:22:59 +0900 (木, 08  8月 2013) | 5 lines

Follow-up to capturing instantiator

Add boolean result to CaptureVariable, as suggested by Regis.

Review URL: https://codereview.chromium.org//22678002
------------------------------------------------------------------------
r25918 | fschneider@google.com | 2013-08-08 17:20:10 +0900 (木, 08  8月 2013) | 17 lines

Fix bug with optimized try-catch on ARM/MIPS.

The constant pool pointer must be restored before any parallel
moves at the catch-entry block.

In addition, this CL removes CatchEntryInstr and folds its
functionality into CatchBlockEntryInstr. Until now every catch-block
started with CatchBlockEntryInstr followed by a CatchEntryInstr.

This simplifies a lot of code in the compiler and avoids issues
with allocator-move code inserted between the two instructions.

BUG=https://code.google.com/p/dart/issues/detail?id=12291
TEST=tests/language/try_catch4_test.dart
R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//22590002
------------------------------------------------------------------------
r25909 | iposva@google.com | 2013-08-08 10:02:13 +0900 (木, 08  8月 2013) | 3 lines

- Remove unused run state from the isolate.

Review URL: https://codereview.chromium.org//22477005
------------------------------------------------------------------------
r25907 | srdjan@google.com | 2013-08-08 08:01:43 +0900 (木, 08  8月 2013) | 5 lines

Implement IsNullCheck for CheckClassInstr. If input is nullable expected type, then check for null only.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//22580005
------------------------------------------------------------------------
r25900 | johnmccutchan@google.com | 2013-08-08 05:35:37 +0900 (木, 08  8月 2013) | 5 lines

Expose classes, codes, functions, and libraries collections.

R=iposva@google.com

Review URL: https://codereview.chromium.org//22297008
------------------------------------------------------------------------
r25897 | johnmccutchan@google.com | 2013-08-08 04:52:32 +0900 (木, 08  8月 2013) | 6 lines

Escape strings when writing to JSON.

BUG=
R=regis@google.com

Review URL: https://codereview.chromium.org//22599002
------------------------------------------------------------------------
r25893 | srdjan@google.com | 2013-08-08 03:56:48 +0900 (木, 08  8月 2013) | 5 lines

Do not use guarded cid on externalizable cid-s (one and two byte strings). An externalizable object can change its type on the fly and therefore we cannot rely on the information obntained while storing into the field.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//22314017
------------------------------------------------------------------------
r25890 | cbracken@google.com | 2013-08-08 02:28:04 +0900 (木, 08  8月 2013) | 20 lines

Fixes to get Dart VM compiling on Ubuntu 13.04, Debian Wheezy.
* Convince gcc 4.7.x that len is initialized before use in callers of ReadFileFully()
* Cast RawObject* to intptr_t to avoid strict-aliasing error on gcc 4.7.x
* Replace two calls to strerror_r() with strerror() on Linux. When _GNU_SOURCE is
  defined to be non-zero (as it is on Dart Linux builds), strerror_r() is
  defined to return a char*, which is the correct error string to use. When
  _GNU_SOURCE is zero, the XSI-compliant definition is used and the error
  message is returned in the char* param. Surrounding error logging uses
  strerror() which solves the problem.
* Replace int literals with char literals in test string definition.
* co19 math/tan_A01_t01 passes on Ubuntu 13.04.

Original issues:
https://code.google.com/p/dart/issues/detail?id=12085
https://code.google.com/p/dart/issues/detail?id=8807

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//22381002
------------------------------------------------------------------------
r25884 | hausner@google.com | 2013-08-08 01:33:02 +0900 (木, 08  8月 2013) | 7 lines

Remove bogus assertion

Fix issue 12290.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22594002
------------------------------------------------------------------------
r25877 | hausner@google.com | 2013-08-08 00:15:02 +0900 (木, 08  8月 2013) | 12 lines

Fix access to type variables in initializer expressions

Allow initializer expressions to capture type arguments.
This used to crash because the receiver is not accessible
in initializer expressions. We don't need the receiver, we
just need to mark it as captured.

Fixes issue 8847.

R=ahe@google.com

Review URL: https://codereview.chromium.org//22415002
------------------------------------------------------------------------
r25875 | hausner@google.com | 2013-08-07 23:22:13 +0900 (水, 07  8月 2013) | 8 lines

Better error message for redefined local names

Improve error message when a name is defined in a scope and
and outer declaration of the name has been referenced before.

Fixes issue 7073.

Review URL: https://codereview.chromium.org//22567003
------------------------------------------------------------------------
r25872 | sgjesse@google.com | 2013-08-07 21:55:09 +0900 (水, 07  8月 2013) | 16 lines

Add support for file URIs and extracting the file path from file URIs

A file URI can now be created directly using the constructor Uri.file.

The file path for a file URI can now be extracted using the toFilePath() method.

The path strings involved use either Windows or non-Windows
semantics. Both the Uri.file constructor and the toFilePath()
method have optional anamed arguments for specifying the
semantics. The default semantic is determined from the platform
Dart is running on.

R=ahe@google.com, whesse@google.com
BUG=

Review URL: https://codereview.chromium.org//21039005
------------------------------------------------------------------------
r25843 | asiva@google.com | 2013-08-07 07:58:53 +0900 (水, 07  8月 2013) | 5 lines

Rearrange some methods so that they get inlined.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22307003
------------------------------------------------------------------------
r25827 | asiva@google.com | 2013-08-07 04:27:48 +0900 (水, 07  8月 2013) | 10 lines

Auto create ApiLocalScope before calling native functions, this ensures that
native functions do not have to call Dart_EnterScope/Dart_ExitScope
when they callback into the VM.

Remove Dart_EnterScope/Dart_ExitScope calls around native functions in 'bin'
directory.

R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//22303002
------------------------------------------------------------------------
r25825 | srdjan@google.com | 2013-08-07 03:58:38 +0900 (水, 07  8月 2013) | 5 lines

When converting from equality to strict equality always note that number check is not needed since equality on numbers cannot be converted to strict equality (numbers override == operator).

R=asiva@google.com

Review URL: https://codereview.chromium.org//22465002
------------------------------------------------------------------------
r25821 | iposva@google.com | 2013-08-07 02:51:17 +0900 (水, 07  8月 2013) | 3 lines

- Make sure to not skip frames too early.

Review URL: https://codereview.chromium.org//22451002
------------------------------------------------------------------------
r25816 | srdjan@google.com | 2013-08-07 00:46:28 +0900 (水, 07  8月 2013) | 5 lines

Inline fsin/fcos. Huge speedup on Box2D.

R=iposva@google.com

Review URL: https://codereview.chromium.org//22266005
------------------------------------------------------------------------
r25814 | johnmccutchan@google.com | 2013-08-06 23:46:20 +0900 (火, 06  8月 2013) | 5 lines

Expose arguments and options to handlers through JSONStream

R=asiva@google.com

Review URL: https://codereview.chromium.org//22238002
------------------------------------------------------------------------
r25810 | fschneider@google.com | 2013-08-06 21:43:09 +0900 (火, 06  8月 2013) | 19 lines

Fix register allocation bug in building use intervals.

This bug was only exposed on ARM, but can be a problem
on other platforms as well.

When building the use intervals for a value that
is used more than once at one instruction, the use
interval was not adjusted correctly: Under certain
conditions the resulting interval can be too short.
It can occur when the first use is a writable register use,
and the second use is a normal register use.
This CL grows the use intervals to the correct size
in that case.

BUG=https://code.google.com/p/dart/issues/detail?id=11800
TEST=tests/language/regress_11800_test.dart
R=vegorov@google.com

Review URL: https://codereview.chromium.org//22412002
------------------------------------------------------------------------
r25805 | asiva@google.com | 2013-08-06 09:11:55 +0900 (火, 06  8月 2013) | 6 lines

Added unit test cases to try and reproduce issue 12137 (Things
work as expected)

R=srdjan@google.com

Review URL: https://codereview.chromium.org//22287004
------------------------------------------------------------------------
r25782 | regis@google.com | 2013-08-06 03:35:04 +0900 (火, 06  8月 2013) | 9 lines

Fix VM implementation of CastError not to extend TypeError (issue 5280).
Remove non-compliant fields in various Error classes (issue 10144).
Remove implicit constructor when patching in a constructor (issue 12217).
Patch corelib Error classes instead of declaring subclasses.
Update tests and status files.

R=asiva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//21832003
------------------------------------------------------------------------
r25767 | fschneider@google.com | 2013-08-05 22:49:48 +0900 (月, 05  8月 2013) | 17 lines

Fix a bug in compilation of try-finally.

When nesting try-finally, the outer finally was incorrectly executed
twice under certain conditions (a return in the inner try-block and a outer
finally-block that ends with throw)

This was because finally-code was inlined at return/break/continue statements
and it was associated with the wrong catch-handler when compiling.

This CL tracks indices of try-blocks in the parser so that each inlined
finally block has the correct catch handler index.

BUG=https://code.google.com/p/dart/issues/detail?id=11972
TEST=test/language/throw8_test.dart
R=hausner@google.com

Review URL: https://codereview.chromium.org//22184003
------------------------------------------------------------------------
r25765 | hausner@google.com | 2013-08-05 21:13:36 +0900 (月, 05  8月 2013) | 11 lines

Forwarding constructors are never const

Forwarding constructors of mixing application classes do not
inherit the super constructor's const-ness. They are also
never abstract or external.

Fixes issue 11917.

R=ahe@google.com

Review URL: https://codereview.chromium.org//22183002
------------------------------------------------------------------------
r25753 | srdjan@google.com | 2013-08-03 08:07:55 +0900 (土, 03  8月 2013) | 5 lines

Adapt Random class to be able to run in javascript integer compatibility mode.

R=asiva@google.com, zra@google.com

Review URL: https://codereview.chromium.org//21966003
------------------------------------------------------------------------
r25752 | zra@google.com | 2013-08-03 08:04:22 +0900 (土, 03  8月 2013) | 5 lines

Re-enable int intrinsics on ia32 in js in compat mode.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21961004
------------------------------------------------------------------------
r25750 | asiva@google.com | 2013-08-03 07:47:26 +0900 (土, 03  8月 2013) | 6 lines

Add Dart_GetNativeReceiver to special case access to the native field
of a receiver argument (helps eliminate number of validity checks).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21986002
------------------------------------------------------------------------
r25749 | rmacnak@google.com | 2013-08-03 07:28:10 +0900 (土, 03  8月 2013) | 5 lines

Remove unused functions from dart_mirrors_api.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21623004
------------------------------------------------------------------------
r25740 | zra@google.com | 2013-08-03 03:37:20 +0900 (土, 03  8月 2013) | 7 lines

Enables unboxed mints in ia32 javascript int compatability mode.

Also checks range information before emitting checks on x64.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21885003
------------------------------------------------------------------------
r25733 | zra@google.com | 2013-08-03 01:06:45 +0900 (土, 03  8月 2013) | 5 lines

Fixes obo error in javascript int checking.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21876005
------------------------------------------------------------------------
r25731 | fschneider@google.com | 2013-08-02 20:32:05 +0900 (金, 02  8月 2013) | 12 lines

Improve performance of Dart_ListGetAsBytes.

This fixes two performance issues with Dart_ListGetAsBytes:

1. Avoid excessive handle allocation when copying from a generic List.

2. Add a fast path when copying from byte-size typed data view objects. The
old version only supported typed data, but no views.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21562002
------------------------------------------------------------------------
r25726 | johnmccutchan@google.com | 2013-08-02 09:24:09 +0900 (金, 02  8月 2013) | 5 lines

Support stacktrace and objecthistogram service commands

R=asiva@google.com

Review URL: https://codereview.chromium.org//19870006
------------------------------------------------------------------------
r25723 | zra@google.com | 2013-08-02 05:51:46 +0900 (金, 02  8月 2013) | 5 lines

Enables per-function far-branches for ARM and MIPS.

R=regis@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//21363003
------------------------------------------------------------------------
r25721 | rmacnak@google.com | 2013-08-02 05:45:49 +0900 (金, 02  8月 2013) | 3 lines

Implement metadata for libraries. Partially addresses issue 10906.


------------------------------------------------------------------------
r25717 | mlippautz@google.com | 2013-08-02 03:27:32 +0900 (金, 02  8月 2013) | 9 lines

Inline CreateClassMirror and remove dead code.

(Almost) no more embedding API, yay!

Fixes issue 12135.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21440002
------------------------------------------------------------------------
r25711 | rmacnak@google.com | 2013-08-02 01:40:10 +0900 (金, 02  8月 2013) | 5 lines

Implement mirror equality on the VM. Resolves issue 12026.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21381002
------------------------------------------------------------------------
r25706 | fschneider@google.com | 2013-08-01 21:03:21 +0900 (木, 01  8月 2013) | 14 lines

Enable allocation sinking for non-implicit closures.

In optimized code we can eliminate the allocation of closures that are not
escaping and where all calls are inlined.

Closures are currently allocated with a special IL instruction (CreateClosure).
This CL changes this for non-implicit closures and allocates them
like normal objects. The fields for the function and the context are
initialized like instance fields. This way object allocation sinking can
handle closures like any other objects.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19370003
------------------------------------------------------------------------
r25692 | srdjan@google.com | 2013-08-01 08:50:56 +0900 (木, 01  8月 2013) | 5 lines

Fix performance degradation in DeltaBlue. When converting equality to strict-equality, note that no special number checks must be done.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//21422002
------------------------------------------------------------------------
r25691 | asiva@google.com | 2013-08-01 08:47:04 +0900 (木, 01  8月 2013) | 6 lines

Fix incorrect usage of NoGCScope in previous change (dart objects are being
allocated so it is possible to have GC).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21252005
------------------------------------------------------------------------
r25689 | mlippautz@google.com | 2013-08-01 08:31:14 +0900 (木, 01  8月 2013) | 5 lines

Also fixes issue 11897.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21124011
------------------------------------------------------------------------
r25688 | asiva@google.com | 2013-08-01 08:27:25 +0900 (木, 01  8月 2013) | 6 lines

Fix for issue 12136 (do not try to copy type arguments if the base class
has no type arguments).

R=regis@google.com

Review URL: https://codereview.chromium.org//20575003
------------------------------------------------------------------------
r25687 | regis@google.com | 2013-08-01 08:26:26 +0900 (木, 01  8月 2013) | 6 lines

Set local function type as uninstantiated when applicable (fix issue 12127).
Add language regression test.

R=zra@google.com

Review URL: https://codereview.chromium.org//21274007
------------------------------------------------------------------------
r25686 | srdjan@google.com | 2013-08-01 08:13:01 +0900 (木, 01  8月 2013) | 3 lines

Fix build failures on buidl bot (compiles fine on my Mac Pro).

Review URL: https://codereview.chromium.org//21417003
------------------------------------------------------------------------
r25685 | srdjan@google.com | 2013-08-01 07:57:33 +0900 (木, 01  8月 2013) | 5 lines

Implement some conditional moves instructions for ia32/x64. Use them in MinMax instruction implementation.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//21307004
------------------------------------------------------------------------
r25677 | zra@google.com | 2013-08-01 03:16:53 +0900 (木, 01  8月 2013) | 3 lines

Fix build fail on mac.

Review URL: https://codereview.chromium.org//21029008
------------------------------------------------------------------------
r25676 | asiva@google.com | 2013-08-01 03:05:05 +0900 (木, 01  8月 2013) | 12 lines

- Add following additional methods to the API to make returning values
  from Dartium easier:
   Dart_SetBooleanReturnValue
   Dart_SetIntegerReturnValue
   Dart_SetDoubleReturnValue

- Use Isolate value stored in NativeArguments instead of calling
  Isolate::Current

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21319002
------------------------------------------------------------------------
r25675 | zra@google.com | 2013-08-01 02:51:23 +0900 (木, 01  8月 2013) | 5 lines

Fixes javascript integer overflow check.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21301003
------------------------------------------------------------------------
r25666 | regis@google.com | 2013-08-01 00:20:28 +0900 (木, 01  8月 2013) | 9 lines

Update VM to handle malformed types according to revised spec (issues 9055,
12105, 7247).
Update language tests.
Update status files.
Allow map literals to specify a key type that is not a String.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21049012
------------------------------------------------------------------------
r25665 | fschneider@google.com | 2013-07-31 23:57:49 +0900 (水, 31  7月 2013) | 10 lines

Fix crash bug in the polymorphic inlining.

When inlining a polymorphic call site, we need to update
the use lists so that the graph entry blocks of all the
callee-graphs are removed from the environment use lists.

TEST=tests/language/allocation_sinking_inlining_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//21272003
------------------------------------------------------------------------
r25651 | mlippautz@google.com | 2013-07-31 07:57:59 +0900 (水, 31  7月 2013) | 5 lines

BUG=

R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//20216002
------------------------------------------------------------------------
r25647 | mlippautz@google.com | 2013-07-31 07:22:17 +0900 (水, 31  7月 2013) | 8 lines

Hoist .simpleName and .qualifiedName up to _LocalDeclarationMirrorImpl.

Current tests already cover this change.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//21281002
------------------------------------------------------------------------
r25640 | mlippautz@google.com | 2013-07-31 05:52:44 +0900 (水, 31  7月 2013) | 6 lines

Inline CreateLibraryMirror.

BUG=
R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//21092004
------------------------------------------------------------------------
r25638 | zra@google.com | 2013-07-31 05:49:22 +0900 (水, 31  7月 2013) | 5 lines

Implements the two argument shuffle SIMD instruction for ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//21004011
------------------------------------------------------------------------
r25636 | srdjan@google.com | 2013-07-31 05:44:25 +0900 (水, 31  7月 2013) | 5 lines

Optimize equuality operation for two Boolean arguments.

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//21013005
------------------------------------------------------------------------
r25625 | srdjan@google.com | 2013-07-31 01:57:11 +0900 (水, 31  7月 2013) | 5 lines

Fix incorrectly factored-out code in https://codereview.chromium.org/20468002/

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//21081003
------------------------------------------------------------------------
r25617 | zra@google.com | 2013-07-31 00:33:36 +0900 (水, 31  7月 2013) | 5 lines

Implements far-branches on ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//21159002
------------------------------------------------------------------------
r25601 | rmacnak@google.com | 2013-07-30 10:09:05 +0900 (火, 30  7月 2013) | 5 lines

Create the local MirrorSystem with internal code.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20851002
------------------------------------------------------------------------
r25599 | rmacnak@google.com | 2013-07-30 09:29:52 +0900 (火, 30  7月 2013) | 5 lines

Ensure FunctionTypeMirrors have a proper reflectee and implement ClassMirror.superinterfaces with internal code. Remove some unnecessary fields and constructor arguments.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21010005
------------------------------------------------------------------------
r25594 | rmacnak@google.com | 2013-07-30 08:57:31 +0900 (火, 30  7月 2013) | 5 lines

Implement reflect() with Dart code, InstanceMirror.type and ClosureMirror.function with internal code.

R=asiva@google.com

Review URL: https://codereview.chromium.org//21119002
------------------------------------------------------------------------
r25580 | johnmccutchan@google.com | 2013-07-30 03:57:35 +0900 (火, 30  7月 2013) | 5 lines

Inline two argument shuffle operations on IA32 and X64.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//20467004
------------------------------------------------------------------------
r25573 | fschneider@google.com | 2013-07-30 01:56:39 +0900 (火, 30  7月 2013) | 8 lines

Simplify allocation stub for closures.

The compiler never generates code for allocating implicit static closures
using the allocation stub.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//21067002
------------------------------------------------------------------------
r25567 | fschneider@google.com | 2013-07-30 00:23:41 +0900 (火, 30  7月 2013) | 3 lines

Reland r25551: Allow inlining of closures with a context change.

Review URL: https://codereview.chromium.org//21087002
------------------------------------------------------------------------
r25558 | fschneider@google.com | 2013-07-29 21:33:40 +0900 (月, 29  7月 2013) | 5 lines

Revert r25551 to help figure out mysterious build bot timeouts.

TBR=ricow@google.com

Review URL: https://codereview.chromium.org//20999005
------------------------------------------------------------------------
r25551 | fschneider@google.com | 2013-07-29 18:44:02 +0900 (月, 29  7月 2013) | 14 lines

Allow inlining of closures with a context change.

This CL removes the remaining missing cases when inlining closure
calls.

In order to benefit for code using forEach, I added GrowableObjectArray.forEach
to the functions that should always be inlined.

I also renamed BuildLoadContext/BuildStoreContext helpers in the flow
graph builder to better match what they do.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19721004
------------------------------------------------------------------------
r25543 | zra@google.com | 2013-07-27 08:30:32 +0900 (土, 27  7月 2013) | 19 lines

Implements far branch targets for MIPS.

This change adds a flag --mips-far-branches, which when set causes
relative branches to be converted to absolute branches by determining
the PC, adding the branch offset to it, and using the jr or jalr
instruction to jump if the branch test passes.

This procedure clobbers the assembler temporary TMP, so TMP can no
longer be used in a branch test or in the branch delay slot of a
relative branch. Because TMP can't be used in a branch test, a
new temporary is introduced CMPRES2. This change replaces TMP with
CMPRES1 or another register where TMP can no longer be used.

Tests that were failing due to a too-far relative have the
--mips-far-branches flag set.

R=regis@google.com

Review URL: https://codereview.chromium.org//20369003
------------------------------------------------------------------------
r25535 | srdjan@google.com | 2013-07-27 05:17:04 +0900 (土, 27  7月 2013) | 5 lines

Make sure that ICData always contains valid data (non-null values).

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//20755004
------------------------------------------------------------------------
r25533 | rmacnak@google.com | 2013-07-27 03:29:38 +0900 (土, 27  7月 2013) | 5 lines

Make ClassMirror.constructors an internal native and lazy.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20564002
------------------------------------------------------------------------
r25532 | regis@google.com | 2013-07-27 03:18:56 +0900 (土, 27  7月 2013) | 7 lines

Delay resolution of redirecting factory targets in order to avoid class
finalization cycles (issue 12041).
Ensure that a super class is finalized before the class extending it.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20503003
------------------------------------------------------------------------
r25522 | srdjan@google.com | 2013-07-27 01:48:46 +0900 (土, 27  7月 2013) | 6 lines

Allow equality operation on mixed double/smi arguments.
Fix a bug in relational operations in 64 bit mode: if ICData specifies double and Smi as possible arguments, we generate code for double and unbox or convert to double the inputs. These works only if smi can fit into the double. Current solution for 64-bit architecture is to disallow two smi-s as input to a polymorphic comparison instruction (equality, relational).

R=johnmccutchan@google.com

Review URL: https://codereview.chromium.org//20468002
------------------------------------------------------------------------
r25508 | rmacnak@google.com | 2013-07-26 07:45:07 +0900 (金, 26  7月 2013) | 5 lines

Implement ClassMirror.superclass with internal code for ordinary (but not function type) classes. Resolves issue 5794 and issue 9434.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20465002
------------------------------------------------------------------------
r25499 | mlippautz@google.com | 2013-07-26 06:10:09 +0900 (金, 26  7月 2013) | 5 lines

BUG=

R=asiva@google.com

Review URL: https://codereview.chromium.org//20208002
------------------------------------------------------------------------
r25492 | asiva@google.com | 2013-07-26 04:28:53 +0900 (金, 26  7月 2013) | 12 lines

Fix for issue 11680
- implicitly store a full stack trace in Error objects when they are thrown.
- the shlFromInt on Mints and Bigints was trying to allocate a new OutOfMemory
  exception objects instead of using the pre-allocated exception object.
  Made the implementation of these methods native so that they can use the
  pre-allocated object.
- Ensure that it is not possible to allocate new OutOfMemory or StackOverflow
  exception objects.

R=ahe@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//19106008
------------------------------------------------------------------------
r25481 | johnmccutchan@google.com | 2013-07-26 02:31:19 +0900 (金, 26  7月 2013) | 5 lines

Allow SIMD types to be used on mips

R=regis@google.com

Review URL: https://codereview.chromium.org//20125005
------------------------------------------------------------------------
r25473 | srdjan@google.com | 2013-07-26 00:42:26 +0900 (金, 26  7月 2013) | 5 lines

Optimize division for two Smi-s as well. Gives ~ 15% speedup on NavierStokes.

R=regis@google.com

Review URL: https://codereview.chromium.org//20198002
------------------------------------------------------------------------
r25463 | whesse@google.com | 2013-07-25 18:37:38 +0900 (木, 25  7月 2013) | 6 lines

Improve certificate tests that hit google.com.

BUG=
R=sgjesse@google.com

Review URL: https://codereview.chromium.org//19558011
------------------------------------------------------------------------
r25451 | rmacnak@google.com | 2013-07-25 08:51:15 +0900 (木, 25  7月 2013) | 5 lines

Make LibraryMirror.members an internal native and lazy.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20119002
------------------------------------------------------------------------
r25450 | mlippautz@google.com | 2013-07-25 08:35:15 +0900 (木, 25  7月 2013) | 6 lines

Inline CreateParameterMirrorList() functionality.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19856003
------------------------------------------------------------------------
r25449 | srdjan@google.com | 2013-07-25 08:20:26 +0900 (木, 25  7月 2013) | 5 lines

Allocate comments in old space.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20180003
------------------------------------------------------------------------
r25447 | rmacnak@google.com | 2013-07-25 07:06:04 +0900 (木, 25  7月 2013) | 5 lines

Add a VM benchmark for creating the local MirrorSystem.

R=asiva@google.com

Review URL: https://codereview.chromium.org//20147002
------------------------------------------------------------------------
r25445 | srdjan@google.com | 2013-07-25 06:56:18 +0900 (木, 25  7月 2013) | 5 lines

Fix a crash in Meteor, debug mode. BitAnd instruction cannot deoptimize, therefore does not allow accessing its deopt_id.

R=regis@google.com

Review URL: https://codereview.chromium.org//20158002
------------------------------------------------------------------------
r25443 | johnmccutchan@google.com | 2013-07-25 06:29:45 +0900 (木, 25  7月 2013) | 5 lines

Add two argument shuffle operations to Float32x4

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19646005
------------------------------------------------------------------------
r25384 | rmacnak@google.com | 2013-07-24 08:54:16 +0900 (水, 24  7月 2013) | 5 lines

Make ClassMirror.members internal-native and lazy.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19496003
------------------------------------------------------------------------
r25382 | regis@google.com | 2013-07-24 08:17:42 +0900 (水, 24  7月 2013) | 7 lines

Implement more restrictive checking of typedefs illegally referring to
themselves and fix vm issue 9611.
Update a test and add a test.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19997003
------------------------------------------------------------------------
r25367 | srdjan@google.com | 2013-07-24 05:40:31 +0900 (水, 24  7月 2013) | 5 lines

Optimize double min/max by reducing the code size (reusing left register as result removes the need to copy left into result). Add code for two Smi arguments.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//19695007
------------------------------------------------------------------------
r25358 | zra@google.com | 2013-07-24 05:02:12 +0900 (水, 24  7月 2013) | 5 lines

Implements Float32x4 and Uint32x4 instructions for ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//19978004
------------------------------------------------------------------------
r25354 | asiva@google.com | 2013-07-24 03:57:05 +0900 (水, 24  7月 2013) | 25 lines

Add a new Dart API call Dart_GetNativeFieldOfArgument
which combines Dart_GetNativeArgument and Dart_GetNativeInstanceField

Dartium always gets the receiver by first getting the NativeArgument
corresponding to 0 using Dart_GetNativeArgument and then invokes
Dart_GetNativeInstanceField on the returned handle to get the native
field corresponding to the native DOM element.

When Dartium is changed to use this combined API call the numbers for a
sample Dromaeo-drt benchmark is as follows:

Dromaeo-drt getAttribute runs-per-second 653.0
Dromaeo-drt element_property_access runs-per-second 579.0
Dromaeo-drt setAttribute runs-per-second 396.0
Dromaeo-drt element_property_assignment runs-per-second 539.0

When the old API calls are used:
Dromaeo-drt getAttribute runs-per-second 596.0
Dromaeo-drt element_property_access runs-per-second 528.0
Dromaeo-drt setAttribute runs-per-second 385.0
Dromaeo-drt element_property_assignment runs-per-second 513.49

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19563005
------------------------------------------------------------------------
r25353 | srdjan@google.com | 2013-07-24 03:38:03 +0900 (水, 24  7月 2013) | 5 lines

Make sure that all objects store in the Code object live in old space.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19990006
------------------------------------------------------------------------
r25352 | zra@google.com | 2013-07-24 03:25:44 +0900 (水, 24  7月 2013) | 8 lines

Increases the number of ARM floating-point registers.

This is to be consistent with VFPv3_D32. Later, we'll detect
VFPv3_D16 at runtime.

R=regis@google.com

Review URL: https://codereview.chromium.org//19806005
------------------------------------------------------------------------
r25325 | mlippautz@google.com | 2013-07-23 09:39:28 +0900 (火, 23  7月 2013) | 8 lines

Local change to make the type getter lazy.

This change adds the last piece missing to inline functionality of CreateMethodMirror and its parameters. (Separate CL.)

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19983003
------------------------------------------------------------------------
r25324 | regis@google.com | 2013-07-23 09:19:39 +0900 (火, 23  7月 2013) | 6 lines

Refactor resolution code in the vm to properly handle ambiguity errors.
Add test.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19662003
------------------------------------------------------------------------
r25320 | zra@google.com | 2013-07-23 08:26:12 +0900 (火, 23  7月 2013) | 9 lines

Adds more SIMD instructions for ARM.

Adds the vnegqs, vabsqs, and vandq instructions.

Also reverts the increase in the number of floating point registers since it is causing crashes on hardware.

R=regis@google.com

Review URL: https://codereview.chromium.org//19493004
------------------------------------------------------------------------
r25317 | rmacnak@google.com | 2013-07-23 08:05:54 +0900 (火, 23  7月 2013) | 5 lines

Implement VariableMirror creation with non-API code. To break circular initialization, have them find their type lazily.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19512003
------------------------------------------------------------------------
r25315 | mlippautz@google.com | 2013-07-23 07:49:08 +0900 (火, 23  7月 2013) | 6 lines

This change introduces nothing new. It only fixes the native entrypoints to use the right macros.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19500016
------------------------------------------------------------------------
r25314 | srdjan@google.com | 2013-07-23 07:43:51 +0900 (火, 23  7月 2013) | 5 lines

FIx a typo in SIMMIPS min/max and enable min_max_test for SIMMIPS by splitting the main functions into two parts.

R=regis@google.com

Review URL: https://codereview.chromium.org//19653008
------------------------------------------------------------------------
r25306 | srdjan@google.com | 2013-07-23 06:37:43 +0900 (火, 23  7月 2013) | 5 lines

Fix math min/max for -0.0 case. Enable min_max_test to run in optimizing compiler as well.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//19482023
------------------------------------------------------------------------
r25301 | johnmccutchan@google.com | 2013-07-23 05:20:50 +0900 (火, 23  7月 2013) | 5 lines

Add two argument SSE shuffle instructions

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19940005
------------------------------------------------------------------------
r25292 | asiva@google.com | 2013-07-23 03:46:14 +0900 (火, 23  7月 2013) | 9 lines

Reuse the top ApiLocalScope so that we do not allocate and free an ApiLocalScope
for each Dart_EnterScope/Dart_ExitScope sequence.

The runtime of UseDartApi benchmark on linux ia32 improves from
187316 to 121083.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19974002
------------------------------------------------------------------------
r25291 | zra@google.com | 2013-07-23 03:19:44 +0900 (火, 23  7月 2013) | 5 lines

Adds reciprocal squre root SIMD instructions for ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//19875002
------------------------------------------------------------------------
r25288 | srdjan@google.com | 2013-07-23 02:51:03 +0900 (火, 23  7月 2013) | 3 lines

Fix simmips build, remove unnecessary temp register.

Review URL: https://codereview.chromium.org//19849004
------------------------------------------------------------------------
r25287 | srdjan@google.com | 2013-07-23 02:27:45 +0900 (火, 23  7月 2013) | 5 lines

Recognize Math's min and max function for doubles and inline the operation.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//19792007
------------------------------------------------------------------------
r25279 | johnmccutchan@google.com | 2013-07-23 00:39:03 +0900 (火, 23  7月 2013) | 5 lines

VM Service isolate listing

R=asiva@google.com

Review URL: https://codereview.chromium.org//19622003
------------------------------------------------------------------------
r25267 | floitsch@google.com | 2013-07-22 21:25:16 +0900 (月, 22  7月 2013) | 5 lines

Remove dart:codec and move classes into dart:convert.

R=sgjesse@google.com

Review URL: https://codereview.chromium.org//19941002
------------------------------------------------------------------------
r25252 | mlippautz@google.com | 2013-07-20 08:17:47 +0900 (土, 20  7月 2013) | 8 lines

Since returnType is represented by a mirror, we make it lazy. We do not use a lazy mirror anymore, but instead create a type mirror upon first access.

CreateTypeMirror is already factored out of MethodMirror_return_type since it is needed by others mirrors (future CLs). Also introduces CreateMirror() which will be used in future CLs.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19780002
------------------------------------------------------------------------
r25246 | mlippautz@google.com | 2013-07-20 06:49:45 +0900 (土, 20  7月 2013) | 6 lines

Rename: DartLibraryCalls::ExceptionCreate -> InstanceCreate

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19678024
------------------------------------------------------------------------
r25245 | zra@google.com | 2013-07-20 06:32:03 +0900 (土, 20  7月 2013) | 7 lines

Adds ARM SIMD instructions.

vminqs, maxqs, vrecpeqs (Reciprocal estimate), vrecpsqs (Reciprocal Newton-Raphson step).

R=regis@google.com

Review URL: https://codereview.chromium.org//19773017
------------------------------------------------------------------------
r25234 | srdjan@google.com | 2013-07-20 03:20:21 +0900 (土, 20  7月 2013) | 5 lines

Minor cleanup: use deopt-id instead od static call instruction as argument for MathSqrtInstr.

R=regis@google.com

Review URL: https://codereview.chromium.org//19779011
------------------------------------------------------------------------
r25233 | regis@google.com | 2013-07-20 03:08:17 +0900 (土, 20  7月 2013) | 4 lines

Use library prefixes in scope of the mixin class when compiling a functions of
a mixin application (issue 11891).

Review URL: https://codereview.chromium.org//19763007
------------------------------------------------------------------------
r25227 | johnmccutchan@google.com | 2013-07-20 02:03:09 +0900 (土, 20  7月 2013) | 5 lines

Add all 256 shuffle methods to Float32x4

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19564014
------------------------------------------------------------------------
r25225 | srdjan@google.com | 2013-07-20 01:49:29 +0900 (土, 20  7月 2013) | 5 lines

Collect both arguments for math's min/max static functions. Later that information will be used to inline the operation if possible.

R=regis@google.com

Review URL: https://codereview.chromium.org//19774007
------------------------------------------------------------------------
r25219 | zra@google.com | 2013-07-20 00:28:53 +0900 (土, 20  7月 2013) | 5 lines

Enables more SIMD tests for ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//19779006
------------------------------------------------------------------------
r25200 | fschneider@google.com | 2013-07-19 18:15:28 +0900 (金, 19  7月 2013) | 20 lines

Replace ChainContextInstr with existing IL instructions.

v0 <- AllocateContext(...)

      ChainContext(v0)

is changed into 

v1 <- CurrentContext
      StoreField(v0.parent = v1)
      StoreContext(v0)

Since v0 is used twice, I used a TempLocalScope in
the graph builder to store the allocated context.
As a result ChainContextInstr can be completely removed
from the compiler.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19569002
------------------------------------------------------------------------
r25193 | rmacnak@google.com | 2013-07-19 09:44:36 +0900 (金, 19  7月 2013) | 7 lines

Make the ClassMirrors created through reflectClass() find their owners (libraries) lazily.

Remove an unused parameter that was threaded through a number of mirror creation functions.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19188004
------------------------------------------------------------------------
r25189 | zra@google.com | 2013-07-19 07:56:45 +0900 (金, 19  7月 2013) | 5 lines

Implements ARM SIMD comparison instructions.

R=regis@google.com

Review URL: https://codereview.chromium.org//19678020
------------------------------------------------------------------------
r25186 | mlippautz@google.com | 2013-07-19 07:04:57 +0900 (金, 19  7月 2013) | 20 lines

If we have the owner mirror at creation time (which right now is a lazy mirror), we will use it. Eventually lazy mirrors will go away and we will not have to resolve() in dart code anymore.

If we don't have it, for example for a nested closure, we set it null and construct it lazily at access time.

Example:

outer() {
  inner() {}
  var closureMirror = reflect(inner);
  print(closureMirror.function.owner);  // Should be a MethodMirror on outer, that is constructed lazily.
}

Since we need to be able to construct the chain of owners (back up to library), we need to handle all cases in the lazy creation.

The CL also adds wrappers that can be called with native objects. At some point these wrapper will create the mirrors without referring to the ones using embedded API.

BUG=
R=asiva@google.com

Review URL: https://codereview.chromium.org//19579006
------------------------------------------------------------------------
r25165 | zra@google.com | 2013-07-19 03:40:27 +0900 (金, 19  7月 2013) | 7 lines

Enables a SIMD test for ARM.

Required adding the veorq, vmovq, and vdup instructions.

R=regis@google.com

Review URL: https://codereview.chromium.org//19776007
------------------------------------------------------------------------
r25162 | srdjan@google.com | 2013-07-19 03:15:29 +0900 (金, 19  7月 2013) | 5 lines

Cleanup: remove argument descriptor parameter when calling inline cache miss handler.

R=zra@google.com

Review URL: https://codereview.chromium.org//19547003
------------------------------------------------------------------------
r25146 | fschneider@google.com | 2013-07-18 23:13:38 +0900 (木, 18  7月 2013) | 11 lines

Disable allocation sinking in the presence of try-catch.

Allocation sinking does not handle the case of optimized try-catch yet.

I added a TODO to support it at a later point.

BUG=https://code.google.com/p/dart/issues/detail?id=11873
TEST=tests/language/try_catch_optimized2_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//19462004
------------------------------------------------------------------------
r25137 | asiva@google.com | 2013-07-18 09:28:03 +0900 (木, 18  7月 2013) | 7 lines

Allow type objects to be passed in to Dart_GetStaticFields
(This is in sync with the change to have the entire Dart API surface
accept type objects instead of exposing the class objects).

R=jacobr@google.com

Review URL: https://codereview.chromium.org//19713002
------------------------------------------------------------------------
r25136 | regis@google.com | 2013-07-18 09:23:04 +0900 (木, 18  7月 2013) | 5 lines

Fix generic mixins (issue 11803).

R=hausner@google.com

Review URL: https://codereview.chromium.org//19669010
------------------------------------------------------------------------
r25126 | rmacnak@google.com | 2013-07-18 06:50:54 +0900 (木, 18  7月 2013) | 5 lines

Implement metadata as an internal native. Be honest about which mirrors don't yet support metadata introspection.

R=asiva@google.com

Review URL: https://codereview.chromium.org//19235015
------------------------------------------------------------------------
r25122 | zra@google.com | 2013-07-18 05:54:34 +0900 (木, 18  7月 2013) | 7 lines

Replaces Location::ToStackSlotAddress() with Location::ToStackSlotOffset()

This way, Location no longer mentions the architecture specific Address class.

R=regis@google.com

Review URL: https://codereview.chromium.org//19464002
------------------------------------------------------------------------
r25103 | srdjan@google.com | 2013-07-18 01:03:07 +0900 (木, 18  7月 2013) | 5 lines

Cleanups.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//19395003
------------------------------------------------------------------------
r25090 | fschneider@google.com | 2013-07-17 20:35:20 +0900 (水, 17  7月 2013) | 5 lines

Fix bug in compile-type propagation of the optimizing compiler.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//19506007
------------------------------------------------------------------------
r25073 | zra@google.com | 2013-07-17 06:18:26 +0900 (水, 17  7月 2013) | 7 lines

Adds the vtbl ARM SIMD instruction.

It is needed for the Float32x4ShuffleInstr of the intermediate language.

R=regis@google.com

Review URL: https://codereview.chromium.org//19400003
------------------------------------------------------------------------
r25064 | zra@google.com | 2013-07-17 03:32:40 +0900 (水, 17  7月 2013) | 5 lines

Merges ARM load/store type enums into one enum.

R=regis@google.com

Review URL: https://codereview.chromium.org//19256021
------------------------------------------------------------------------
r25063 | johnmccutchan@google.com | 2013-07-17 03:31:25 +0900 (水, 17  7月 2013) | 5 lines

Object ID Ring with tests

R=iposva@google.com

Review URL: https://codereview.chromium.org//18259014
------------------------------------------------------------------------
r25057 | fschneider@google.com | 2013-07-17 01:45:27 +0900 (水, 17  7月 2013) | 8 lines

Always try to inline certain core library functions.

Inlining moveNext and get:iterator enables the iterator
object for allocation sinking.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19223002
------------------------------------------------------------------------
r25056 | regis@google.com | 2013-07-17 01:35:55 +0900 (水, 17  7月 2013) | 5 lines

Allow the optimizer to canonicalize instantiated function types (issue 11775).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19260003
------------------------------------------------------------------------
r25053 | regis@google.com | 2013-07-17 01:29:59 +0900 (水, 17  7月 2013) | 5 lines

Use proper internal name for implicit static final getters.

R=hausner@google.com

Review URL: https://codereview.chromium.org//19287003
------------------------------------------------------------------------
r25052 | zra@google.com | 2013-07-17 01:13:56 +0900 (水, 17  7月 2013) | 5 lines

Implements ARM SIMD multiplication and subtraction instructions.

R=regis@google.com

Review URL: https://codereview.chromium.org//19290006
------------------------------------------------------------------------
r25041 | fschneider@google.com | 2013-07-16 18:38:13 +0900 (火, 16  7月 2013) | 27 lines

Change resolving of instance methods to check early for name mismatch.

The names of actual arguments are checked at resolving time
for a mismatch instead of deferring this check to the function
prologue (emitted as part of the CopyParameters() prologue).

For example:

class A {
  foo({a:42}) => null;
}

main() {
  var a = new A();
  a.foo(b:123);  // noSuchMethod: no named parameter named "b".
}

This enables e.g. fast noSuchMethod invocation in the case
of a named argument mismatch.

It also makes the function prologue for instance functions that
use optional parameters shorter by omitting the check for a 
name mismatch there.

R=regis@google.com

Review URL: https://codereview.chromium.org//19200002
------------------------------------------------------------------------
r25024 | rmacnak@google.com | 2013-07-16 06:14:43 +0900 (火, 16  7月 2013) | 5 lines

Implement the invoke methods (invoke, getField, setField, newInstance, apply) as internal natives.

R=asiva@google.com

Review URL: https://codereview.chromium.org//18463003
------------------------------------------------------------------------
r25001 | fschneider@google.com | 2013-07-15 20:12:09 +0900 (月, 15  7月 2013) | 24 lines

Faster invocation of fields as methods.

Until now there was a large discrepancy between

x.f() and
(x.f)()

This CL makes x.f() as fast as (x.f)() by automatically
generating  a intermediate dispatcher function that loads
the field and invokes the result as a closure.

The approach resembles the one taken for fast noSuchMethod
invocation and reuses the same per-class cache
of dispatcher functions.

It also fixes a bug in the debugger so that VM-generated 
implicit dispatcher functions (like for noSuchMethod, or
field-as-method invocation) don't show up the debuggers
stack trace.

BUG=https://code.google.com/p/dart/issues/detail?id=11041
R=srdjan@google.com

Review URL: https://codereview.chromium.org//18750004
------------------------------------------------------------------------
r25000 | floitsch@google.com | 2013-07-15 19:32:37 +0900 (月, 15  7月 2013) | 13 lines

Cleanup VM error handling.

Unify the way the runtime throws errors. With this patch the VM goes through one location and always invokes the constructor of the errors.

It also makes it easier to rename fields in the error classes.

R=asiva@google.com

Committed: https://code.google.com/p/dart/source/detail?r=24995

Reverted: https://code.google.com/p/dart/source/detail?r=24997

Review URL: https://codereview.chromium.org//18531003
------------------------------------------------------------------------
r24999 | floitsch@google.com | 2013-07-15 19:26:38 +0900 (月, 15  7月 2013) | 7 lines

First version of Codecs and Converters.

No chunked conversions, yet.

R=asiva@google.com, lrn@google.com

Review URL: https://codereview.chromium.org//19000006
------------------------------------------------------------------------
r24997 | floitsch@google.com | 2013-07-15 19:18:50 +0900 (月, 15  7月 2013) | 5 lines

Revert "Cleanup VM error handling."

This reverts commit r24995.

Review URL: https://codereview.chromium.org//19172002
------------------------------------------------------------------------
r24995 | floitsch@google.com | 2013-07-15 18:28:28 +0900 (月, 15  7月 2013) | 9 lines

Cleanup VM error handling.

Unify the way the runtime throws errors. With this patch the VM goes through one location and always invokes the constructor of the errors.

It also makes it easier to rename fields in the error classes.

R=asiva@google.com

Review URL: https://codereview.chromium.org//18531003
------------------------------------------------------------------------
r24982 | zra@google.com | 2013-07-13 08:22:50 +0900 (土, 13  7月 2013) | 11 lines

Begins implementation of ARM neon instructions.

Just adds the vadd instruction, but also changes the
arm assembler to expose the Q registers rather than the
D registers. Q0 = D1:D0 = S3:S2:S1:S0. This is similar
to how ia32 and x64 use only the xmm registers for
floating point.

R=regis@google.com

Review URL: https://codereview.chromium.org//18684008
------------------------------------------------------------------------
r24979 | zra@google.com | 2013-07-13 08:06:27 +0900 (土, 13  7月 2013) | 9 lines

Removes checks for stack overflow from arm and mips simulators

The checks were performed before runtime and native calls,
but if we abort on an assertion failure there, then we
never make it to the StackOverflow runtime call.

R=regis@google.com

Review URL: https://codereview.chromium.org//18704006
------------------------------------------------------------------------
r24977 | hausner@google.com | 2013-07-13 07:09:18 +0900 (土, 13  7月 2013) | 7 lines

Implement forwarding constructors for mixins

By popular demand, fixes issue dartbug.com/9339

R=srdjan@google.com

Review URL: https://codereview.chromium.org//19023005
------------------------------------------------------------------------
r24965 | regis@google.com | 2013-07-13 02:59:17 +0900 (土, 13  7月 2013) | 6 lines

Stop resolving classes prematurely in the vm (issue 11023).
Add missing class finalization to mirrors tests.

R=hausner@google.com

Review URL: https://codereview.chromium.org//19030004
------------------------------------------------------------------------
r24962 | regis@google.com | 2013-07-13 02:37:38 +0900 (土, 13  7月 2013) | 5 lines

Fix type check elimination bug in code generator (issue 11792).

R=srdjan@google.com

Review URL: https://codereview.chromium.org//18147021
------------------------------------------------------------------------
r24961 | srdjan@google.com | 2013-07-13 02:31:19 +0900 (土, 13  7月 2013) | 5 lines

Fix wrong type test optimization when testing against a signature class: we must always consider the instance type arguments as well. FIxes failing tests when run with --optimization-counter-threshold=5.

R=regis@google.com

Review URL: https://codereview.chromium.org//18807007
------------------------------------------------------------------------
r24960 | zra@google.com | 2013-07-13 01:56:38 +0900 (土, 13  7月 2013) | 5 lines

Fixes bug in double to int conversion on arm.

R=regis@google.com

Review URL: https://codereview.chromium.org//18295007
------------------------------------------------------------------------
r24954 | fschneider@google.com | 2013-07-13 01:02:02 +0900 (土, 13  7月 2013) | 10 lines

Fix bug in the inliner when dealing with named optional parameters.

In case of a name mismatch the inliner would still inline the target
method as if nothing was wrong. Added a check that all actual named
arguments are matched against a formal parameter.

TEST=tests/language/named_parameters_with_conversions_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//18170003
------------------------------------------------------------------------
r24953 | fschneider@google.com | 2013-07-13 00:50:24 +0900 (土, 13  7月 2013) | 13 lines

Guard against entering a noSuchMethod dispatcher twice into ICData.

This may occur in optimized code when called via the megamorphic
cache miss handler.

For now, I fixed it by checking if there is already an entry in the IC data.
I'll discuss with Kevin how to handle the extraordinary cases like
noSuchMethod and implicit closure invocation in the megamorphic cache.

BUG=https://code.google.com/p/dart/issues/detail?id=11786
R=srdjan@google.com

Review URL: https://codereview.chromium.org//18469003
------------------------------------------------------------------------
r24939 | fschneider@google.com | 2013-07-12 17:27:35 +0900 (金, 12  7月 2013) | 12 lines

Prune variables that are not live at block entry from the environment.

If a variable is not live at a block entry, replace it
with the null-constant in the environment.  This can occur
when there is a partially dead variable stores.

Fewer environment uses mean shorter live ranges and better register
allocation.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//18558008
------------------------------------------------------------------------
r24922 | srdjan@google.com | 2013-07-12 02:32:16 +0900 (金, 12  7月 2013) | 5 lines

List class was not initialized properly (it has type parameters). Do not preinitialize it incorrectly, instead let it be loaded and finalized the normal way.

R=asiva@google.com

Review URL: https://codereview.chromium.org//18737004
------------------------------------------------------------------------
r24906 | fschneider@google.com | 2013-07-11 19:01:50 +0900 (木, 11  7月 2013) | 14 lines

Correct handling of named optional parameters with noSuchMethod invocations.

This CL fixes a performance bug with noSuchMethod and named parameters. It also
simplifies the platform-specific code by removing special casing for the
noSuchMethod-dispatcher functions in the flow graph compiler.

Before using named optional parameters would still go through the slow
runtime in certain conditions: When running without inlining, or when
the dispatcher function was not inlined because of e.g. inlining size
heuristics, noSuchMethod would be slow if invoked with named parameters.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//18209024
------------------------------------------------------------------------
r24900 | asiva@google.com | 2013-07-11 09:33:41 +0900 (木, 11  7月 2013) | 5 lines

Fix for issue 11770.

R=iposva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//18881009
------------------------------------------------------------------------
r24896 | zra@google.com | 2013-07-11 08:45:18 +0900 (木, 11  7月 2013) | 5 lines

Implements OSR for arm and mips.

R=regis@google.com

Review URL: https://codereview.chromium.org//19017007
------------------------------------------------------------------------
r24895 | mlippautz@google.com | 2013-07-11 08:08:36 +0900 (木, 11  7月 2013) | 8 lines

Fix closure creation from function.

A closure created from a function should also inherit its token end position and
result type.

R=hausner@google.com

Review URL: https://codereview.chromium.org//19021002
------------------------------------------------------------------------
r24876 | fschneider@google.com | 2013-07-10 19:09:14 +0900 (水, 10  7月 2013) | 21 lines

Support fast noSuchMethod dispatch for any number of arguments.

Until now, the fast dispatch was only available with getters and
zero argument methods.

This CL generalizes the approach to any number of arguments. The
dispatcher functions that are auto-generated by the compiler
are not attached to the class anymore. Instead the dispatcher
is only stored in the IC data of each call site. Each class
contains a cache of dispatcher function that map
(name, arguments descriptor) => dispatcher.

This also fixes a bug where the VM report a wrong error message
when throwing a NoSuchMethodError.

BUG=https://code.google.com/p/dart/issues/detail?id=11528
BUG=https://code.google.com/p/dart/issues/detail?id=11223
TEST=tests/language/no_such_method_dispatcher_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//18097004
------------------------------------------------------------------------
r24872 | mlippautz@google.com | 2013-07-10 10:08:19 +0900 (水, 10  7月 2013) | 9 lines

Add a MirrorReference reflectee to MethodMirrors. Name getter now refers to
internal function object, providing a name for for all cases and not only for
the ones a name has been provided in the constructor.

Fixes http://dartbug.com/6335

R=asiva@google.com, rmacnak@google.com

Review URL: https://codereview.chromium.org//18473005
------------------------------------------------------------------------
r24869 | asiva@google.com | 2013-07-10 09:24:53 +0900 (水, 10  7月 2013) | 10 lines

Fix for issue 11649:
- fields in type objects were being serialized as references but since we do
  a canonicalization of type objects this will not work. The fields need to
  be serialized as inlined objects.
- classes in the object store where being serialized incorrectly for script
  snapshots.

R=regis@google.com

Review URL: https://codereview.chromium.org//18946003
------------------------------------------------------------------------
r24868 | srdjan@google.com | 2013-07-10 08:43:46 +0900 (水, 10  7月 2013) | 5 lines

FIx HasTypeArguments test.

R=asiva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//18627003
------------------------------------------------------------------------
r24864 | srdjan@google.com | 2013-07-10 05:45:32 +0900 (水, 10  7月 2013) | 5 lines

Fix 11701: method became huge because of inlining. Add caller size threshold (50000 IR instructions). If exceeded, inlining stops.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//18271007
------------------------------------------------------------------------
r24861 | regis@google.com | 2013-07-10 04:35:56 +0900 (水, 10  7月 2013) | 7 lines

Support type parameters and classes as expression in the vm.
Turn many compile-time errors into runtime errors per latest spec.
Triage affected tests.

R=hausner@google.com

Review URL: https://codereview.chromium.org//18801007
------------------------------------------------------------------------
r24845 | zra@google.com | 2013-07-10 00:19:47 +0900 (水, 10  7月 2013) | 5 lines

Removes undefined shifting behavior from BitVector::Equals.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//18341023
------------------------------------------------------------------------
r24844 | johnmccutchan@google.com | 2013-07-09 23:59:01 +0900 (火, 09  7月 2013) | 5 lines

Call shutdown callback before the isolate is destroyed

R=asiva@google.com

Review URL: https://codereview.chromium.org//18862004
------------------------------------------------------------------------
r24841 | johnmccutchan@google.com | 2013-07-09 23:07:14 +0900 (火, 09  7月 2013) | 5 lines

JSONStream Print Dart Objects

R=iposva@google.com

Review URL: https://codereview.chromium.org//18472009
------------------------------------------------------------------------
r24830 | hausner@google.com | 2013-07-09 07:40:35 +0900 (火, 09  7月 2013) | 11 lines

Generate better debugging info for actor phase check

The phase check was generated at a token position that was one token
past the end of the constructor body, which threw debugger clients
off.

Fixes issue 8916.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//18465007
------------------------------------------------------------------------
r24826 | rmacnak@google.com | 2013-07-09 07:05:15 +0900 (火, 09  7月 2013) | 7 lines

Add a MirrorReference reflectee for ClassMirrors. Rewrite the name accessor in terms of it, at least for the non-special cases.

(This is a continuation of 18562005.)

R=asiva@google.com

Review URL: https://codereview.chromium.org//18465006
------------------------------------------------------------------------
r24822 | iposva@google.com | 2013-07-09 06:41:05 +0900 (火, 09  7月 2013) | 8 lines

Reland r24563 and r24564 with fixes cumbersome API leading to leaks.

- Add a WeakTable to the VM. This is used to remember the
  native peers registered through the Dart C API as well
  as assigning identity hashcodes to objects when needed.
- Use the hashcode to lookup entries in the Expando.

Review URL: https://codereview.chromium.org//18826007
------------------------------------------------------------------------
r24821 | regis@google.com | 2013-07-09 06:23:27 +0900 (火, 09  7月 2013) | 5 lines

Add missing store instruction in MIPS stub.

R=zra@google.com

Review URL: https://codereview.chromium.org//18282004
------------------------------------------------------------------------
r24805 | hausner@google.com | 2013-07-09 01:48:51 +0900 (火, 09  7月 2013) | 7 lines

Small cleanup in parser

When creating the type of the receiver variable 'this', use the token position of the class.

R=regis@google.com

Review URL: https://codereview.chromium.org//18801005
------------------------------------------------------------------------
r24801 | fschneider@google.com | 2013-07-09 01:27:46 +0900 (火, 09  7月 2013) | 5 lines

Inline native setters for length and data in the optimizer.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//18292003
------------------------------------------------------------------------
r24762 | hausner@google.com | 2013-07-04 08:26:03 +0900 (木, 04  7月 2013) | 8 lines

Add debugging info for 'this'

Token range for 'this' was wrong in the debug info, so its value was
not shown in most functions. Fixes issue 11435.

R=regis@google.com

Review URL: https://codereview.chromium.org//18272027
------------------------------------------------------------------------
r24749 | hausner@google.com | 2013-07-04 05:47:14 +0900 (木, 04  7月 2013) | 14 lines

Partial solution to analyze potentially constant expressions

This change adds code that detects if an expression can definitively
never be constant. We use this to analyze the initializer expressions
in const constructors. This check is not entirely water tight, but
together with the checks in canonicalization code catches most
illegal initializer expressions.

The const constructor of class Symbol turns out to be illegal. The
name verification check can't be part of the constructor code.

R=iposva@google.com

Review URL: https://codereview.chromium.org//18649003
------------------------------------------------------------------------
r24736 | floitsch@google.com | 2013-07-04 03:02:11 +0900 (木, 04  7月 2013) | 11 lines

Relax method override restrictions.

This implements part of issue 11495.

BUG= http://dartbug.com/11495
R=regis@google.com

Committed: https://code.google.com/p/dart/source/detail?r=24731
Reverted: https://code.google.com/p/dart/source/detail?r=24733

Review URL: https://codereview.chromium.org//18600007
------------------------------------------------------------------------
r24733 | floitsch@google.com | 2013-07-04 01:39:51 +0900 (木, 04  7月 2013) | 7 lines

Revert "Relax method override restrictions."
Revert "Update status file."

This reverts commit r24731.
This reverts commit r24732.

Review URL: https://codereview.chromium.org//18652002
------------------------------------------------------------------------
r24731 | floitsch@google.com | 2013-07-04 01:20:05 +0900 (木, 04  7月 2013) | 8 lines

Relax method override restrictions.

This implements part of issue 11495.

BUG= http://dartbug.com/11495
R=regis@google.com

Review URL: https://codereview.chromium.org//18600007
------------------------------------------------------------------------
r24726 | floitsch@google.com | 2013-07-03 23:51:30 +0900 (水, 03  7月 2013) | 6 lines

Add stackTrace to Error object.

BUG=
R=lrn@google.com

Review URL: https://codereview.chromium.org//18529003
------------------------------------------------------------------------
r24712 | iposva@google.com | 2013-07-03 10:37:02 +0900 (水, 03  7月 2013) | 7 lines

Fix bug 11637:
- Handle repeated private name mangling which can been introduced
  with mixins.

R=rmacnak@google.com

Review URL: https://codereview.chromium.org//18234006
------------------------------------------------------------------------
r24704 | hausner@google.com | 2013-07-03 05:09:24 +0900 (水, 03  7月 2013) | 8 lines

Const constructor must have const super initializer

Compile time error if a const constructor calls a non-const super
constructor (either explicitly or implicitly).

R=regis@google.com

Review URL: https://codereview.chromium.org//18558002
------------------------------------------------------------------------
r24697 | johnmccutchan@google.com | 2013-07-03 01:58:02 +0900 (水, 03  7月 2013) | 5 lines

JSONStream and tests

R=iposva@google.com

Review URL: https://codereview.chromium.org//18168003
------------------------------------------------------------------------
r24694 | rmacnak@google.com | 2013-07-03 01:17:25 +0900 (水, 03  7月 2013) | 5 lines

Add a VM defined class VMReference as an opaque pointer for Dart code to VM internal objects.

R=asiva@google.com

Review URL: https://codereview.chromium.org//18242003
------------------------------------------------------------------------
r24691 | hausner@google.com | 2013-07-03 00:21:22 +0900 (水, 03  7月 2013) | 7 lines

Fix a debugger step regression

Fix stepping after hitting a user breakpoint.

R=devoncarew@google.com

Review URL: https://codereview.chromium.org//18435002
------------------------------------------------------------------------
r24648 | asiva@google.com | 2013-07-02 04:46:42 +0900 (火, 02  7月 2013) | 6 lines

Add Dart_GetSupertype to the dart debugger API so that the dartium
debugger interface can use this instead of Dart_GetSuperClass.

R=regis@google.com

Review URL: https://codereview.chromium.org//18238003
------------------------------------------------------------------------
r24639 | zra@google.com | 2013-07-02 03:37:10 +0900 (火, 02  7月 2013) | 5 lines

Fixes ARM assembler test for hardware.

R=regis@google.com

Review URL: https://codereview.chromium.org//18326012
------------------------------------------------------------------------
r24635 | zra@google.com | 2013-07-02 02:44:09 +0900 (火, 02  7月 2013) | 5 lines

Adds support for integer division for ARM chips without the sdiv instruction.

R=regis@google.com

Review URL: https://codereview.chromium.org//18331006
------------------------------------------------------------------------
r24632 | hausner@google.com | 2013-07-02 02:29:18 +0900 (火, 02  7月 2013) | 9 lines

Better single stepping in VM debugger

Single stepping now steps into the next dart code that the
user is interested in, including from one asynchronous task
to the next.

R=asiva@google.com

Review URL: https://codereview.chromium.org//17846009
------------------------------------------------------------------------
r24616 | zra@google.com | 2013-06-29 08:48:13 +0900 (土, 29  6月 2013) | 5 lines

Optimize functions containing try-catch on MIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//18243002
------------------------------------------------------------------------
r24615 | regis@google.com | 2013-06-29 08:09:34 +0900 (土, 29  6月 2013) | 5 lines

Optimize functions containing try-catch on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//18223010
------------------------------------------------------------------------
r24612 | srdjan@google.com | 2013-06-29 07:30:59 +0900 (土, 29  6月 2013) | 5 lines

Fix 11574: Smi is a subtype of parametrizable Compare.

R=regis@google.com, zra@google.com

Review URL: https://codereview.chromium.org//18054022
------------------------------------------------------------------------
r24598 | srdjan@google.com | 2013-06-29 02:41:51 +0900 (土, 29  6月 2013) | 3 lines

Fixed crash in EqualityCompareInstr::IsCheckedStrictEqual : update unary_ic_data_ if ic_data_ is set at a later stage.

Review URL: https://codereview.chromium.org//18089019
------------------------------------------------------------------------
r24592 | srdjan@google.com | 2013-06-29 01:15:50 +0900 (土, 29  6月 2013) | 5 lines

Equality can be converted to a strict equality with checks. If the number of checks exceeds the threshold (--max_equality_polymorphic_checks=32) use megamorphic dispatch instead.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//18053010
------------------------------------------------------------------------
r24583 | kmillikin@google.com | 2013-06-28 21:28:56 +0900 (金, 28  6月 2013) | 11 lines

Fix a VM bug in the handling of try/catch/finally.

In the case that code in the catch block threw in any fashion, the
finally block was not executed.  Fix this by properly treating the
finally block of try/catch/finally as an exception handler for the
catch block.

R=fschneider@google.com, srdjan@google.com
BUG=https://code.google.com/p/dart/issues/detail?id=430

Review URL: https://codereview.chromium.org//17893003
------------------------------------------------------------------------
r24565 | iposva@google.com | 2013-06-28 09:27:25 +0900 (金, 28  6月 2013) | 3 lines

- Revert r24564 and r24563 due to unexplained malloc corruption.

Review URL: https://codereview.chromium.org//18051007
------------------------------------------------------------------------
r24564 | iposva@google.com | 2013-06-28 09:10:39 +0900 (金, 28  6月 2013) | 3 lines

- Fix compilation errors. Apparently clang != clang everywhere.

Review URL: https://codereview.chromium.org//18080007
------------------------------------------------------------------------
r24563 | iposva@google.com | 2013-06-28 09:01:47 +0900 (金, 28  6月 2013) | 8 lines

- Add a WeakTable to the VM. This is used to remember the
  native peers registered through the Dart C API as well
  as assigning identity hashcodes to objects when needed.
- Use the hashcode to lookup entries in the Expando.

R=asiva@google.com

Review URL: https://codereview.chromium.org//17992002
------------------------------------------------------------------------
r24561 | zra@google.com | 2013-06-28 08:11:13 +0900 (金, 28  6月 2013) | 5 lines

Fixes bug in mips left shift.

R=regis@google.com

Review URL: https://codereview.chromium.org//18053013
------------------------------------------------------------------------
r24557 | srdjan@google.com | 2013-06-28 06:52:49 +0900 (金, 28  6月 2013) | 5 lines

Split IdenticalWithNumberCheck in two versions: once called from unoptimized  code the other called from optimzied code. Only the one for unoptimized code will be able to stop for single stepping. The optimized version is a leaf stub and cannot cause GC.

R=hausner@google.com

Review URL: https://codereview.chromium.org//18130004
------------------------------------------------------------------------
r24556 | regis@google.com | 2013-06-28 06:51:55 +0900 (金, 28  6月 2013) | 5 lines

Remove obsolete #ifdefs excluding MIPS target.

R=zra@google.com

Review URL: https://codereview.chromium.org//18153002
------------------------------------------------------------------------
r24549 | zra@google.com | 2013-06-28 05:46:28 +0900 (金, 28  6月 2013) | 5 lines

Fixes a bug in the mips Random_nextState intrinsic.

R=regis@google.com

Review URL: https://codereview.chromium.org//18141002
------------------------------------------------------------------------
r24548 | regis@google.com | 2013-06-28 05:16:53 +0900 (金, 28  6月 2013) | 5 lines

Fix Random_nextState intrinsic on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//18054006
------------------------------------------------------------------------
r24541 | zra@google.com | 2013-06-28 04:03:04 +0900 (金, 28  6月 2013) | 8 lines

Adds missing case in mips double comparison.

Also, adds mips and simmips to runtime benchmark script,
and fixes up a status file.

R=regis@google.com

Review URL: https://codereview.chromium.org//18123003
------------------------------------------------------------------------
r24539 | iposva@google.com | 2013-06-28 03:37:53 +0900 (金, 28  6月 2013) | 6 lines

- Remove arguments definition test from the VM.
- Update tests still referring to it.

R=regis@google.com

Review URL: https://codereview.chromium.org//17977002
------------------------------------------------------------------------
r24537 | iposva@google.com | 2013-06-28 02:40:35 +0900 (金, 28  6月 2013) | 6 lines

- Protect against icount_ overflow in the delay slot and only
  stop if a stop_sim_at value has been set.

R=zra@google.com

Review URL: https://codereview.chromium.org//18055006
------------------------------------------------------------------------
r24524 | zra@google.com | 2013-06-28 01:42:39 +0900 (金, 28  6月 2013) | 5 lines

Implements external array access for mips.

R=regis@google.com

Review URL: https://codereview.chromium.org//17907005
------------------------------------------------------------------------
r24519 | srdjan@google.com | 2013-06-28 00:26:16 +0900 (金, 28  6月 2013) | 5 lines

Add --deoptimization_counter_inlining_threshold=10 that stops inlining in a method that has reached it.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17770003
------------------------------------------------------------------------
r24515 | fschneider@google.com | 2013-06-27 22:26:23 +0900 (木, 27  6月 2013) | 12 lines

Fix a bug in allocation sinking and load elimination.

1. Aliasing information was not computed for allocations that
are never used in a LoadField instruction.

2. CanBeAliased was not correct in the case of a StoreVMField.

BUG=https://code.google.com/p/dart/issues/detail?id=11538
TEST=runtime/vm/flow_graph_optimizer.cc
R=vegorov@google.com

Review URL: https://codereview.chromium.org//18055004
------------------------------------------------------------------------
r24504 | regis@google.com | 2013-06-27 09:49:49 +0900 (木, 27  6月 2013) | 6 lines

Hide parent function name in name of closurized function to user (issue 5436).
Hide implicit parameter of closure to user.

R=iposva@google.com

Review URL: https://codereview.chromium.org//17904009
------------------------------------------------------------------------
r24500 | srdjan@google.com | 2013-06-27 09:05:10 +0900 (木, 27  6月 2013) | 5 lines

Add two-byte string support in codeunitAt intrinsic.

R=regis@google.com

Review URL: https://codereview.chromium.org//17907003
------------------------------------------------------------------------
r24493 | regis@google.com | 2013-06-27 07:14:42 +0900 (木, 27  6月 2013) | 5 lines

Fix code for store buffer update on ARM and MIPS (link register was trashed).

R=zra@google.com

Review URL: https://codereview.chromium.org//17868006
------------------------------------------------------------------------
r24491 | asiva@google.com | 2013-06-27 06:30:18 +0900 (木, 27  6月 2013) | 5 lines

Convert implementation in mirrors.cc to use Dart_GetType instead of Dart_GetClass.

R=regis@google.com

Review URL: https://codereview.chromium.org//17582016
------------------------------------------------------------------------
r24485 | regis@google.com | 2013-06-27 04:58:49 +0900 (木, 27  6月 2013) | 11 lines

Fix and simplify invocation of noSuchMethod on all platforms after the wrong
number (or bad name) of arguments is passed.
The frame of the wrong method (the one invoked with the wrong number or name of
arguments) is not left on the stack and therefore not visible in the stack trace
anymore, which is much cleaner, especially since the leftover frame was not
fully initialized.
This change was already done on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//17857008
------------------------------------------------------------------------
r24481 | zra@google.com | 2013-06-27 02:43:48 +0900 (木, 27  6月 2013) | 5 lines

Fixes integer negate intrinsic for arm and mips.

R=regis@google.com

Review URL: https://codereview.chromium.org//17847006
------------------------------------------------------------------------
r24475 | regis@google.com | 2013-06-27 01:31:53 +0900 (木, 27  6月 2013) | 11 lines

Fix and simplify invocation of noSuchMethod on ARM after the wrong number of
arguments is passed.
The frame of the wrong method (the one invoked with the wrong number of
arguments) is not left on the stack and therefore not visible in the stack trace
anymore, which is much cleaner, especially since the leftover frame was not
fully initialized.
Note: We should simplify this on other platforms as well.

R=zra@google.com

Review URL: https://codereview.chromium.org//17766005
------------------------------------------------------------------------
r24473 | zra@google.com | 2013-06-27 00:48:22 +0900 (木, 27  6月 2013) | 7 lines

Fixes floating point bug in ARM simulator.

Adjusts status files to match.

R=regis@google.com

Review URL: https://codereview.chromium.org//17742003
------------------------------------------------------------------------
r24465 | kmillikin@google.com | 2013-06-26 21:36:44 +0900 (水, 26  6月 2013) | 7 lines

Remove an unused field in the AST.

The try_index of catch clauses was set but never read.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17873002
------------------------------------------------------------------------
r24459 | fschneider@google.com | 2013-06-26 18:20:46 +0900 (水, 26  6月 2013) | 15 lines

Support type arguments for allocation sinking in certain conditions.

The type arguments are treated like a normal field that is initialized
with the type arguments passed to the allocation stub. This CL restricts
the optimization to the case where no instantiator is passed
(instantiator == kNoInstantiator). In this case the type arguments are
either a constant or loaded from a field.

Also: improve variable liveness analysis by pruning partially dead
variables from the environment. At the beginning of each block, all 
variables that are _not_ in live-in are replaced with null.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//16799003
------------------------------------------------------------------------
r24457 | fschneider@google.com | 2013-06-26 17:44:00 +0900 (水, 26  6月 2013) | 11 lines

Correctly deal with method invocation of a getter.

If getter lookup succeeds, but getter invocation throws
an exception, the result is the thrown exception and
not as previously noSuchMethod invocation.

BUG=https://code.google.com/p/dart/issues/detail?id=11512
TEST=tests/language/method_invocation_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//17675002
------------------------------------------------------------------------
r24443 | iposva@google.com | 2013-06-26 08:38:45 +0900 (水, 26  6月 2013) | 3 lines

- Revert r24441 until issues found have been addressed.

Review URL: https://codereview.chromium.org//17769004
------------------------------------------------------------------------
r24441 | iposva@google.com | 2013-06-26 08:04:19 +0900 (水, 26  6月 2013) | 6 lines

- Trial balloon for removal of argument definition test.
  This change removes the support for the ? operator.

R=asiva@google.com, hausner@google.com

Review URL: https://codereview.chromium.org//17765003
------------------------------------------------------------------------
r24438 | srdjan@google.com | 2013-06-26 07:53:45 +0900 (水, 26  6月 2013) | 5 lines

Fix bot redness: max_calls can be zero if no call was actually executed.

R=iposva@google.com

Review URL: https://codereview.chromium.org//17749004
------------------------------------------------------------------------
r24436 | srdjan@google.com | 2013-06-26 07:12:49 +0900 (水, 26  6月 2013) | 5 lines

Use call counts to determine which static calls to inline.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17646002
------------------------------------------------------------------------
r24433 | srdjan@google.com | 2013-06-26 06:31:37 +0900 (水, 26  6月 2013) | 7 lines

Remove skip_static_calls_ as it uses an obsolete way to check for uncalled static calls. Will be replaced by ICData tracking.
Add two different PCDescriptors to differentiate between optimized and unoptimized static calls (the former loads args. descr, the later loads ICData before calling).
Populate static call's ic_data field when optimizing.

R=asiva@google.com

Review URL: https://codereview.chromium.org//17723002
------------------------------------------------------------------------
r24427 | zra@google.com | 2013-06-26 03:58:47 +0900 (水, 26  6月 2013) | 5 lines

Fixes bugs in arm and mips intrinsifier.

R=regis@google.com

Review URL: https://codereview.chromium.org//17634003
------------------------------------------------------------------------
r24426 | vegorov@google.com | 2013-06-26 03:50:26 +0900 (水, 26  6月 2013) | 11 lines

Refactor load forwarding pass to use a Place abstraction.

Place describes a location that code can load from or store to.

Start forwarding loads through phis.

Previously load forwarding operated directly on load instructions which complicated certain things e.g. implementation of a hash map had to allow looking up a load instruction by store instruction, forwarding through phis might have required introducing synthetic load instructions to be put into the map.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//17101028
------------------------------------------------------------------------
r24422 | asiva@google.com | 2013-06-26 02:25:35 +0900 (水, 26  6月 2013) | 5 lines

Fix Dart_GetType to get the correct number of type arguments.

R=regis@google.com

Review URL: https://codereview.chromium.org//17617006
------------------------------------------------------------------------
r24391 | fschneider@google.com | 2013-06-25 19:56:44 +0900 (火, 25  6月 2013) | 9 lines

Inline object constructor already in the method recognizer.

The call is replaced with "return null". This allows us to always
inline calls to "Object." without extra overhead in the generic
flow graph inliner.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//17624010
------------------------------------------------------------------------
r24377 | rmacnak@google.com | 2013-06-25 08:47:00 +0900 (火, 25  6月 2013) | 5 lines

Removed dead code: ConsumeIdentChar

R=asiva@google.com

Review URL: https://codereview.chromium.org//17609004
------------------------------------------------------------------------
r24374 | johnmccutchan@google.com | 2013-06-25 07:45:12 +0900 (火, 25  6月 2013) | 6 lines

Remove --disable_privacy

BUG=https://code.google.com/p/dart/issues/detail?id=11493
R=hausner@google.com

Review URL: https://codereview.chromium.org//17621003
------------------------------------------------------------------------
r24373 | asiva@google.com | 2013-06-25 07:41:01 +0900 (火, 25  6月 2013) | 10 lines

- Create isolate specific resuable handles and use them in the hot lookup paths.
- Create a ResuableHandleScope class which ensures that we do not end up
  recursively reusing handles leading to corruption.

This change shows Dart2JSCompileAll runtime change from 739931 to about
645035 on my local machine.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16174008
------------------------------------------------------------------------
r24371 | johnmccutchan@google.com | 2013-06-25 07:12:53 +0900 (火, 25  6月 2013) | 6 lines

Preallocate objects in Dart::InitializeIsolate not in Api::CheckIsolateState

BUG=https://code.google.com/p/dart/issues/detail?id=11396
R=iposva@google.com

Review URL: https://codereview.chromium.org//17066009
------------------------------------------------------------------------
r24365 | zra@google.com | 2013-06-25 05:16:16 +0900 (火, 25  6月 2013) | 10 lines

Enables more tests for SIMMIPS.

. Fixes register allocation bugs
. Implements float <-> double conversion in assembler and simulator.
. Fixes floating point argument passing for simarm and simmips,
  and floating point return for simarm, and adjusts tests to match.

R=regis@google.com

Review URL: https://codereview.chromium.org//17502002
------------------------------------------------------------------------
r24361 | zra@google.com | 2013-06-25 03:38:46 +0900 (火, 25  6月 2013) | 7 lines

Allows exception object to be null in simarm and simmips.

Also, updates status files.

R=regis@google.com

Review URL: https://codereview.chromium.org//17587015
------------------------------------------------------------------------
r24351 | fschneider@google.com | 2013-06-25 02:18:51 +0900 (火, 25  6月 2013) | 16 lines

Reland: Optimizing noSuchMethod invocation with no arguments.

This is the same CL as https://codereview.chromium.org/17315008/ with
one bug fixed:

If a method is invoked with a mismatching number of arguments, we don't
add a no-such-method-dispatcher function since the dispatcher currently
can only invoke noSuchMethod and would not work if the method
is invoked with correct arguments at a later point.

I extended the test to cover that case.

TEST=tests/language/no_such_method_dispatcher_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//17571010
------------------------------------------------------------------------
r24325 | vegorov@google.com | 2013-06-24 21:16:10 +0900 (月, 24  6月 2013) | 6 lines

Ensure that allocation sinking candidates are classified as not-aliased before final load forwarding.

R=fschneider@google.com
BUG=dart:11436

Review URL: https://codereview.chromium.org//17577007
------------------------------------------------------------------------
r24307 | srdjan@google.com | 2013-06-22 08:35:10 +0900 (土, 22  6月 2013) | 6 lines

Change static calls in unoptimized code to always call via a stub. Using ICData, the call count of static calls is collected as well.
TODO: Use call frequency to guide inlining.

R=asiva@google.com, hausner@google.com, zra@google.com

Review URL: https://codereview.chromium.org//17554003
------------------------------------------------------------------------
r24295 | zra@google.com | 2013-06-22 01:43:43 +0900 (土, 22  6月 2013) | 5 lines

In FiftyThreeBitOverflow, stores overflowing value as a string.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17550009
------------------------------------------------------------------------
r24284 | fschneider@google.com | 2013-06-21 20:56:32 +0900 (金, 21  6月 2013) | 5 lines

Back out r24266 to investigate dartium test failure.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//17074003
------------------------------------------------------------------------
r24266 | fschneider@google.com | 2013-06-21 16:31:51 +0900 (金, 21  6月 2013) | 18 lines

Optimizing noSuchMethod invocation with no arguments.

On each call that triggers a noSuchMethod invocation we 
attach a custom dispatch function that allocates the 
invocation object and invokes noSuchMethod. This dispatcher
is compiled and optimized like a normal Dart function.

Similar to method-extractors, these implicit dispatchers
do not show up as normal functions.

As a first step this CL only handles invocations of getters
and methods with no like o.foo or o.foo().  This CL gives
a >25x speedup of such noSuchMethod invocations. Calls with
multiple arguments still go through the slow path.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17315008
------------------------------------------------------------------------
r24265 | lrn@google.com | 2013-06-21 16:31:48 +0900 (金, 21  6月 2013) | 8 lines

Move FiftythreeBitOverflowError to VM-only patch file.

The class is not meaningful in the core library, and should go away once
dart2js has integers.

R=floitsch@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//17361004
------------------------------------------------------------------------
r24252 | johnmccutchan@google.com | 2013-06-21 05:51:14 +0900 (金, 21  6月 2013) | 6 lines

Stop unwanted class finalization when using dart:io HttpClient from builtin.dart

BUG=11232
R=iposva@google.com

Review URL: https://codereview.chromium.org//17503002
------------------------------------------------------------------------
r24247 | asiva@google.com | 2013-06-21 04:49:30 +0900 (金, 21  6月 2013) | 5 lines

Minor cleanups to use null_array(), null_object() and null_string() handles.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17501003
------------------------------------------------------------------------
r24239 | srdjan@google.com | 2013-06-21 01:29:39 +0900 (金, 21  6月 2013) | 5 lines

Store arguments descriptor in ICData. Remove loading of arguments descriptor at unoptimized call site (the ones using ICData).

R=asiva@google.com, zra@google.com

Review URL: https://codereview.chromium.org//17421003
------------------------------------------------------------------------
r24214 | kmillikin@google.com | 2013-06-20 19:17:34 +0900 (木, 20  6月 2013) | 10 lines

Fix a bug in graph construction for for loops.

A refactoring in SVN r24088 introduced a bug in for loops.  Loops with
continue in the body and an empty update expression list will lose the
edge from the continue to the loop entry.

R=fschneider@google.com
BUG=11375

Review URL: https://codereview.chromium.org//17491003
------------------------------------------------------------------------
r24206 | zra@google.com | 2013-06-20 07:33:57 +0900 (木, 20  6月 2013) | 7 lines

Removes references to LIB_DIR from gyp files.

This eliminates the cirular dependency warnings from make.

R=iposva@google.com

Review URL: https://codereview.chromium.org//17288009
------------------------------------------------------------------------
r24195 | asiva@google.com | 2013-06-20 03:20:55 +0900 (木, 20  6月 2013) | 8 lines

Fix for issue 11262.

- Add Dart_InstanceGetType
- Wire Dart_New, Dart_Invoke and Dart_[G|S]etField to use types

R=regis@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//17390008
------------------------------------------------------------------------
r24191 | regis@google.com | 2013-06-20 01:21:27 +0900 (木, 20  6月 2013) | 5 lines

Fix more register allocation bugs in optimized code on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//17176004
------------------------------------------------------------------------
r24189 | vsm@google.com | 2013-06-20 00:48:23 +0900 (木, 20  6月 2013) | 17 lines

Add Dart_Allocate to the C++ API

This change allows us to allocate Dart objects from C++ without
invoking a constructor.  In turn, it allows us to declare Dartium DOM
types with no public generative constructor.

Note, the current constructor has to be public as dart:html Element is
subclassed by dart:svg SvgElement (and eventually by user defined
custom elements as well).  This leads to unfortunate holes such as: https://code.google.com/p/dart/issues/detail?id=11277

This should also give a modest boost in DOM perf as the existing
constructor does absolutely nothing.

BUG=11277
R=asiva@google.com

Review URL: https://codereview.chromium.org//16968006
------------------------------------------------------------------------
r24184 | kmillikin@google.com | 2013-06-19 22:56:48 +0900 (水, 19  6月 2013) | 8 lines

Fix a small bug in trace printing for discovered loops.

Loop blocks were printed with their preorder number, which is hard to
correlate to the graph.  Use the block id instead.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//17283006
------------------------------------------------------------------------
r24175 | kmillikin@google.com | 2013-06-19 18:21:25 +0900 (水, 19  6月 2013) | 9 lines

Scale the OSR optimization threshold by loop nesting depth.

For on-stack replacement (OSR), code quality is better if we optimize at
the outermost hot loop.  Track loop nesting depth and scale the
threshold based on the loop depth to prefer outer loops over inner ones.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17315006
------------------------------------------------------------------------
r24172 | regis@google.com | 2013-06-19 17:28:32 +0900 (水, 19  6月 2013) | 5 lines

Fix register allocation bug in optimized code on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//17348005
------------------------------------------------------------------------
r24164 | devoncarew@google.com | 2013-06-19 06:56:00 +0900 (水, 19  6月 2013) | 7 lines

Fix for an issue w/ breakpointResolved events not being sent.
Added tests for breakpointResolved events.
Added tests for handling toString() invocations throwing exceptions, and extended debug_lib.dart to supported verifying values of local variables.

R=hausner@google.com

Review URL: https://codereview.chromium.org//17112010
------------------------------------------------------------------------
r24156 | asiva@google.com | 2013-06-19 03:37:49 +0900 (水, 19  6月 2013) | 3 lines

Fix build break (add correct return type in test).

Review URL: https://codereview.chromium.org//17286009
------------------------------------------------------------------------
r24154 | asiva@google.com | 2013-06-19 02:47:15 +0900 (水, 19  6月 2013) | 7 lines

Fix for issue 11262.

Provide support for types in the Dart API.

R=regis@google.com

Review URL: https://codereview.chromium.org//17346002
------------------------------------------------------------------------
r24152 | zra@google.com | 2013-06-19 01:47:43 +0900 (水, 19  6月 2013) | 5 lines

Fixes buggy FPU tests for MIPS hardware.

R=regis@google.com

Review URL: https://codereview.chromium.org//15874005
------------------------------------------------------------------------
r24147 | zra@google.com | 2013-06-19 00:51:27 +0900 (水, 19  6月 2013) | 7 lines

Enables co19 tests for SIMMIPS.

Also fixes a bug in division.

R=regis@google.com

Review URL: https://codereview.chromium.org//17312003
------------------------------------------------------------------------
r24132 | kmillikin@google.com | 2013-06-18 20:06:18 +0900 (火, 18  6月 2013) | 8 lines

Ensure we perform the same checks for all optimizing compilations.

Ensure that we perform the same checks for on-stack replacement (OSR)
as for normal optimizing compilation.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17183003
------------------------------------------------------------------------
r24122 | kmillikin@google.com | 2013-06-18 15:55:32 +0900 (火, 18  6月 2013) | 9 lines

Try to avoid checks for lazy initialization when recompiling.

When recompiling implicit static getters, it can happen that the field
is already initialized.  In this case parse the getter to a field load
instead of a pair of sentinel checks and initialization code.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17288005
------------------------------------------------------------------------
r24117 | srdjan@google.com | 2013-06-18 08:33:46 +0900 (火, 18  6月 2013) | 7 lines

Change optimization counter threshold 3000 -> 15000.

This improves startup time considerably (30% dart2js Hello.dart, 20% others)

R=iposva@google.com

Review URL: https://codereview.chromium.org//17306003
------------------------------------------------------------------------
r24112 | srdjan@google.com | 2013-06-18 07:36:32 +0900 (火, 18  6月 2013) | 5 lines

Fix crash in OSR with --optimization-counter-threshold=-1: do not check for OSR if the optimizaiton is disabled.

R=asiva@google.com

Review URL: https://codereview.chromium.org//17311002
------------------------------------------------------------------------
r24105 | fschneider@google.com | 2013-06-18 02:35:00 +0900 (火, 18  6月 2013) | 9 lines

Fix bug in register allocation at catch entry blocks.

The registers used to pass the exception and the stacktrace values
need to be blocked at catch block entry until after the CatchEntry
instruction which stores them into local variables.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//17232004
------------------------------------------------------------------------
r24103 | srdjan@google.com | 2013-06-18 02:31:00 +0900 (火, 18  6月 2013) | 5 lines

Cosmetic change: s/arg_descriptor/args_descriptor/

R=asiva@google.com

Review URL: https://codereview.chromium.org//17141004
------------------------------------------------------------------------
r24098 | zra@google.com | 2013-06-18 00:58:31 +0900 (火, 18  6月 2013) | 5 lines

Enables language tests for SIMMIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//17131002
------------------------------------------------------------------------
r24088 | kmillikin@google.com | 2013-06-17 20:05:15 +0900 (月, 17  6月 2013) | 12 lines

Reapply "Initial implementation of on-stack replacement (OSR)."

This reapplies SVN r24024 with a bugfix.

After OSR compilation, restore the pre-OSR code (which might be already
optimized) rather than the unoptimized code (which might have its entry
patched).  When the optimized code entry is patched it is only safe to call
it as a static call, not as an instance call.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//17233003
------------------------------------------------------------------------
r24062 | asiva@google.com | 2013-06-15 08:47:40 +0900 (土, 15  6月 2013) | 10 lines

Split dart_api.h into multiple parts:

dart_api.h - Has the core API functions
dart_mirrors_api.h - Has API functions to support Mirrors or reflection
dart_native_api.h - Has parts which support the native message handling,
                    profilling and other internal tools

R=sgjesse@google.com, vsm@google.com

Review URL: https://codereview.chromium.org//16973003
------------------------------------------------------------------------
r24059 | srdjan@google.com | 2013-06-15 07:58:48 +0900 (土, 15  6月 2013) | 5 lines

Fix a bug in instance canonicalization and add debug mode checks that we are not missing any fields.

R=asiva@google.com

Review URL: https://codereview.chromium.org//17104002
------------------------------------------------------------------------
r24051 | hausner@google.com | 2013-06-15 06:16:46 +0900 (土, 15  6月 2013) | 7 lines

Remove support for + prefix in number literals

Also fix some tests that expected + prefix in hex numbers to be illegal. According to our documentation, int.parse() accepts + for numbers in all formats/radixes.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17103002
------------------------------------------------------------------------
r24050 | gbracha@google.com | 2013-06-15 06:12:58 +0900 (土, 15  6月 2013) | 5 lines

Changes to mirrors in support of metadata access at runtime.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16757007
------------------------------------------------------------------------
r24048 | asiva@google.com | 2013-06-15 05:02:57 +0900 (土, 15  6月 2013) | 5 lines

Add test to check that IsArray returns true for immutable array objects.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//17099005
------------------------------------------------------------------------
r24044 | srdjan@google.com | 2013-06-15 03:15:49 +0900 (土, 15  6月 2013) | 5 lines

Split LoadStatic into two instructions: load static field, load value from static field. This allows to canonicalize loads, thus reducing the number of inlined constants. Has large benefit on x64 (DeltaBlue). Note different register allocation spec for ia32, otherwise large regression in DeltaBlue is introduced.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//15973010
------------------------------------------------------------------------
r24033 | regis@google.com | 2013-06-15 01:22:00 +0900 (土, 15  6月 2013) | 7 lines

Fix left shift with constant on ARM.
Implement float array store on ARM.
Update status files.

R=zra@google.com

Review URL: https://codereview.chromium.org//16951018
------------------------------------------------------------------------
r24025 | kmillikin@google.com | 2013-06-14 19:30:53 +0900 (金, 14  6月 2013) | 7 lines

Revert "Initial implementation of on-stack replacement (OSR)."

This reverts commit 24024.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//16888013
------------------------------------------------------------------------
r24024 | kmillikin@google.com | 2013-06-14 19:10:55 +0900 (金, 14  6月 2013) | 13 lines

Initial implementation of on-stack replacement (OSR).

Add profiling support to select OSR candidates and launch the compiler
for OSR, followed by entry to the function at the OSR entry point.

Implemented only on IA32 and X64.  The initial implementation can be
improved in various ways --- specifically: tuning of profiling
parameters and incorporation of feedback about the actual values seen
at OSR entry.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//16693006
------------------------------------------------------------------------
r24012 | asiva@google.com | 2013-06-14 06:21:44 +0900 (金, 14  6月 2013) | 7 lines

Fix warning in dartium builds:

warning: converting to non-pointer type ‘uword {aka long unsigned int}’ from NULL [-Wconversion-null]

R=hausner@google.com

Review URL: https://codereview.chromium.org//17000003
------------------------------------------------------------------------
r24011 | fschneider@google.com | 2013-06-14 06:09:51 +0900 (金, 14  6月 2013) | 11 lines

Remove invalid assertion in the type propagator.

Apart from instances and type arguments and null, there can also be constants
with Class objects in the intermediate language. This occurs e.g. when building
an object allocation with bounds check (AllocateObjectWithBoundsCheckInstr).

BUG=https://code.google.com/p/dart/issues/detail?id=11278

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16982003
------------------------------------------------------------------------
r23989 | fschneider@google.com | 2013-06-14 00:52:33 +0900 (金, 14  6月 2013) | 10 lines

Revert r23330 and r23136 because of a bug with loop invariant code motion.

This CL temporarily remove deoptimzation history which was put in to prevent
repeated deoptimization caused by loop invariant code motion. It caused
illegal code motion under certain conditions.

BUG=https://code.google.com/p/dart/issues/detail?id=11245
TEST=tests/language/licm3_test.dart

Review URL: https://codereview.chromium.org//16844011
------------------------------------------------------------------------
r23975 | iposva@google.com | 2013-06-13 22:02:46 +0900 (木, 13  6月 2013) | 4 lines

- Make sure BoundedType and MixinAppType have a name.
- Reenable test from r23964.

Review URL: https://codereview.chromium.org//16924005
------------------------------------------------------------------------
r23959 | bak@google.com | 2013-06-13 18:24:18 +0900 (木, 13  6月 2013) | 5 lines

Changed "%d" to ""%"Pd for platform indenpent printing of intptr_t.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16954003
------------------------------------------------------------------------
r23958 | bak@google.com | 2013-06-13 18:16:36 +0900 (木, 13  6月 2013) | 5 lines

Added files absent from last commit.

R=ricow@google.com

Review URL: https://codereview.chromium.org//16816012
------------------------------------------------------------------------
r23955 | fschneider@google.com | 2013-06-13 18:08:05 +0900 (木, 13  6月 2013) | 9 lines

Fix bug in constant propagation with double-equality.

Don't optimize x == x and x != x if x is a double:
x == x is not true, if x == NaN.

TEST=tests/language/arithmetic_test.dart
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//16853005
------------------------------------------------------------------------
r23954 | bak@google.com | 2013-06-13 18:06:43 +0900 (木, 13  6月 2013) | 5 lines

Object histogramin the vm (--print-object-histogram).
Reviewed and LGTMed in:
https://codereview.chromium.org/16077018/

Review URL: https://codereview.chromium.org//16853006
------------------------------------------------------------------------
r23942 | srdjan@google.com | 2013-06-13 08:15:12 +0900 (木, 13  6月 2013) | 5 lines

When unwraping handles, verify only if --verify_handles. Fixes issue 11265,

R=asiva@google.com

Review URL: https://codereview.chromium.org//16816007
------------------------------------------------------------------------
r23940 | srdjan@google.com | 2013-06-13 07:33:11 +0900 (木, 13  6月 2013) | 5 lines

One more premature load-static node generation solved.

R=hausner@google.com

Review URL: https://codereview.chromium.org//16835002
------------------------------------------------------------------------
r23934 | srdjan@google.com | 2013-06-13 06:27:37 +0900 (木, 13  6月 2013) | 5 lines

When canonicalize instances check if all fields are canonical. If a field is a non-canonical number or strings, canonicalize it. Otherwise report an error if a field is not canonical.

R=hausner@google.com

Review URL: https://codereview.chromium.org//16780009
------------------------------------------------------------------------
r23920 | regis@google.com | 2013-06-13 01:57:06 +0900 (木, 13  6月 2013) | 7 lines

Fix decoding of object pool access in code patching on ARM.
Fix shift by zero and divide by one on ARM.
Update test status files.

R=zra@google.com

Review URL: https://codereview.chromium.org//16695007
------------------------------------------------------------------------
r23916 | asiva@google.com | 2013-06-13 01:29:14 +0900 (木, 13  6月 2013) | 3 lines

Fix build break.

Review URL: https://codereview.chromium.org//16815004
------------------------------------------------------------------------
r23912 | hausner@google.com | 2013-06-13 00:44:57 +0900 (木, 13  6月 2013) | 5 lines

Reified metadata in the VM

R=asiva@google.com

Review URL: https://codereview.chromium.org//16780008
------------------------------------------------------------------------
r23911 | regis@google.com | 2013-06-13 00:35:55 +0900 (木, 13  6月 2013) | 5 lines

Fix comment about super type of Object class.

R=asiva@google.com

Review URL: https://codereview.chromium.org//16109016
------------------------------------------------------------------------
r23901 | fschneider@google.com | 2013-06-12 19:27:13 +0900 (水, 12  6月 2013) | 16 lines

Make constant propagation to fold x == x and re-run type propagation for better range analysis.

1. When comparing numbers, or strict-comparing objects, this can be folded into
true/false.  Since this often occurs after inlining and store-to-load forwarding,
constant propagation is repeated after these phases. The pattern looks like:

o.x = o.y;
if (o.x == o.y) { ... }

2. Load elimination may introduce new phis that may have smi-type. In order to
get range information for these phis, I added a second phase of type propagation after
load elimination.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//16813002
------------------------------------------------------------------------
r23899 | fschneider@google.com | 2013-06-12 18:31:31 +0900 (水, 12  6月 2013) | 9 lines

Don't double-count stack slots when compiling optimized try-catch.

The fixed slots used by try-catch are already accounted for in the
register allocator. This change avoids wasting unnecessary stack space
for optimized functions containing try-catch.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//16520006
------------------------------------------------------------------------
r23887 | zra@google.com | 2013-06-12 08:47:03 +0900 (水, 12  6月 2013) | 5 lines

Fixes small bug in a MIPS stub.

R=asiva@google.com

Review URL: https://codereview.chromium.org//16454010
------------------------------------------------------------------------
r23886 | asiva@google.com | 2013-06-12 08:07:57 +0900 (水, 12  6月 2013) | 5 lines

Fix issue 11214 avoid length overflow in String::ConcatAll

R=hausner@google.com

Review URL: https://codereview.chromium.org//16783003
------------------------------------------------------------------------
r23884 | asiva@google.com | 2013-06-12 06:52:39 +0900 (水, 12  6月 2013) | 8 lines

Make ImmutableArray a sub class of AllStatic.
This enables Array to be a FINAL_HEAP_OBJECT and the operators
'=' and '^=' would be a simpler implementation which does not
require a call to initializeHandle().

R=iposva@google.com

Review URL: https://codereview.chromium.org//16390002
------------------------------------------------------------------------
r23877 | zra@google.com | 2013-06-12 05:08:40 +0900 (水, 12  6月 2013) | 11 lines

Enables more VM tests for SIMMIPS.

Implements:
- Megamorphic instance calls
- Left-shift
- Equality
- and various bug-fixes.

R=regis@google.com

Review URL: https://codereview.chromium.org//15934025
------------------------------------------------------------------------
r23868 | regis@google.com | 2013-06-12 01:47:01 +0900 (水, 12  6月 2013) | 7 lines

Switch code generation on ARM from softfp ABI to hardfp ABI.
Support leaf float runtime calls in ARM simulator.
Enable previously failing tests.

R=zra@google.com

Review URL: https://codereview.chromium.org//16638012
------------------------------------------------------------------------
r23847 | regis@google.com | 2013-06-11 21:22:04 +0900 (火, 11  6月 2013) | 5 lines

Move code setting super type of class Object to null from object.cc to parser.cc

R=iposva@google.com

Review URL: https://codereview.chromium.org//16434015
------------------------------------------------------------------------
r23825 | srdjan@google.com | 2013-06-11 04:32:03 +0900 (火, 11  6月 2013) | 6 lines

Make AST generation deterministic: always call a static getter if it exists, regardless if the statuic field was initialized or not. Previously we may have created a LoadStaticFieldNode dependgin if the static field was already intialized at compile time.
Note that we do not generate implicit static getter nodes if their initialization is trivial.

R=hausner@google.com

Review URL: https://codereview.chromium.org//16136014
------------------------------------------------------------------------
r23785 | asiva@google.com | 2013-06-08 09:47:35 +0900 (土, 08  6月 2013) | 6 lines

Create specific null read only handles for the frequently used types
Array, String, Instance, Object and use them.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16336021
------------------------------------------------------------------------
r23774 | zra@google.com | 2013-06-08 06:28:49 +0900 (土, 08  6月 2013) | 10 lines

Improvements to 53-bit overflow checking.

- Integer literals that require more than 53 bits will cause a compile-time error.
- Checking is added to unary negate for the case that the most negative
  53-bit integer is negated.
- The tests are improved to also check optimized code.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16664003
------------------------------------------------------------------------
r23751 | hausner@google.com | 2013-06-08 01:31:33 +0900 (土, 08  6月 2013) | 8 lines

BREAKING CHANGE: Remove === and !== in the VM compiler

This change is long overdue. Fixed the last places where we
still used ===.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16398006
------------------------------------------------------------------------
r23746 | iposva@google.com | 2013-06-08 00:31:05 +0900 (土, 08  6月 2013) | 6 lines

- Unpoison stack for ASan when tearing down stack frames
  during exception handling.

R=kcc@google.com

Review URL: https://codereview.chromium.org//15836008
------------------------------------------------------------------------
r23727 | fschneider@google.com | 2013-06-07 16:13:54 +0900 (金, 07  6月 2013) | 8 lines

Change allocation policy for smi-comparison RHS back to register-or-constant.

Allowing any operand often results in suboptimal code, i.e. a value stays
in a spill slot even though register may be beneficial.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//15735028
------------------------------------------------------------------------
r23721 | zra@google.com | 2013-06-07 07:48:20 +0900 (金, 07  6月 2013) | 5 lines

Implements checks for 53-bit overflow for x64.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16398008
------------------------------------------------------------------------
r23718 | zra@google.com | 2013-06-07 06:52:26 +0900 (金, 07  6月 2013) | 5 lines

Fixes small ARM bugs, and updates status files.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16054007
------------------------------------------------------------------------
r23710 | asiva@google.com | 2013-06-07 03:47:51 +0900 (金, 07  6月 2013) | 7 lines

- Remove the unvisited handles code from handles implementation as it is not
used anywhere
- Added IsFreeListElement to RawObject

R=hausner@google.com

Review URL: https://codereview.chromium.org//15995034
------------------------------------------------------------------------
r23698 | srdjan@google.com | 2013-06-07 02:11:07 +0900 (金, 07  6月 2013) | 5 lines

Small fix and cleanups.

R=vegorov@google.com, zra@google.com

Review URL: https://codereview.chromium.org//16566003
------------------------------------------------------------------------
r23688 | fschneider@google.com | 2013-06-06 23:41:58 +0900 (木, 06  6月 2013) | 17 lines

Improve array bounds check elimination for growable lists.

Previously we could not eliminate bounds checks for
growable lists, even though the length is not modified.

This CL removes obsolete restrictions and enables elimination
of checks as long as the length does not change.

This restriction were there originally because the CheckArrayBounds
instruction loaded the length from the array itself. Now, the length-load
and the  actual check are split into separate instructions.
Tracking side-effects for normal loads determines can now determine if
the length-load is invariant.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//15984010
------------------------------------------------------------------------
r23678 | fschneider@google.com | 2013-06-06 21:32:42 +0900 (木, 06  6月 2013) | 9 lines

Simplify AST by extending LetNode and replace CommaNode.

LetNode now supports a list of expressions as the body.

The last expression is the result value of the let-expression.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//16146008
------------------------------------------------------------------------
r23645 | asiva@google.com | 2013-06-06 02:44:39 +0900 (木, 06  6月 2013) | 5 lines

Fix the isolate unit tests to create an isolate from a snapshot.

R=zra@google.com

Review URL: https://codereview.chromium.org//16452013
------------------------------------------------------------------------
r23641 | asiva@google.com | 2013-06-06 02:28:01 +0900 (木, 06  6月 2013) | 3 lines

Revert change 23636 as it is causing issues on dartium. Will resubmit after investigating the dartium failure.

Review URL: https://codereview.chromium.org//16378004
------------------------------------------------------------------------
r23640 | zra@google.com | 2013-06-06 02:18:07 +0900 (木, 06  6月 2013) | 5 lines

Adds a flag to the standalone vm to throw an exception on 53-bit integer overflow.

R=asiva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//15743017
------------------------------------------------------------------------
r23637 | asiva@google.com | 2013-06-06 01:42:38 +0900 (木, 06  6月 2013) | 7 lines

Fix for issue 4638 in bitmap builder.
- Check for maximum size of byte offset and fatal out if it is larger.
- Convert some of the InRange asserts to actual checks.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16356009
------------------------------------------------------------------------
r23636 | asiva@google.com | 2013-06-06 01:21:04 +0900 (木, 06  6月 2013) | 9 lines

Fix for issue 1755.

Use 'new' in all the snapshot reallocation functions instead of realloc.
This would result in program termination when allocation fails and will
ensure that a NULL will not be returned.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16271010
------------------------------------------------------------------------
r23634 | vegorov@google.com | 2013-06-06 00:37:23 +0900 (木, 06  6月 2013) | 8 lines

Ensure that all phis inserted by load optimizer have consistent representation.

Revert r23619.

R=srdjan@google.com
BUG=dart:11048

Review URL: https://codereview.chromium.org//16430002
------------------------------------------------------------------------
r23631 | vegorov@google.com | 2013-06-05 23:26:25 +0900 (水, 05  6月 2013) | 6 lines

IfConverted should unuse inputs of the join it removes.

R=srdjan@google.com
BUG=dart:11087

Review URL: https://codereview.chromium.org//16423005
------------------------------------------------------------------------
r23619 | srdjan@google.com | 2013-06-05 07:33:13 +0900 (水, 05  6月 2013) | 6 lines

Reduce inlining threshold as a temporary workaround for crashes (Issue 11048).
Remove unneeded definitions.

R=asiva@google.com

Review URL: https://codereview.chromium.org//16373003
------------------------------------------------------------------------
r23614 | srdjan@google.com | 2013-06-05 05:16:29 +0900 (水, 05  6月 2013) | 5 lines

Fix Issue 11047: use binary search instead of linear search to locate a pc-offset in the static call table.

R=asiva@google.com

Review URL: https://codereview.chromium.org//16295022
------------------------------------------------------------------------
r23597 | fschneider@google.com | 2013-06-04 23:35:43 +0900 (火, 04  6月 2013) | 12 lines

Enable optimization of try-finally in the VM's optimizing compiler.

I changed the status of two co19 tests that crash with a stack overflow
because of recursion in dart2js. Optimized functions may take more stack
space, and this CL enables optimizations for more functions in dart2js.

I added smaller versions of those two tests to our own test suite.

BUG=dart:8857
R=ahe@google.com

Review URL: https://codereview.chromium.org//15934013
------------------------------------------------------------------------
r23584 | lrn@google.com | 2013-06-04 19:33:11 +0900 (火, 04  6月 2013) | 18 lines

Rename RuntimeError to CyclicIntializationError, as per spec.

The RuntimeError has been used to report cyclic initialization errors in
dart2js.
It has also been used for other, unrelated, uses, where it makes
little to no sense.

The RuntimeError type has been removed, but added in js_helper.dart,
where dart2js uses it.

Uses of new RuntimeError("some message") have been converted to
other errors (Argument/State/Unsupported). In some cases, just
throwing a String might have been just as good.

BUG=http://dartbug.com/11040
R=johnniwinther@google.com

Review URL: https://codereview.chromium.org//16154017
------------------------------------------------------------------------
r23571 | asiva@google.com | 2013-06-04 08:57:36 +0900 (火, 04  6月 2013) | 5 lines

Cache the isolate pointer in the parser object.

R=hausner@google.com

Review URL: https://codereview.chromium.org//16325014
------------------------------------------------------------------------
r23553 | fschneider@google.com | 2013-06-04 02:09:09 +0900 (火, 04  6月 2013) | 16 lines

Fix two bugs in the Dart VM's super-noSuchMethod invocation.

1. The result value of an expression 
"super.someMissingSetter = val" was incorrect in case of a noSuchMethod call.

To fix this I refactored the BuildStaticNoSuchMethod function. It now no longer
creates AST nodes and visits them, because the last argument may be needed saved
as a result value.

2. The evaluation order of "super[e1] = e2" was wrong in case of a noSuchMethod call.

BUG=dart:8917, dart:10965
TEST=tests/language/super_operator_index7_test.dart, tests/language/super_operator_index8_test.dart
R=srdjan@google.com

Review URL: https://codereview.chromium.org//15979010
------------------------------------------------------------------------
r23551 | fschneider@google.com | 2013-06-04 01:56:45 +0900 (火, 04  6月 2013) | 9 lines

Avoid duplicate class-id checks in checked-strict equality operations.

The original IC data with two argument checks have to be converted to unary
checks before emitting code. Otherwise, there may be duplicate class-id
checks.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16325011
------------------------------------------------------------------------
r23509 | asiva@google.com | 2013-06-01 09:41:24 +0900 (土, 01  6月 2013) | 5 lines

Simplyfy the NumTypeArguments check.

R=regis@google.com

Review URL: https://codereview.chromium.org//16286002
------------------------------------------------------------------------
r23506 | regis@google.com | 2013-06-01 08:51:38 +0900 (土, 01  6月 2013) | 6 lines

Fix leaf floating point runtime calls on ARM (work still needed in simulator).
Various cleanups.

R=zra@google.com

Review URL: https://codereview.chromium.org//15945006
------------------------------------------------------------------------
r23502 | asiva@google.com | 2013-06-01 07:55:29 +0900 (土, 01  6月 2013) | 10 lines

More cleanup to avoid creation of redundant handles
- create read only handles for null object and sentinel smi value
- add a RawCast function to allow direct casting of Raw pointers without the
  need to create a Handle for it
- use Smi::Value where possible
- hoist out handle creation from some loops

R=hausner@google.com

Review URL: https://codereview.chromium.org//15689012
------------------------------------------------------------------------
r23489 | zra@google.com | 2013-06-01 06:03:41 +0900 (土, 01  6月 2013) | 8 lines

Implements intrinsics for MIPS.

Also, adds the MADD, MADDU, MTLO, MTHI instructions
to the MIPS simulator, assembler, and disassembler.

R=regis@google.com

Review URL: https://codereview.chromium.org//16272004
------------------------------------------------------------------------
r23484 | zra@google.com | 2013-06-01 03:41:41 +0900 (土, 01  6月 2013) | 5 lines

Changes to run "Hello, world!" on MIPS hardware.

R=regis@google.com

Review URL: https://codereview.chromium.org//16160013
------------------------------------------------------------------------
r23476 | iposva@google.com | 2013-06-01 01:36:27 +0900 (土, 01  6月 2013) | 7 lines

- Modify dart_api.h to be a proper C API.
- Verify that dart_api.h can be used from C
  by changing the test_extension to be a pure C file.

R=asiva@google.com

Review URL: https://codereview.chromium.org//15689013
------------------------------------------------------------------------
r23448 | regis@google.com | 2013-05-31 09:38:21 +0900 (金, 31  5月 2013) | 6 lines

Enable language tests on SIMARM and mark 14 of them as failing.
Implement more features on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//16244007
------------------------------------------------------------------------
r23436 | iposva@google.com | 2013-05-31 03:52:06 +0900 (金, 31  5月 2013) | 3 lines

- Adjust parameter types for Dart_NewWeakReferenceSet implementation.

Review URL: https://codereview.chromium.org//16247002
------------------------------------------------------------------------
r23421 | iposva@google.com | 2013-05-31 00:55:59 +0900 (金, 31  5月 2013) | 7 lines

- Add different types for persistent and weak persistent handles
  in the Dart C API.
- Adapt code in the runtime.

R=asiva@google.com

Review URL: https://codereview.chromium.org//15772005
------------------------------------------------------------------------
r23402 | fschneider@google.com | 2013-05-30 21:25:39 +0900 (木, 30  5月 2013) | 5 lines

Fix warning about an unused private field.

TBR=vegorov@google.com

Review URL: https://codereview.chromium.org//15861025
------------------------------------------------------------------------
r23401 | fschneider@google.com | 2013-05-30 21:19:21 +0900 (木, 30  5月 2013) | 19 lines

Eliminate temporary locals for some expressions

This CL affects a subset of expressions that use temporary locals: constructor
calls, array literals and and instance getter postfix-ops.

For expressions that are de-sugared in the parser I added LetNode.
It creates a scoped temporary local bound to an initializing expression.

For expressions where we need a temporary local at graph-building time,
I added a helper class TempLocalScope to easily create a single temporary
local in the graph builder since this is a frequently recurring pattern.

This simplifies code in the parser and the graph builder and also fixes a
bug with indexed-super invocation and NoSuchMethod.

BUG=dart:8918
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//14942010
------------------------------------------------------------------------
r23376 | asiva@google.com | 2013-05-30 10:38:24 +0900 (木, 30  5月 2013) | 3 lines

Revert change 23372 as it causes some build issues on Mac.

Review URL: https://codereview.chromium.org//16216003
------------------------------------------------------------------------
r23375 | asiva@google.com | 2013-05-30 10:24:09 +0900 (木, 30  5月 2013) | 5 lines

More cleanup based on profile information.

R=iposva@google.com

Review URL: https://codereview.chromium.org//16163010
------------------------------------------------------------------------
r23373 | asiva@google.com | 2013-05-30 10:21:49 +0900 (木, 30  5月 2013) | 5 lines

Inline handle allocation.

R=hausner@google.com

Review URL: https://codereview.chromium.org//15950010
------------------------------------------------------------------------
r23370 | regis@google.com | 2013-05-30 08:12:20 +0900 (木, 30  5月 2013) | 7 lines

Implement a few more features on ARM.
The vm tests byte_array_test and byte_array_optimized_test still fail due to
an inlining bug on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//15899010
------------------------------------------------------------------------
r23367 | zra@google.com | 2013-05-30 06:31:27 +0900 (木, 30  5月 2013) | 8 lines

Removes ARM mrc instruction.

It is a privileged instruction and was only being used in tests
running on the simulator.

R=regis@google.com

Review URL: https://codereview.chromium.org//16194010
------------------------------------------------------------------------
r23350 | srdjan@google.com | 2013-05-29 22:07:46 +0900 (水, 29  5月 2013) | 7 lines

Fix issue 3874: non-deterministic AST generation caused by exceptions being thrown during parsing (StackOverFlow). Mark functions that throw and exception as non-optimizable.

Fix flow graph printing (optimized vs non-optimized).

R=fschneider@google.com

Review URL: https://codereview.chromium.org//15904010
------------------------------------------------------------------------
r23330 | fschneider@google.com | 2013-05-29 18:11:23 +0900 (水, 29  5月 2013) | 7 lines

Add a helper function for allocation of deoptimization history.

This CL addresses DBC comments from my previous CL (https://codereview.chromium.org/15779006/)

R=srdjan@google.com

Review URL: https://codereview.chromium.org//16099007
------------------------------------------------------------------------
r23322 | sgjesse@google.com | 2013-05-29 16:29:29 +0900 (水, 29  5月 2013) | 8 lines

Remove library dart:crypto

Moved the contnet of dart:crypto to the package pkg/crypto.

R=dgrove@google.com, floitsch@google.com, iposva@google.com, nweiz@google.com
BUG=

Review URL: https://codereview.chromium.org//15820008
------------------------------------------------------------------------
r23311 | zra@google.com | 2013-05-29 07:55:51 +0900 (水, 29  5月 2013) | 5 lines

Implements intrinsics for ARM.

R=regis@google.com

Review URL: https://codereview.chromium.org//15822008
------------------------------------------------------------------------
r23307 | regis@google.com | 2013-05-29 06:10:32 +0900 (水, 29  5月 2013) | 6 lines

Implement shift left on ARM and re-enable previously disabled test.
Fix bug on ia32 and x64.

R=zra@google.com

Review URL: https://codereview.chromium.org//15827006
------------------------------------------------------------------------
r23293 | regis@google.com | 2013-05-29 02:14:47 +0900 (水, 29  5月 2013) | 5 lines

Fix equality code on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//16048002
------------------------------------------------------------------------
r23266 | sgjesse@google.com | 2013-05-28 22:35:01 +0900 (火, 28  5月 2013) | 20 lines

Merge the dart:uri library into dart:core and update the Uri class

This merges the dart:uri library into dart:core removing the dart:uri library. Besides moving the library the Url class has been changed.

* Removed existing Uri constructor as it was equivalent with Uri.parse
* Remamed constructor Uri.fromComponents to Uri
* Moved toplevel function encodeUriComponent to static method Uri.encodeComponent
* Moved toplevel function decodeUriComponent to static method Uri.decodeComponent
* Moved toplevel function encodeUri to static method Uri.encodeFull
* Moved toplevel function decodeUri to static method Uri.decodeFull
* Rename domain to host
* Added static methods Uri.encodeQueryComponent and Uri.decodeQueryComponent
* Added support for path generation and splitting
* Added support for query generation and splitting
* Added some level of normalization

R=floitsch@google.com, lrn@google.com, nweiz@google.com, scheglov@google.com
BUG=

Review URL: https://codereview.chromium.org//16019002
------------------------------------------------------------------------
r23249 | srdjan@google.com | 2013-05-28 19:44:02 +0900 (火, 28  5月 2013) | 5 lines

Use stack locations instead of register for binary Smi operations when possible.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//16126003
------------------------------------------------------------------------
r23243 | fschneider@google.com | 2013-05-28 18:30:43 +0900 (火, 28  5月 2013) | 11 lines

Remove pseudo-node from LoadLocalNode and replace it with a proper AST node.

The newly introduces CommaNode denotes a sequence of two nodes, the result
is the value of the second child node.

There are only two places where the pseudo-node was used, and therefore
it does not warrant adding an extra member to all LoadLocalNode objects.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15935005
------------------------------------------------------------------------
r23214 | fschneider@google.com | 2013-05-27 20:43:19 +0900 (月, 27  5月 2013) | 5 lines

Small code cleanup in the parser.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15987003
------------------------------------------------------------------------
r23213 | kmillikin@google.com | 2013-05-27 20:31:27 +0900 (月, 27  5月 2013) | 8 lines

Do not emit duplicate deoptimization entries for GotoInstr.

This is the uncontroversial part of https://codereview.chromium.org/15741002/

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//16020013
------------------------------------------------------------------------
r23209 | fschneider@google.com | 2013-05-27 19:19:49 +0900 (月, 27  5月 2013) | 9 lines

Streamline IL for instantiating type arguments.

In some cases we would emit a InstantiateTypeArguments IL instruction
that was a no-op. This CL avoids this instruction when building the
graph, instead of emitting an empty instruction in the back-end.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15960009
------------------------------------------------------------------------
r23190 | zra@google.com | 2013-05-25 08:45:41 +0900 (土, 25  5月 2013) | 15 lines

Enables optimization on MIPS

- Exposes double precision rather than single precision floating point registers
  to architecture generic code. This entails a mechanical change in the assembler
  to floating point instructions.
- Adds slti, sltiu instructions for comparison with small immediates, and uses
  them in the Branch(Un)Signed* macros.
- Fixes a bug in the intermediate language comparison/branching instructions
  caused by using subu for comparison. Now it uses two slt instructions.
- Fixes register use bugs in intermediate language.
- More uses of NULLREG instead of loading Object::null()

R=regis@google.com

Review URL: https://codereview.chromium.org//16022011
------------------------------------------------------------------------
r23189 | asiva@google.com | 2013-05-25 08:42:01 +0900 (土, 25  5月 2013) | 5 lines

More cleanups to avoid Handle creation in hot paths.

R=iposva@google.com

Review URL: https://codereview.chromium.org//15951003
------------------------------------------------------------------------
r23188 | regis@google.com | 2013-05-25 07:50:05 +0900 (土, 25  5月 2013) | 5 lines

Fix MegamorphicMiss stub on ARM.

R=zra@google.com

Review URL: https://codereview.chromium.org//15937010
------------------------------------------------------------------------
r23169 | regis@google.com | 2013-05-25 03:52:34 +0900 (土, 25  5月 2013) | 9 lines

Fix a bug in optimized ARM code.
Fix a bug in deoptimization (wrong stack layout assumption, worked on Intel by
chance).
Implement megamorphic instance call on ARM.
Improve line number reporting in simulator backtraces.

R=zra@google.com

Review URL: https://codereview.chromium.org//15692005
------------------------------------------------------------------------
r23153 | hausner@google.com | 2013-05-25 01:26:42 +0900 (土, 25  5月 2013) | 10 lines

Allow breakpoints on strict equal

The compiler turns equality checks with null into
strict equal comparisons. Make the compiler backend
create a pc descriptor for the runtime call so that
the debugger can break on x == null and x != null.

R=regis@google.com

Review URL: https://codereview.chromium.org//15946002
------------------------------------------------------------------------
r23151 | zra@google.com | 2013-05-25 00:45:17 +0900 (土, 25  5月 2013) | 7 lines

Ensures that Bigints returned to Dart are all checked by Integer::AsValidInteger.

Rather than by ad-hoc checks at the point of return.

R=iposva@google.com

Review URL: https://codereview.chromium.org//15741019
------------------------------------------------------------------------
r23142 | fschneider@google.com | 2013-05-24 21:52:44 +0900 (金, 24  5月 2013) | 5 lines

Support inlining function containing throw in the optimizer.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15730003
------------------------------------------------------------------------
r23136 | fschneider@google.com | 2013-05-24 21:03:40 +0900 (金, 24  5月 2013) | 11 lines

Add deoptimization history to optimized functions.

Each function that is optimized or inlined into an optimized
functions keeps an array of deoptimization ids.

This history is used to avoid repeated deoptimization caused by
speculative hoisting of check instructions.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15779006
------------------------------------------------------------------------
r23117 | asiva@google.com | 2013-05-24 09:39:59 +0900 (金, 24  5月 2013) | 6 lines

Remove checks for Expect and ExpectException from
Parser::ResolveNameInCurrentLibraryScope

R=iposva@google.com

Review URL: https://codereview.chromium.org//15934003
------------------------------------------------------------------------
r23115 | asiva@google.com | 2013-05-24 09:13:10 +0900 (金, 24  5月 2013) | 24 lines

Delay Class parsing until the class is actually used.

Prior to this change the initial heap sizes were as follows:
ia32:
Size of isolate snapshot = 1230921
New space (0k of 32768k) Old space (1446k of 1604k)

X64:
Size of isolate snapshot = 1223943
New space (0k of 32768k) Old space (2630k of 2692k)


After this change the initial heap sizes are as follows:
ia32:
Size of isolate snapshot = 686443
New space (0k of 32768k) Old space (677k of 836k)

X64:
Size of isolate snapshot = 684731
New space (0k of 32768k) Old space (1220k of 1412k)

R=hausner@google.com, iposva@google.com, regis@google.com

Review URL: https://codereview.chromium.org//14820028
------------------------------------------------------------------------
r23110 | asiva@google.com | 2013-05-24 07:59:26 +0900 (金, 24  5月 2013) | 6 lines

- Allocate symbols for 'get:' and 'set:'
- Remove some redundant handle creation

R=iposva@google.com

Review URL: https://codereview.chromium.org//15930003
------------------------------------------------------------------------
r23094 | hausner@google.com | 2013-05-24 03:42:03 +0900 (金, 24  5月 2013) | 9 lines

Consolidate debug stubs

The new debug stub BreakpointRuntime gets the original stub address
from the debugger. With this scheme, we don't need a new debug stub
for every runtime stub that the debugger patches.

R=asiva@google.com

Review URL: https://codereview.chromium.org//15743019
------------------------------------------------------------------------
r23071 | floitsch@google.com | 2013-05-23 23:30:16 +0900 (木, 23  5月 2013) | 14 lines

Rewrite double.parse.

BUG= http://dartbug.com/5654
R=lrn@google.com, srdjan@google.com

Committed: https://code.google.com/p/dart/source/detail?r=23062

Reverted: https://code.google.com/p/dart/source/detail?r=23065

Committed: https://code.google.com/p/dart/source/detail?r=23066

Reverted: https://code.google.com/p/dart/source/detail?r=23068

Review URL: https://codereview.chromium.org//15333006
------------------------------------------------------------------------
r23068 | floitsch@google.com | 2013-05-23 22:28:37 +0900 (木, 23  5月 2013) | 5 lines

Revert "Rewrite double.parse."

This reverts commit r23066.

Review URL: https://codereview.chromium.org//15814003
------------------------------------------------------------------------
r23066 | floitsch@google.com | 2013-05-23 22:09:05 +0900 (木, 23  5月 2013) | 10 lines

Rewrite double.parse.

BUG= http://dartbug.com/5654
R=lrn@google.com, srdjan@google.com

Committed: https://code.google.com/p/dart/source/detail?r=23062

Reverted: https://code.google.com/p/dart/source/detail?r=23065

Review URL: https://codereview.chromium.org//15333006
------------------------------------------------------------------------
r23065 | floitsch@google.com | 2013-05-23 22:00:05 +0900 (木, 23  5月 2013) | 5 lines

Revert "Rewrite double.parse."

This reverts commit r23062.

Review URL: https://codereview.chromium.org//15868003
------------------------------------------------------------------------
r23062 | floitsch@google.com | 2013-05-23 21:00:45 +0900 (木, 23  5月 2013) | 6 lines

Rewrite double.parse.

BUG= http://dartbug.com/5654
R=lrn@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//15333006
------------------------------------------------------------------------
r23053 | fschneider@google.com | 2013-05-23 17:41:10 +0900 (木, 23  5月 2013) | 5 lines

Fix small bug in the inlining heuristics: Don't compare size with number of call sites.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//15740008
------------------------------------------------------------------------
r23046 | asiva@google.com | 2013-05-23 09:26:33 +0900 (木, 23  5月 2013) | 5 lines

Remove some dead code.

R=hausner@google.com

Review URL: https://codereview.chromium.org//15740015
------------------------------------------------------------------------
r23037 | regis@google.com | 2013-05-23 03:53:51 +0900 (木, 23  5月 2013) | 6 lines

Enable code optimization on ARM.
Disable failing tests.

R=zra@google.com

Review URL: https://codereview.chromium.org//15697009
------------------------------------------------------------------------
r23030 | asiva@google.com | 2013-05-23 02:25:25 +0900 (木, 23  5月 2013) | 7 lines

Create test isolates using a snapshot, this ensures that we do not depend
on the location of core libraries which can be a problem when we copy
the run_vm_tests executable to a different machine.

R=zra@google.com

Review URL: https://codereview.chromium.org//15736011
------------------------------------------------------------------------
r23023 | asiva@google.com | 2013-05-23 01:07:25 +0900 (木, 23  5月 2013) | 8 lines

Fix runnning of vm benchmarks on golem.

Use snapshots for creating isolates used in the benchmarks, that way
they are not dependent on corelib source paths.

R=ajohnsen@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//15640002
------------------------------------------------------------------------
r23020 | srdjan@google.com | 2013-05-23 00:20:55 +0900 (木, 23  5月 2013) | 5 lines

Improve constant propagation for Mint and Smi.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15507006
------------------------------------------------------------------------
r23018 | srdjan@google.com | 2013-05-22 23:32:18 +0900 (水, 22  5月 2013) | 5 lines

Allow stack location for some instructions (relational and equality comparison).

R=fschneider@google.com

Review URL: https://codereview.chromium.org//15578003
------------------------------------------------------------------------
r22982 | kmillikin@google.com | 2013-05-22 15:21:57 +0900 (水, 22  5月 2013) | 10 lines

Remove the IC data array from the isolate.

Thread it as an argument rather than storing it in a global variable.  This
means the programmer does not have to implement a shadow stack to save and
restore the data array, and there is no special handling needed for GC.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//15470013
------------------------------------------------------------------------
r22981 | kmillikin@google.com | 2013-05-22 15:21:03 +0900 (水, 22  5月 2013) | 9 lines

Remove an unnecessary setter.

A field of the CompilerDeoptInfo had a setter that was always and only
called immediately after construction.  Instead, set it in the constructor.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//15563007
------------------------------------------------------------------------
r22974 | srdjan@google.com | 2013-05-22 09:06:18 +0900 (水, 22  5月 2013) | 3 lines

Fix broken Mac build.

Review URL: https://codereview.chromium.org//15412005
------------------------------------------------------------------------
r22972 | hausner@google.com | 2013-05-22 08:07:22 +0900 (水, 22  5月 2013) | 8 lines

Make VM debugger stop at every safe point

Debugger front-end can decide to ignore some steps and only halt
when the next line is reached.

R=iposva@google.com

Review URL: https://codereview.chromium.org//15359010
------------------------------------------------------------------------
r22967 | regis@google.com | 2013-05-22 07:07:55 +0900 (水, 22  5月 2013) | 5 lines

Implement backtracing and toggling of execution tracing in ARM simulator.

R=zra@google.com

Review URL: https://codereview.chromium.org//14711013
------------------------------------------------------------------------
r22943 | fschneider@google.com | 2013-05-22 00:15:47 +0900 (水, 22  5月 2013) | 17 lines

Refactor the IL for object allocation with type arguments.

Two parts:

1. Change AllocateObjectWithBoundsCheck to a normal call that takes
four arguments on the stack using PushArgument IL instructions.
Before inputs were in registers and the instruction pushed them itself
before the runtime call. This make the code more compact and simplifies
the flow graph builder.

2. Simplify instructions for building constructor type arguments for another
special case to simplify the instruction pattern and generate smaller
code for that case.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//15564004
------------------------------------------------------------------------
r22931 | fschneider@google.com | 2013-05-21 20:09:34 +0900 (火, 21  5月 2013) | 8 lines

Further improve and simplify IL for building constructor type arguments.

Generate constants in the IL directly if possible and avoid temporary
local store/load completely in some cases.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//14672035
------------------------------------------------------------------------
r22924 | kmillikin@google.com | 2013-05-21 18:34:50 +0900 (火, 21  5月 2013) | 11 lines

A few simple cleanups.

* Remove BlockEntryInstr::PrepareEntry and use EmitNativeCode to emit the
  native code.
* Use Array::element_offset in a few places.
* Comment and identifier fixes.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//15529003
------------------------------------------------------------------------
r22914 | asiva@google.com | 2013-05-21 10:02:28 +0900 (火, 21  5月 2013) | 8 lines

- Some of the pre registered classes like Int, Double etc. were not being
marked as being prefinalized. Mark them as pre finalized.
- Replaced the check (cls.functions() != Object::empty_array().raw()) as
  indicating it is a pre-registered class.

R=regis@google.com

Review URL: https://codereview.chromium.org//15494008
------------------------------------------------------------------------
r22912 | srdjan@google.com | 2013-05-21 08:59:36 +0900 (火, 21  5月 2013) | 5 lines

Intrinsify random nextState, improve perfromance significantly.

R=zra@google.com

Review URL: https://codereview.chromium.org//15502004
------------------------------------------------------------------------
r22904 | iposva@google.com | 2013-05-21 06:01:31 +0900 (火, 21  5月 2013) | 7 lines

- Add a GetClassId() to Object, so that we do not have to
  create a temporary class handle only to get at an object's
  class id, which is stored in the object header.

R=asiva@google.com

Review URL: https://codereview.chromium.org//15338008
------------------------------------------------------------------------
r22893 | asiva@google.com | 2013-05-21 01:02:30 +0900 (火, 21  5月 2013) | 5 lines

Add a call to CheckIsolateState in all paths of Dart_GetField and Dart_SetField.

R=ager@chromium.org

Review URL: https://codereview.chromium.org//15353002
------------------------------------------------------------------------
r22889 | asiva@google.com | 2013-05-20 14:15:39 +0900 (月, 20  5月 2013) | 6 lines

Use handles to save the object being read before calling StorePointer to make
sure we are GC safe.

R=iposva@google.com

Review URL: https://codereview.chromium.org//15383002
------------------------------------------------------------------------
r22881 | srdjan@google.com | 2013-05-18 08:45:08 +0900 (土, 18  5月 2013) | 5 lines

Cleanups: addressed your comments from https://codereview.chromium.org/14962008/

R=iposva@google.com

Review URL: https://codereview.chromium.org//14845021
------------------------------------------------------------------------
r22857 | hausner@google.com | 2013-05-18 02:08:09 +0900 (土, 18  5月 2013) | 8 lines

Make breakpoints on == fire reliably

Add breakpoints in the path taken if one of the operands
in a == b is null.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14991010
------------------------------------------------------------------------
r22818 | zra@google.com | 2013-05-17 06:18:04 +0900 (金, 17  5月 2013) | 5 lines

Impelemnts some FPU arithmetic function for the MIPS simulator, assembler, disassembler.

R=regis@google.com

Review URL: https://codereview.chromium.org//15038008
------------------------------------------------------------------------
r22816 | srdjan@google.com | 2013-05-17 05:49:06 +0900 (金, 17  5月 2013) | 5 lines

Fix issue 5275: The VM must always generate the most compact form of an integer (Smi, Mint or Bigint). Hide methods that can be used to bypass that assumption and require the use of Integer::NewXXX which is guaranteed to return the most compact integer form.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14962008
------------------------------------------------------------------------
r22810 | iposva@google.com | 2013-05-17 04:37:14 +0900 (金, 17  5月 2013) | 4 lines

- Create a local scope so that the GC can collect the external
  typed data.

Review URL: https://codereview.chromium.org//15070014
------------------------------------------------------------------------
r22806 | iposva@google.com | 2013-05-17 03:33:30 +0900 (金, 17  5月 2013) | 6 lines

Fix dartbug.com/10674:
- Make sure that Dart_NewExternalTypedData returns a local handle.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14676020
------------------------------------------------------------------------
r22804 | srdjan@google.com | 2013-05-17 03:06:18 +0900 (金, 17  5月 2013) | 5 lines

Fix build breakage of simmips on Mac OS X: binary constants are nto C++ standard, but GCC specific.

R=zra@google.com

Review URL: https://codereview.chromium.org//14954013
------------------------------------------------------------------------
r22799 | hausner@google.com | 2013-05-17 00:44:05 +0900 (金, 17  5月 2013) | 8 lines

Allow breakpoints on one-liner functions

Fixes issue 10234. This is also the first step for setting
reliable breakpoints on a == b expressions.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//15000005
------------------------------------------------------------------------
r22763 | zra@google.com | 2013-05-16 08:51:17 +0900 (木, 16  5月 2013) | 5 lines

Implements int to double conversion instructions for MIPS simulator, assembler, disassembler.

R=regis@google.com

Review URL: https://codereview.chromium.org//15144004
------------------------------------------------------------------------
r22760 | srdjan@google.com | 2013-05-16 07:20:02 +0900 (木, 16  5月 2013) | 5 lines

Fix crash when running Richards with --inlining-depth-threshold=30 --inlining-size-threshold=10000: IfThenElseInstr may end up with both inputs being constant.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//14787015
------------------------------------------------------------------------
r22752 | zra@google.com | 2013-05-16 03:37:47 +0900 (木, 16  5月 2013) | 5 lines

Implements FPU compare and branching for MIPS simulator, assembler, disassembler.

R=regis@google.com

Review URL: https://codereview.chromium.org//14672037
------------------------------------------------------------------------
r22744 | srdjan@google.com | 2013-05-16 00:37:14 +0900 (木, 16  5月 2013) | 5 lines

Fix failure in co19 test (tests/co19/src/LibTest/math/pow_A18_t01.dart), where pow(1.0, NAN) returns 1.0 instead of NAN (replicate with --optimization-counter-threshold=5).

R=fschneider@google.com

Review URL: https://codereview.chromium.org//14937006
------------------------------------------------------------------------
r22737 | fschneider@google.com | 2013-05-15 22:42:34 +0900 (水, 15  5月 2013) | 8 lines

Cleanup and avoid unnecessary code when building type arguments.

The code now uses only one temporary local instead of two. It affect only unoptimized code
 since those temporaries are eliminated when translating into SSA.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//15001030
------------------------------------------------------------------------
r22733 | kmillikin@google.com | 2013-05-15 21:10:16 +0900 (水, 15  5月 2013) | 11 lines

Polymorphic inlining - prevent hoisting the last class check.

Do not check the receiver directly, check an (immovable) redefinition
of the receiver.  This prevents hoisting the class check out of a loop
when the receiver is loop-invariant.  Hoisting such a check can lead
to excessive deoptimization.

R=vegorov@google.com
BUG=dart:10634

Review URL: https://codereview.chromium.org//15076013
------------------------------------------------------------------------
r22719 | regis@google.com | 2013-05-15 08:23:54 +0900 (水, 15  5月 2013) | 5 lines

Make deoptimization architecture dependent (it depends on the frame layout).

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//15110003
------------------------------------------------------------------------
r22705 | iposva@google.com | 2013-05-15 05:33:04 +0900 (水, 15  5月 2013) | 9 lines

- Correctly handle negative constant indices when
  constant propagation has not eliminated range checks.
- Add test to verify the optimizer does not
  allow negative constant indices when eliminating
  array bounds checks.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14566020
------------------------------------------------------------------------
r22701 | srdjan@google.com | 2013-05-15 04:50:20 +0900 (水, 15  5月 2013) | 3 lines

Fix assert failures in checked mode: Redundant CheckArrayBoundInstr is not eliminated.

Review URL: https://codereview.chromium.org//14643018
------------------------------------------------------------------------
r22698 | iposva@google.com | 2013-05-15 03:39:44 +0900 (水, 15  5月 2013) | 8 lines

- Canonicalize array bounds checks to avoid deopting when comparing
  two constants.
- Add named locations for index and length to make using locs less
  confusing.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14979007
------------------------------------------------------------------------
r22695 | srdjan@google.com | 2013-05-15 03:16:44 +0900 (水, 15  5月 2013) | 5 lines

Added Object._cid getter, optimized it. Added to (some) classes a static final _clCid. Use those to test for exact type in VM's libraries.

R=iposva@google.com

Review URL: https://codereview.chromium.org//14703005
------------------------------------------------------------------------
r22683 | johnmccutchan@google.com | 2013-05-15 00:52:40 +0900 (水, 15  5月 2013) | 5 lines

Unbox phis with Float32x4 or Uint32x4 type

R=vegorov@google.com

Review URL: https://codereview.chromium.org//15145002
------------------------------------------------------------------------
r22665 | vegorov@google.com | 2013-05-14 19:28:31 +0900 (火, 14  5月 2013) | 6 lines

Basic support for LICM of fully invariant loads.

BUG=
R=fschneider@google.com

Review URL: https://codereview.chromium.org//14268019
------------------------------------------------------------------------
r22655 | srdjan@google.com | 2013-05-14 08:19:20 +0900 (火, 14  5月 2013) | 5 lines

Fix crash with --no-use-cha: the optimizer expects a concrete type for array creation, not dynamic as is the result because we cannot determine without CHA if a class is guaranteed to have no sublcasses and has not been implemented. Regardless of use_cha, always rely on known information for internal classes that are not subtype or implemented by other clases.

R=asiva@google.com, vegorov@google.com

Review URL: https://codereview.chromium.org//15141004
------------------------------------------------------------------------
r22649 | johnmccutchan@google.com | 2013-05-14 05:22:06 +0900 (火, 14  5月 2013) | 5 lines

Inline Uint32x4 operations

R=srdjan@google.com

Review URL: https://codereview.chromium.org//15085006
------------------------------------------------------------------------
r22621 | fschneider@google.com | 2013-05-13 21:41:02 +0900 (月, 13  5月 2013) | 5 lines

Revert r22620 because of dart2js test failures.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//14935013
------------------------------------------------------------------------
r22620 | fschneider@google.com | 2013-05-13 21:09:14 +0900 (月, 13  5月 2013) | 10 lines

Enable optimizing try-finally.

Everything needed is already in place by my previous CL
(https://codereview.chromium.org/14682020/)

This just removes the early bailout in the parser.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//14757017
------------------------------------------------------------------------
r22615 | fschneider@google.com | 2013-05-13 19:33:24 +0900 (月, 13  5月 2013) | 32 lines

Optimize functions containing try-catch.

This is a first step towards fully optimizing try-catch-finally.

At a catch entry, all local variables and parameters are
expected at a fixed stack location. There is a list of
initial definitions at the catch entry block, similar to
the initial definitions at graph entry.

Inside every try-block there is a special prologue code before each
call (instruction that may throw) inside the try-block. This prologue
is similar to a parallel move instruction: It moves all locals+parameters
to the locations expected by the catch-entry block. The stack frame
is extended with the corresponding number of fixed slots right below
the normal spill slots.

Every function containing try-catch has additional compiler-
generated local variables to pass the context, the exception and
the stack trace.

Variable liveness analysis is adapted to treat locals inside try{} blocks
specially: Every call has an implicit LoadLocal of every local variable.
This CL uses a safe approximiation of liveness which can be optimized further.

Current restrictions which are planned for future CLs:
 * No inlining inside try-blocks.
 * No inlining of functions containing try-catch.
 * No try-finally yet.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//14682020
------------------------------------------------------------------------
r22600 | srdjan@google.com | 2013-05-11 06:33:14 +0900 (土, 11  5月 2013) | 6 lines

A load static of an initialized static final field can be converted to its value, as long as it is in old space or Smi, and can therefore be a literal node.
Add special objects to mark non_constant and unknown_constant in constant propagator so that there is no confusion with sentinels used in the graph.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14969019
------------------------------------------------------------------------
r22596 | hausner@google.com | 2013-05-11 06:06:04 +0900 (土, 11  5月 2013) | 9 lines

Implement breakpoint for closure calls

Introduce a new PcDescriptor kind to distinguish closure calls from other runtime calls. The debugger can patch these calls to set a breakpoint. When stepping into a closure call, the debugger must fish out the closure object from the stack, find the function and set breakpoints in it.

Arm and Mips breakpoint stubs are not implemented yet. ia32 and x64 stubs tested by hand. Automated test to follow.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14858033
------------------------------------------------------------------------
r22528 | srdjan@google.com | 2013-05-09 05:03:33 +0900 (木, 09  5月 2013) | 5 lines

Inline _OneByteString._setAt. The key knowledge is that _setAt is an internal method that has to be called with correct arguments, therefore no checks are needed.

R=fschneider@google.com, zra@google.com

Review URL: https://codereview.chromium.org//14917020
------------------------------------------------------------------------
r22523 | asiva@google.com | 2013-05-09 03:56:38 +0900 (木, 09  5月 2013) | 7 lines

Remove print_bootstrap flag as it is not needed anymore considering that we
load core libraries directly from the sources and do not concatenate all the
files into a single script file.

R=regis@google.com

Review URL: https://codereview.chromium.org//14631014
------------------------------------------------------------------------
r22514 | asiva@google.com | 2013-05-09 01:42:46 +0900 (木, 09  5月 2013) | 13 lines

Final step towards loading core library scripts directly from the sources

- Modify bin.gypi to ensure that the io library and patch files are read
  directly from the sources. Remove the source buffer generation step in
  the gypi files for all the io library and patch files.

- Restructure the code a bit to eliminate some code duplication.

- Delete runtime/tools/concat_library.py

R=ager@google.com, sgjesse@google.com

Review URL: https://codereview.chromium.org//14752008
------------------------------------------------------------------------
r22505 | podivilov@google.com | 2013-05-08 22:00:09 +0900 (水, 08  5月 2013) | 5 lines

Fix Clank+Dart compilation.

R=iposva@google.com

Review URL: https://codereview.chromium.org//15023007
------------------------------------------------------------------------
r22488 | asiva@google.com | 2013-05-08 09:44:50 +0900 (水, 08  5月 2013) | 5 lines

Minor cleanup.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14828006
------------------------------------------------------------------------
r22485 | vegorov@google.com | 2013-05-08 08:40:42 +0900 (水, 08  5月 2013) | 29 lines

Implement a variation of scalar replacement for non-escaping allocations.

AllocationSinking pass discovers non-escaping allocations that have no input uses other than uses in the stores into its own fields.

Every environment use of such allocation is replaced by a state snapshot (MaterializeObject instruction) that describes the state of each initialized field in the object. State snapshots are computed through an additional round of load-forwarding.

Once snapshots are computed allocations are removed from the graph.

MaterializeObject instructions are not compiled into native code but produce deoptimization instructions instead that describe how object should be materialized at deoptimization.

Deoptimization instructions now follow the following format:

[mat obj #1]...[mat obj #N][ret addr][... mat arguments ...][... real frames ...]

- the prefix describes each object to materialize on deopt via kMaterializeObject instruction;
- actual values that are needed for materialization are emited as a part of bottom-most stack frame. This is done to simplify implementation: they need to be discoverable by a GC during materialization phase. At the end of deoptimization they will be removed from the stack;
- normal stack slots can refer to materialized objects via kMaterializedObjectRef instruction.

Additionally this change contains fixes in load-forwarding that are needed to guarantee that all artificial LoadField instructions inserted during AllocationSinking are correctly replaced with actual values.

Limitations of the current implementation:

- can't eliminate allocations that flow into phis but otherwise don't actually escape;
- can't sink allocations out of loops;
- allocation with type arguments are not handled.

R=regis@google.com, srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//14935005
------------------------------------------------------------------------
r22471 | zra@google.com | 2013-05-08 03:21:18 +0900 (水, 08  5月 2013) | 9 lines

Fixes for integer division on ARM hardware so that assembler tests pass.
Now, all VM tests that pass on SIMARM, pass on ARM.

Also, more assertions in the ARM disassembler and simulator to
make sure that condition codes aren't used with bkpt.

R=regis@google.com

Review URL: https://codereview.chromium.org//14784011
------------------------------------------------------------------------
r22470 | regis@google.com | 2013-05-08 03:06:21 +0900 (水, 08  5月 2013) | 6 lines

Remove stack_frame_<arch>.cc files.
The architecture specific information is in stack_frame_<arch>.h files.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14925005
------------------------------------------------------------------------
r22458 | kmillikin@google.com | 2013-05-07 21:50:37 +0900 (火, 07  5月 2013) | 9 lines

Use the constant pool for all constants, not just null.

Remove constants from the instruction stream in optimized code at SSA
construction time.  Modify the range analysis pass to analyze values in the
constant pool.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//14846022
------------------------------------------------------------------------
r22452 | iposva@google.com | 2013-05-07 16:59:03 +0900 (火, 07  5月 2013) | 4 lines

Fix dartbug.com/10415:
- Append 'on "$os_$arch"' to the version string on the VM.

Review URL: https://codereview.chromium.org//14593004
------------------------------------------------------------------------
r22436 | asiva@google.com | 2013-05-07 03:16:25 +0900 (火, 07  5月 2013) | 11 lines

Third step towards loading core library scripts directly from the sources
- Read the patch source files using the source mapping array generated for
  patch files instead of relying on a generated buffer containing the sources.

- Modify the gyp files to ensure that all patch libraries are read directly
  from the sources. Remove the source buffer generation step in the gypi
  files for all patch files.

R=hausner@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//14784010
------------------------------------------------------------------------
r22434 | kmillikin@google.com | 2013-05-07 02:22:18 +0900 (火, 07  5月 2013) | 13 lines

Initial support for polymorphic inlining.

Consider each polymorphic variant separately for inlining in frequency
order.  Share inlined bodies for shared targets.

Insert an SSA redefinition of the receiver in each inlined variant to
prevent hoisting.  Hoisting code specialized to the receiver (e.g.,
direct access to internal fields of typed data arrays) out of the
inlined body is not safe.

R=fschneider@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//14740005
------------------------------------------------------------------------
r22433 | asiva@google.com | 2013-05-07 02:18:04 +0900 (火, 07  5月 2013) | 3 lines

Fix build break in --checked mode.

Review URL: https://codereview.chromium.org//14872009
------------------------------------------------------------------------
r22432 | asiva@google.com | 2013-05-07 02:07:34 +0900 (火, 07  5月 2013) | 5 lines

Fix for issue 10395, call noSuchMethod if a method is not found when using the Dart C API.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14980002
------------------------------------------------------------------------
r22415 | kustermann@google.com | 2013-05-06 23:49:21 +0900 (月, 06  5月 2013) | 15 lines

Fixed bug in vm/benchmark_test.h

The Benchmark objects were marked as 'const', but Benchmark::CreateIsolate
writes to 'Benchmark::isolate_'. This was not discovered so far, since GCC
places the global Benchmark objects into a read-write section.

It turns out that clang is able to create the const Benchmark objects at
compile time and puts them into a read-only section of the ELF file (it probably
inlines the constructor).
Thus, at runtime Benchmark::CreateIsolate tries to write to a read-only address
and crashes with a SEGV.

R=iposva@google.com

Review URL: https://codereview.chromium.org//14988005
------------------------------------------------------------------------
r22399 | srdjan@google.com | 2013-05-04 08:48:10 +0900 (土, 04  5月 2013) | 5 lines

Improve performance of String.fromCharCodes by implementing it in Dart. Add tow internal natives to Dart in order to be able to allocate and fill a String. Next step is to implement String.concatAll in Dart as well and to inline String._setAt operation (currently intrinsified).

R=asiva@google.com

Review URL: https://codereview.chromium.org//14862006
------------------------------------------------------------------------
r22396 | asiva@google.com | 2013-05-04 07:50:26 +0900 (土, 04  5月 2013) | 5 lines

Resubmit 22380 after fixing the windows build.

R=hausner@google.com

Review URL: https://codereview.chromium.org//14645025
------------------------------------------------------------------------
r22394 | regis@google.com | 2013-05-04 06:42:16 +0900 (土, 04  5月 2013) | 6 lines

Introduce architecture specific headers describing Dart stack frames.
The actual cleanup will follow in another cl.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14831004
------------------------------------------------------------------------
r22393 | iposva@google.com | 2013-05-04 05:59:42 +0900 (土, 04  5月 2013) | 8 lines

- Remember the fact that an object has been added to the
  store buffer by a bit in the header.
- This bit can be used to filter out redundant additions
  into the store buffer making the dedup sets not needed.
- Remove the need for a HashSet when remembering old to
  new references.

Review URL: https://codereview.chromium.org//14307013
------------------------------------------------------------------------
r22386 | regis@google.com | 2013-05-04 03:39:40 +0900 (土, 04  5月 2013) | 11 lines

Cleanup deoptimization code to make it architecture independent (in progress).
Implement some optimizing code on ARM in order to debug the above cleanup using
inline_stack_frame_test (still skipped in the vm status file).

This is not quite working yet, because CompilerDeoptInfo::CreateDeoptInfo
makes assumptions about the stack layout that are not valid for ARM or MIPS.
This will be cleaned up in a following cl.

R=srdjan@google.com, zra@google.com

Review URL: https://codereview.chromium.org//14812005
------------------------------------------------------------------------
r22382 | asiva@google.com | 2013-05-04 03:26:34 +0900 (土, 04  5月 2013) | 3 lines

Revert 22380 to investigate windows build break.

Review URL: https://codereview.chromium.org//14927003
------------------------------------------------------------------------
r22380 | asiva@google.com | 2013-05-04 03:12:24 +0900 (土, 04  5月 2013) | 22 lines

Second step towards loading core library scripts directly from the sources
- Modify the library source generator to generate a source mapping array
  The generated array is of the following format:
  const char* dart::Bootstrap::corelib_source_paths_[] = {
    "dart:core", "/workspace1/dart-all/dart/sdk/lib/core/core.dart", 

    "bool.dart", "/workspace1/dart-all/dart/sdk/lib/core/bool.dart", 
    ...
    ...
  };

- Read the source file using the source mapping array instead of relying on
  a generated buffer containing the sources

- Modify the gyp files to ensure that all libraries are read directly
  from the sources. This CL does not change the patch part yet.
  Remove the source concatentation step in the gypi files for all the core
  libraries.

R=hausner@google.com, iposva@google.com

Review URL: https://codereview.chromium.org//14786012
------------------------------------------------------------------------
r22345 | asiva@google.com | 2013-05-03 08:10:53 +0900 (金, 03  5月 2013) | 7 lines

Potentially fix the crash reported in Issue 10385
- Fix use of a tagged pointer
- Fix a memory leak

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14623015
------------------------------------------------------------------------
r22344 | zra@google.com | 2013-05-03 07:58:52 +0900 (金, 03  5月 2013) | 7 lines

Allows "Hello, world!" to run on ARM hardware.

Also, enables more vm tests on SIMMIPS.

R=regis@google.com

Review URL: https://codereview.chromium.org//14605006
------------------------------------------------------------------------
r22340 | vegorov@google.com | 2013-05-03 06:20:49 +0900 (金, 03  5月 2013) | 13 lines

Improve load forwarding:
- stores/loads that access different fields can't alias each other;
- if result of the AllocateObject does not escape then stores/loads to it does not alias stores/loads to other objects.

Other:
- rename LoadFieldInstr's value to instance to better convey meaning and match StoreInstanceFieldInstr;
- slightly bump inlining_size_threshold;
- canonicalize UnboxDouble(BoxDouble(v)) and BoxDouble(UnboxDouble(v)) patterns;

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14872002
------------------------------------------------------------------------
r22331 | zra@google.com | 2013-05-03 02:53:34 +0900 (金, 03  5月 2013) | 12 lines

On MIPS, keeps Object::null() in a register.

On MIPS, we have a lot of registers, and we don't use very many of them.
This change removes the second temporary register TMP2, and instead
dedicates a register to holding Object::null(), which is used frequently
for comparisons, etc..

Also, uses branch delay slot when leaving a dart frame and returning.

R=regis@google.com

Review URL: https://codereview.chromium.org//14854010
------------------------------------------------------------------------
r22313 | iposva@google.com | 2013-05-02 20:40:23 +0900 (木, 02  5月 2013) | 6 lines

- Fixed some old-style casts.
- Remove TODO as it is not feasible to ever enable.

R=kustermann@google.com

Review URL: https://codereview.chromium.org//14628009
------------------------------------------------------------------------
r22285 | regis@google.com | 2013-05-02 06:33:08 +0900 (木, 02  5月 2013) | 6 lines

Fix ARM memory addressing mode 3 in assembler.
Update assembler test.

R=zra@google.com

Review URL: https://codereview.chromium.org//14637013
------------------------------------------------------------------------
r22278 | hausner@google.com | 2013-05-02 05:46:48 +0900 (木, 02  5月 2013) | 9 lines

BREAKING CHANGE: enforce part of directive

For historical reasons, the VM is currently too lenient when parsing library parts. Files that get loaded through a 'part' directive must start with a 'part of libraryname;' clause. The VM so far has not reported an error if the clause is missing.

This change enforces the grammar as the Spec mandates it. Library parts that do not start with 'part of' will no longer compile.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14791005
------------------------------------------------------------------------
r22277 | johnmccutchan@google.com | 2013-05-02 05:40:24 +0900 (木, 02  5月 2013) | 6 lines

Inline remaining Float32x4 operations.

BUG=
R=srdjan@google.com

Review URL: https://codereview.chromium.org//14781002
------------------------------------------------------------------------
r22268 | hausner@google.com | 2013-05-02 03:34:48 +0900 (木, 02  5月 2013) | 8 lines

Loosen aggressive assert in debugger stack trace code

A closure may be called from native code. In that case we will not
find a saved context variable in the dart frame 'below' the closure.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14783002
------------------------------------------------------------------------
r22262 | zra@google.com | 2013-05-02 01:56:31 +0900 (木, 02  5月 2013) | 7 lines

On MIPS, uses more branch delay slots.

Also, tries to reorganize loops to look like what gcc produces.

R=regis@google.com

Review URL: https://codereview.chromium.org//14733002
------------------------------------------------------------------------
r22213 | hausner@google.com | 2013-05-01 08:03:30 +0900 (水, 01  5月 2013) | 6 lines

Instrument debugger to track down stack trace problems

- Print caller and callee if an expected saved current context is not found.
- Make removing a non-existing breakpoint a no-op.

Review URL: https://codereview.chromium.org//14664006
------------------------------------------------------------------------
r22212 | srdjan@google.com | 2013-05-01 07:59:40 +0900 (水, 01  5月 2013) | 5 lines

Fix missing pc descriptor for NoSuchMethodExceptions when calling closures with wrong number of arguments.

R=regis@google.com

Review URL: https://codereview.chromium.org//14715003
------------------------------------------------------------------------
r22209 | srdjan@google.com | 2013-05-01 07:05:14 +0900 (水, 01  5月 2013) | 44 lines

Fix error reporting when calling static methods and closures withh mismatched arguments.


Closures BEFORE:
----
Unhandled exception:
Class '(dynamic, dynamic, dynamic) => dynamic' has no instance method 'call'.

NoSuchMethodError : method not found: 'call'
Receiver: Closure: (dynamic, dynamic, dynamic, dynamic) => dynamic from Function 'foo':.
Arguments: [2]

Closures NOW:
----
Closure call with mismatched arguments: function 'A.foo'

NoSuchMethodError: incorrect number of arguments passed to method named 'A.foo'
Receiver: Closure: (dynamic, dynamic, dynamic, dynamic) => dynamic from Function 'foo':.
Tried calling: A.foo(2)
Found: A.foo(a, b, c)


Statics BEFORE:
----
Unhandled exception:
No top-level method 'foo' declared.

NoSuchMethodError : method not found: 'foo'
Receiver: Type: class '::'
Arguments: []

Statics NOW:
----
Unhandled exception:
No top-level method 'foo' with matching arguments declared.

NoSuchMethodError: incorrect number of arguments passed to method named 'foo'
Receiver: top-level
Tried calling: foo(...)
Found: foo(a, b, c)

R=regis@google.com

Review URL: https://codereview.chromium.org//14652008
------------------------------------------------------------------------
r22196 | hausner@google.com | 2013-05-01 04:46:07 +0900 (水, 01  5月 2013) | 5 lines

Another fix for debugging stack traces and captured variables.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14449009
------------------------------------------------------------------------
r22185 | johnmccutchan@google.com | 2013-05-01 02:26:42 +0900 (水, 01  5月 2013) | 5 lines

Inline Float32x4 min,max,sqrt,reciprocal,reciprocalSqrt, and scale

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14432004
------------------------------------------------------------------------
r22181 | iposva@google.com | 2013-05-01 00:05:45 +0900 (水, 01  5月 2013) | 8 lines

- Remove kFreeBit, as it is not needed any longer
  except during snapshotting.
- Move the kWatchBit into the available space as its
  use does not overlap with snapshotting.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//14648004
------------------------------------------------------------------------
r22180 | vegorov@google.com | 2013-04-30 23:25:16 +0900 (火, 30  4月 2013) | 9 lines

Track side-effect free paths in the graph to allow CSE and LICM for instructions that depend on some side-effects.

Right now only a single side-effect is important for CSE/LICM purposes: externalization.

But abstractions are in place to introduce others if needed.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//14021016
------------------------------------------------------------------------
r22167 | fschneider@google.com | 2013-04-30 17:20:48 +0900 (火, 30  4月 2013) | 5 lines

Fix compiler warning about bool conversion.

R=iposva@google.com, srdjan@google.com

Review URL: https://codereview.chromium.org//14536002
------------------------------------------------------------------------
r22159 | zra@google.com | 2013-04-30 09:35:09 +0900 (火, 30  4月 2013) | 8 lines

Uses slt and sltu for signed vs. unsigned comparison by the MIPS assembler.

Previously, the sequence subu/b{gt,le,...}z was used, which fails to
distinguish between signed and unsigned comparison.

R=regis@google.com

Review URL: https://codereview.chromium.org//14556002
------------------------------------------------------------------------
r22155 | regis@google.com | 2013-04-30 08:39:46 +0900 (火, 30  4月 2013) | 11 lines

Further improve type optimization reusing the type argument vector of the
instantiator of generic objects (fixes issue 10149).
This optimization considers the generic type argument vector of the instance
being allocated as well as the generic type argument vector of the compile
time type of the instantiator.
If the instance vector is a prefix of the instantiator vector, the instantiator
vector can be shared by the new instance.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14106013
------------------------------------------------------------------------
r22154 | asiva@google.com | 2013-04-30 07:00:18 +0900 (火, 30  4月 2013) | 8 lines

First step towards loading the core library scripts directly from the sources
instead of concatenating all the scripts and linking them into the executable.
- Refactor the bootstrap script loading and compilation part to use a
  custom bootstrap library tag handler

R=iposva@google.com

Review URL: https://codereview.chromium.org//14520010
------------------------------------------------------------------------
r22144 | johnmccutchan@google.com | 2013-04-30 04:17:38 +0900 (火, 30  4月 2013) | 5 lines

Inline Float32x4 comparison.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//14288006
------------------------------------------------------------------------
r22132 | zra@google.com | 2013-04-30 02:52:09 +0900 (火, 30  4月 2013) | 5 lines

Enables API tests on MIPS

R=regis@google.com

Review URL: https://codereview.chromium.org//14061012
------------------------------------------------------------------------
r22124 | vegorov@google.com | 2013-04-30 00:51:15 +0900 (火, 30  4月 2013) | 6 lines

Ensure that safepoints are assigned to the live ranges of constants.

R=fschneider@google.com
BUG=dart:10272

Review URL: https://codereview.chromium.org//14542004
------------------------------------------------------------------------
r22110 | vegorov@google.com | 2013-04-29 19:49:58 +0900 (月, 29  4月 2013) | 6 lines

Align code by 32 bytes to reduce benchmark flakiness on Intel CPUs.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//14158012
------------------------------------------------------------------------
r22096 | srdjan@google.com | 2013-04-27 09:04:21 +0900 (土, 27  4月 2013) | 5 lines

Move negative length checks from Dart into the native.

R=asiva@google.com

Review URL: https://codereview.chromium.org//14383016
------------------------------------------------------------------------
r22088 | srdjan@google.com | 2013-04-27 06:20:49 +0900 (土, 27  4月 2013) | 3 lines

Fix recognition of factories (for setting result cid) and add them to checks.

Review URL: https://codereview.chromium.org//14386011
------------------------------------------------------------------------
r22081 | vegorov@google.com | 2013-04-27 03:52:58 +0900 (土, 27  4月 2013) | 6 lines

Fix bad copy&paste in InvokeMathCFunctionInstr::AttributesEqual.

TBR=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14521004
------------------------------------------------------------------------
r22078 | vegorov@google.com | 2013-04-27 03:10:59 +0900 (土, 27  4月 2013) | 8 lines

Cleanup implementation of SmiToDouble to use unboxed double result.

Allow CSE to eliminate redundant SmiToDouble, DoubleToDouble, InvokeMathCFunction instructions.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14031035
------------------------------------------------------------------------
r22077 | asiva@google.com | 2013-04-27 03:01:43 +0900 (土, 27  4月 2013) | 5 lines

Fix some minor nits:
- Float32x4 and Uint32x4 were using the wrong script (corelib script).
- Uint32x4 was not being registered.

Review URL: https://codereview.chromium.org//14455009
------------------------------------------------------------------------
r22070 | hausner@google.com | 2013-04-27 00:27:00 +0900 (土, 27  4月 2013) | 5 lines

Fix context-allocated variables in stack traces

The debugger did not properly use saved contexts when collecting a stack trace.

Review URL: https://codereview.chromium.org//14503003
------------------------------------------------------------------------
r22064 | iposva@google.com | 2013-04-26 15:57:29 +0900 (金, 26  4月 2013) | 7 lines

- Disassociate old page size from new allocatable size.
- Have a different cutoff for large page allocations
  and default old page size.
- Do not align old pages to old page size.
- Do not track used space during marking.

Review URL: https://codereview.chromium.org//14190014
------------------------------------------------------------------------
r22062 | regis@google.com | 2013-04-26 09:04:13 +0900 (金, 26  4月 2013) | 10 lines

Improve type optimization reusing the type argument vector of the instantiator
of generic objects:
Do not require anymore that the vector be of the same length. A longer vector
with a compatible prefix is acceptable. This saves a class id check and length
check.
We still require that the uninstantiated type argument vector be the identity
vector, i.e. consisting only of type parameters with consecutive indices
starting at zero. We will relax this requirement in a later change.

Review URL: https://codereview.chromium.org//14238036
------------------------------------------------------------------------
r22055 | johnmccutchan@google.com | 2013-04-26 07:03:05 +0900 (金, 26  4月 2013) | 3 lines

Inline Float32x4 constructors

Review URL: https://codereview.chromium.org//13936009
------------------------------------------------------------------------
r22042 | zra@google.com | 2013-04-26 03:03:15 +0900 (金, 26  4月 2013) | 9 lines

Adds support for debugger API on MIPS.

Enable debugger api tests on MIPS.
Enable isolate tests on MIPS.
Enable code descriptors tests on MIPS.
Enable snapshot tests on MIPS.
Enable heap tests on MIPS.

Review URL: https://codereview.chromium.org//14284020
------------------------------------------------------------------------
r22032 | smok@google.com | 2013-04-25 23:22:30 +0900 (木, 25  4月 2013) | 3 lines

Put everything in runtime/bin into '::dart::bin' namespace.

Review URL: https://codereview.chromium.org//14341015
------------------------------------------------------------------------
r21980 | asiva@google.com | 2013-04-25 05:52:22 +0900 (木, 25  4月 2013) | 4 lines

Report OOM errors instead of asserting on allocation failures when sending
messages to other isolates.

Review URL: https://codereview.chromium.org//14273021
------------------------------------------------------------------------
r21976 | hausner@google.com | 2013-04-25 05:26:14 +0900 (木, 25  4月 2013) | 6 lines

Fix debugging of top-level getters 

Parser didn't set the valid token range of top-level getters, so they
were invisible to the debugger.

Review URL: https://codereview.chromium.org//14426010
------------------------------------------------------------------------
r21972 | regis@google.com | 2013-04-25 03:55:52 +0900 (木, 25  4月 2013) | 4 lines

Enable api tests on ARM.
Disable generation of optimized code on ARM and MIPS.

Review URL: https://codereview.chromium.org//14476009
------------------------------------------------------------------------
r21964 | vegorov@google.com | 2013-04-25 02:51:10 +0900 (木, 25  4月 2013) | 8 lines

Preserve aggregate count when creating unary checks ICData.

We were reseting it to 1 which leads to worse inlining decisions for example for user defined binary operators. Inliner considered them all cold.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14474007
------------------------------------------------------------------------
r21951 | zra@google.com | 2013-04-25 00:36:40 +0900 (木, 25  4月 2013) | 5 lines

Implements missing features to run Hello, World in checked mode on MIPS.

Also re-enables a stack frame test that was disabled in checked mode.

Review URL: https://codereview.chromium.org//14431004
------------------------------------------------------------------------
r21906 | zra@google.com | 2013-04-24 06:42:19 +0900 (水, 24  4月 2013) | 3 lines

Enables stack frame vm tests on MIPS.

Review URL: https://codereview.chromium.org//14446005
------------------------------------------------------------------------
r21898 | zra@google.com | 2013-04-24 03:15:52 +0900 (水, 24  4月 2013) | 4 lines

Implements catch on MIPS.
Enables UnhandledException test for MIPS.

Review URL: https://codereview.chromium.org//14289006
------------------------------------------------------------------------
r21897 | johnmccutchan@google.com | 2013-04-24 02:52:10 +0900 (水, 24  4月 2013) | 3 lines

Inline Float32x4 Getters

Review URL: https://codereview.chromium.org//13872020
------------------------------------------------------------------------
r21890 | regis@google.com | 2013-04-24 01:10:22 +0900 (水, 24  4月 2013) | 9 lines

Support debugger API on ARM.
Support smull ARM instruction in order to detect 32-bit multiplication overflow.
Enable debugger api tests on ARM.
Enable isolate tests on ARM.
Enable code descriptors tests on ARM.
Enable snapshot tests on ARM.
Enable heap tests on ARM.

Review URL: https://codereview.chromium.org//13983016
------------------------------------------------------------------------
r21880 | ager@google.com | 2013-04-23 22:12:51 +0900 (火, 23  4月 2013) | 6 lines

Yet another couple

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//13875007
------------------------------------------------------------------------
r21879 | ager@google.com | 2013-04-23 22:09:38 +0900 (火, 23  4月 2013) | 9 lines

Update more fingerprints.

I'm sorry about all these individual changelists. Runs all debug
mode tests now, so this should be better.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//13843006
------------------------------------------------------------------------
r21877 | ager@google.com | 2013-04-23 21:41:10 +0900 (火, 23  4月 2013) | 6 lines

Fixing more fingerprints. What is the right way to find all of these?

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14424009
------------------------------------------------------------------------
r21876 | kmillikin@google.com | 2013-04-23 21:38:55 +0900 (火, 23  4月 2013) | 12 lines

Fix another unused-private-field clang error.

../../runtime/vm/intermediate_language.h:1093:20: error: private field 'block_entry_' is not used [-Werror,-Wunused-private-field]
  BlockEntryInstr* block_entry_;

R=kmillikin@google.com

Signed-off-by: Thiago Farina <tfarina@chromium.org>

Review URL: https://codereview.chromium.org//14341012

Patch from Thiago Farina <tfarina@chromium.org>.
------------------------------------------------------------------------
r21875 | ager@google.com | 2013-04-23 21:23:27 +0900 (火, 23  4月 2013) | 6 lines

More fixes. Thanks to Slava for reminding me of check-function-fingerprints flag.

R=asiva@google.com, floitsch@google.com, srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14042012
------------------------------------------------------------------------
r21873 | ager@google.com | 2013-04-23 21:06:00 +0900 (火, 23  4月 2013) | 6 lines

Fix wrong typed_data change.

R=asiva@google.com, floitsch@google.com, srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14091015
------------------------------------------------------------------------
r21871 | ager@google.com | 2013-04-23 20:54:54 +0900 (火, 23  4月 2013) | 6 lines

Rename dart:typeddata to dart:typed_data.

R=asiva@google.com, floitsch@google.com, srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14426006
------------------------------------------------------------------------
r21866 | vegorov@google.com | 2013-04-23 20:09:14 +0900 (火, 23  4月 2013) | 8 lines

Optimize static field and context load/stores as part of CSE pass.

This change also introduces basic abstractions for aliasing.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//14326006
------------------------------------------------------------------------
r21860 | iposva@google.com | 2013-04-23 15:55:17 +0900 (火, 23  4月 2013) | 3 lines

- Remove redundant include of platform/globals.h.

Review URL: https://codereview.chromium.org//14367034
------------------------------------------------------------------------
r21844 | iposva@google.com | 2013-04-23 06:43:57 +0900 (火, 23  4月 2013) | 3 lines

- Remove heap tracing.

Review URL: https://codereview.chromium.org//14179015
------------------------------------------------------------------------
r21841 | johnmccutchan@google.com | 2013-04-23 06:35:31 +0900 (火, 23  4月 2013) | 3 lines

Mark Float32x4List as fixed length array.

Review URL: https://codereview.chromium.org//13932038
------------------------------------------------------------------------
r21839 | zra@google.com | 2013-04-23 06:15:54 +0900 (火, 23  4月 2013) | 5 lines

Implements exception handler stub on MIPS.

Also enables codegen and object tests on MIPS.

Review URL: https://codereview.chromium.org//14273015
------------------------------------------------------------------------
r21824 | zra@google.com | 2013-04-23 02:39:32 +0900 (火, 23  4月 2013) | 5 lines

Implements context allocation stub for MIPS.

Also removes uses of Push and Pop macros.

Review URL: https://codereview.chromium.org//14069019
------------------------------------------------------------------------
r21811 | iposva@google.com | 2013-04-22 21:59:44 +0900 (月, 22  4月 2013) | 4 lines

Fix http://dartbug.com/9137 :
- Use non-normalized name when complaining about unrecognized flags.

Review URL: https://codereview.chromium.org//13483009
------------------------------------------------------------------------
r21809 | vegorov@google.com | 2013-04-22 21:30:05 +0900 (月, 22  4月 2013) | 8 lines

Ensure that type of the AssertAssignable instruction is recomputed.

If the previous type was more specific than destination type but new value type is not than we need to update outgoing type to be destination type. Otherwise a stale more specific type will be flowing out.

BUG=dart:10094
R=kmillikin@google.com

Review URL: https://codereview.chromium.org//14034011
------------------------------------------------------------------------
r21791 | kustermann@google.com | 2013-04-22 17:27:15 +0900 (月, 22  4月 2013) | 7 lines

Fast copy between TypedData and ExternalTypedData

Until now, copying data from TypedData to TypedData and from ExternalTypedData
to ExternalTypedData was fast. But copying between TypedData and
ExternalTypedData was not handled in a fast way.

Review URL: https://codereview.chromium.org//14296006
------------------------------------------------------------------------
r21788 | iposva@google.com | 2013-04-22 14:51:47 +0900 (月, 22  4月 2013) | 4 lines

- Use DISALLOW_ALLOCATION in Object class.
- Intercept operator delete in handles.

Review URL: https://codereview.chromium.org//13835014
------------------------------------------------------------------------
r21786 | iposva@google.com | 2013-04-22 14:31:03 +0900 (月, 22  4月 2013) | 4 lines

- Reduce warnings about project settings in Xcode 4.
- Address compilation warnings found by clang.

Review URL: https://codereview.chromium.org//14084006
------------------------------------------------------------------------
r21780 | regis@google.com | 2013-04-20 08:21:07 +0900 (土, 20  4月 2013) | 3 lines

Implement missing features to run Hello world! in checked mode on simulated ARM.

Review URL: https://codereview.chromium.org//14192032
------------------------------------------------------------------------
r21778 | vegorov@google.com | 2013-04-20 07:42:46 +0900 (土, 20  4月 2013) | 12 lines

Fix clang unused-private-field error.

../../runtime/vm/dart_api_state.h:736:18: error: private field 'key_' is not used [-Werror,-Wunused-private-field]
  ThreadLocalKey key_;
                   ^
R=scheglov@google.com
TEST=ninja -C out/Debug
Signed-off-by: Thiago Farina <tfarina@chromium.org>

Review URL: https://codereview.chromium.org//14189023

Patch from Thiago Farina <tfarina@chromium.org>.
------------------------------------------------------------------------
r21766 | vegorov@google.com | 2013-04-20 05:14:44 +0900 (土, 20  4月 2013) | 7 lines

Drain StoreBufferBlock into store buffer instead of iterating over it directly.

This will deduplicate its entries. StoreBufferBlock might be contain the same large object dozens of times and without deduplication this will severely degrade GC performance by revisiting the same large object for every time it is recorded in the StoreBufferBlock.

BUG=dart:10048

Review URL: https://codereview.chromium.org//14348026
------------------------------------------------------------------------
r21764 | hausner@google.com | 2013-04-20 04:54:49 +0900 (土, 20  4月 2013) | 5 lines

Create handle scope in debugger callback

Fix issue 10052.

Review URL: https://codereview.chromium.org//14246043
------------------------------------------------------------------------
r21759 | zra@google.com | 2013-04-20 03:31:47 +0900 (土, 20  4月 2013) | 3 lines

Implements features to run "Hello, world!" on simulated MIPS.

Review URL: https://codereview.chromium.org//14246039
------------------------------------------------------------------------
r21757 | zra@google.com | 2013-04-20 03:05:44 +0900 (土, 20  4月 2013) | 13 lines

Enables cross-compilation of the VM for ARM.

Uses the "toolset" feature of gyp to build the dart VM
for ARM, but restricts building of snapshot generation
to the host machine.

For generated source files, it also changes to using
LIB_DIR instead of SHARED_INTERMEDIATE_DIR to avoid
generation of duplicate Makefile rules (gyp doesn't
know that generated source files from toolchains it
thinks are different will be the same.)

Review URL: https://codereview.chromium.org//12726011
------------------------------------------------------------------------
r21754 | srdjan@google.com | 2013-04-20 01:56:30 +0900 (土, 20  4月 2013) | 3 lines

Fully implement integer modulo in intrinsifier, fall-through only for throwing exceptions. Also intrinsified remainder operation. TODO: generate inline code for both % and remainder.

Review URL: https://codereview.chromium.org//14205023
------------------------------------------------------------------------
r21753 | hausner@google.com | 2013-04-20 01:26:05 +0900 (土, 20  4月 2013) | 7 lines

Handle built-in function identical correctly

The parser, rather than the backend, recognizes the built-in function identical
and replaces is with the old token for the === operator. This fixes compile
time constant handling of calls to identical.

Review URL: https://codereview.chromium.org//14366007
------------------------------------------------------------------------
r21748 | regis@google.com | 2013-04-20 01:06:40 +0900 (土, 20  4月 2013) | 3 lines

Enable stack frame vm tests on ARM.

Review URL: https://codereview.chromium.org//14328026
------------------------------------------------------------------------
r21711 | srdjan@google.com | 2013-04-19 08:18:13 +0900 (金, 19  4月 2013) | 3 lines

Add flag --check-function-fingerprints, it checks all function fingerprints of the intrinsifier and method recognizer. Added flag to a test so that the fingerprints will be tested during a regular test.

Review URL: https://codereview.chromium.org//14247005
------------------------------------------------------------------------
r21709 | asiva@google.com | 2013-04-19 07:58:57 +0900 (金, 19  4月 2013) | 3 lines

Fix for issue 9617, throw a snapshot write error when encountering stacktrace objects instead of an internal error.

Review URL: https://codereview.chromium.org//14348005
------------------------------------------------------------------------
r21708 | regis@google.com | 2013-04-19 07:19:49 +0900 (金, 19  4月 2013) | 5 lines

Implement catch on ARM.
Enabled UnhandledExceptions vm test.
Minor clean up.

Review URL: https://codereview.chromium.org//14362008
------------------------------------------------------------------------
r21696 | vegorov@google.com | 2013-04-19 04:52:26 +0900 (金, 19  4月 2013) | 6 lines

Convert EqualityCompare to StrictCompare if reciever is either null or guaranteed to have default equality operator.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//13878017
------------------------------------------------------------------------
r21695 | regis@google.com | 2013-04-19 04:30:26 +0900 (金, 19  4月 2013) | 4 lines

Reset simulator top exit frame info when coming via long jump from a throw.
Thanks to Srdjan for reporting the crash on Mac.

Review URL: https://codereview.chromium.org//14141008
------------------------------------------------------------------------
r21692 | srdjan@google.com | 2013-04-19 03:37:24 +0900 (金, 19  4月 2013) | 3 lines

Detect leaf optimized methods and skip stack check overflow test in those, unless it is in a loop (to be able to stop it).

Review URL: https://codereview.chromium.org//14308009
------------------------------------------------------------------------
r21689 | regis@google.com | 2013-04-19 03:32:06 +0900 (金, 19  4月 2013) | 3 lines

Merge JumpToErrorHandler and JumpToExceptionHandler stubs on all architectures.

Review URL: https://codereview.chromium.org//13874010
------------------------------------------------------------------------
r21688 | asiva@google.com | 2013-04-19 03:19:43 +0900 (金, 19  4月 2013) | 3 lines

Add endian parameter to the get/set functions in ByteData.

Review URL: https://codereview.chromium.org//14332002
------------------------------------------------------------------------
r21680 | regis@google.com | 2013-04-19 01:23:25 +0900 (金, 19  4月 2013) | 6 lines

Implement long jump in ARM and MIPS simulators.
Implement error and exception handler stubs on ARM.
Hook up simulator for object tests.
Enable codegen and object tests on ARM.

Review URL: https://codereview.chromium.org//14309004
------------------------------------------------------------------------
r21667 | ajohnsen@google.com | 2013-04-18 17:13:49 +0900 (木, 18  4月 2013) | 5 lines

Fix incremental allocation of forward_list_ in dart_api_message.

BUG=

Review URL: https://codereview.chromium.org//14031006
------------------------------------------------------------------------
r21665 | sgjesse@google.com | 2013-04-18 16:33:24 +0900 (木, 18  4月 2013) | 5 lines

Add more tests of typed data serialization

R=asiva@google.com, ager@google.com

Review URL: https://codereview.chromium.org//14200031
------------------------------------------------------------------------
r21647 | regis@google.com | 2013-04-18 03:48:40 +0900 (木, 18  4月 2013) | 3 lines

Minor cleanup of ARM stubs.

Review URL: https://codereview.chromium.org//14268006
------------------------------------------------------------------------
r21626 | regis@google.com | 2013-04-18 01:02:02 +0900 (木, 18  4月 2013) | 5 lines

Uncomment more vm tests on ARM (and some on MIPS too).
Implement context allocation stub.
Some cleanup.

Review URL: https://codereview.chromium.org//14323003
------------------------------------------------------------------------
r21610 | iposva@google.com | 2013-04-17 19:11:21 +0900 (水, 17  4月 2013) | 3 lines

- Implement reflectClass.

Review URL: https://codereview.chromium.org//14118011
------------------------------------------------------------------------
r21593 | asiva@google.com | 2013-04-17 08:29:26 +0900 (水, 17  4月 2013) | 3 lines

Add utilities for converting from Host endianity to big endian and little endian formats for the various OSs.

Review URL: https://codereview.chromium.org//14299008
------------------------------------------------------------------------
r21592 | hausner@google.com | 2013-04-17 08:24:21 +0900 (水, 17  4月 2013) | 3 lines

Add library id, location info to breakpointResolved event

Review URL: https://codereview.chromium.org//13940008
------------------------------------------------------------------------
r21591 | iposva@google.com | 2013-04-17 08:19:30 +0900 (水, 17  4月 2013) | 7 lines

- Add synchronous mirror API. Resurrects invoke, apply, newInstance,
  getField and setField as synchronous calls that accept isolate-local
  object as arguments.

Originally reviewed as https://codereview.chromium.org/14044007/

Review URL: https://codereview.chromium.org//13942008
------------------------------------------------------------------------
r21587 | asiva@google.com | 2013-04-17 07:51:24 +0900 (水, 17  4月 2013) | 3 lines

Fix for issue 9871 - Object::empty_array() returns a broken handle.

Review URL: https://codereview.chromium.org//14298012
------------------------------------------------------------------------
r21582 | regis@google.com | 2013-04-17 06:53:09 +0900 (水, 17  4月 2013) | 3 lines

Implement missing features to run Hello world! on simulated ARM.

Review URL: https://codereview.chromium.org//14153004
------------------------------------------------------------------------
r21579 | tball@google.com | 2013-04-17 06:05:37 +0900 (水, 17  4月 2013) | 3 lines

Resubmission of 21573, with corrected strndup call.

Review URL: https://codereview.chromium.org//14308006
------------------------------------------------------------------------
r21577 | vegorov@google.com | 2013-04-17 05:55:42 +0900 (水, 17  4月 2013) | 7 lines

Change the order of blocking in AllocateRegistersLocally.

Programmer is free to specify any register as a fixed RegisterLocation even one outside of the range available to the allocator itself.

BUG=

Review URL: https://codereview.chromium.org//13963009
------------------------------------------------------------------------
r21575 | tball@google.com | 2013-04-17 05:47:32 +0900 (水, 17  4月 2013) | 1 line

Rolled back due to missing Windows strndup.
------------------------------------------------------------------------
r21573 | tball@google.com | 2013-04-17 05:40:56 +0900 (水, 17  4月 2013) | 5 lines

Fixed stack trace for isolates without any Dart frames. Updated
stats display to display empty stack dumps, and reduced screen
update time.

Review URL: https://codereview.chromium.org//13939003
------------------------------------------------------------------------
r21569 | hausner@google.com | 2013-04-17 04:42:39 +0900 (水, 17  4月 2013) | 10 lines

Deprecate old debugger breakpoint handler

- Add new breakpoint handler callback that does not take a
  stack trace
- Remove deprecated handler from debugger core
- Adjust tests
- Old breakpoint handler support remain in code until Dartium
  switches to new handler.

Review URL: https://codereview.chromium.org//14298002
------------------------------------------------------------------------
r21561 | tball@google.com | 2013-04-17 02:50:25 +0900 (水, 17  4月 2013) | 3 lines

Added a run state field to Isolate, to show when it is executing code.

Review URL: https://codereview.chromium.org//13932024
------------------------------------------------------------------------
r21560 | srdjan@google.com | 2013-04-17 02:29:51 +0900 (水, 17  4月 2013) | 3 lines

Intrinsics: no need for store barrier when storing data-array into the growable array warpper(since wrapper is guaranteed to be in new gen).

Review URL: https://codereview.chromium.org//13925025
------------------------------------------------------------------------
r21541 | johnmccutchan@google.com | 2013-04-16 19:04:34 +0900 (火, 16  4月 2013) | 3 lines

Binary Float32x4 ops.

Review URL: https://codereview.chromium.org//13867006
------------------------------------------------------------------------
r21539 | kmillikin@google.com | 2013-04-16 17:40:27 +0900 (火, 16  4月 2013) | 14 lines

Refactor the code for making inlining decisions.

Separate the decision to inlin, which produces a graph to inline, from the
act of inlining itself.  For polymorphic inlining we need such a separation.

Change the function that integrates an inlined function graph into a caller
graph so that it operates on a graph entry and set of inlined exits rather
than on an entire flow graph.  Flow graphs represent a whole function so
this change allows us to replace an instruction with an arbitrary subgraph.

Change the name of the InliningContext class to InlineExitCollector to more
accurately reflect what it does.

Review URL: https://codereview.chromium.org//13932005
------------------------------------------------------------------------
r21532 | zra@google.com | 2013-04-16 09:25:03 +0900 (火, 16  4月 2013) | 3 lines

Implements write barrier on MIPS.

Review URL: https://codereview.chromium.org//13925024
------------------------------------------------------------------------
r21526 | srdjan@google.com | 2013-04-16 08:00:06 +0900 (火, 16  4月 2013) | 3 lines

Do not set growable array length unnecessarily.

Review URL: https://codereview.chromium.org//14265015
------------------------------------------------------------------------
r21505 | iposva@google.com | 2013-04-16 04:46:21 +0900 (火, 16  4月 2013) | 3 lines

- Allow for experimentation with different header sizes.

Review URL: https://codereview.chromium.org//13951019
------------------------------------------------------------------------
r21496 | ager@google.com | 2013-04-16 03:58:36 +0900 (火, 16  4月 2013) | 9 lines

Support Float32x4List in the embedding API.

This allows Dartium to use Float32x4List arguments to the webgl
uniform4fv methods.

R=asiva@google.com, iposva@google.com, johnmccutchan@google.com
BUG=

Review URL: https://codereview.chromium.org//14018018
------------------------------------------------------------------------
r21490 | srdjan@google.com | 2013-04-16 03:06:59 +0900 (火, 16  4月 2013) | 3 lines

Do not allocate unnecessary ObjectArrays. When allocating an empty growable array, pass it a compile time constant empty array instead of allocating a new empty array at runtime, since the factory method will anyway allocate its own object array of length 4.

Review URL: https://codereview.chromium.org//14023005
------------------------------------------------------------------------
r21489 | srdjan@google.com | 2013-04-16 03:06:23 +0900 (火, 16  4月 2013) | 8 lines

Run constant propagation one more time after canonicalization so that following code can always return true:

foo() {
  var a = new List(0);
  return a.isEmpty();
}

Review URL: https://codereview.chromium.org//13932018
------------------------------------------------------------------------
r21465 | ahe@google.com | 2013-04-16 00:42:44 +0900 (火, 16  4月 2013) | 3 lines

Rename InvocationMirror to Invocation.

Review URL: https://codereview.chromium.org//14049009
------------------------------------------------------------------------
r21460 | ahe@google.com | 2013-04-16 00:00:45 +0900 (火, 16  4月 2013) | 3 lines

Update dart:mirrors to use Symbol.

Review URL: https://codereview.chromium.org//14173005
------------------------------------------------------------------------
r21455 | sgjesse@google.com | 2013-04-15 23:19:46 +0900 (月, 15  4月 2013) | 9 lines

Add support for even more typed data on native ports

The only types missing now are: Float32x4, Float32x4List and
Uint32x4 (currently no Uint32x4List).

R=ager@google.com
BUG=

Review URL: https://codereview.chromium.org//13998008
------------------------------------------------------------------------
r21439 | vegorov@google.com | 2013-04-15 20:53:50 +0900 (月, 15  4月 2013) | 10 lines

Re-apply r20377.

Compute local variable liveness before translation to SSA.

Use it to remove dead values from deoptimization environments.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//14215006
------------------------------------------------------------------------
r21425 | sgjesse@google.com | 2013-04-15 18:12:49 +0900 (月, 15  4月 2013) | 6 lines

Fix GCC compiler warning

TBR=ager@google.com
BUG=

Review URL: https://codereview.chromium.org//14046010
------------------------------------------------------------------------
r21423 | sgjesse@google.com | 2013-04-15 18:01:56 +0900 (月, 15  4月 2013) | 11 lines

Add support for more typed data types on native ports

Renamed the kUint8Array type for a Dart_CObject structure to
kByteArray to support all typed data types. The specific type is
stored in a separate type field. No matter what the specific type is,
the length of the byte array is always in bytes.

R=ager@google.com
BUG=

Review URL: https://codereview.chromium.org//14142008
------------------------------------------------------------------------
r21396 | zra@google.com | 2013-04-13 07:20:32 +0900 (土, 13  4月 2013) | 6 lines

Adds support for UseDartApi vm test on MIPS.

Also, adds:
- xori instruction,
- SubuDetectOverflow (like AdduDetectOverflow).
Review URL: https://codereview.chromium.org//13884017
------------------------------------------------------------------------
r21392 | hausner@google.com | 2013-04-13 06:49:24 +0900 (土, 13  4月 2013) | 2 lines

More cleanups in debugger API and wire protocol
Review URL: https://codereview.chromium.org//13975018
------------------------------------------------------------------------
r21376 | zra@google.com | 2013-04-13 02:25:38 +0900 (土, 13  4月 2013) | 2 lines

Adds some floating point instructions to MIPS simulator, assembler, disassembler.
Review URL: https://codereview.chromium.org//14206002
------------------------------------------------------------------------
r21374 | srdjan@google.com | 2013-04-13 02:15:59 +0900 (土, 13  4月 2013) | 2 lines

Simplify intrinsic for GrowableArray.setLength : no need to check if the length is above the range of data, that has been checked before.
Review URL: https://codereview.chromium.org//14121010
------------------------------------------------------------------------
r21373 | srdjan@google.com | 2013-04-13 01:51:48 +0900 (土, 13  4月 2013) | 2 lines

Revert to loop from rep movsb for copying one byte strings in order to restore performance.
Review URL: https://codereview.chromium.org//13922005
------------------------------------------------------------------------
r21371 | hausner@google.com | 2013-04-13 01:32:37 +0900 (土, 13  4月 2013) | 6 lines

Implement rethrow statement

Or: how to turn a 5 minute task into a 2 hour ordeal.

The actual business of the change is one line in token.h and one line in parser.cc.
Review URL: https://codereview.chromium.org//14012005
------------------------------------------------------------------------
r21370 | iposva@google.com | 2013-04-13 01:27:59 +0900 (土, 13  4月 2013) | 2 lines

- memmove instead of memcpy.
Review URL: https://codereview.chromium.org//14121009
------------------------------------------------------------------------
r21368 | iposva@google.com | 2013-04-13 01:19:10 +0900 (土, 13  4月 2013) | 2 lines

- Add OS::StrNDup instead of redefining it when needed.
Review URL: https://codereview.chromium.org//13994008
------------------------------------------------------------------------
r21367 | vegorov@google.com | 2013-04-13 01:08:17 +0900 (土, 13  4月 2013) | 5 lines

Fix x64 build failing after r21366.

TBR=iposva@google.com

Review URL: https://codereview.chromium.org//13975010
------------------------------------------------------------------------
r21366 | vegorov@google.com | 2013-04-13 01:03:07 +0900 (土, 13  4月 2013) | 7 lines

Fix bug in MegamorphicCacheMissHandler: put kNullCid into the cache when receiver is null.

We were putting kObjectCid before causing inline lookup code to always miss when receiver is null.

BUG=dart:9815

Review URL: https://codereview.chromium.org//13951007
------------------------------------------------------------------------
r21364 | vegorov@google.com | 2013-04-13 00:28:29 +0900 (土, 13  4月 2013) | 7 lines

Support IfThenElse instruction pattern for arbitrary smi constants.

Also fix bug in the IfThenElse::Canonicalize.

BUG=

Review URL: https://codereview.chromium.org//13884009
------------------------------------------------------------------------
r21353 | kmillikin@google.com | 2013-04-12 20:41:10 +0900 (金, 12  4月 2013) | 6 lines

Reapply "Incrementally recompute dominators when inlining."

Including a fix for a silly off-by-one bug.  GrowableArray::TruncateTo takes
the new length, not the new last index.

Review URL: https://codereview.chromium.org//14135006
------------------------------------------------------------------------
r21351 | vegorov@google.com | 2013-04-12 20:19:34 +0900 (金, 12  4月 2013) | 6 lines

Ensure that all goto instructions have deoptimization target.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//12457034
------------------------------------------------------------------------
r21317 | srdjan@google.com | 2013-04-12 06:27:19 +0900 (金, 12  4月 2013) | 2 lines

Better write barrier code for static fields if the value is known not to be Smi.
Review URL: https://codereview.chromium.org//14157005
------------------------------------------------------------------------
r21305 | hausner@google.com | 2013-04-12 04:26:25 +0900 (金, 12  4月 2013) | 2 lines

Remove legacy debugger API stuff. The removed functions do not appear to be used in Dartium.
Review URL: https://codereview.chromium.org//14029016
------------------------------------------------------------------------
r21293 | srdjan@google.com | 2013-04-12 01:39:34 +0900 (金, 12  4月 2013) | 2 lines

Use rep_movsb for copying one-byte strings in substring intrinsic.
Review URL: https://codereview.chromium.org//14122002
------------------------------------------------------------------------
r21276 | vegorov@google.com | 2013-04-11 22:08:08 +0900 (木, 11  4月 2013) | 7 lines

Fix bug introduced by r21269.

PageSpace::LargePageSizeFor should not use sizeof(HeapPage) directly because real object start offset is additionally aligned.

BUG=

Review URL: https://codereview.chromium.org//14158003
------------------------------------------------------------------------
r21274 | johnmccutchan@google.com | 2013-04-11 21:50:46 +0900 (木, 11  4月 2013) | 3 lines

Unboxed load/store indexed of Float32x4

Review URL: https://codereview.chromium.org//13818006
------------------------------------------------------------------------
r21270 | kmillikin@google.com | 2013-04-11 20:49:07 +0900 (木, 11  4月 2013) | 7 lines

Revert "Incrementally recompute dominators when inlining."

This reverts svn commit r21268 due to dart2js test failures.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//13910003
------------------------------------------------------------------------
r21269 | vegorov@google.com | 2013-04-11 20:46:46 +0900 (木, 11  4月 2013) | 7 lines

Align start of the page's object area to match OS::kMaxPreferredCodeAlignment.

On ia32 we were aligning it only by 8 bytes which would later negate all our attemps to align code objects by 16 or 32 bytes as the very first code object would be misaligned and the rest would have the same misalignment modulo preferred code alignment.

BUG=

Review URL: https://codereview.chromium.org//13927008
------------------------------------------------------------------------
r21268 | kmillikin@google.com | 2013-04-11 20:44:36 +0900 (木, 11  4月 2013) | 9 lines

Incrementally recompute dominators when inlining.

Before: we marked the entire graph's dominator tree invalid in case there
were multiple exits from an inlined function and recomputed dominators after
inlining.  Now: in case there are multiple exits we collect them in a fresh
join block and compute its immediate dominator as the nearest common
ancestor in the dominator tree over all predecessors.

Review URL: https://codereview.chromium.org//14067002
------------------------------------------------------------------------
r21252 | sgjesse@google.com | 2013-04-11 16:15:08 +0900 (木, 11  4月 2013) | 17 lines

Add support for typed data views on native threads

The deserializer running outside the VM can now decode typed data
views. As the typed data views are implemented as normal Dart
instances and not a internal VM object the deserializer have been
expanded to process serialized objects of the type used to create
these views. The typed data object that the view is based on will
always be serialized as part of the message.

Currently only vews created with constructor Uint8List.view on top of
an Uint8List are supported.

R=ager@google.com

BUG=https://code.google.com/p/dart/issues/detail?id=9484

Review URL: https://codereview.chromium.org//14065006
------------------------------------------------------------------------
r21235 | regis@google.com | 2013-04-11 07:34:02 +0900 (木, 11  4月 2013) | 5 lines

A patch class must be given the same name as the class it is patching, otherwise
the generic signature classes it defines will not match the patched generic
signature classes. Therefore, new signature classes will be introduced and the
original ones will not get finalized.
Review URL: https://codereview.chromium.org//14097006
------------------------------------------------------------------------
r21233 | zra@google.com | 2013-04-11 06:59:57 +0900 (木, 11  4月 2013) | 10 lines

Supports FrameLookup vm test on MIPS

As with the similar CL for ARM, also:
- Supports inline allocation of objects.
- Supports checking of inline cache and instance calls.
- Supports subtype test cache.
- Supports (some) equality checks.
- Supports for (some) conditional branches.
- Supports for pool pointer setup in stubs.
Review URL: https://codereview.chromium.org//14076005
------------------------------------------------------------------------
r21232 | srdjan@google.com | 2013-04-11 05:37:02 +0900 (木, 11  4月 2013) | 2 lines

Intrinsify OnebyteString's substringUnchecked. Significant performance improvement on Json benchmarks.
Review URL: https://codereview.chromium.org//13964002
------------------------------------------------------------------------
r21217 | regis@google.com | 2013-04-11 01:43:39 +0900 (木, 11  4月 2013) | 6 lines

Prohibit use of dynamic when extending or implementing classes (was crashing).
Added test.
Fix typos in array patch.
Cleanup factory result finalization.
Do not verify field offsets after a finalization error.
Review URL: https://codereview.chromium.org//13992002
------------------------------------------------------------------------
r21215 | vegorov@google.com | 2013-04-11 01:10:46 +0900 (木, 11  4月 2013) | 5 lines

Repair compilation with VTune support.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//14063008
------------------------------------------------------------------------
r21207 | vegorov@google.com | 2013-04-11 00:09:46 +0900 (木, 11  4月 2013) | 7 lines

Convert diamond shaped control flow into a single conditional instruction.

Adds a IfConverter pass that right now recognizes two simple patterns cond ? 0 : 2^n and cond ? x : x+-1 that can be generated without branches on ia32 and x64 using setcc instruction.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//14057004
------------------------------------------------------------------------
r21200 | sgjesse@google.com | 2013-04-10 22:41:32 +0900 (水, 10  4月 2013) | 20 lines

Fix issue with serializing typed array views

This makes the code

void isolate() {
  port.receive(print);
}

main() {
  Uint8List list = new Uint8List(1);
  spawnFunction(isolate).send([1, new Uint8List.view(list.buffer, 0, 1)]);
}

not crash.

R=asiva@google.com

BUG=

Review URL: https://codereview.chromium.org//13866012
------------------------------------------------------------------------
r21175 | hausner@google.com | 2013-04-10 08:36:51 +0900 (水, 10  4月 2013) | 8 lines

Fix issue 9744

Allow for debugger stack frames that have no corresponding pc descriptor
entry, i.e. the PC is not at a known safe point. In that case, we cannot
return a code location nor variables.

Fixes 9744
Review URL: https://codereview.chromium.org//13948009
------------------------------------------------------------------------
r21160 | iposva@google.com | 2013-04-10 02:51:24 +0900 (水, 10  4月 2013) | 2 lines

Changelist to land https://codereview.chromium.org/13452007/ for Siva.
Review URL: https://codereview.chromium.org//13813018
------------------------------------------------------------------------
r21148 | vegorov@google.com | 2013-04-09 21:23:46 +0900 (火, 09  4月 2013) | 11 lines

Fix bug in ParallelMoveResolver::EmitSwap: implement swaps of FPU spill slots.

Remove representation from location. Presence of representation in location encoding was violating the invariant that unequal locations must be disjoint (where equality for locations is defined in terms of bitwise equality of their encoding). This could lead ParallelMoveResolver to treat XMM1 containing unboxed double as unequal location to XMM1 containing unboxed mint, which is obviously incorrect.

For similar reason eliminate kFloat32x4StackSlot and kUint32x4StackSlot distinction is eliminated and both are replaced with kQuadStackSlot. Register allocator now guarantees that no kQuadStackSlot occupies the same space as any other kDoubleStackSlot. This also shrinks optimized stack when only doubles are used (but might lead to a higher stack utilization when a mixture of doubles and quads is used).

Implement allocation of scratch Cpu and Xmm registers for ParallelMoveResolver. This also allows to remove push(eax)/pop(eax) pairs when resolving memory-memory cycles on ia32.

BUG=dart:9710

Review URL: https://codereview.chromium.org//13801014
------------------------------------------------------------------------
r21118 | zra@google.com | 2013-04-09 07:04:27 +0900 (火, 09  4月 2013) | 4 lines

Introduces a second temporary register for MIPS assembler macros.

- Also, adds macros for comparisons followed by branches, and uses them.
Review URL: https://codereview.chromium.org//13483018
------------------------------------------------------------------------
r21098 | hausner@google.com | 2013-04-09 03:31:56 +0900 (火, 09  4月 2013) | 5 lines

Add library id to code location object

Add libraryId field to the JSON Location object in the debugger
wire protocol.
Review URL: https://codereview.chromium.org//13771013
------------------------------------------------------------------------
r21085 | zra@google.com | 2013-04-09 01:51:12 +0900 (火, 09  4月 2013) | 2 lines

Adds macros to the MIPS assembler for detecting overflow.
Review URL: https://codereview.chromium.org//13722022
------------------------------------------------------------------------
r21083 | regis@google.com | 2013-04-09 01:44:39 +0900 (火, 09  4月 2013) | 3 lines

Implement write barrier on ARM.
Enable StoreIntoObject and DartEntry vm tests.
Review URL: https://codereview.chromium.org//13638019
------------------------------------------------------------------------
r21079 | floitsch@google.com | 2013-04-09 01:07:34 +0900 (火, 09  4月 2013) | 3 lines

Remove deprecated Expect from the libraries.

Review URL: https://codereview.chromium.org//13724021
------------------------------------------------------------------------
r21074 | vegorov@google.com | 2013-04-08 23:32:46 +0900 (月, 08  4月 2013) | 8 lines

Use locale insensitive method to parse double literals.

Using strtod does not work because Dart grammar does not necessary match grammar used by strtod. Some locales (e.g. Russian and Danish) use comma instead of dot for radix point.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//13529014
------------------------------------------------------------------------
r21009 | hausner@google.com | 2013-04-06 08:45:14 +0900 (土, 06  4月 2013) | 5 lines

Add line table command to debugger

New command returns token information of a script. This will enable
the editor/debugger to translate token offsets to line numbers.
Review URL: https://codereview.chromium.org//13533016
------------------------------------------------------------------------
r21008 | srdjan@google.com | 2013-04-06 08:26:53 +0900 (土, 06  4月 2013) | 2 lines

Restore r20998 with a bug fix: add field to guarded_fields_ when it contains relevant cid. Was missing most cases and did not check for unique adds.
Review URL: https://codereview.chromium.org//13726023
------------------------------------------------------------------------
r21001 | srdjan@google.com | 2013-04-06 06:44:17 +0900 (土, 06  4月 2013) | 2 lines

Revert r20998. 
Review URL: https://codereview.chromium.org//13739002
------------------------------------------------------------------------
r20998 | srdjan@google.com | 2013-04-06 06:01:30 +0900 (土, 06  4月 2013) | 2 lines

Fix guarded_cid handling: add field to list of guarded_field at LoadField creation time.
Review URL: https://codereview.chromium.org//13529021
------------------------------------------------------------------------
r20996 | floitsch@google.com | 2013-04-06 04:43:16 +0900 (土, 06  4月 2013) | 6 lines

Remove Expect from core library.

Committed: https://code.google.com/p/dart/source/detail?r=19755
Reverted: http://code.google.com/p/dart/source/detail?r=19756

Review URL: https://codereview.chromium.org//12212016
------------------------------------------------------------------------
r20981 | regis@google.com | 2013-04-06 01:46:53 +0900 (土, 06  4月 2013) | 2 lines

Support UseDartApi vm test on ARM.
Review URL: https://codereview.chromium.org//13671004
------------------------------------------------------------------------
r20948 | asiva@google.com | 2013-04-05 14:19:36 +0900 (金, 05  4月 2013) | 7 lines

- Create an all static TypedDataView class which uses implicit field offset
  values to get direct access to the fields of a typed data view object.

- Added a verification step after class finalization to ensure that the
  implicit field offsets in TypedDataView match the actual values in the
  dart instance.
Review URL: https://codereview.chromium.org//13472019
------------------------------------------------------------------------
r20945 | johnmccutchan@google.com | 2013-04-05 08:23:30 +0900 (金, 05  4月 2013) | 3 lines

Flow graph SIMD changes

Review URL: https://codereview.chromium.org//13471013
------------------------------------------------------------------------
r20938 | regis@google.com | 2013-04-05 05:24:49 +0900 (金, 05  4月 2013) | 6 lines

Prevent expensive and unnecessary error formatting in the case a bound check is
postponed to run time (issue 9106).
Eliminate bound check at compile time in some cases.
Fix bound checking of mutually referencing bounds.
Added test.
Review URL: https://codereview.chromium.org//13653005
------------------------------------------------------------------------
r20936 | tball@google.com | 2013-04-05 03:48:24 +0900 (金, 05  4月 2013) | 3 lines

Updated VM stacktrace support (20898) with platform-
independent version of strndup.
Review URL: https://codereview.chromium.org//13587008
------------------------------------------------------------------------
r20935 | srdjan@google.com | 2013-04-05 03:13:00 +0900 (金, 05  4月 2013) | 2 lines

There are still issues with using guarded-cid (tests/compiler/dart2js/cpa_inference_test.dart fails). Disabled via flag until I have figured it out.
Review URL: https://codereview.chromium.org//13455008
------------------------------------------------------------------------
r20932 | zra@google.com | 2013-04-05 02:55:06 +0900 (金, 05  4月 2013) | 2 lines

Implements type checking in MIPS needed for FindCodeObject test.
Review URL: https://codereview.chromium.org//13619008
------------------------------------------------------------------------
r20924 | zra@google.com | 2013-04-05 01:56:00 +0900 (金, 05  4月 2013) | 8 lines

Fixes a bug in MIPS simulator runtime call handling.

Also:
- Fixes a bug in the MIPS SimulatorDebugger that
  causes a crash if the pc is an illegal address
- Reenables the FindCodeObject test on MIPS when
  checking is off
Review URL: https://codereview.chromium.org//13489008
------------------------------------------------------------------------
r20921 | srdjan@google.com | 2013-04-05 01:13:50 +0900 (金, 05  4月 2013) | 3 lines

Fix checked mode crash when clearing reaching type of a value.
When replacing uses we clear type information that is set by a previous type propagation (e.g. by CheckSmi). This led to unexpected behavior: value guarded by a CheckSmi but not Smi. Adding another type propagation pass before code generation.
Review URL: https://codereview.chromium.org//13125002
------------------------------------------------------------------------
r20914 | fschneider@google.com | 2013-04-04 21:42:17 +0900 (木, 04  4月 2013) | 25 lines

Use range analysis to improve constant propagation.

This CL runs a second round of constant propagation after range
analysis to eliminate additional unreachable code. Range analysis
is changed to mark branches as constant if the constraints they
generate are unsatisfiable.

The second pass of constant propagation only visits branches and
removes unreachable code, but does not do full constant propagation.

This proves useful when inlining array view operations where the
following pattern occurs:

for (i = 0; i < length; i++) {
  if (i < 0 || i >= length) {
    throw 123;
  }
  foo();
}

In this example the if-statement will be eliminated completely.

Also, fix a bug in range analyis where constraints of already
constrained values were missing.
Review URL: https://codereview.chromium.org//13469013
------------------------------------------------------------------------
r20902 | srdjan@google.com | 2013-04-04 07:34:02 +0900 (木, 04  4月 2013) | 2 lines

Fix issue 9644: object stores become large pieces of code if heap tracing is turned on; jumps around the the store must not use near labels.
Review URL: https://codereview.chromium.org//13588005
------------------------------------------------------------------------
r20901 | tball@google.com | 2013-04-04 07:29:07 +0900 (木, 04  4月 2013) | 2 lines

Rollback of 20898 (Windows doesn't support strndup)
Review URL: https://codereview.chromium.org//13583008
------------------------------------------------------------------------
r20898 | tball@google.com | 2013-04-04 07:03:06 +0900 (木, 04  4月 2013) | 2 lines

Added VM support for isolate stacktrace status.
Review URL: https://codereview.chromium.org//12842015
------------------------------------------------------------------------
r20895 | zra@google.com | 2013-04-04 06:43:52 +0900 (木, 04  4月 2013) | 5 lines

Implements optional parameter handling in MIPS vm.

- Deocdes ic data and argument descriptor.
- Removes SUB instruction from assembler and disassembler.
Review URL: https://codereview.chromium.org//13474009
------------------------------------------------------------------------
r20890 | regis@google.com | 2013-04-04 05:17:14 +0900 (木, 04  4月 2013) | 11 lines

Support FrameLookup vm test on ARM, requiring among other things:
Maintain a separate top_exit_frame_info for simulated frames and use it to
verify that longjumps are safe.
Make sure unwinding of scopes works in the presence of a simulator.
Support inline allocation of objects.
Support checking of inline cache and instance calls.
Support subtype test cache.
Support (some) equality checks.
Support for (some) conditional branches.
Support for pool pointer setup in stubs.
Review URL: https://codereview.chromium.org//13502002
------------------------------------------------------------------------
r20885 | srdjan@google.com | 2013-04-04 04:42:29 +0900 (木, 04  4月 2013) | 3 lines

Mark CallLeafRuntimeStubCode as failing on Mips/Mac OS X.
Added some cleanups.
Review URL: https://codereview.chromium.org//13575002
------------------------------------------------------------------------
r20871 | srdjan@google.com | 2013-04-04 01:22:24 +0900 (木, 04  4月 2013) | 2 lines

Fix issue 9608: When replacing call with assert assignable, transfer call's deopt_id to the new node.
Review URL: https://codereview.chromium.org//13464021
------------------------------------------------------------------------
r20828 | iposva@google.com | 2013-04-03 07:45:18 +0900 (水, 03  4月 2013) | 2 lines

- Remember objects (not addresses) in the old generation containing new pointers.
Review URL: https://codereview.chromium.org//13406004
------------------------------------------------------------------------
r20816 | hausner@google.com | 2013-04-03 05:41:29 +0900 (水, 03  4月 2013) | 10 lines

Add text location in debugger event

- Adding token number in text location data. Line number will be
  removed when the editor knows how to convert a token number to its
  line number.
- "location" field in stack frames is now optional. If it is not present, there
  is no corresponding textual location for the code location.
- Add location info of "paused" and "interrupted" events.
  Stack trace will go away in these events.
Review URL: https://codereview.chromium.org//13144018
------------------------------------------------------------------------
r20813 | zra@google.com | 2013-04-03 05:24:55 +0900 (水, 03  4月 2013) | 2 lines

Adds native/leaf runtime call stub and redirection on MIPS.
Review URL: https://codereview.chromium.org//13473010
------------------------------------------------------------------------
r20794 | zra@google.com | 2013-04-03 01:40:14 +0900 (水, 03  4月 2013) | 2 lines

Third codegen test passing for simulated MIPS.
Review URL: https://codereview.chromium.org//13407003
------------------------------------------------------------------------
r20783 | srdjan@google.com | 2013-04-03 00:30:14 +0900 (水, 03  4月 2013) | 2 lines

Optimizes 'as' operation in similar way as 'instanceof': collect type feedback in unoptimized mode and try to convert it to a simple classcheck in optimized code.
Review URL: https://codereview.chromium.org//13190014
------------------------------------------------------------------------
r20770 | kasperl@google.com | 2013-04-02 20:51:36 +0900 (火, 02  4月 2013) | 9 lines

Add a new implementation of HashMap that uses JS objects for its (multiple) hash tables.

I'll start refactoring the implementation to make it a bit more
maintainable, but I wanted to get your first impressions.

R=erikcorry@google.com,lrn@google.com,srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//12827018
------------------------------------------------------------------------
r20760 | asiva@google.com | 2013-04-02 09:01:15 +0900 (火, 02  4月 2013) | 2 lines

First step for fixing Issue 9416.
Review URL: https://codereview.chromium.org//13351002
------------------------------------------------------------------------
r20744 | srdjan@google.com | 2013-04-02 04:45:47 +0900 (火, 02  4月 2013) | 2 lines

When optimizing instanceof allow also for raw types (List, ..).
Review URL: https://codereview.chromium.org//13215006
------------------------------------------------------------------------
r20734 | zra@google.com | 2013-04-02 02:02:44 +0900 (火, 02  4月 2013) | 2 lines

First two codegen tests passing on SIMMIPS
Review URL: https://codereview.chromium.org//13228002
------------------------------------------------------------------------
r20701 | asiva@google.com | 2013-03-30 09:07:13 +0900 (土, 30  3月 2013) | 4 lines

- The callback_error_ handle was never being setup.
- Remove some unnecessary DARTSCOPE calls when true/false/null Dart_Handles are
  created.
Review URL: https://codereview.chromium.org//13171004
------------------------------------------------------------------------
r20680 | asiva@google.com | 2013-03-30 03:33:54 +0900 (土, 30  3月 2013) | 2 lines

Remove support for 'dart:scalarlist' in the Dart VM.
Review URL: https://codereview.chromium.org//13139002
------------------------------------------------------------------------
r20623 | regis@google.com | 2013-03-29 02:41:35 +0900 (金, 29  3月 2013) | 2 lines

Support checked mode for VM tests on ARM.
Review URL: https://codereview.chromium.org//12773008
------------------------------------------------------------------------
r20595 | asiva@google.com | 2013-03-28 08:15:27 +0900 (木, 28  3月 2013) | 4 lines

More preparation for removal of dart:scalarlist
- remove the intrinsification of scalarlist functions
- changed class Ids to TypedData class Ids
Review URL: https://codereview.chromium.org//13004017
------------------------------------------------------------------------
r20576 | regis@google.com | 2013-03-28 05:42:02 +0900 (木, 28  3月 2013) | 3 lines

Fix an F-bounded quantification bug (issue 9291).
Add regression test.
Review URL: https://codereview.chromium.org//13119022
------------------------------------------------------------------------
r20565 | vegorov@google.com | 2013-03-28 02:13:58 +0900 (木, 28  3月 2013) | 7 lines

On x64 use 32bit idiv when possible instead of 64bit one.

64bit idiv requires twice as much cycles and has 2-3 times higher latency.

R=srdjan@google.com

Review URL: https://codereview.chromium.org//12545067
------------------------------------------------------------------------
r20563 | johnmccutchan@google.com | 2013-03-28 02:06:41 +0900 (木, 28  3月 2013) | 3 lines

Really remove SIMD types from dart:scalarlist. Fixes build.

Review URL: https://codereview.chromium.org//12907023
------------------------------------------------------------------------
r20559 | johnmccutchan@google.com | 2013-03-27 23:44:15 +0900 (水, 27  3月 2013) | 3 lines

Review changes

Review URL: https://codereview.chromium.org//12982010
------------------------------------------------------------------------
r20550 | srdjan@google.com | 2013-03-27 08:41:27 +0900 (水, 27  3月 2013) | 3 lines

Improve code for !identical(a, b):
"x = (a === b); y = (x !== true)" => "y = (a !== b)".
Review URL: https://codereview.chromium.org//12852007
------------------------------------------------------------------------
r20549 | srdjan@google.com | 2013-03-27 08:04:48 +0900 (水, 27  3月 2013) | 2 lines

Disable optimization in r20548 to make bots green again.
Review URL: https://codereview.chromium.org//12475019
------------------------------------------------------------------------
r20548 | srdjan@google.com | 2013-03-27 07:02:09 +0900 (水, 27  3月 2013) | 2 lines

When attempting to to inline a field getter we use the incoming cid. That type may differ between value()->Type() and value->definition()->Type() if the definition is a load field with a guarded cid. Therefore, if value's type is dynamic we check definition's type as well.
Review URL: https://codereview.chromium.org//12843043
------------------------------------------------------------------------
r20547 | asiva@google.com | 2013-03-27 07:01:31 +0900 (水, 27  3月 2013) | 2 lines

More cleanup in preparation for removing support for dart:scalarlist in the VM.
Review URL: https://codereview.chromium.org//13093012
------------------------------------------------------------------------
r20545 | regis@google.com | 2013-03-27 06:26:03 +0900 (水, 27  3月 2013) | 3 lines

Fix issue 9442.
Add regression test.
Review URL: https://codereview.chromium.org//13046009
------------------------------------------------------------------------
r20539 | zra@google.com | 2013-03-27 05:27:31 +0900 (水, 27  3月 2013) | 2 lines

Simplifies MIPS LoadWordFromPoolOffset
Review URL: https://codereview.chromium.org//13094015
------------------------------------------------------------------------
r20532 | asiva@google.com | 2013-03-27 03:46:44 +0900 (水, 27  3月 2013) | 3 lines

Fix some of the scalarlist tests to use TypedData VM classes.
This is in preparation for removing dart:scalarlist support from the VM.
Review URL: https://codereview.chromium.org//12907010
------------------------------------------------------------------------
r20527 | zra@google.com | 2013-03-27 02:50:43 +0900 (水, 27  3月 2013) | 2 lines

Adds Stop to MIPS. Starts on MIPS call patcher.
Review URL: https://codereview.chromium.org//12703028
------------------------------------------------------------------------
r20526 | johnmccutchan@google.com | 2013-03-27 02:40:25 +0900 (水, 27  3月 2013) | 3 lines

Revert 12534006

Review URL: https://codereview.chromium.org//13093005
------------------------------------------------------------------------
r20522 | johnmccutchan@google.com | 2013-03-27 01:50:26 +0900 (水, 27  3月 2013) | 3 lines

Port SIMD types from dart:scalarlist to dart:typeddata.

Review URL: https://codereview.chromium.org//12534006
------------------------------------------------------------------------
r20500 | regis@google.com | 2013-03-26 08:50:41 +0900 (火, 26  3月 2013) | 3 lines

Change the order of loading ic_data and arguments descriptor prior to an
instance call on ARM.
Review URL: https://codereview.chromium.org//12964007
------------------------------------------------------------------------
r20496 | tball@google.com | 2013-03-26 07:26:37 +0900 (火, 26  3月 2013) | 2 lines

Rollback stacktrace change.
Review URL: https://codereview.chromium.org//12894005
------------------------------------------------------------------------
r20494 | tball@google.com | 2013-03-26 07:16:40 +0900 (火, 26  3月 2013) | 2 lines

Added VM support for isolate stacktrace status.
Review URL: https://codereview.chromium.org//12578022
------------------------------------------------------------------------
r20493 | regis@google.com | 2013-03-26 07:14:17 +0900 (火, 26  3月 2013) | 3 lines

Update function subtyping rules to latest spec (issue 9057).
Update language tests and status files (and filed co19 issue 392).
Review URL: https://codereview.chromium.org//12940010
------------------------------------------------------------------------
r20483 | regis@google.com | 2013-03-26 05:29:47 +0900 (火, 26  3月 2013) | 5 lines

Do not use object pool for VM heap objects on ARM.
Update decoding of call pattern accordingly.
Add missing store barrier when storing object pool in instructions object.
Work with GrowableObjectArray in old heap space when assembling object pool.
Review URL: https://codereview.chromium.org//13070003
------------------------------------------------------------------------
r20482 | asiva@google.com | 2013-03-26 05:18:44 +0900 (火, 26  3月 2013) | 3 lines

Handle TypedDataView objects in Dart_TypedDataAcquireData and
Dart_TypedDataReleaseData
Review URL: https://codereview.chromium.org//12937010
------------------------------------------------------------------------
r20472 | hausner@google.com | 2013-03-26 04:05:21 +0900 (火, 26  3月 2013) | 4 lines

Fix fingerprint mismatches

TBR=iposva
Review URL: https://codereview.chromium.org//13030003
------------------------------------------------------------------------
r20466 | hausner@google.com | 2013-03-26 03:11:08 +0900 (火, 26  3月 2013) | 7 lines

Remove legacy syntax support for library import

Remove legacy syntax for #import, #library and #source
Update test programs
Recalc fingerprints of inlined functions that were apparently
affected by the change of library name from "dart:io" to dart.io.
Review URL: https://codereview.chromium.org//12880023
------------------------------------------------------------------------
r20450 | tball@google.com | 2013-03-26 01:21:58 +0900 (火, 26  3月 2013) | 3 lines

Added EXPECT_TRUE macro, updated debugger unit tests to use it for
API calls that return True.
Review URL: https://codereview.chromium.org//13009004
------------------------------------------------------------------------
r20426 | asiva@google.com | 2013-03-23 08:29:34 +0900 (土, 23  3月 2013) | 3 lines

Fix 9347, always send ExternalTypedData objects as TypedData objects when
sending them across isolates.
Review URL: https://codereview.chromium.org//12594013
------------------------------------------------------------------------
r20423 | asiva@google.com | 2013-03-23 07:43:46 +0900 (土, 23  3月 2013) | 4 lines

- Canonicalize types, type_arguments only when the object is marked as being from the core libraries.
- adjust the snapshot write buffer growth policy
- turn off the heap growth rate adjustments when reading from a snapshot.
Review URL: https://codereview.chromium.org//12578009
------------------------------------------------------------------------
r20419 | zra@google.com | 2013-03-23 06:37:10 +0900 (土, 23  3月 2013) | 2 lines

Adds branch instructions and labels to the MIPS simulator, assembler, disassembler.
Review URL: https://codereview.chromium.org//12634030
------------------------------------------------------------------------
r20400 | vegorov@google.com | 2013-03-23 03:32:17 +0900 (土, 23  3月 2013) | 9 lines

Revert "Compute local variable liveness before translation to SSA."

Attaching environments to branches on strict comparisons breaks pattern matching in the optimizer and regresses performance.

This reverts commit r20377.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//12827027
------------------------------------------------------------------------
r20399 | regis@google.com | 2013-03-23 03:30:35 +0900 (土, 23  3月 2013) | 5 lines

Implement optional parameter handling in ARM vm.
Enable FindCodeObject test on ARM (production mode only for now).
Make sure the object pool is allocated in the old space.
Some more code cleanup on IA32 and X64 (use named constants).
Review URL: https://codereview.chromium.org//12663024
------------------------------------------------------------------------
r20396 | asiva@google.com | 2013-03-23 03:14:37 +0900 (土, 23  3月 2013) | 2 lines

Implement creation of ByteData objects using the Dart API.
Review URL: https://codereview.chromium.org//12938010
------------------------------------------------------------------------
r20394 | zra@google.com | 2013-03-23 03:11:05 +0900 (土, 23  3月 2013) | 13 lines

Drops into Simulator Debugger only in a session that is already interactive.

This change backs out an earlier change to the disassemblers that
made them return false if an instruction couldn't be decoded.
This was used in the simulator debuggers for arm and mips to avoid
executing an instruction that couldn't be decoded.

Instead, now when an unknown instruction is encountered in the simulator,
if the simulator is running interactively, we drop into
the debugger, and otherwise die. We detect that a simulator is
running interactively by setting a flag if we enter the debugger
for a user set break point.
Review URL: https://codereview.chromium.org//12903006
------------------------------------------------------------------------
r20389 | srdjan@google.com | 2013-03-23 02:08:19 +0900 (土, 23  3月 2013) | 2 lines

Allow recursive inlining.
Review URL: https://codereview.chromium.org//12908005
------------------------------------------------------------------------
r20388 | hausner@google.com | 2013-03-23 02:06:42 +0900 (土, 23  3月 2013) | 6 lines

Support initialized mixin fields across scripts

Add capability to set parser to read tokens from different
scripts and token positions. This is used when the initializer
expression of a field resides in a different script.
Review URL: https://codereview.chromium.org//12827007
------------------------------------------------------------------------
r20387 | asiva@google.com | 2013-03-23 02:04:08 +0900 (土, 23  3月 2013) | 2 lines

Limit handle scope to the loop in order to avoid creation of large number of handles when finalizing classes of a large application.
Review URL: https://codereview.chromium.org//12593015
------------------------------------------------------------------------
r20382 | vegorov@google.com | 2013-03-23 00:20:37 +0900 (土, 23  3月 2013) | 6 lines

Update stack map computation to match the way XMM registers are spilled on the slow path.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12995022
------------------------------------------------------------------------
r20380 | whesse@google.com | 2013-03-22 23:53:25 +0900 (金, 22  3月 2013) | 5 lines

dart:io | Fix error in deserializing of native port messages.

BUG=dartbug.com/9369

Review URL: https://codereview.chromium.org//12893013
------------------------------------------------------------------------
r20377 | vegorov@google.com | 2013-03-22 21:33:42 +0900 (金, 22  3月 2013) | 8 lines

Compute local variable liveness before translation to SSA.

Use it to remove dead values from deoptimization environments.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//12638040
------------------------------------------------------------------------
r20374 | vegorov@google.com | 2013-03-22 20:44:38 +0900 (金, 22  3月 2013) | 10 lines

Register allocation tweaks:

- Improve heuristic detecting interference on the back-edge. Any value live_in for the loop header can introduce interfering moves at the back edge due to control flow resolution connecting split siblings. Apply adjustments based on this heuristic at the latest point when allocating a free register;

- Don't allocate a register for constants that have no constrained uses.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12946004
------------------------------------------------------------------------
r20373 | vegorov@google.com | 2013-03-22 20:28:13 +0900 (金, 22  3月 2013) | 5 lines

Use shorter write-barrier filtering sequence when value is known to be non-smi.

R=iposva@google.com

Review URL: https://codereview.chromium.org//12438032
------------------------------------------------------------------------
r20366 | aprelev@gmail.com | 2013-03-22 12:31:14 +0900 (金, 22  3月 2013) | 5 lines

Added support for redirecting factories in dart api.

BUG=dartbug.com/6958

Review URL: https://codereview.chromium.org//12496011
------------------------------------------------------------------------
r20349 | srdjan@google.com | 2013-03-22 05:57:45 +0900 (金, 22  3月 2013) | 2 lines

Fix crash caused by eliminating goto-s in unoptimized code. Added asserts
Review URL: https://codereview.chromium.org//12812026
------------------------------------------------------------------------
r20339 | asiva@google.com | 2013-03-22 03:47:49 +0900 (金, 22  3月 2013) | 2 lines

Write the magic number 0xf5f5dcdc into a script snapshot file and use this to distinguish whether a script snapshot or a regular script file is being passed on the command line (removed the --use-script-snapshot option).
Review URL: https://codereview.chromium.org//12438033
------------------------------------------------------------------------
r20321 | zra@google.com | 2013-03-22 00:50:31 +0900 (金, 22  3月 2013) | 2 lines

Adds MIPS SPECIAL instructions to simulator, assembler, debugger.
Review URL: https://codereview.chromium.org//12837009
------------------------------------------------------------------------
r20315 | fschneider@google.com | 2013-03-21 22:34:11 +0900 (木, 21  3月 2013) | 4 lines

Fail with fatal error instead of segmentation fault if virtual memory allocation fails.

BUG=dart:1754, dart:7995
Review URL: https://codereview.chromium.org//12580005
------------------------------------------------------------------------
r20299 | srdjan@google.com | 2013-03-21 08:26:07 +0900 (木, 21  3月 2013) | 2 lines

Add asserts to catch missing deoptimization info early.
Review URL: https://codereview.chromium.org//12806007
------------------------------------------------------------------------
r20287 | johnmccutchan@google.com | 2013-03-21 05:29:00 +0900 (木, 21  3月 2013) | 3 lines

SIMD plumbing

Review URL: https://codereview.chromium.org//12871015
------------------------------------------------------------------------
r20279 | hausner@google.com | 2013-03-21 02:04:28 +0900 (木, 21  3月 2013) | 4 lines

Properly handle cascades in top-level functions

Fix for bug 8530
Review URL: https://codereview.chromium.org//12647012
------------------------------------------------------------------------
r20277 | asiva@google.com | 2013-03-21 00:41:29 +0900 (木, 21  3月 2013) | 2 lines

Remove redundant Dart_LoadEmbeddedScript as it doesn't seem to be used in the VM and hopefully dartium can start using Dart_Script always.
Review URL: https://codereview.chromium.org//12919020
------------------------------------------------------------------------
r20254 | srdjan@google.com | 2013-03-20 07:43:03 +0900 (水, 20  3月 2013) | 2 lines

Improve code (less code, slightly faster) for polymorphic calls, by loading the argument descriptor only once instead of once for each call.
Review URL: https://codereview.chromium.org//12646012
------------------------------------------------------------------------
r20248 | asiva@google.com | 2013-03-20 06:32:35 +0900 (水, 20  3月 2013) | 2 lines

Translate raw strings to regular strings during source code generation. This should hopefully avoid issues with deciding when to escape special characters and when not to.
Review URL: https://codereview.chromium.org//12568007
------------------------------------------------------------------------
r20235 | vegorov@google.com | 2013-03-20 05:15:10 +0900 (水, 20  3月 2013) | 5 lines

Collect type feedback for fields.

BUG=

Review URL: https://codereview.chromium.org//12529008
------------------------------------------------------------------------
r20211 | fschneider@google.com | 2013-03-20 00:54:28 +0900 (水, 20  3月 2013) | 2 lines

A CL that only removes dead code from the VM compiler. 
Review URL: https://codereview.chromium.org//12740003
------------------------------------------------------------------------
r20204 | fschneider@google.com | 2013-03-19 22:29:47 +0900 (火, 19  3月 2013) | 2 lines

Optimize smi multiply by 2 using shl by 1.
Review URL: https://codereview.chromium.org//12703011
------------------------------------------------------------------------
r20200 | fschneider@google.com | 2013-03-19 21:35:57 +0900 (火, 19  3月 2013) | 4 lines

Fix ARM and MIPS build after my last commit.

TBR=vegorov@google.com
Review URL: https://codereview.chromium.org//12735016
------------------------------------------------------------------------
r20198 | fschneider@google.com | 2013-03-19 21:06:23 +0900 (火, 19  3月 2013) | 31 lines

Replace scalarlist optimizations and split external array loads into two IL instructions.

This CL removes optimized access for scalarlist, and only the new TypedData classes
are optimized. I changed the runtime libraries core and math to use typedData
instead of scalarlist (Uint16List is used in StringBuffer, Uint32List by Math.random).

Instead of using LoadIndexed for internal and external arrays,
split external loads into a load of the backing store and a load
of the element.

v3 <- LoadIndexed(v1, index)

becomes

v2 <- LoadUntagged(v1, ExternalTypedData::data_offset)
v3 <- LoadIndexed(v2, index);

For this I introduce two new representations in the IL:

 kUntagged (for values that hold a untagged pointer) and
 
 kNoRepresentation (for instructions accept any input
 representation)

Deoptimization does not need to know about kUntagged
since these values can never occur in the environment.

Also with this change:
* fix COMPILE_ASSERT and use it in one place.
* Cleanup IL printer output of deopt ids.
Review URL: https://codereview.chromium.org//12871010
------------------------------------------------------------------------
r20167 | hausner@google.com | 2013-03-19 02:34:16 +0900 (火, 19  3月 2013) | 10 lines

Revise duplicate interface check

Move check for duplicate interfaces from parser to class finalizer.
The parser only compared interfaces by name, which did not work
properly for qualified (imported) names. Now the check happens in the
class finalizer after types are finalized.

Sadly, our test harness does not appear to know how to handle multitests
that import libraries.
Review URL: https://codereview.chromium.org//12837007
------------------------------------------------------------------------
r20084 | hausner@google.com | 2013-03-16 00:59:24 +0900 (土, 16  3月 2013) | 12 lines

Mixins with Generics

This change adds support for generics to mixins. It's not a particularly elegant
implementation, so I expect to change how it works internally in later checkins.

Also, there is still one aspect of the implementation that is incorrect. In the
case of typedef, the newly introduced name is not yet an alias for  the
mixin application. Instead, the MA is a superclass of the typedef name. That
will need to be fixed in a later checkin. I don't want to make this change
bigger.
 
Review URL: https://codereview.chromium.org//12779008
------------------------------------------------------------------------
r20078 | asiva@google.com | 2013-03-15 22:33:11 +0900 (金, 15  3月 2013) | 2 lines

Add the native intrinsic TypedData_setRange to optimize the setRange call when the destination and source of setRange are of the same typeddata type.
Review URL: https://codereview.chromium.org//12881006
------------------------------------------------------------------------
r20048 | regis@google.com | 2013-03-15 06:33:03 +0900 (金, 15  3月 2013) | 4 lines

Make allocation of Dart parameters and local variables architecture independent.
Enable a couple more vm tests on ARM.
Fix function usage counter access on ARM.
Review URL: https://codereview.chromium.org//12776006
------------------------------------------------------------------------
r20043 | zra@google.com | 2013-03-15 03:56:07 +0900 (金, 15  3月 2013) | 2 lines

Fixes a build warning about a format string.
Review URL: https://codereview.chromium.org//12871004
------------------------------------------------------------------------
r20036 | fschneider@google.com | 2013-03-15 02:13:44 +0900 (金, 15  3月 2013) | 12 lines

Fix bug in optimized byte array views on tranferable backing stores.

This affects views when using scalarlist: The code generated
did not take the receiver class into account correctly,
so it only works for internal byte arrays.

For now, I just disable optimization for external backing stores.

The optimization will be added again for TypedDataViews in a future CL.

TEST=tests/standalone/byte_array_view_optimized_test.dart
Review URL: https://codereview.chromium.org//12779007
------------------------------------------------------------------------
r20025 | asiva@google.com | 2013-03-14 23:12:36 +0900 (木, 14  3月 2013) | 2 lines

Fix source generation for strings that have \$ in them.
Review URL: https://codereview.chromium.org//12605009
------------------------------------------------------------------------
r20024 | fschneider@google.com | 2013-03-14 23:09:38 +0900 (木, 14  3月 2013) | 6 lines

Revert: Support TypedData getters/setters in the optimizer.

Revert https://code.google.com/p/dart/source/detail?r=20018 because this CL was not complete and broken.

TBR=
Review URL: https://codereview.chromium.org//12742006
------------------------------------------------------------------------
r20018 | fschneider@google.com | 2013-03-14 22:07:54 +0900 (木, 14  3月 2013) | 6 lines

Support TypedData getters/setters in the optimizer.

The optimizer now  handles _TypedList which replaces _ByteArrayBase
and functions on TypedList getX/setX where X = Int8, Uint8, Int16, etc. are
optimized.
Review URL: https://codereview.chromium.org//12801003
------------------------------------------------------------------------
r20002 | fschneider@google.com | 2013-03-14 19:39:20 +0900 (木, 14  3月 2013) | 2 lines

Optimize TypedData in the same way as ScalarList.
Review URL: https://codereview.chromium.org//12775009
------------------------------------------------------------------------
r19998 | asiva@google.com | 2013-03-14 19:18:00 +0900 (木, 14  3月 2013) | 2 lines

Remove Dart_GetScriptSource as it is not used anywhere.
Review URL: https://codereview.chromium.org//12732007
------------------------------------------------------------------------
r19996 | asiva@google.com | 2013-03-14 18:47:46 +0900 (木, 14  3月 2013) | 4 lines

Add a command line option to generate source code for a script
(apparently this would be useful for pretty printing the output of
dart2dart)
Review URL: https://codereview.chromium.org//12517005
------------------------------------------------------------------------
r19961 | zra@google.com | 2013-03-14 04:00:53 +0900 (木, 14  3月 2013) | 2 lines

Fix build.
Review URL: https://codereview.chromium.org//12607009
------------------------------------------------------------------------
r19958 | zra@google.com | 2013-03-14 03:43:16 +0900 (木, 14  3月 2013) | 8 lines

Copies Simulator Debugger from ARM to MIPS.

Also includes changes to keep it from aborting unexpectedly.
Among other things, I changed the Disassembler::Disassemble to return false
when the underlying decoder can't decode an instruction. Then,
the MIPS SimulatorDebugger will refuse to step or cont on an instruction
that the Disassembler can't decode.
Review URL: https://codereview.chromium.org//12431016
------------------------------------------------------------------------
r19954 | vegorov@google.com | 2013-03-14 03:28:07 +0900 (木, 14  3月 2013) | 6 lines

Run type propagation after LICM to ensure correct reaching types for hoisted values.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12690004
------------------------------------------------------------------------
r19932 | asiva@google.com | 2013-03-13 23:16:13 +0900 (水, 13  3月 2013) | 2 lines

Added check that the object being stored as a return value in the NativeArguments array is a Dart instance.
Review URL: https://codereview.chromium.org//12744006
------------------------------------------------------------------------
r19918 | fschneider@google.com | 2013-03-13 19:06:34 +0900 (水, 13  3月 2013) | 2 lines

Remove some assertion code in the GC from the release build.
Review URL: https://codereview.chromium.org//12754003
------------------------------------------------------------------------
r19917 | kmillikin@google.com | 2013-03-13 19:06:14 +0900 (水, 13  3月 2013) | 8 lines

Remove virtual functions on class InliningContext.

There is only one implementation of InliningContext, so there is no need for
virtual dispatch.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//12518009
------------------------------------------------------------------------
r19894 | tball@google.com | 2013-03-13 05:42:36 +0900 (水, 13  3月 2013) | 2 lines

Disable stack context when its frame is for optimized code.
Review URL: https://codereview.chromium.org//12408015
------------------------------------------------------------------------
r19864 | fschneider@google.com | 2013-03-12 22:51:32 +0900 (火, 12  3月 2013) | 11 lines

Add a new, separate block entry instruction for catch-blocks.

This is a preparation CL for supporting try-catch in optimized code. Until
now, we used normal TargetEntryInstr for catch blocks.

This meant carrying around handler_types_ and catch_try_index_ for blocks
that are not catch blocks which is not needed.

For now, CatchBlockEntry behaves the same as TargetBlockEntry except for
the additional members needed for catch blocks.
Review URL: https://codereview.chromium.org//12600012
------------------------------------------------------------------------
r19848 | asiva@google.com | 2013-03-12 19:57:48 +0900 (火, 12  3月 2013) | 3 lines

- Use dart:typedata types in the Dart API calls.
- Change the dart/io code to not use dart:scalarlist
Review URL: https://codereview.chromium.org//12730013
------------------------------------------------------------------------
r19827 | regis@google.com | 2013-03-12 08:15:48 +0900 (火, 12  3月 2013) | 2 lines

Decode ic data and arguments descriptor passed in calls on ARM.
Review URL: https://codereview.chromium.org//12518016
------------------------------------------------------------------------
r19819 | zra@google.com | 2013-03-12 05:50:50 +0900 (火, 12  3月 2013) | 7 lines

Adds MIPS instructions to simulator, assembler, disassembler

ins - bitfield insert
ext - bitfield extract
l{b,bu,h,hu,w} - load byte, unsigned byte, etc.
s{b,h,w} - store byte, halfword, word
Review URL: https://codereview.chromium.org//12519007
------------------------------------------------------------------------
r19810 | floitsch@google.com | 2013-03-12 03:54:37 +0900 (火, 12  3月 2013) | 5 lines

ceil/floor/truncate/round return integers.

This CL supercedes https://codereview.chromium.org/11748016/

Review URL: https://codereview.chromium.org//12317107
------------------------------------------------------------------------
r19789 | fschneider@google.com | 2013-03-11 22:03:46 +0900 (月, 11  3月 2013) | 4 lines

Remove unused context-level from LoadLocal/StoreLocal IL instructions.

This is left-over code that is not used anymore.
Review URL: https://codereview.chromium.org//12440015
------------------------------------------------------------------------
r19781 | fschneider@google.com | 2013-03-11 21:16:54 +0900 (月, 11  3月 2013) | 2 lines

Inline ByteArray setters like setUint8 in the optimizer.
Review URL: https://codereview.chromium.org//12378039
------------------------------------------------------------------------
r19756 | floitsch@google.com | 2013-03-09 12:19:07 +0900 (土, 09  3月 2013) | 5 lines

Revert "Remove Expect from core library."

This reverts commit 19755.

Review URL: https://codereview.chromium.org//12743005
------------------------------------------------------------------------
r19755 | floitsch@google.com | 2013-03-09 11:40:37 +0900 (土, 09  3月 2013) | 3 lines

Remove Expect from core library.

Review URL: https://codereview.chromium.org//12212016
------------------------------------------------------------------------
r19752 | asiva@google.com | 2013-03-09 09:05:57 +0900 (土, 09  3月 2013) | 2 lines

Add the allocator intrinsics for dart:typeddata implementation.
Review URL: https://codereview.chromium.org//12547018
------------------------------------------------------------------------
r19730 | zra@google.com | 2013-03-09 06:47:03 +0900 (土, 09  3月 2013) | 2 lines

Adds a few MIPS arithmetic instructions to the simulator, assembler, disassembler
Review URL: https://codereview.chromium.org//12545024
------------------------------------------------------------------------
r19724 | regis@google.com | 2013-03-09 06:16:46 +0900 (土, 09  3月 2013) | 5 lines

Implement leaf runtime call stub on ARM and corresponding call redirection
in ARM simulator.
Implement jump patching on ARM.
Add missing ICache flush calls.
Review URL: https://codereview.chromium.org//12439005
------------------------------------------------------------------------
r19711 | vegorov@google.com | 2013-03-09 04:09:48 +0900 (土, 09  3月 2013) | 20 lines

Add pass to remove empty blocks and recompute fall-through targets.

This allows to cleanup the following code patterns:

1) chains of jumps:

  jxx block_a
...
block_a:
  jmp block_b

2) jumps over jumps

  jxx block_b
block_a:
  jmp block_c
block_b:
  ...

Review URL: https://codereview.chromium.org//12412013
------------------------------------------------------------------------
r19708 | asiva@google.com | 2013-03-09 03:40:05 +0900 (土, 09  3月 2013) | 2 lines

Add the typed data classes to the do not extend list.
Review URL: https://codereview.chromium.org//12528013
------------------------------------------------------------------------
r19704 | regis@google.com | 2013-03-09 03:22:14 +0900 (土, 09  3月 2013) | 3 lines

Implement native call stub on ARM and native call redirection in ARM simulator.
Pass PatchStaticCall test.
Review URL: https://codereview.chromium.org//12629004
------------------------------------------------------------------------
r19690 | floitsch@google.com | 2013-03-08 22:07:18 +0900 (金, 08  3月 2013) | 3 lines

Remove deprecated StringBuffer.add, addAll and addCharCode.

Review URL: https://codereview.chromium.org//12473003
------------------------------------------------------------------------
r19682 | kmillikin@google.com | 2013-03-08 20:14:08 +0900 (金, 08  3月 2013) | 14 lines

Implement a branch optimization pass.

Branch optimization pushes some branches that test the value of a phi
to the predecessor blocks.  This can avoid materializing a boolean
object solely for the purposes of branching on its boolean value.

The optimization is performed after inlinining which creates
opportunities, and before constant propagation, because it exposes
opportunities for unreachable code elimination.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//12540002
------------------------------------------------------------------------
r19679 | lrn@google.com | 2013-03-08 19:21:52 +0900 (金, 08  3月 2013) | 3 lines

Change VM's string-buffer patch to use a Uin16Array as backing buffer.

Review URL: https://codereview.chromium.org//12421002
------------------------------------------------------------------------
r19669 | iposva@google.com | 2013-03-08 16:25:19 +0900 (金, 08  3月 2013) | 2 lines

- Allow the use of branch delay slots.
Review URL: https://codereview.chromium.org//12623002
------------------------------------------------------------------------
r19661 | srdjan@google.com | 2013-03-08 08:09:47 +0900 (金, 08  3月 2013) | 2 lines

The complete fix for issue 8919.
Review URL: https://codereview.chromium.org//12643004
------------------------------------------------------------------------
r19657 | srdjan@google.com | 2013-03-08 06:59:02 +0900 (金, 08  3月 2013) | 2 lines

Fix crash in issue 8919. The test still fails.
Review URL: https://codereview.chromium.org//12628003
------------------------------------------------------------------------
r19656 | asiva@google.com | 2013-03-08 06:50:33 +0900 (金, 08  3月 2013) | 2 lines

Implement 'dart:typeddata' directly in the VM instead of using 'dart:scalarlist'
Review URL: https://codereview.chromium.org//12544015
------------------------------------------------------------------------
r19652 | tball@google.com | 2013-03-08 06:00:22 +0900 (金, 08  3月 2013) | 6 lines

Stop handling VM messages if the isolate has an uncaught (sticky)
exception from the previous message. The Dartium engineers requested
it because they were seeing confusing stack traces.

BUG: 7515
Review URL: https://codereview.chromium.org//12549007
------------------------------------------------------------------------
r19606 | iposva@google.com | 2013-03-07 20:04:27 +0900 (木, 07  3月 2013) | 4 lines

- Add a skeleton MIPS assembler, disassembler and simulator.
- Remove unused fields and methods from ARM simulator.
- Remove unused 5th parameter from Simulator::Call.
Review URL: https://codereview.chromium.org//12541003
------------------------------------------------------------------------
r19575 | regis@google.com | 2013-03-07 04:03:03 +0900 (木, 07  3月 2013) | 2 lines

Fix build.
Review URL: https://codereview.chromium.org//12433011
------------------------------------------------------------------------
r19571 | regis@google.com | 2013-03-07 03:49:38 +0900 (木, 07  3月 2013) | 4 lines

Clean up ARM assembly code loading and storing from/to a large offset.
Make use of vldm and vstm ARM instructions.
Implement ARM stub printing stop message.
Review URL: https://codereview.chromium.org//12481007
------------------------------------------------------------------------
r19519 | regis@google.com | 2013-03-06 07:04:23 +0900 (水, 06  3月 2013) | 7 lines

Complete implementation of bounds checking in the vm, by introducing a vm object
BoundedType that represents a type that could not be checked against an upper
bound at compile time. A BoundedType is verified at run time when used,
typically when it (and/or its bound) gets instantiated.
This fixes issues 7075 and 7625.
Added one test.
Review URL: https://codereview.chromium.org//12473002
------------------------------------------------------------------------
r19511 | zra@google.com | 2013-03-06 04:53:43 +0900 (水, 06  3月 2013) | 2 lines

Adds muls, sdiv, udiv instructions to ARM simulator, assembler, disassembler
Review URL: https://codereview.chromium.org//12459005
------------------------------------------------------------------------
r19439 | zra@google.com | 2013-03-05 10:03:22 +0900 (火, 05  3月 2013) | 8 lines

Adds mrc instruction to arm simulator, assembler, disassembler.
This instruction will be used to query an arm processor to
determine whether it supports the sdiv and udiv instructions.

Also adds a flag --sim_has_int_div to the arm simulator,
which changes the result of the mrc instruction so we can
test both ways.
Review URL: https://codereview.chromium.org//12378080
------------------------------------------------------------------------
r19434 | regis@google.com | 2013-03-05 09:04:32 +0900 (火, 05  3月 2013) | 3 lines

Remove the barely used macro assemblers after merging their contents to the base
assemblers.
Review URL: https://codereview.chromium.org//12398029
------------------------------------------------------------------------
r19429 | hausner@google.com | 2013-03-05 07:28:55 +0900 (火, 05  3月 2013) | 8 lines

Fix for loop variable capturing

We had a bug in the capturing of for loop variables that only manifested
itself if another variable outside the loop was captured as well.

Fix for issue 8207 and 8698.
 
Review URL: https://codereview.chromium.org//12381089
------------------------------------------------------------------------
r19427 | asiva@google.com | 2013-03-05 07:11:45 +0900 (火, 05  3月 2013) | 2 lines

First step towards implementing dart:typeddata library.
Review URL: https://codereview.chromium.org//12313088
------------------------------------------------------------------------
r19422 | srdjan@google.com | 2013-03-05 06:38:35 +0900 (火, 05  3月 2013) | 2 lines

Recognize more list factories. Recognizing list factories (Array, Bytearrays, etc) allows the type and range to be determined. Add byte array factories to the list of recognzied factories and intrinsify them early. If not intrinisified they may be inlined and not recognized. Keeping the recognition at API level is more stable as internal implementation may change.
Review URL: https://codereview.chromium.org//12377082
------------------------------------------------------------------------
r19405 | regis@google.com | 2013-03-05 03:08:38 +0900 (火, 05  3月 2013) | 8 lines

Second codegen test passing on ARM (simulated).
This required support on ARM for:
- compilation of static calls
- patching of static calls
- stub to call into runtime
- redirection support for calls from simulator to host runtime
- stack frame iteration
Review URL: https://codereview.chromium.org//12381034
------------------------------------------------------------------------
r19404 | zra@google.com | 2013-03-05 02:45:38 +0900 (火, 05  3月 2013) | 2 lines

Adds vstm, vldm to ARM simulator, assembler, disassembler
Review URL: https://codereview.chromium.org//12390039
------------------------------------------------------------------------
r19390 | vegorov@google.com | 2013-03-04 23:55:33 +0900 (月, 04  3月 2013) | 9 lines

In LoadOptimizer::EmitPhis check for environment uses of phis.

Previously we checked for input uses only. This caused some phis
to be not emitted if they had only environment uses. The bug was masked
by an elimination pass done before the register allocation.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//12391060
------------------------------------------------------------------------
r19322 | vegorov@google.com | 2013-03-02 01:31:26 +0900 (土, 02  3月 2013) | 21 lines

CompileType::ToNullableCid must check whether type is implemented

This should be done in addition to checking whether type
has subclasses as subtyping relation is defined in terms of interfaces.

Otherwise type propagation infers that result of a mint
operation has a kIntegerCid because IntType has no subclasses.

It is only appropriate to not take subinterfaces into
account when inferring cid of the receiver.

No regression test included because currently it is not possible
to write one: fact that we inferred kIntegerCid for result
of mint operations is not observable and for other IR
instructions nullability prevents us from infering
anything but kDynamicCid.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//12385044
------------------------------------------------------------------------
r19297 | floitsch@google.com | 2013-03-01 21:14:45 +0900 (金, 01  3月 2013) | 3 lines

Remove deprecated IllegalJSRegExpException class.

Review URL: https://codereview.chromium.org//12317130
------------------------------------------------------------------------
r19282 | fschneider@google.com | 2013-03-01 18:03:45 +0900 (金, 01  3月 2013) | 11 lines

Fix null-termination bug in Stacktrace::ToCString.

Under certain conditions Stacktrace::ToCString can return
a not null-terminated string.

This is the case when ToCStringInternal is invoked with a stacktrace
of length 0.

BUG=dart:8850
TEST=tests/language/stacktrace_test.dart
Review URL: https://codereview.chromium.org//12387019
------------------------------------------------------------------------
r19272 | asiva@google.com | 2013-03-01 12:00:52 +0900 (金, 01  3月 2013) | 19 lines

Fix stack frame index numbers for full stack traces

It used to be:
#0      getCurrentStackTrace (file:///tmp/junk.dart:3:5)
#0      func1 (file:///tmp/junk.dart:10:29)
#1      func2 (file:///tmp/junk.dart:14:8)
#2      func3 (file:///tmp/junk.dart:18:8)
#3      func4 (file:///tmp/junk.dart:22:8)
#4      main (file:///tmp/junk.dart:26:8)
(Notice the two #0 frames on top).

Now it will print this as:
#0      getCurrentStackTrace (file:///tmp/junk.dart:3:5)
#1      func1 (file:///tmp/junk.dart:10:29)
#2      func2 (file:///tmp/junk.dart:14:8)
#3      func3 (file:///tmp/junk.dart:18:8)
#4      func4 (file:///tmp/junk.dart:22:8)
#5      main (file:///tmp/junk.dart:26:8)
Review URL: https://codereview.chromium.org//12381030
------------------------------------------------------------------------
r19267 | srdjan@google.com | 2013-03-01 08:31:10 +0900 (金, 01  3月 2013) | 2 lines

Do not inline List factory if a non-constant argument is passed in order to prevent non-optimal code being generated. This is a temporary fix until we have found a better solution (maybe introduce a high-performance ? operator once its definition settles).
Review URL: https://codereview.chromium.org//12377032
------------------------------------------------------------------------
r19258 | hausner@google.com | 2013-03-01 06:17:47 +0900 (金, 01  3月 2013) | 6 lines

Libraries: update VM to current spec

- Exports allowed in script files
- library name is optional
- delete meaningless test, file co19 bugs
Review URL: https://codereview.chromium.org//12382026
------------------------------------------------------------------------
r19256 | srdjan@google.com | 2013-03-01 05:54:15 +0900 (金, 01  3月 2013) | 2 lines

Fix factory name to result cid mapping, run type propagation once more after constant propagation.
Review URL: https://codereview.chromium.org//12374024
------------------------------------------------------------------------
r19255 | tball@google.com | 2013-03-01 05:45:37 +0900 (金, 01  3月 2013) | 4 lines

Fixed debugger stacktrace generation that failed a VM assertion.
Added LocalVarDescriptors.ToCString(), which is just used when
debugging debugger issues, and is not referenced by any public APIs.
Review URL: https://codereview.chromium.org//12380031
------------------------------------------------------------------------
r19232 | fschneider@google.com | 2013-02-28 23:30:37 +0900 (木, 28  2月 2013) | 4 lines

Use enum instead of bool parameter in IL instructions to indicate if a store barrier is needed.

R=vegorov@google.com
Review URL: https://codereview.chromium.org//12377017
------------------------------------------------------------------------
r19206 | kmillikin@google.com | 2013-02-28 17:25:58 +0900 (木, 28  2月 2013) | 13 lines

Remove dead phis as soon as they are discovered.

Previously we removed dead phis late, in the register allocator.  This
change removes them as soon as they are discovered to be dead and packs the
phi array to squeeze out NULLs.  This speeds iteration but doesn't save
space because the phi array is zone-allocated.

The PhiIterator is used everywhere to iterate phis except a few places that
need to know the phi index (e.g., SSA construction, phi elimination).

R=vegorov@google.com

Review URL: https://codereview.chromium.org//12340108
------------------------------------------------------------------------
r19182 | srdjan@google.com | 2013-02-28 07:58:59 +0900 (木, 28  2月 2013) | 2 lines

Intrinsify OnebyteString's hashcode. Next step is to inline it.
Review URL: https://codereview.chromium.org//12335138
------------------------------------------------------------------------
r19179 | asiva@google.com | 2013-02-28 07:47:06 +0900 (木, 28  2月 2013) | 10 lines

Add functionality to get full stack trace when exceptions are thrown.
This should address the issue raised in 7813.

try {
 ...
 ...
} on Object catch(e, s) {
 print(s.fullStackTrace);  // This should print the full stack trace.
}
Review URL: https://codereview.chromium.org//12316116
------------------------------------------------------------------------
r19178 | iposva@google.com | 2013-02-28 07:36:22 +0900 (木, 28  2月 2013) | 2 lines

- Do not use the ? operator in the List factory.
Review URL: https://codereview.chromium.org//12335146
------------------------------------------------------------------------
r19170 | hausner@google.com | 2013-02-28 05:58:07 +0900 (木, 28  2月 2013) | 2 lines

Fix order of mixin application during class finalization
Review URL: https://codereview.chromium.org//12355002
------------------------------------------------------------------------
r19154 | hausner@google.com | 2013-02-28 02:42:24 +0900 (木, 28  2月 2013) | 4 lines

Less confusing names for mixing application classes

Use names of super and mixin class rather than types.
Review URL: https://codereview.chromium.org//12317150
------------------------------------------------------------------------
r19152 | regis@google.com | 2013-02-28 02:13:51 +0900 (木, 28  2月 2013) | 2 lines

Compile and simulate first dart function on arm generated from ast.
Review URL: https://codereview.chromium.org//12335102
------------------------------------------------------------------------
r19143 | johnmccutchan@google.com | 2013-02-28 00:21:12 +0900 (木, 28  2月 2013) | 3 lines

Force WriteByte to be inlined

Review URL: https://codereview.chromium.org//12340086
------------------------------------------------------------------------
r19127 | sgjesse@google.com | 2013-02-27 21:51:21 +0900 (水, 27  2月 2013) | 10 lines

Increase timeout jitter

Test have been failing on Windows a couple of times, e.g
http://build.chromium.org/p/client.dart/builders/vm-win32-release/builds/12880/steps/tests/logs/stdio

R=asiva@google.com

BUG=

Review URL: https://codereview.chromium.org//12330139
------------------------------------------------------------------------
r19112 | lrn@google.com | 2013-02-27 17:45:04 +0900 (水, 27  2月 2013) | 7 lines

Change new List(n) to return fixed length list.
Deprecate List.fixedLength, add List.filled.

Make Iterable.toList and List.from take "growable" argument,
defaulting to false.

Review URL: https://codereview.chromium.org//12328104
------------------------------------------------------------------------
r19102 | zra@google.com | 2013-02-27 09:35:57 +0900 (水, 27  2月 2013) | 2 lines

Implements shifted offset register addressing mode for arm.
Review URL: https://codereview.chromium.org//12321149
------------------------------------------------------------------------
r19101 | regis@google.com | 2013-02-27 09:32:31 +0900 (水, 27  2月 2013) | 3 lines

Fix bad optimization prematurely marking types as instantiated (issue 8710).
Add test.
Review URL: https://codereview.chromium.org//12314132
------------------------------------------------------------------------
r19099 | srdjan@google.com | 2013-02-27 09:03:53 +0900 (水, 27  2月 2013) | 2 lines

Improve performance of Onebytestring allocation and hascode computatio. About 10% improvement on a JSON benhchmark.
Review URL: https://codereview.chromium.org//12315117
------------------------------------------------------------------------
r19097 | hausner@google.com | 2013-02-27 08:39:37 +0900 (水, 27  2月 2013) | 5 lines

Progress in generic mixins

Handle generic mixin applications in class declarations, but
not yet in type aliases.
Review URL: https://codereview.chromium.org//12340085
------------------------------------------------------------------------
r19096 | asiva@google.com | 2013-02-27 08:24:24 +0900 (水, 27  2月 2013) | 2 lines

Resubmit change 19074.
Review URL: https://codereview.chromium.org//12335111
------------------------------------------------------------------------
r19091 | tball@google.com | 2013-02-27 07:34:08 +0900 (水, 27  2月 2013) | 2 lines

Initial prototype of vmstats support, based on Dart VM Stats draft design doc.
Review URL: https://codereview.chromium.org//12221022
------------------------------------------------------------------------
r19084 | asiva@google.com | 2013-02-27 06:41:29 +0900 (水, 27  2月 2013) | 2 lines

Revert change 19074 until the windows build is fixed.
Review URL: https://codereview.chromium.org//12335107
------------------------------------------------------------------------
r19074 | asiva@google.com | 2013-02-27 04:07:40 +0900 (水, 27  2月 2013) | 5 lines

Fix for bug 6767 - Limit stack trace collection for stack overflow exceptions.

Use pre allocated stack object for collecting strack trace in the case of OOM
and stack overflow exceptions.
Review URL: https://codereview.chromium.org//12320103
------------------------------------------------------------------------
r19044 | fschneider@google.com | 2013-02-26 23:38:03 +0900 (火, 26  2月 2013) | 12 lines

Support instruction-level perf event profiling to Dart VM using V8's ll_prof.py.

Usage:

1) perf record -g out/ReleaseIA32/dart --ll-prof example.dart
2) third_party/v8/tools/ll_prof.py --disasm-top=3

This will produce a  per-function and a per-instruction profile with 
disassembly for the top 3 function in the profile.

Currently only available on Linux.
Review URL: https://codereview.chromium.org//12342012
------------------------------------------------------------------------
r19036 | kmillikin@google.com | 2013-02-26 20:50:28 +0900 (火, 26  2月 2013) | 9 lines

Add functions for setting an environment and rebinding a use.

Add functions for setting or clearing an instruction's environment, which
initialize the environment uses.  Add a function for changing a use's
definition.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//12335063
------------------------------------------------------------------------
r19022 | tball@google.com | 2013-02-26 09:12:33 +0900 (火, 26  2月 2013) | 2 lines

Corrected test suppression from previous CL.
Review URL: https://codereview.chromium.org//12317117
------------------------------------------------------------------------
r19020 | tball@google.com | 2013-02-26 08:36:28 +0900 (火, 26  2月 2013) | 3 lines

Disabled context variables in local variable list in the debugger,
so developers can still use it while issue 8593 is being fixed.
Review URL: https://codereview.chromium.org//12320023
------------------------------------------------------------------------
r19019 | iposva@google.com | 2013-02-26 08:31:57 +0900 (火, 26  2月 2013) | 2 lines

- The dart:json library is now using patches.
Review URL: https://codereview.chromium.org//12335082
------------------------------------------------------------------------
r19017 | iposva@google.com | 2013-02-26 08:25:29 +0900 (火, 26  2月 2013) | 3 lines

- Properly load the core libraries as libraries and not as scripts.
  This will honor their imports and library names.
Review URL: https://codereview.chromium.org//12321082
------------------------------------------------------------------------
r19013 | srdjan@google.com | 2013-02-26 08:05:43 +0900 (火, 26  2月 2013) | 2 lines

For Doubl erounding call C-function instead of attempting to inline it. Fixes issue 8760.
Review URL: https://codereview.chromium.org//12334080
------------------------------------------------------------------------
r19001 | johnmccutchan@google.com | 2013-02-26 06:12:50 +0900 (火, 26  2月 2013) | 3 lines

Simd128Float32, Simd128Mask, and Simd128Float32List additions for dart:scalarlist

Review URL: https://codereview.chromium.org//12303013
------------------------------------------------------------------------
r18994 | regis@google.com | 2013-02-26 04:30:29 +0900 (火, 26  2月 2013) | 4 lines

Hook up simulator (if needed) when calling Dart code.
Merge identical InvokeDynamic and InvokeStatic to InvokeFunction.
Remove redundant argument from InvokeClosure.
Review URL: https://codereview.chromium.org//12315087
------------------------------------------------------------------------
r18991 | vegorov@google.com | 2013-02-26 03:48:49 +0900 (火, 26  2月 2013) | 8 lines

null value can be the receiver of methods on Object (e.g. hashCode).

Fix wrong assumption in the type propagator that marked the receiver as never nullable.

R=srdjan@google.com
BUG=dart:8739

Review URL: https://codereview.chromium.org//12330113
------------------------------------------------------------------------
r18966 | vegorov@google.com | 2013-02-25 22:09:17 +0900 (月, 25  2月 2013) | 8 lines

Add machine readable markers around code and flow graph output printed for --print-flow-graph and --disassemble-optimized.

This allows to quickly preparse large IR/code dumps when loading then into the tools instead of parsing them line by line and figuring out where things start and end.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12321111
------------------------------------------------------------------------
r18961 | kmillikin@google.com | 2013-02-25 20:24:08 +0900 (月, 25  2月 2013) | 8 lines

Set instruction/use_index when adding an input to an IL instruction.

When setting an input (including in the constructor) of an IL instruction,
automatically set the input use's instruction and use_index fields.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//12316065
------------------------------------------------------------------------
r18960 | lrn@google.com | 2013-02-25 19:48:09 +0900 (月, 25  2月 2013) | 5 lines

Remove deprecated string features.

Make String.codeUnits return a List.

Review URL: https://codereview.chromium.org//12282038
------------------------------------------------------------------------
r18937 | srdjan@google.com | 2013-02-23 09:58:41 +0900 (土, 23  2月 2013) | 2 lines

Making CompileType a Value object.
Review URL: https://codereview.chromium.org//12315063
------------------------------------------------------------------------
r18933 | sra@google.com | 2013-02-23 09:21:24 +0900 (土, 23  2月 2013) | 5 lines

Revert "Revert "Use browsers JSON.parse for parsing JSON (#3)""

Fix more IE special cases

Review URL: https://codereview.chromium.org//12320072
------------------------------------------------------------------------
r18925 | srdjan@google.com | 2013-02-23 07:43:36 +0900 (土, 23  2月 2013) | 2 lines

Improve performance of String::ToCString for OneByteStrings and parsing of doubles. Leads to significant speedups in json parsing.
Review URL: https://codereview.chromium.org//12317076
------------------------------------------------------------------------
r18911 | sra@google.com | 2013-02-23 04:34:08 +0900 (土, 23  2月 2013) | 3 lines

Revert "Use browsers JSON.parse for parsing JSON (#3)"

Review URL: https://codereview.chromium.org//12313069
------------------------------------------------------------------------
r18908 | sra@google.com | 2013-02-23 04:21:18 +0900 (土, 23  2月 2013) | 7 lines

Use browsers JSON.parse for parsing JSON (#3)

Original CL: https://codereview.chromium.org//12114021

This version modified to take advantage of dart:json being moved to VM.

Review URL: https://codereview.chromium.org//12314055
------------------------------------------------------------------------
r18896 | vegorov@google.com | 2013-02-23 01:39:52 +0900 (土, 23  2月 2013) | 5 lines

Fix arm and mips build.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//12340028
------------------------------------------------------------------------
r18895 | vegorov@google.com | 2013-02-23 01:33:37 +0900 (土, 23  2月 2013) | 14 lines

Ensure that compile time types for comparisons are recomputed once comparison are specialized.

Turn CompileType into a value object instead of zone object. Provide a transparent zone allocated wrapper for CompileType. This simplifies code paths that recompute and update type and reduces number of allocated zone objects.

Split ComputeInitialType into ComputeInitialType and ComputeType.

ComputeType returns values type as a value object. ComputeInitialType returns a pointer and by default it delegates to ComputeType.

This split reflects differences between instructions: majority of them have their own type, but some can return the type of an input which should not be unwrapped and rewrapped again because this will destroy the connection between types.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//12330072
------------------------------------------------------------------------
r18890 | fschneider@google.com | 2013-02-22 22:41:24 +0900 (金, 22  2月 2013) | 5 lines

Insert missing test for unboxed mint support when inlining _setIndexed, getInt32, getUint32.

Int32Array and Uint32Array can only be optimized on ia32 when SSE 4.1
is supported.
Review URL: https://codereview.chromium.org//12328055
------------------------------------------------------------------------
r18865 | asiva@google.com | 2013-02-22 10:24:57 +0900 (金, 22  2月 2013) | 3 lines

Move json, uri, utf and crypto libraries into the VM.
This should ensure that we would not need a patch per embedder for these libraries in case somebody decides to patch these.
Review URL: https://codereview.chromium.org//12318031
------------------------------------------------------------------------
r18859 | srdjan@google.com | 2013-02-22 07:24:42 +0900 (金, 22  2月 2013) | 2 lines

Recognize pattern (a << b) & c with c being a positive Smi and allow left shift to truncate the result.
Review URL: https://codereview.chromium.org//12218181
------------------------------------------------------------------------
r18848 | iposva@google.com | 2013-02-22 03:53:27 +0900 (金, 22  2月 2013) | 3 lines

- Improve the message for NoSuchMethodErrors that are
  determined statically at compile time.
Review URL: https://codereview.chromium.org//12328019
------------------------------------------------------------------------
r18846 | asiva@google.com | 2013-02-22 03:43:44 +0900 (金, 22  2月 2013) | 2 lines

Add typed data interface to Dart API, this only changes the C++ API as dicussed in a previous email. The dart code in the library has not been changed yet.
Review URL: https://codereview.chromium.org//12255018
------------------------------------------------------------------------
r18844 | zra@google.com | 2013-02-22 03:36:34 +0900 (金, 22  2月 2013) | 2 lines

Adds ARM arm assembler tests.
Review URL: https://codereview.chromium.org//12340006
------------------------------------------------------------------------
r18830 | kmillikin@google.com | 2013-02-21 22:56:40 +0900 (木, 21  2月 2013) | 9 lines

Weaken a bogus assertion in use list verification.

It is allowed for a phi to refer to itself as input without violating
properties of SSA form.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12317043
------------------------------------------------------------------------
r18827 | kmillikin@google.com | 2013-02-21 21:57:43 +0900 (木, 21  2月 2013) | 10 lines

Reapply "Change the SSA construction pass to also construct def-use chains."

This reapplies svn commit 18813 with a bug fix.  In the case of an
inlined call whose value is not used, the inliner hase inserted a use
of the return value's definition, which must be removed.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//12334007
------------------------------------------------------------------------
r18826 | kmillikin@google.com | 2013-02-21 21:51:01 +0900 (木, 21  2月 2013) | 10 lines

Fix broken use lists in branch instructions.

BranchInstr::ReplaceWith is used in two different places that have different
expectations about the use lists of their argument.  Split it into two
separate functions.

R=fschneider@google.com
BUG=dart:8657

Review URL: https://codereview.chromium.org//12310040
------------------------------------------------------------------------
r18820 | sgjesse@google.com | 2013-02-21 20:58:11 +0900 (木, 21  2月 2013) | 7 lines

Merge IO v2 branch to bleeding edge

R=ager@google.com, ajohnsen@google.com, whesse@google.com

BUG=

Review URL: https://codereview.chromium.org//12316036
------------------------------------------------------------------------
r18818 | fschneider@google.com | 2013-02-21 20:35:19 +0900 (木, 21  2月 2013) | 2 lines

Inline ByteArray._setIndexed in the flow graph optimizer.
Review URL: https://codereview.chromium.org//12317011
------------------------------------------------------------------------
r18817 | kmillikin@google.com | 2013-02-21 20:06:31 +0900 (木, 21  2月 2013) | 8 lines

Revert "Change the SSA construction pass to also construct def-use chains."

This reverts svn revision 18813 due to dart2js test failures.

TBR=kasperl@google.com
BUG=

Review URL: https://codereview.chromium.org//12313033
------------------------------------------------------------------------
r18813 | kmillikin@google.com | 2013-02-21 19:09:10 +0900 (木, 21  2月 2013) | 8 lines

Change the SSA construction pass to also construct def-use chains.

Also modify constant propagation to preserve def-use chains.  Fix a small
bug in the def-use chain for definitions of inlined function return values.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//12326012
------------------------------------------------------------------------
r18797 | iposva@google.com | 2013-02-21 08:40:32 +0900 (木, 21  2月 2013) | 3 lines

- Disable source_filter.gypi.
- Adjust some more OS dependent files.
Review URL: https://codereview.chromium.org//12313021
------------------------------------------------------------------------
r18793 | vegorov@google.com | 2013-02-21 07:38:22 +0900 (木, 21  2月 2013) | 8 lines

Ignore definitions that do not have SSA index in FlowGraphAllocator::CollectRepresentations.

SSA building does not assign an index to definitions without uses and the rest of the allocator can cope with this treating output produced by such an instruction as temporary value.

R=srdjan@google.com
BUG=dart:8655

Review URL: https://codereview.chromium.org//12315017
------------------------------------------------------------------------
r18786 | iposva@google.com | 2013-02-21 06:17:38 +0900 (木, 21  2月 2013) | 4 lines

Prepare for removal of source_filter.gypi:
- Guard OS-dependent source files with #if TARGET_OS_* in a similar
  fashion to the architecture dependent sources.
Review URL: https://codereview.chromium.org//12282051
------------------------------------------------------------------------
r18777 | vegorov@google.com | 2013-02-21 04:40:26 +0900 (木, 21  2月 2013) | 15 lines

Strengthen type assertions post-dominated by checks during type propagation.

If a type assertion for a value is post-dominated by a class or smi check over the same value then raise the check over the assertion.

This allows to eliminate type assertions in the cases like:

AssertAssignable(x, int)
CheckSmi(x)

Currently post-domination is computed within a single block because post-dominators are not available.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12317013
------------------------------------------------------------------------
r18769 | regis@google.com | 2013-02-21 02:28:35 +0900 (木, 21  2月 2013) | 3 lines

Implement ARM disassembler.
Implement ARM call patcher.
Review URL: https://codereview.chromium.org//12301042
------------------------------------------------------------------------
r18767 | fschneider@google.com | 2013-02-21 02:11:41 +0900 (木, 21  2月 2013) | 5 lines

Remove optional CompileType parameter in the constructor of Value.

It is only needed in one place inside the Value class anyway,
so there is no reason to have it visible to the outside. 
Review URL: https://codereview.chromium.org//12319017
------------------------------------------------------------------------
r18750 | kmillikin@google.com | 2013-02-20 22:01:25 +0900 (水, 20  2月 2013) | 12 lines

Remove two more places where we computed use lists and add verification.

Remove computation of use lists after type propagation which was
unnecessary, and a call per inlined function after ApplyICData which was
also unnecessary.

Add verification code after all compiler passes.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//12317007
------------------------------------------------------------------------
r18710 | hausner@google.com | 2013-02-20 03:26:55 +0900 (水, 20  2月 2013) | 6 lines

Fix static name resolution in mixing code

In mixin code, static names need to be looked up in the mixin class.
OTOH, in patch classes, we need to resolve static names in the
class into with the code is patched. I'm all for simplicity!
Review URL: https://codereview.chromium.org//12308005
------------------------------------------------------------------------
r18692 | fschneider@google.com | 2013-02-20 00:25:47 +0900 (水, 20  2月 2013) | 5 lines

Copy propagated type info when inserting conversion.

Use propagated type info to improve smi-checking before
double operations (CheckEitherNonSmi)
Review URL: https://codereview.chromium.org//12298034
------------------------------------------------------------------------
r18676 | kmillikin@google.com | 2013-02-19 21:09:01 +0900 (火, 19  2月 2013) | 6 lines

Convert some compiler passes to preserve valid def-use chains.

Change the ApplyICData, ApplyClassIds, Canonicalize, and
SelectRepresentations passes to preserve valid use lists.

Review URL: https://codereview.chromium.org//12212093
------------------------------------------------------------------------
r18647 | fschneider@google.com | 2013-02-19 01:52:36 +0900 (火, 19  2月 2013) | 5 lines

Use compile type to improve stores to Int32List and Uint32List on ia32.

If the value stored is a smi, we just untag and store it. There is no
need to unbox it into an XMM register first.
Review URL: https://codereview.chromium.org//12295017
------------------------------------------------------------------------
r18645 | vegorov@google.com | 2013-02-19 00:56:59 +0900 (火, 19  2月 2013) | 6 lines

Fix compilation error: enumeral and non-enumeral type in conditional expression.

R=ager@google.com
BUG=

Review URL: https://codereview.chromium.org//12288030
------------------------------------------------------------------------
r18641 | vegorov@google.com | 2013-02-19 00:45:55 +0900 (火, 19  2月 2013) | 8 lines

Trust declared type of the receiver to compute its initial compile type.

Fix a bug in the ToNullableCid which was leaving cid_ uninitialized when class has subclasses.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12304009
------------------------------------------------------------------------
r18624 | fschneider@google.com | 2013-02-18 22:18:28 +0900 (月, 18  2月 2013) | 7 lines

Optimize _getIndexed on byte arrays.

Until now we only optimize the [] operator, but don't have a
fast path for polymorphic invocations of [] on byte arrays.

I also added additional test coverage for Uint8Clamped list.
Review URL: https://codereview.chromium.org//12282029
------------------------------------------------------------------------
r18604 | regis@google.com | 2013-02-16 08:55:31 +0900 (土, 16  2月 2013) | 5 lines

Add support for object pool that will be used on ARM and MIPS architectures.
Modify code patching infrastructure to accept code object, which is necessary to
get to the object pool containing patchable target addresses.
Modify assembler test infrastructure to provide associated code object.
Review URL: https://codereview.chromium.org//12260026
------------------------------------------------------------------------
r18525 | srdjan@google.com | 2013-02-15 03:10:21 +0900 (金, 15  2月 2013) | 2 lines

Optimize left shift of a constant: compute max value of right that does not overflow into Mint/Bigint.
Review URL: https://codereview.chromium.org//12212175
------------------------------------------------------------------------
r18519 | fschneider@google.com | 2013-02-15 00:59:18 +0900 (金, 15  2月 2013) | 7 lines

Fix bug in optimizing string .length loads.

We're not allowed to hoist a .length load if the corresponding
class-check is not also hoisted out of a loop.

TEST=tests/language/optimized_string_charcodeat_test.dart
Review URL: https://codereview.chromium.org//12256037
------------------------------------------------------------------------
r18517 | fschneider@google.com | 2013-02-14 21:59:51 +0900 (木, 14  2月 2013) | 4 lines

Optimize stores to ExternalUint8Array and ExternalUint8ClampedArray in the optimizer.

This CL adds support for these two array types to the StoreIndexed instruction.
Review URL: https://codereview.chromium.org//12263010
------------------------------------------------------------------------
r18515 | fschneider@google.com | 2013-02-14 20:41:08 +0900 (木, 14  2月 2013) | 6 lines

Use writable register policy to avoid explicit restoring input register after untagging.

This CL produces more compact code if the writable input
register is the last use by avoiding unnecessary re-tagging.
In that case no extra temp generated by the register allocator.
Review URL: https://codereview.chromium.org//12114008
------------------------------------------------------------------------
r18495 | hausner@google.com | 2013-02-14 08:48:18 +0900 (木, 14  2月 2013) | 7 lines

Minor improvement in mixin application

Build list of functions and attach it to mixing application
class on one call. Takes care of a review comment by Siva.

TBR=asiva
Review URL: https://codereview.chromium.org//12261029
------------------------------------------------------------------------
r18493 | johnmccutchan@google.com | 2013-02-14 08:05:17 +0900 (木, 14  2月 2013) | 3 lines

SSE Assembler + Linux build fixes

Review URL: https://codereview.chromium.org//12223115
------------------------------------------------------------------------
r18492 | srdjan@google.com | 2013-02-14 08:00:09 +0900 (木, 14  2月 2013) | 2 lines

The code size does not scale with architecture word size, set code size cutoff limit to 200,000 bytes for all architectures
Review URL: https://codereview.chromium.org//12256028
------------------------------------------------------------------------
r18485 | srdjan@google.com | 2013-02-14 06:52:02 +0900 (木, 14  2月 2013) | 2 lines

Add flag to block optimizations of large implicit getters. Implicit getters have a 0 size in tokens, therefore also check the size of unoptimized code to decide if a function is optimizable. Print more data with --trace-compiler.
Review URL: https://codereview.chromium.org//12263017
------------------------------------------------------------------------
r18479 | hausner@google.com | 2013-02-14 06:08:15 +0900 (木, 14  2月 2013) | 6 lines

First stab at mixins in VM compiler

Things not yet supported:
- Type parameters for super class and mixin class
- super call limitation check
Review URL: https://codereview.chromium.org//12210127
------------------------------------------------------------------------
r18464 | srdjan@google.com | 2013-02-14 03:44:27 +0900 (木, 14  2月 2013) | 2 lines

Fix allocation of array tables (use store barrier if needed, store values directly instead of via stack).
Review URL: https://codereview.chromium.org//12212050
------------------------------------------------------------------------
r18456 | vegorov@google.com | 2013-02-14 02:16:35 +0900 (木, 14  2月 2013) | 11 lines

Reapply r18377 it was reverted due to the unrelated bug it surfaced.

Remove SminessPropagator and FlowGraphTypePropagator and all associated infrastructure and fields.

Replace multiple fields (result_cid_, propagated_cid_, propagated_type_, reaching_cid_) with a single field of type CompileType which represents an element of type analysis lattice and incorporates information about: value's nullability, concrete class id and abstract super type. This ensures that propagated cid and type are always in sync and complement each other

Implement a new FlowGraphPropagator that propagates types over the CompileType-lattice.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//12260008
------------------------------------------------------------------------
r18443 | vegorov@google.com | 2013-02-13 23:14:05 +0900 (水, 13  2月 2013) | 6 lines

When canonicalizing branch on StrictCompare don't fuse comparisons that can deoptimize or serve as pending deoptimization target for representation changes.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//12220150
------------------------------------------------------------------------
r18426 | iposva@google.com | 2013-02-13 10:13:02 +0900 (水, 13  2月 2013) | 2 lines

- Make size of the stack red zone depend on word size. 
Review URL: https://codereview.chromium.org//12207142
------------------------------------------------------------------------
r18412 | srdjan@google.com | 2013-02-13 08:34:12 +0900 (水, 13  2月 2013) | 2 lines

Reduce allocation of ArrayNode-s where a GrowableArray could be used instead.
Review URL: https://codereview.chromium.org//12207137
------------------------------------------------------------------------
r18410 | johnmccutchan@google.com | 2013-02-13 08:14:12 +0900 (水, 13  2月 2013) | 3 lines

Revert SSE assembler changes

Review URL: https://codereview.chromium.org//12212151
------------------------------------------------------------------------
r18406 | johnmccutchan@google.com | 2013-02-13 07:43:48 +0900 (水, 13  2月 2013) | 3 lines

SSE Assembler and Disassembler support

Review URL: https://codereview.chromium.org//12207117
------------------------------------------------------------------------
r18402 | asiva@google.com | 2013-02-13 06:14:05 +0900 (水, 13  2月 2013) | 4 lines

Minor cleanup
- added a field parsed_function to the parser
- remove fields expression_temp_ and saved_current_context_
Review URL: https://codereview.chromium.org//12225141
------------------------------------------------------------------------
r18378 | vegorov@google.com | 2013-02-12 21:36:21 +0900 (火, 12  2月 2013) | 9 lines

Revert "Remove SminessPropagator and FlowGraphTypePropagator and all associated infrastructure and fields."

This reverts commit r12365.

Reason: failure on vm-mac-debug (debug_ia32 standalone/io/file_fuzz_test).

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//12221139
------------------------------------------------------------------------
r18377 | vegorov@google.com | 2013-02-12 21:06:47 +0900 (火, 12  2月 2013) | 9 lines

Remove SminessPropagator and FlowGraphTypePropagator and all associated infrastructure and fields.

Replace multiple fields (result_cid_, propagated_cid_, propagated_type_, reaching_cid_) with a single field of type CompileType which represents an element of type analysis lattice and incorporates information about: value's nullability, concrete class id and abstract super type. This ensures that propagated cid and type are always in sync and complement each other

Implement a new FlowGraphPropagator that propagates types over the CompileType-lattice.

BUG=

Review URL: https://codereview.chromium.org//12221119
------------------------------------------------------------------------
r18367 | asiva@google.com | 2013-02-12 11:39:00 +0900 (火, 12  2月 2013) | 2 lines

Add snapshot size to the VM benchmarks suite.
Review URL: https://codereview.chromium.org//12226068
------------------------------------------------------------------------
r18330 | asiva@google.com | 2013-02-12 04:48:32 +0900 (火, 12  2月 2013) | 3 lines

Provide implementations for
Dart_ScalarListAcquireData & Dart_ScalarListReleaseData
Review URL: https://codereview.chromium.org//12209075
------------------------------------------------------------------------
r18318 | floitsch@google.com | 2013-02-12 02:59:52 +0900 (火, 12  2月 2013) | 6 lines

Allow ambiguous Expect and ExpectException imports.

This patch temporarily allows Expect to come from core and from any other library without (I wanted to make the CL public reporting an error (or warning).
Once everyone (including co19) has migrated I will revert this CL.

Review URL: https://codereview.chromium.org//12211045
------------------------------------------------------------------------
r18287 | iposva@google.com | 2013-02-09 08:27:50 +0900 (土, 09  2月 2013) | 2 lines

- Remove redundant type parameters for internal data.
Review URL: https://codereview.chromium.org//12218082
------------------------------------------------------------------------
r18256 | fschneider@google.com | 2013-02-09 00:47:09 +0900 (土, 09  2月 2013) | 2 lines

Optimize branches in polymorphic equality operations.
Review URL: https://codereview.chromium.org//12209057
------------------------------------------------------------------------
r18235 | asiva@google.com | 2013-02-08 07:43:16 +0900 (金, 08  2月 2013) | 5 lines

Fix for issues 6080 -
- Read the saved context from the entry frame when straddling across C++ frames while iterating over a stack trace in the debugger. This ensures that the correct context is setup in the ActivationFrame structure in these scenarios (instead of the empty context).

- Read the saved context from the caller's frame when iterating over a stack trace in the debugger. The compiler saves the context in the caller frame before invoking closures, we read this saved context when iterating the stack trace.
Review URL: https://codereview.chromium.org//12179020
------------------------------------------------------------------------
r18232 | asiva@google.com | 2013-02-08 05:55:21 +0900 (金, 08  2月 2013) | 2 lines

Add unit tests which reliabily reproduces the error condition reported in Issue 6080 without the need for a specialized and inconsistent private environment.
Review URL: https://codereview.chromium.org//12218046
------------------------------------------------------------------------
r18209 | kmillikin@google.com | 2013-02-07 18:42:36 +0900 (木, 07  2月 2013) | 4 lines

Change CSE, LICM, and range analysis to preserve use lists.

Change the common subexpression elimination, loop-invariant code
motion, and range analysis passes to maintain use lists.
------------------------------------------------------------------------
r18200 | regis@google.com | 2013-02-07 09:55:47 +0900 (木, 07  2月 2013) | 4 lines

Generate first ARM assembler test and execute (simulate) it.
RFC: First draft showing how generated ARM code accesses GC'ed objects and
accesses patched call targets.
Review URL: https://codereview.chromium.org//12224024
------------------------------------------------------------------------
r18183 | fschneider@google.com | 2013-02-07 04:00:50 +0900 (木, 07  2月 2013) | 6 lines

Add optimized loads from ExternalUint8ClampedArrays.

The generated code is exactly the same as for ExternalUint8Array.

TEST=tests/standalone/byte_array_test.dart
Review URL: https://codereview.chromium.org//12225049
------------------------------------------------------------------------
r18175 | fschneider@google.com | 2013-02-07 01:21:51 +0900 (木, 07  2月 2013) | 5 lines

Flip test condition when testing for fixed-length array length load.

This addresses additional comments to my previous CL:
https://codereview.chromium.org/12088108/
Review URL: https://codereview.chromium.org//12208046
------------------------------------------------------------------------
r18173 | fschneider@google.com | 2013-02-07 00:18:57 +0900 (木, 07  2月 2013) | 11 lines

Inline getters of byte array view in the optimized flow graph.

This CL provides inline IL code for the getters _getInt8, _getInt16, etc.
to speed up [] and byte array views.

The code uses the existing LoadIndexed instructions by passing a index
scale factor explicitly: For normal arrays loads, the scale factor is equal
to the element size. For byte array access, the scale factor is always 1.

I'm adding inlined setters in a separate CL.
Review URL: https://codereview.chromium.org//12218008
------------------------------------------------------------------------
r18172 | floitsch@google.com | 2013-02-07 00:11:47 +0900 (木, 07  2月 2013) | 6 lines

Hide collection-dev library.

Committed: https://code.google.com/p/dart/source/detail?r=18167
Reverted: https://code.google.com/p/dart/source/detail?r=18169

Review URL: https://codereview.chromium.org//11938036
------------------------------------------------------------------------
r18169 | floitsch@google.com | 2013-02-06 22:08:29 +0900 (水, 06  2月 2013) | 5 lines

Revert "Hide collection-dev library."

This reverts commit 18167.

Review URL: https://codereview.chromium.org//12221044
------------------------------------------------------------------------
r18167 | floitsch@google.com | 2013-02-06 21:43:07 +0900 (水, 06  2月 2013) | 3 lines

Hide collection-dev library.

Review URL: https://codereview.chromium.org//11938036
------------------------------------------------------------------------
r18162 | asiva@google.com | 2013-02-06 10:45:56 +0900 (水, 06  2月 2013) | 2 lines

Minor cleanup of activation frame creation code. Get the code object while iterating the frames as that is way faster than doing a code lookup later.
Review URL: https://codereview.chromium.org//12225031
------------------------------------------------------------------------
r18159 | iposva@google.com | 2013-02-06 09:29:48 +0900 (水, 06  2月 2013) | 4 lines

- Add handling of private dart:_ libraries.
- Make dart:collection-dev a private library by renaming it to dart:_collection-dev.
- Predefine the URIs of dart: libraries as VM symbols.
Review URL: https://codereview.chromium.org//12220027
------------------------------------------------------------------------
r18158 | hausner@google.com | 2013-02-06 07:43:57 +0900 (水, 06  2月 2013) | 4 lines

Save 0.00001% memory

Release the functions and fields array after patching classes.
Review URL: https://codereview.chromium.org//12207028
------------------------------------------------------------------------
r18157 | asiva@google.com | 2013-02-06 05:42:33 +0900 (水, 06  2月 2013) | 2 lines

Rename the accessor functions saved_context_var and set_saved_context_var to saved_entry_context_var and set_saved_entry_context_var so that it matches the local variable name used. This avoids confusing this with the saved_context_var variable which is used by try statements.
Review URL: https://codereview.chromium.org//12207023
------------------------------------------------------------------------
r18155 | hausner@google.com | 2013-02-06 05:19:32 +0900 (水, 06  2月 2013) | 4 lines

Remember owner class of patch code

This is a step towards using PatchClass for mixins
Review URL: https://codereview.chromium.org//12213020
------------------------------------------------------------------------
r18075 | srdjan@google.com | 2013-02-05 05:29:58 +0900 (火, 05  2月 2013) | 2 lines

Use SAR for divident by a power-of two constant divisor.
Review URL: https://codereview.chromium.org//12091100
------------------------------------------------------------------------
r18055 | kmillikin@google.com | 2013-02-05 02:04:02 +0900 (火, 05  2月 2013) | 9 lines

Add a use list iterator that allows mutation of current.

Add Value::Iterator that supports removing the current use from the
underlying use list, including deleting it or moving it to another use
list.  Use it in range analysis and representation selection.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//12178019
------------------------------------------------------------------------
r18048 | kmillikin@google.com | 2013-02-04 23:01:35 +0900 (月, 04  2月 2013) | 7 lines

Move recording of definition uses from the value to the definition.

It was weird that this method mutated an object that wasn't even
mentioned in the call.  Also, change Definition::ReplaceUsesWith so that
it appends all at once instead of consing each individual use.

Review URL: https://codereview.chromium.org//12091091
------------------------------------------------------------------------
r18033 | regis@google.com | 2013-02-04 14:51:02 +0900 (月, 04  2月 2013) | 4 lines

Resubmit reverted r17962, but, for now, only report error about unfinalized
types if flag --error_on_malformed_type is specified.
Fix one more case of unfinalized signature type.
Review URL: https://codereview.chromium.org//12183014
------------------------------------------------------------------------
r18018 | regis@google.com | 2013-02-02 09:18:37 +0900 (土, 02  2月 2013) | 2 lines

Resubmitting r18013.
Review URL: https://codereview.chromium.org//12084120
------------------------------------------------------------------------
r18015 | regis@google.com | 2013-02-02 08:58:53 +0900 (土, 02  2月 2013) | 2 lines

Revert r18013 failing on Windows.
Review URL: https://codereview.chromium.org//12169002
------------------------------------------------------------------------
r18013 | regis@google.com | 2013-02-02 08:43:33 +0900 (土, 02  2月 2013) | 3 lines

Cleanup api for isolate state checking.
This should avoid the breakage on Windows observed by reverted r17962.
Review URL: https://codereview.chromium.org//12082126
------------------------------------------------------------------------
r17998 | asiva@google.com | 2013-02-02 05:02:30 +0900 (土, 02  2月 2013) | 2 lines

Restore factory names in the intrinsifier list to the way they were (is used in a special way during lookup of private corelib classes).
Review URL: https://codereview.chromium.org//12095110
------------------------------------------------------------------------
r17995 | asiva@google.com | 2013-02-02 04:16:34 +0900 (土, 02  2月 2013) | 4 lines

Instead of setting up the can intrinsify state lazily setup eagerly
in Object::Init() so that the snapshot will carry it and when
running from a snapshot Intrinsifier::CanIntrinsify can be just a bit check.
Review URL: https://codereview.chromium.org//12096105
------------------------------------------------------------------------
r17992 | srdjan@google.com | 2013-02-02 03:44:40 +0900 (土, 02  2月 2013) | 2 lines

Fixed simarm, simmips builds.
Review URL: https://codereview.chromium.org//12161004
------------------------------------------------------------------------
r17991 | srdjan@google.com | 2013-02-02 03:29:38 +0900 (土, 02  2月 2013) | 2 lines

Intrinsify external uint8 clamped array setter and getter.
Review URL: https://codereview.chromium.org//12114041
------------------------------------------------------------------------
r17984 | fschneider@google.com | 2013-02-02 00:10:24 +0900 (土, 02  2月 2013) | 8 lines

Separate the array/string .length load from the bounds check.

This is done in preparation to inline more array and array view
operations.

Since the length is immutable for fixed length arrays, it allows
hoisting the load out of loops.
Review URL: https://codereview.chromium.org//12088108
------------------------------------------------------------------------
r17977 | antonm@google.com | 2013-02-01 21:45:42 +0900 (金, 01  2月 2013) | 5 lines

Revert changes 17962-3 which break Dartium Debug build.

TBR=ricow@google.com

Review URL: https://codereview.chromium.org//12079117
------------------------------------------------------------------------
r17962 | regis@google.com | 2013-02-01 11:40:16 +0900 (金, 01  2月 2013) | 9 lines

Fix class patching involving type parameters: type parameters of patched classes
were not finalized.
Simplify and fix function type alias finalization (remove dummy alias owner).
Make sure no unfinalized types or unresolved classes are written to a snapshot.
Verify that all pending classes are finalized before writing a snapshot.
Make snapshot_test more resilient to finalization errors.
Add missing import to snapshot_test.dart.
Fix typo in growable_array.dart.
Review URL: https://codereview.chromium.org//12123002
------------------------------------------------------------------------
r17958 | asiva@google.com | 2013-02-01 08:56:48 +0900 (金, 01  2月 2013) | 11 lines

First set of changes towards cleaning up the bytearray access APIs
- Added unimplemented versions of Dart_ByteArrayAcquireData and
  Dart_ByteArrayReleaseData
- Added infrastructure to prevent callbacks into an API function that
  allocates a new object on the Dart heap or invokes dart code.
- Removed the old Dart_ByteArrayGet* access functions as it was felt that
  they have become redundant once we provide direct access to the internal
  data pointers.
- Removed DARTSCOPE_NOCHECKS as it seems to be redundant after the change
  to not create explicit stack zones on each Dart API call.
Review URL: https://codereview.chromium.org//12036098
------------------------------------------------------------------------
r17939 | asiva@google.com | 2013-02-01 04:16:47 +0900 (金, 01  2月 2013) | 2 lines

Fix for issue-7157 - set the stack marker in the top API local scope just before entering dart code. It used to be set in Dart_EnterScope and this was causing problems as the marker could potentially end up being lower than the stack pointer at the time of entering Dart code resulting in an destruction of the top scope during 'state->UnwindScopes(...)'
Review URL: https://codereview.chromium.org//12118002
------------------------------------------------------------------------
r17937 | asiva@google.com | 2013-02-01 03:53:21 +0900 (金, 01  2月 2013) | 3 lines

- Change the layout of external typed array objects to avoid the extra indirection when accessing elements in the array.
- Change the Dart API which create these external arrays to account for this change
Review URL: https://codereview.chromium.org//12093071
------------------------------------------------------------------------
r17924 | kmillikin@google.com | 2013-02-01 01:10:15 +0900 (金, 01  2月 2013) | 7 lines

Make use lists into doubly-linked lists.

At the cost of a word per use, we gain constant time removal from use
lists.

BUG=
Review URL: https://codereview.chromium.org//12079096
------------------------------------------------------------------------
r17879 | srdjan@google.com | 2013-01-31 07:57:20 +0900 (木, 31  1月 2013) | 2 lines

Try to have constant on the right hand side for commutative Smi instructions.
Review URL: https://codereview.chromium.org//12096067
------------------------------------------------------------------------
r17859 | srdjan@google.com | 2013-01-31 02:40:28 +0900 (木, 31  1月 2013) | 2 lines

Enable correct optimized double modulo operation. (TODO: enable remainder optimization).
Review URL: https://codereview.chromium.org//12082063
------------------------------------------------------------------------
r17843 | fschneider@google.com | 2013-01-30 23:06:26 +0900 (水, 30  1月 2013) | 11 lines

Fix a crash bug when creating a stack trace from an optimized frame.

In some cases of NoSuchMethodError creating a stack trace with optimized
code did result in an assertion failure.

We don't have deoptimization info at all potentially throwing calls
in optimized code: Namely in the prologue that copies parameters.

BUG=dart:8200
TEST=tests run with --optimization-threshold=5
Review URL: https://codereview.chromium.org//12079071
------------------------------------------------------------------------
r17840 | vegorov@google.com | 2013-01-30 22:11:43 +0900 (水, 30  1月 2013) | 6 lines

When comparing symbols during the range analysis check that both of them are not affected by side-effect.

R=fschneider@google.com
BUG=dart:8197

Review URL: https://codereview.chromium.org//12079074
------------------------------------------------------------------------
r17810 | srdjan@google.com | 2013-01-30 06:16:44 +0900 (水, 30  1月 2013) | 3 lines

On Ia32 optimistically assume that results from int32 and uint32 array loads fit into Smi. Only if the instruction caused deoptimization will we assume mixed Smi/Mint operations. In absence of precise tracking of deoptimization history (location/reason) conservatively assume that a method that was deoptimized once may have been deoptimzied because of uint32/int32 loads.
Significant improvement for MeshDecompression on ia32.
Review URL: https://codereview.chromium.org//12086045
------------------------------------------------------------------------
r17806 | srdjan@google.com | 2013-01-30 05:36:59 +0900 (水, 30  1月 2013) | 2 lines

Fix double modulo bug by temporary disabling calling to C (fix and reenabling it will follow later). Added test.
Review URL: https://codereview.chromium.org//12077052
------------------------------------------------------------------------
r17804 | fschneider@google.com | 2013-01-30 05:12:00 +0900 (水, 30  1月 2013) | 8 lines

Do not add smis to the store buffer when cloning objects.

StoreBufferObjectPointerVisitor did not check for smis. It is
  used from Object::Clone.

Also assert that IsNewObject and IsOldObject is only called
on heap objects.
Review URL: https://codereview.chromium.org//12089049
------------------------------------------------------------------------
r17775 | regis@google.com | 2013-01-30 01:46:10 +0900 (水, 30  1月 2013) | 3 lines

Initial revision of ARM assembler.
Object references and calls, as well as their fixups, are still unimplemented.
Review URL: https://codereview.chromium.org//12090034
------------------------------------------------------------------------
r17773 | srdjan@google.com | 2013-01-30 01:30:56 +0900 (水, 30  1月 2013) | 2 lines

Fix simarm/simmips build.
Review URL: https://codereview.chromium.org//12093046
------------------------------------------------------------------------
r17770 | fschneider@google.com | 2013-01-30 01:02:15 +0900 (水, 30  1月 2013) | 5 lines

Widen the type of constant values handled by constant propagation.

The constant object has to be a smi or an old space heap object: Right
now, we can only embed old space objects into code.
Review URL: https://codereview.chromium.org//12096039
------------------------------------------------------------------------
r17755 | fschneider@google.com | 2013-01-29 21:38:27 +0900 (火, 29  1月 2013) | 10 lines

Fix source position for stack traces with optimized top function.

Fix decoding of the deoptimization info when constructing a stack trace.

Fix stack trace for checked mode exceptions from optimized code.

BUG=dart:8058
TEST=runtime/tests/vm/dart/optimized_stacktrace_test.dart,
     tests/language/stack_overflow_stacktrace_test.dart
Review URL: https://codereview.chromium.org//12049039
------------------------------------------------------------------------
r17750 | ager@google.com | 2013-01-29 19:15:50 +0900 (火, 29  1月 2013) | 12 lines

Change a couple of API functions to return unhandled exception errors instead of fatal errors on immutable array (by calling into dart code for immutable arrays).

Add regression tests.

We should look at all the API errors returned from the API and
figure out if they should actually be fatal errors or just
exceptions.

R=iposva@google.com,sgjesse@google.com
BUG=

Review URL: https://codereview.chromium.org//12038066
------------------------------------------------------------------------
r17741 | iposva@google.com | 2013-01-29 10:41:57 +0900 (火, 29  1月 2013) | 3 lines

Fix issue 8161:
- Ensure that old generation collections invoke the API callbacks.
Review URL: https://codereview.chromium.org//12091036
------------------------------------------------------------------------
r17739 | asiva@google.com | 2013-01-29 09:53:22 +0900 (火, 29  1月 2013) | 2 lines

Make Type, TypeParameter, TypeArguments and InstantiatedTypeArguments final heap objects.
Review URL: https://codereview.chromium.org//12086031
------------------------------------------------------------------------
r17730 | srdjan@google.com | 2013-01-29 05:46:16 +0900 (火, 29  1月 2013) | 2 lines

Added result cids to some natives (byte array _new).
Review URL: https://codereview.chromium.org//12090010
------------------------------------------------------------------------
r17703 | fschneider@google.com | 2013-01-28 21:02:07 +0900 (月, 28  1月 2013) | 5 lines

Address comments about safely casting handles.

The debug version exactly follows the original code. Release mode
avoid creating a temporary handle.
Review URL: https://codereview.chromium.org//11500004
------------------------------------------------------------------------
r17679 | srdjan@google.com | 2013-01-26 09:41:55 +0900 (土, 26  1月 2013) | 2 lines

Cleanups in intrinsified typed array methods, added Uint16_setIndexed.
Review URL: https://codereview.chromium.org//12050006
------------------------------------------------------------------------
r17677 | srdjan@google.com | 2013-01-26 09:33:20 +0900 (土, 26  1月 2013) | 2 lines

Fix simarm and simmips builds.
Review URL: https://codereview.chromium.org//12094002
------------------------------------------------------------------------
r17645 | srdjan@google.com | 2013-01-26 03:04:34 +0900 (土, 26  1月 2013) | 2 lines

Intrinsify typed array _new natives, thus speeding up allocation of typed arrays.
Review URL: https://codereview.chromium.org//12033090
------------------------------------------------------------------------
r17626 | regis@google.com | 2013-01-25 10:26:00 +0900 (金, 25  1月 2013) | 2 lines

Fix Windows build by removing bad include.
Review URL: https://codereview.chromium.org//12039081
------------------------------------------------------------------------
r17623 | regis@google.com | 2013-01-25 10:16:35 +0900 (金, 25  1月 2013) | 2 lines

Initial revision of ARM simulator and (empty) MIPS simulator.
Review URL: https://codereview.chromium.org//12041056
------------------------------------------------------------------------
r17618 | asiva@google.com | 2013-01-25 08:47:02 +0900 (金, 25  1月 2013) | 2 lines

Adapt operator= and operator^= of Smi to be similar to other internal VM classes.
Review URL: https://codereview.chromium.org//12035087
------------------------------------------------------------------------
r17592 | regis@google.com | 2013-01-25 04:14:55 +0900 (金, 25  1月 2013) | 2 lines

Fix argument test for the captured parameter of an outer function (issue 8007).
Review URL: https://codereview.chromium.org//12036088
------------------------------------------------------------------------
r17579 | regis@google.com | 2013-01-25 01:42:33 +0900 (金, 25  1月 2013) | 2 lines

Cleanup for arm and mips.
Review URL: https://codereview.chromium.org//12016026
------------------------------------------------------------------------
r17569 | kmillikin@google.com | 2013-01-24 23:13:02 +0900 (木, 24  1月 2013) | 9 lines

Move code around in preparation for better inlining.

To inlining calls in a test context, the code to plug the inlined
function graph into the caller graph should be dispatched on the type
of the inlining context.

This change moves code around without otherwise changing it.

Review URL: https://codereview.chromium.org//11953076
------------------------------------------------------------------------
r17549 | floitsch@google.com | 2013-01-24 21:16:37 +0900 (木, 24  1月 2013) | 5 lines

Rename Date to DateTime.

BUG=http://dartbug.com/1424

Review URL: https://codereview.chromium.org//11770004
------------------------------------------------------------------------
r17514 | srdjan@google.com | 2013-01-24 09:06:16 +0900 (木, 24  1月 2013) | 2 lines

Use builtin fmod for double modulo operation.
Review URL: https://codereview.chromium.org//12049056
------------------------------------------------------------------------
r17510 | asiva@google.com | 2013-01-24 07:50:25 +0900 (木, 24  1月 2013) | 2 lines

Use Double::NewCanonical instead of creating a double object and then canonicalizing it.
Review URL: https://codereview.chromium.org//12038051
------------------------------------------------------------------------
r17504 | asiva@google.com | 2013-01-24 07:16:17 +0900 (木, 24  1月 2013) | 2 lines

Fix ARM and MIPs builds (there is no |= operator anymore).
Review URL: https://codereview.chromium.org//12036062
------------------------------------------------------------------------
r17497 | srdjan@google.com | 2013-01-24 06:25:39 +0900 (木, 24  1月 2013) | 2 lines

Rename xxxArray_newTransferable natives to xxxList_newTransferable.
Review URL: https://codereview.chromium.org//12039047
------------------------------------------------------------------------
r17491 | asiva@google.com | 2013-01-24 05:01:31 +0900 (木, 24  1月 2013) | 6 lines

Added macros OBJECT_IMPLEMENTATION and FINAL_OBJECT_IMPLEMENTATION
which have different implementations of 'operator=' and 'operator^='.
In the case of FINAL_OBJECT_IMPLEMENTATION we do not do the vtable setting
in these methods (Note the |= operator functionality is now subsumed into
the new implementation of "operator^=")
Review URL: https://codereview.chromium.org//12052033
------------------------------------------------------------------------
r17489 | srdjan@google.com | 2013-01-24 04:52:26 +0900 (木, 24  1月 2013) | 2 lines

Hide private corelib's method from stack trace in exceptions.
Review URL: https://codereview.chromium.org//12025038
------------------------------------------------------------------------
r17478 | srdjan@google.com | 2013-01-24 02:43:58 +0900 (木, 24  1月 2013) | 2 lines

Fix native lookup. Fix external byte arrays.
Review URL: https://codereview.chromium.org//12033036
------------------------------------------------------------------------
r17438 | asiva@google.com | 2013-01-23 15:13:18 +0900 (水, 23  1月 2013) | 4 lines

Move verification of builtin_vtables into Dart::InitializeIsolate.
This ensures that we don't ASSERT on every handle assignment
(not an issue with release builds but should help the debug builds some).
Review URL: https://codereview.chromium.org//11867015
------------------------------------------------------------------------
r17437 | asiva@google.com | 2013-01-23 14:57:29 +0900 (水, 23  1月 2013) | 3 lines

Allow externalization of canonical strings also. Only restrict canonical strings
in the VM isolate heap.
Review URL: https://codereview.chromium.org//11969029
------------------------------------------------------------------------
r17411 | regis@google.com | 2013-01-23 02:07:35 +0900 (水, 23  1月 2013) | 2 lines

Fix simmips build.
Review URL: https://codereview.chromium.org//11953027
------------------------------------------------------------------------
r17410 | hausner@google.com | 2013-01-23 01:48:00 +0900 (水, 23  1月 2013) | 5 lines

Stop supporting map literals with 1 type argument

To be checked in next week Tue (Jan 22)

Review URL: https://codereview.chromium.org//12021022
------------------------------------------------------------------------
r17408 | srdjan@google.com | 2013-01-23 01:15:54 +0900 (水, 23  1月 2013) | 5 lines

Removed loop depth info tracking at graph build time.
60% compilation speed improvement on pathological case. Improvements for dart2js

The loop depth signal was made unnecessary by the call frequency signal.
Review URL: https://codereview.chromium.org//11975061
------------------------------------------------------------------------
r17393 | vegorov@google.com | 2013-01-22 21:18:31 +0900 (火, 22  1月 2013) | 21 lines

Reland r17365.

Introduce InvokeMathCFunction that can be used to directly invoke mathematical
function provided by runtime.

Use it to unconditionally inline _Double.pow.

Use it to inline floor, ceil, round, truncate, round when SSE4.1 is not
available.

Perform representation selection phase after constant propagation to minimize
boxing.

Add support for enter instruction in the x64 disassembler.

Add test for optimized pow and fix compilation on windows.

R=fschneider@google.com
BUG=dart:8002

Review URL: https://codereview.chromium.org//12038013
------------------------------------------------------------------------
r17383 | kmillikin@google.com | 2013-01-22 19:08:57 +0900 (火, 22  1月 2013) | 5 lines

Allow cascades in initializer lists.

BUG=

Review URL: https://codereview.chromium.org//12036005
------------------------------------------------------------------------
r17379 | podivilov@google.com | 2013-01-22 18:32:38 +0900 (火, 22  1月 2013) | 5 lines

Fix use after free bug in PprofCodeObserver.

TBR=asiva@google.com

Review URL: https://codereview.chromium.org//12026036
------------------------------------------------------------------------
r17378 | podivilov@google.com | 2013-01-22 18:30:41 +0900 (火, 22  1月 2013) | 7 lines

Replace "enter" instruction with "push(ebp); mov(ebp, esp);" sequence.

"enter" instruction is rare and is not supported by valgrind.

R=srdjan@google.com,vegorov@google.com

Review URL: https://codereview.chromium.org//12028002
------------------------------------------------------------------------
r17367 | vegorov@google.com | 2013-01-22 02:16:16 +0900 (火, 22  1月 2013) | 7 lines

Revert "Introduce InvokeMathCFunction that can be used to directly invoke mathematical function provided by runtime."

This reverts commit r17365.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//12042014
------------------------------------------------------------------------
r17365 | vegorov@google.com | 2013-01-22 01:59:37 +0900 (火, 22  1月 2013) | 14 lines

Introduce InvokeMathCFunction that can be used to directly invoke mathematical function provided by runtime.

Use it to unconditionally inline _Double.pow.

Use it to inline floor, ceil, round, truncate, round when SSE4.1 is not available.

Perform representation selection phase after constant propagation to minimize boxing.

Add support for enter instruction in the x64 disassembler.

R=fschneider@google.com
BUG=dart:8002

Review URL: https://codereview.chromium.org//12050002
------------------------------------------------------------------------
r17362 | fschneider@google.com | 2013-01-22 01:19:42 +0900 (火, 22  1月 2013) | 2 lines

Optimize loads and stores to Int32Array and Uint32Array.
Review URL: https://codereview.chromium.org//12041005
------------------------------------------------------------------------
r17360 | fschneider@google.com | 2013-01-22 00:00:43 +0900 (火, 22  1月 2013) | 5 lines

Improve smi code for truncating division(~/) by using two fewer temp registers.

One temp was not used at all, the other can be replaced by a using a writable
input register.
Review URL: https://codereview.chromium.org//12043014
------------------------------------------------------------------------
r17333 | podivilov@google.com | 2013-01-19 23:51:35 +0900 (土, 19  1月 2013) | 7 lines

Use free() to free memory allocated with realloc().

This is to make valgrind happy as it traces new->delete alloc->free correspondence.

R=meh@google.com,asiva@google.com

Review URL: https://codereview.chromium.org//11958037
------------------------------------------------------------------------
r17332 | hausner@google.com | 2013-01-19 09:03:30 +0900 (土, 19  1月 2013) | 6 lines

Add function for one-time stop at function entry

Adds function Dart_OneTimeBreakAtEntry()

Used by debugger clients to stop at the beginning of the program without setting a user-visible breakpoint.
Review URL: https://codereview.chromium.org//11926026
------------------------------------------------------------------------
r17330 | regis@google.com | 2013-01-19 08:46:48 +0900 (土, 19  1月 2013) | 2 lines

Add test skeletons for arm and mips.
Review URL: https://codereview.chromium.org//11929037
------------------------------------------------------------------------
r17321 | regis@google.com | 2013-01-19 06:46:58 +0900 (土, 19  1月 2013) | 2 lines

Mofify vm code base so that it can be built for --arch=simmips.
Review URL: https://codereview.chromium.org//12018023
------------------------------------------------------------------------
r17320 | regis@google.com | 2013-01-19 06:44:58 +0900 (土, 19  1月 2013) | 2 lines

Add mips skeleton sources.
Review URL: https://codereview.chromium.org//11926022
------------------------------------------------------------------------
r17310 | srdjan@google.com | 2013-01-19 05:43:33 +0900 (土, 19  1月 2013) | 2 lines

Some more ^= to |= 
Review URL: https://codereview.chromium.org//12017020
------------------------------------------------------------------------
r17309 | srdjan@google.com | 2013-01-19 04:53:17 +0900 (土, 19  1月 2013) | 2 lines

Transition ^= to |= 
Review URL: https://codereview.chromium.org//11867022
------------------------------------------------------------------------
r17308 | srdjan@google.com | 2013-01-19 04:43:19 +0900 (土, 19  1月 2013) | 2 lines

More ^=  to |= 
Review URL: https://codereview.chromium.org//11941021
------------------------------------------------------------------------
r17302 | asiva@google.com | 2013-01-19 03:47:03 +0900 (土, 19  1月 2013) | 2 lines

Use new |= operator instead of ^= where it is possible to do so.
Review URL: https://codereview.chromium.org//11941005
------------------------------------------------------------------------
r17301 | srdjan@google.com | 2013-01-19 03:37:06 +0900 (土, 19  1月 2013) | 2 lines

Use new |= operator in object.cc .
Review URL: https://codereview.chromium.org//11938023
------------------------------------------------------------------------
r17288 | fschneider@google.com | 2013-01-19 01:29:02 +0900 (土, 19  1月 2013) | 6 lines

Fix bug in optimization in the presence of externalized strings.

The class-id of string objects can be changed via the Dart API. The optimizer
has to disable hoisting class-id checks across calls. For now, loop-invariant
code motion is disabled for checks of string class-ids.
Review URL: https://codereview.chromium.org//11867020
------------------------------------------------------------------------
r17278 | vegorov@google.com | 2013-01-18 23:28:25 +0900 (金, 18  1月 2013) | 6 lines

Optimize double.floor and double.ceil down to roundsd when SSE4.1 is available.

R=fschneider@google.com
BUG=dart:7971

Review URL: https://codereview.chromium.org//11929021
------------------------------------------------------------------------
r17276 | floitsch@google.com | 2013-01-18 23:08:41 +0900 (金, 18  1月 2013) | 3 lines

Move many iterable classes to collection_dev.

Review URL: https://codereview.chromium.org//11931042
------------------------------------------------------------------------
r17274 | fschneider@google.com | 2013-01-18 23:03:40 +0900 (金, 18  1月 2013) | 2 lines

Remove StringCharCodeAtInstr and handle it as part of LoadIndexed.
Review URL: https://codereview.chromium.org//11970038
------------------------------------------------------------------------
r17269 | floitsch@google.com | 2013-01-18 22:07:27 +0900 (金, 18  1月 2013) | 6 lines

Add dart:collection_dev library.

Committed: https://code.google.com/p/dart/source/detail?r=17263
Reverted: https://code.google.com/p/dart/source/detail?r=17265

Review URL: https://codereview.chromium.org//11959012
------------------------------------------------------------------------
r17265 | floitsch@google.com | 2013-01-18 21:34:34 +0900 (金, 18  1月 2013) | 5 lines

Revert "Add dart:collection_dev library."

This reverts commit 17263.

Review URL: https://codereview.chromium.org//12026019
------------------------------------------------------------------------
r17263 | floitsch@google.com | 2013-01-18 21:26:09 +0900 (金, 18  1月 2013) | 3 lines

Add dart:collection_dev library.

Review URL: https://codereview.chromium.org//11959012
------------------------------------------------------------------------
r17261 | vegorov@google.com | 2013-01-18 20:54:45 +0900 (金, 18  1月 2013) | 7 lines

When requested to extract a method M from class C inject a method extractor (consisting of a single AST node CreateClosure) as a getter get:M into C.

This allows to cache and optimize method extraction requests as normal method invocations and at hot method extraction sites that significantly decreases overhead of method extraction which previously required two trips into runtime system and was not cached at all.

BUG=

Review URL: https://codereview.chromium.org//11642003
------------------------------------------------------------------------
r17246 | regis@google.com | 2013-01-18 09:34:20 +0900 (金, 18  1月 2013) | 2 lines

Fix vm code base so that it can be built for --arch=simarm (no snapshot yet).
Review URL: https://codereview.chromium.org//11956004
------------------------------------------------------------------------
r17245 | hausner@google.com | 2013-01-18 09:24:19 +0900 (金, 18  1月 2013) | 6 lines

Remove support for old style function literals

Fix issue 6709.

TBR=iposva
Review URL: https://codereview.chromium.org//11996003
------------------------------------------------------------------------
r17244 | asiva@google.com | 2013-01-18 09:24:06 +0900 (金, 18  1月 2013) | 12 lines

Add a new operator |= which does a simple assignment of the raw pointer into
a handle without any vtable settings. In debug mode there are the usual checks
to ensure that the vtable in the handle matches the expected vtable value
based on the dynamic type of the object.

It is useful in loopy code as follows:
  const Array& funcs = class.functions();
  Function func = Function::Handle();
  for (int i = 0; i < 100000000; i++) {
    func |= funcs.At(i);
  }
Review URL: https://codereview.chromium.org//11979003
------------------------------------------------------------------------
r17243 | hausner@google.com | 2013-01-18 09:01:14 +0900 (金, 18  1月 2013) | 4 lines

Remove support for legacy abstract declarations

Make keyword 'abstract' illegal in front of class member declarations.
Review URL: https://codereview.chromium.org//12016005
------------------------------------------------------------------------
r17235 | tball@google.com | 2013-01-18 06:06:59 +0900 (金, 18  1月 2013) | 2 lines

Added heap capacity and used space status methods, for use by status tools.
Review URL: https://codereview.chromium.org//11973035
------------------------------------------------------------------------
r17232 | srdjan@google.com | 2013-01-18 04:27:00 +0900 (金, 18  1月 2013) | 2 lines

Improve function lookup speed by working with raw objects only.
Review URL: https://codereview.chromium.org//11970043
------------------------------------------------------------------------
r17208 | fschneider@google.com | 2013-01-17 23:08:04 +0900 (木, 17  1月 2013) | 10 lines

Fix a bug with store-to-load forwarding for typed arrays.

Stores to typed arrays implicitly convert the value stored.
This CL disables store-to-load forwarding for these array stores.

Normal arrays and float64 arrays can be still optimized as before (no
conversion occurs on store)

TEST=tests/language/int_array_load_elimination_test.dart
Review URL: https://codereview.chromium.org//11962036
------------------------------------------------------------------------
r17205 | podivilov@google.com | 2013-01-17 22:43:44 +0900 (木, 17  1月 2013) | 8 lines

Fix use of uninitialized memory in debug assert.

deopt_id() -> ASSERT(CanDeoptimize()) -> operands_class_id_ which is not initialized at this point.

R=fschneider@google.com,vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//11961041
------------------------------------------------------------------------
r17190 | fschneider@google.com | 2013-01-17 19:43:46 +0900 (木, 17  1月 2013) | 8 lines

Optimized loads/stores for scalar list: Uint8Clamped, Int8, Int16, Uint16.

This CL adds optimized stores for Uint8ClampedList, and
loads+stores for Int8List, Int16List and Uint16List.


TEST=tests/standalone/byte_array_test.dart, tests/standalone/int_array_test.dart
Review URL: https://codereview.chromium.org//11967012
------------------------------------------------------------------------
r17179 | hausner@google.com | 2013-01-17 10:10:42 +0900 (木, 17  1月 2013) | 5 lines

Simplify exception handler table

Sort entries and drop the try_index field. This simplifies lookup
of exception handlers when walking the traces on exceptions.
Review URL: https://codereview.chromium.org//11970024
------------------------------------------------------------------------
r17178 | srdjan@google.com | 2013-01-17 09:42:03 +0900 (木, 17  1月 2013) | 2 lines

Lookup functions by name that contains the private key, except for dart_api which allows ignoring the private key.
Review URL: https://codereview.chromium.org//11968022
------------------------------------------------------------------------
r17167 | hausner@google.com | 2013-01-17 07:16:09 +0900 (木, 17  1月 2013) | 4 lines

Check whether exceptions are caught

The debugger can now determine whether an exemption will be caught or not.
Review URL: https://codereview.chromium.org//11946020
------------------------------------------------------------------------
r17165 | asiva@google.com | 2013-01-17 06:45:49 +0900 (木, 17  1月 2013) | 5 lines

Fix for 7941
- mark unused space in an object whose type has been transformed as
  Int8Array instead of Array. This ensure that GC does not traverse
  the contents of the unused space.
Review URL: https://codereview.chromium.org//11968020
------------------------------------------------------------------------
r17135 | fschneider@google.com | 2013-01-16 21:12:21 +0900 (水, 16  1月 2013) | 12 lines

Fix bug in the x64 assembler's  movw instruction.

The order of prefixes was wrong.  The operand size prefix (0x66)
must occur before the REX prefix.  From the instruction set reference:

[...]the REX prefix byte must immediately precede the opcode byte or
the escape opcode byte (0FH). [...]

Also, make movw(reg, addr) unavailable, consistent with ia32.

TEST=runtime/vm/assembler_x64_test.cc
Review URL: https://codereview.chromium.org//11961013
------------------------------------------------------------------------
r17100 | hausner@google.com | 2013-01-16 07:43:00 +0900 (水, 16  1月 2013) | 7 lines

Collect debugging info for catch clauses

Collect info about try-statement nesting, and a list of
handled types in each catch clause. This will be used by
the debugger to determine whether an exception is handled
by any handler on the stack.
Review URL: https://codereview.chromium.org//11883023
------------------------------------------------------------------------
r17085 | srdjan@google.com | 2013-01-16 04:08:55 +0900 (水, 16  1月 2013) | 2 lines

Improve compilation speed on a pathological case > 2x (7 sec -> 2.7 sec) by improving local lookups.
Review URL: https://codereview.chromium.org//11893002
------------------------------------------------------------------------
r17084 | fschneider@google.com | 2013-01-16 02:11:11 +0900 (水, 16  1月 2013) | 2 lines

Fix crash bug when deoptimizing from an optimized sqrt operation.
Review URL: https://codereview.chromium.org//11880048
------------------------------------------------------------------------
r17079 | vegorov@google.com | 2013-01-16 00:51:24 +0900 (水, 16  1月 2013) | 12 lines

Set statically known ResultCid for AllocateObject.

Specialize PolymorphicInstanceCall in ApplyClassIds if receiver cid
was infered: filter out all but one target for attached ICData and drop
checks.

Canonicalize away CheckClass if reciever cid matches at least one in the list of checked.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11886044
------------------------------------------------------------------------
r17040 | srdjan@google.com | 2013-01-15 10:14:17 +0900 (火, 15  1月 2013) | 2 lines

Add Dart class for _ExternalUint8ClampedArray and API to allocate it.
Review URL: https://codereview.chromium.org//11881031
------------------------------------------------------------------------
r17036 | iposva@google.com | 2013-01-15 08:38:00 +0900 (火, 15  1月 2013) | 2 lines

- Dump Smi objects into the heap profile.
Review URL: https://codereview.chromium.org//11881010
------------------------------------------------------------------------
r17019 | fschneider@google.com | 2013-01-15 02:00:34 +0900 (火, 15  1月 2013) | 8 lines

Immediate index operand for string [] and streamline code for generating array ops.

Replace sizeof(RawArray) with Array::data_offset where it is used to compute the start
of the array data.

Refactor helpers for generating array addressing mode and use them for string []
operations as well.
Review URL: https://codereview.chromium.org//11880022
------------------------------------------------------------------------
r17018 | vegorov@google.com | 2013-01-15 01:05:31 +0900 (火, 15  1月 2013) | 8 lines

When printing constants in the flow graph truncate them at the first new line character.

This makes IR more machine readable.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11876019
------------------------------------------------------------------------
r17016 | vegorov@google.com | 2013-01-14 21:15:11 +0900 (月, 14  1月 2013) | 5 lines

Canonicalize away redundant checks that appear after store-to-load forwarding.

BUG=dart:7513

Review URL: https://codereview.chromium.org//11885017
------------------------------------------------------------------------
r17014 | fschneider@google.com | 2013-01-14 19:27:28 +0900 (月, 14  1月 2013) | 2 lines

Optimize stores to Uint8List.
Review URL: https://codereview.chromium.org//11855007
------------------------------------------------------------------------
r17013 | fschneider@google.com | 2013-01-14 18:51:48 +0900 (月, 14  1月 2013) | 12 lines

Cleanup uses of X::CheckedHandle where X::Cast or X::Handle is sufficient.

The only places where CheckedHandle is appropiate is with arguments to
runtime functions and values from Dart API functions.

For other places in the VM either normal Handle and ^=, or Cast is sufficient.

T::Cast is used when the value is guaranteed to be of type T (and never Object::null()).
Otherwise, the operator^= is used for casting.

Also fix a style issue where a Raw* should be used as return type.
Review URL: https://codereview.chromium.org//11826024
------------------------------------------------------------------------
r17005 | cshapiro@google.com | 2013-01-12 11:43:57 +0900 (土, 12  1月 2013) | 3 lines

Emit fake classes to please the third party HPROF tool infrastructure.

Review URL: https://codereview.chromium.org//11879008
------------------------------------------------------------------------
r17003 | cshapiro@google.com | 2013-01-12 09:44:46 +0900 (土, 12  1月 2013) | 3 lines

Use a named constant for the object id size when writing out the header.

Review URL: https://codereview.chromium.org//11823002
------------------------------------------------------------------------
r17002 | srdjan@google.com | 2013-01-12 09:44:16 +0900 (土, 12  1月 2013) | 2 lines

Fix printing of deoptimized function.
Review URL: https://codereview.chromium.org//11886008
------------------------------------------------------------------------
r17001 | asiva@google.com | 2013-01-12 09:33:16 +0900 (土, 12  1月 2013) | 3 lines

Added code to trace zone and handles creation/deletion under flags
--trace-zone and trace-handles
Review URL: https://codereview.chromium.org//11879005
------------------------------------------------------------------------
r17000 | asiva@google.com | 2013-01-12 09:24:28 +0900 (土, 12  1月 2013) | 6 lines

Fix for issue 7757
- Iterate and collect all the inlined functions in an optimized dart frame
  into the stack frame when throwing an exception.
- Added a OptimizedDartFrameIterator class which iterates over all the inlined
  functions of a single optimized dart frame.
Review URL: https://codereview.chromium.org//11833025
------------------------------------------------------------------------
r16999 | srdjan@google.com | 2013-01-12 08:39:00 +0900 (土, 12  1月 2013) | 3 lines

Fix performance of array literals (e.g. "[1, 2]"). Improves speed of DeltaBlue.
Simplify code to allocate groable object array from an object array.
Review URL: https://codereview.chromium.org//11882005
------------------------------------------------------------------------
r16997 | srdjan@google.com | 2013-01-12 08:15:51 +0900 (土, 12  1月 2013) | 2 lines

Fix printing of the function that cannot be optimized.
Review URL: https://codereview.chromium.org//11878006
------------------------------------------------------------------------
r16996 | iposva@google.com | 2013-01-12 08:05:57 +0900 (土, 12  1月 2013) | 4 lines

- Start adding meta data for fields of VM internal classes.
- Correctly report instance size in bytes.
- At least report field sizes for variable sized objects.
Review URL: https://codereview.chromium.org//11880004
------------------------------------------------------------------------
r16983 | srdjan@google.com | 2013-01-12 05:42:47 +0900 (土, 12  1月 2013) | 2 lines

Inline Doubles truncate and round.
Review URL: https://codereview.chromium.org//11573044
------------------------------------------------------------------------
r16982 | tball@google.com | 2013-01-12 04:17:28 +0900 (土, 12  1月 2013) | 2 lines

Fixed warnings reported by clang compiler.
Review URL: https://codereview.chromium.org//11823067
------------------------------------------------------------------------
r16965 | kmillikin@google.com | 2013-01-11 20:43:48 +0900 (金, 11  1月 2013) | 9 lines

Change the inlining context from an enum to a class.

To support inlining in test contexts, the inlining context needs to have its
dispatched behavior and state.  This change introduces a context class
representing calls inlined for their value or solely for their effects.  The
intermediate array of exits is moved from the graph to the inlining context.
The implementation behavior is otherwise the same as before.

Review URL: https://codereview.chromium.org//11856010
------------------------------------------------------------------------
r16945 | srdjan@google.com | 2013-01-11 09:43:56 +0900 (金, 11  1月 2013) | 2 lines

Increase deoptimization counter threshold to 16, cleanups.
Review URL: https://codereview.chromium.org//11823070
------------------------------------------------------------------------
r16934 | hausner@google.com | 2013-01-11 06:47:09 +0900 (金, 11  1月 2013) | 9 lines

Support for embedded Dart scripts

Add a line and column offset to scripts so that errors and exceptions
in embedded Dart scripts are reported at the proper location.
New API call Dart_LoadEmbeddedScript() that allows to specify
line and column offsets.

Stumbled on and fixed a bug. Script::kind field was not externalized to snapshot.
Review URL: https://codereview.chromium.org//11824067
------------------------------------------------------------------------
r16919 | fschneider@google.com | 2013-01-10 22:18:31 +0900 (木, 10  1月 2013) | 19 lines

Add canonicalize optimization for branches.

Comparisons where the result is only used in a branch on true
can be folded into the branch instruction.

Patterns like this can occur after inlining and constant propagation.
In normal code, we merge branches and comparisons already at graph
building time.

v3 <- (v1 == v2)
Branch if (v3 === true)

is optimized to

Branch if (v1 == v2)

Also: Remove outdated TODOs and rename the canonicalization pass to a 
better name.
Review URL: https://codereview.chromium.org//11819031
------------------------------------------------------------------------
r16897 | srdjan@google.com | 2013-01-10 09:28:57 +0900 (木, 10  1月 2013) | 6 lines

Optimize function at its entry instead of at exit.
The code can be patched if it should not be executed any longer.
The code can be now patched at other location than at entry, the requirement is still that patching code does not overwrite an inlined object.
Intrinsic methods that do not have a fall through cannot be patched.

Review URL: https://codereview.chromium.org//11783066
------------------------------------------------------------------------
r16847 | vegorov@google.com | 2013-01-09 21:27:46 +0900 (水, 09  1月 2013) | 8 lines

Constant propagator should revisit phis when it visits predecessor block.

Phi's value depends both on its inputs and reachability of join's predecessors. Thus it is essential to revisit phi when predecessor becomes reachable.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//11824024
------------------------------------------------------------------------
r16846 | floitsch@google.com | 2013-01-09 20:23:54 +0900 (水, 09  1月 2013) | 3 lines

Enable "part of" for the async library.

Review URL: https://codereview.chromium.org//11820024
------------------------------------------------------------------------
r16815 | hausner@google.com | 2013-01-09 03:57:19 +0900 (水, 09  1月 2013) | 6 lines

Allow optimized code when debugger is active

The debugger allows the VM to optimize code unless there is a breakpoint inside the
function. Whenever a new breakpoint is set (explicitly or implicitly by stepping)
all optimized code is discarded.
Review URL: https://codereview.chromium.org//11780005
------------------------------------------------------------------------
r16806 | fschneider@google.com | 2013-01-09 01:51:57 +0900 (水, 09  1月 2013) | 5 lines

Support immediate and memory operands for PushArgumentInstr in optimized code.

If a value is a constant or stored on the stack this change avoids loading it into a
new register before pushing it.
Review URL: https://codereview.chromium.org//11791051
------------------------------------------------------------------------
r16799 | vegorov@google.com | 2013-01-08 23:27:09 +0900 (火, 08  1月 2013) | 10 lines

Delay canonicalization of 1.0 * N until after representation selection.

This allows to avoid Unbox(Box(N)) pair if N is an unboxed double phi:

var N = 0.0;
while (X) N += 1.0 * N;

BUG=

Review URL: https://codereview.chromium.org//11791047
------------------------------------------------------------------------
r16795 | vegorov@google.com | 2013-01-08 22:32:23 +0900 (火, 08  1月 2013) | 6 lines

Canonicalize away simple arithmetic equivalences.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11773040
------------------------------------------------------------------------
r16782 | cshapiro@google.com | 2013-01-08 11:53:14 +0900 (火, 08  1月 2013) | 6 lines

Fix confusion over on-disk object id sizes during instance serialization.

To avoid confusion in the future the WritePointer methods have been
renamed to the more descriptive WriteObjectId.

Review URL: https://codereview.chromium.org//11778028
------------------------------------------------------------------------
r16774 | srdjan@google.com | 2013-01-08 09:58:58 +0900 (火, 08  1月 2013) | 2 lines

Bug fix and improvements to clamped arrays.
Review URL: https://codereview.chromium.org//11794038
------------------------------------------------------------------------
r16764 | cshapiro@google.com | 2013-01-08 08:16:44 +0900 (火, 08  1月 2013) | 3 lines

Restore the bytes promoted counter.

Review URL: https://codereview.chromium.org//11783015
------------------------------------------------------------------------
r16757 | regis@google.com | 2013-01-08 07:24:11 +0900 (火, 08  1月 2013) | 2 lines

Fix context chaining to prevent memory leak (issue 7681).
Review URL: https://codereview.chromium.org//11806003
------------------------------------------------------------------------
r16756 | srdjan@google.com | 2013-01-08 07:13:47 +0900 (火, 08  1月 2013) | 2 lines

Cleanups.
Review URL: https://codereview.chromium.org//11801023
------------------------------------------------------------------------
r16734 | iposva@google.com | 2013-01-08 03:36:39 +0900 (火, 08  1月 2013) | 2 lines

- Preallocate non-named ArgumentsDescriptors with a small amount of parameters. 
Review URL: https://codereview.chromium.org//11773008
------------------------------------------------------------------------
r16731 | vegorov@google.com | 2013-01-08 02:06:50 +0900 (火, 08  1月 2013) | 8 lines

Do ComputeUseLists after ApplyClassIds.

Applying class ids invalidates use lists.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11791024
------------------------------------------------------------------------
r16717 | vegorov@google.com | 2013-01-08 00:44:23 +0900 (火, 08  1月 2013) | 6 lines

Recognize List.fixedLength factory constructor.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11788018
------------------------------------------------------------------------
r16716 | fschneider@google.com | 2013-01-08 00:43:35 +0900 (火, 08  1月 2013) | 8 lines

Support scalar lists in array bounds check elimination.

This allows to eliminate bounds checks for scalar lists in loops like:

for (var i=0; i < a.length; i++) {
  a[i]
}
Review URL: https://codereview.chromium.org//11665005
------------------------------------------------------------------------
r16711 | vegorov@google.com | 2013-01-08 00:33:36 +0900 (火, 08  1月 2013) | 6 lines

Ensure that LowerBound and UpperBound return overflow marker when overflow occurs.

R=fschneider@google.com
BUG=dart:7617

Review URL: https://codereview.chromium.org//11779017
------------------------------------------------------------------------
r16701 | vegorov@google.com | 2013-01-07 23:51:24 +0900 (月, 07  1月 2013) | 5 lines

Fix Intrinsifier and MethodRecognizer to correctly match private getters and setters.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//11779018
------------------------------------------------------------------------
r16687 | floitsch@google.com | 2013-01-07 20:23:16 +0900 (月, 07  1月 2013) | 3 lines

Big merge from experimental to bleeding edge.

Review URL: https://codereview.chromium.org//11783009
------------------------------------------------------------------------
r16684 | kmillikin@google.com | 2013-01-07 19:03:17 +0900 (月, 07  1月 2013) | 8 lines

Fix incorrect desugaring of cascades.

Make use of the attractive and powerful way that the LoadLocal expression is
really a pair of an arbitrary statement and a local variable load.

BUG=dart:7494

Review URL: https://codereview.chromium.org//11745028
------------------------------------------------------------------------
r16683 | asiva@google.com | 2013-01-07 14:44:20 +0900 (月, 07  1月 2013) | 6 lines

Cleanup handles more efficiently, ensures we don't have to iterate over them
while visiting objects during GC.
- Add handle scopes during class finialization
- Add handle scopes to different stages of the compiler
- Ensure that we iterate only to the top of scoped handles while visiting objects
Review URL: https://codereview.chromium.org//11778013
------------------------------------------------------------------------
r16666 | srdjan@google.com | 2013-01-05 10:07:32 +0900 (土, 05  1月 2013) | 2 lines

Intrinsify Uint8ClampedArray's store and load indexed, inline load indexed.
Review URL: https://codereview.chromium.org//11783006
------------------------------------------------------------------------
r16665 | hausner@google.com | 2013-01-05 09:46:23 +0900 (土, 05  1月 2013) | 5 lines

Handle optimized code blocks in debugger stack trace

Removed an old restriction that debugger activation frames
are expected to be non-optimized code. Fixes bug 5944.
Review URL: https://codereview.chromium.org//11776007
------------------------------------------------------------------------
r16664 | regis@google.com | 2013-01-05 09:45:52 +0900 (土, 05  1月 2013) | 2 lines

Support Null type in Class::TypeTest and simplify Instance::IsInstanceOf.
Review URL: https://codereview.chromium.org//11785006
------------------------------------------------------------------------
r16648 | srdjan@google.com | 2013-01-05 06:29:05 +0900 (土, 05  1月 2013) | 2 lines

Optimize instanceof: if all results are true and tests can be done using class only replace instanceof with a Boolean constant.
Review URL: https://codereview.chromium.org//11746024
------------------------------------------------------------------------
r16645 | asiva@google.com | 2013-01-05 03:38:00 +0900 (土, 05  1月 2013) | 2 lines

Do not emit pointer information for embedded singleton VM Isolate objects while generating code. These embedded objects do not need to be visited during GC.
Review URL: https://codereview.chromium.org//11722026
------------------------------------------------------------------------
r16624 | iposva@google.com | 2013-01-04 11:15:36 +0900 (金, 04  1月 2013) | 2 lines

- Consolidate verbose-gc output to be a single line which can be imported easily into spreadsheets.
Review URL: https://codereview.chromium.org//11734028
------------------------------------------------------------------------
r16623 | asiva@google.com | 2013-01-04 10:52:05 +0900 (金, 04  1月 2013) | 3 lines

- Make Boolean 'true' and 'false' singleton VM isolate objects.
- Change all uses of it
Review URL: https://codereview.chromium.org//11745022
------------------------------------------------------------------------
r16593 | meh@google.com | 2013-01-03 11:11:03 +0900 (木, 03  1月 2013) | 5 lines

Fix pprof VM flag description

BUG=

Review URL: https://codereview.chromium.org//11695007
------------------------------------------------------------------------
r16589 | srdjan@google.com | 2013-01-03 07:22:39 +0900 (木, 03  1月 2013) | 2 lines

In unoptimized code use call for instanceof instead of inlined checks. This allows us to collect type feedback and to reduce the code size of unoptimized code. Next will be work on type tests as well.
Review URL: https://codereview.chromium.org//11694003
------------------------------------------------------------------------
r16588 | iposva@google.com | 2013-01-03 07:09:28 +0900 (木, 03  1月 2013) | 2 lines

- Mark huge methods are not-optimizable.
Review URL: https://codereview.chromium.org//11722006
------------------------------------------------------------------------
r16584 | asiva@google.com | 2013-01-03 04:31:59 +0900 (木, 03  1月 2013) | 4 lines

Convert all symbol accessors to return read only handles so that it is not necessary to create a new handle in the code that uses it.

Added a few more strings to the symbols list.
Review URL: https://codereview.chromium.org//11667012
------------------------------------------------------------------------
r16583 | regis@google.com | 2013-01-03 03:52:28 +0900 (木, 03  1月 2013) | 3 lines

Remove NoSuchMethodErrorImplementation class and use NoSuchMethodError from core
lib instead.
Review URL: https://codereview.chromium.org//11712002
------------------------------------------------------------------------
r16550 | hausner@google.com | 2012-12-29 03:51:58 +0900 (土, 29 12月 2012) | 2 lines

Improve line info accuracy in debugging
Review URL: https://codereview.chromium.org//11696005
------------------------------------------------------------------------
r16541 | srdjan@google.com | 2012-12-29 01:16:49 +0900 (土, 29 12月 2012) | 2 lines

Fix instance of test for classes that implement call.
Review URL: https://codereview.chromium.org//11698002
------------------------------------------------------------------------
r16538 | antonm@google.com | 2012-12-28 19:00:26 +0900 (金, 28 12月 2012) | 7 lines

Fix a warning.

Most probably description needs some love too.

TBR=meh@google.com

Review URL: https://codereview.chromium.org//11692009
------------------------------------------------------------------------
r16530 | tball@google.com | 2012-12-28 08:45:40 +0900 (金, 28 12月 2012) | 2 lines

Implemented class literals in the VM.
Review URL: https://codereview.chromium.org//11633054
------------------------------------------------------------------------
r16528 | iposva@google.com | 2012-12-28 08:25:43 +0900 (金, 28 12月 2012) | 2 lines

- Fix comments and formatting.
Review URL: https://codereview.chromium.org//11646006
------------------------------------------------------------------------
r16519 | srdjan@google.com | 2012-12-28 04:23:09 +0900 (金, 28 12月 2012) | 2 lines

Small code cleanup in instanceof test.
Review URL: https://codereview.chromium.org//11674011
------------------------------------------------------------------------
r16517 | srdjan@google.com | 2012-12-28 03:24:03 +0900 (金, 28 12月 2012) | 2 lines

Sort checks by counts before emitting test-and-call polymorphic instance calls.
Review URL: https://codereview.chromium.org//11602014
------------------------------------------------------------------------
r16464 | hausner@google.com | 2012-12-22 10:09:44 +0900 (土, 22 12月 2012) | 5 lines

Fix bug 5944

Ensure both closureized and regular function are deoptimized when
setting a breakpoint. 
Review URL: https://codereview.chromium.org//11669017
------------------------------------------------------------------------
r16463 | regis@google.com | 2012-12-22 09:40:46 +0900 (土, 22 12月 2012) | 5 lines

Turn compile time errors related to missing getters and setters into invocation
of noSuchMethod or into throwing of NoSuchMethodError according to spec.
Return result of InvocationMirror.invokeOn to caller.
Fix various tests.
Review URL: https://codereview.chromium.org//11669015
------------------------------------------------------------------------
r16462 | meh@google.com | 2012-12-22 09:23:25 +0900 (土, 22 12月 2012) | 12 lines

Clean up CodeObservers

Move CodeObserver registration to the OS abstraction.
Move Pprof logic to the OS abstraction.
Remove pprof from VM tests because now pprof logic is in the VM itself.
Add DISALLOW and AllStatic to Code Observers where appropriate.

Previous review: https://codereview.chromium.org/11572032/

BUG=7321

Review URL: https://codereview.chromium.org//11660011
------------------------------------------------------------------------
r16461 | meh@google.com | 2012-12-22 09:12:35 +0900 (土, 22 12月 2012) | 8 lines

Implement a native identical function in the VM.

Returns true if objects are the same instance.
Adds an identical closure test (disabled for dart2js pending https://chromiumcodereview.appspot.com/11612022/).

BUG=7378

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16460 | meh@google.com | 2012-12-22 08:58:48 +0900 (土, 22 12月 2012) | 7 lines

Revert "Implement a native identical function in the VM."

This reverts commit 88a0845aedeed15106dcfc8c658ebed37e7e85dd.

BUG=

Review URL: https://codereview.chromium.org//11665016
------------------------------------------------------------------------
r16458 | hausner@google.com | 2012-12-22 08:37:26 +0900 (土, 22 12月 2012) | 9 lines

Ignore nested breakpoints

Fixes issue 5945.

When stepping into core library code, it is possible to hit a breakpoint
recursively when the debugger executes dart code to evaluate values.

This change ignores nested breakpoint and exception events.
Review URL: https://codereview.chromium.org//11644085
------------------------------------------------------------------------
r16456 | meh@google.com | 2012-12-22 07:42:21 +0900 (土, 22 12月 2012) | 9 lines

Implement a native identical function in the VM.

Returns true if objects are the same instance.

BUG=7378

Committed: https://code.google.com/p/dart/source/detail?r=16453

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16454 | meh@google.com | 2012-12-22 06:22:43 +0900 (土, 22 12月 2012) | 7 lines

Revert "Implement a native identical function in the VM."

This reverts commit 93e88749af841a1b381db6351a7196d35edd554e.

BUG=

Review URL: https://codereview.chromium.org//11578057
------------------------------------------------------------------------
r16453 | meh@google.com | 2012-12-22 05:34:42 +0900 (土, 22 12月 2012) | 7 lines

Implement a native identical function in the VM.

Returns true if objects are the same instance.

BUG=7378

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16451 | meh@google.com | 2012-12-22 05:08:59 +0900 (土, 22 12月 2012) | 7 lines

Revert "Implement a native identical function in the VM."

This reverts commit c876c29bf4caa810bfc03c8b8908588168d634fe.

BUG=

Review URL: https://codereview.chromium.org//11664012
------------------------------------------------------------------------
r16450 | meh@google.com | 2012-12-22 04:07:55 +0900 (土, 22 12月 2012) | 11 lines

Implement a native identical function in the VM.

Returns true if objects are the same instance.

BUG=7378

Committed: https://code.google.com/p/dart/source/detail?r=16400

Committed: https://code.google.com/p/dart/source/detail?r=16412

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16446 | meh@google.com | 2012-12-22 02:45:36 +0900 (土, 22 12月 2012) | 7 lines

Revert "Clean up CodeObservers"

This reverts commit 43e5ada2fba69c7d5c009b5bf70a234f12941617.

BUG=

Review URL: https://codereview.chromium.org//11644074
------------------------------------------------------------------------
r16445 | meh@google.com | 2012-12-22 02:37:59 +0900 (土, 22 12月 2012) | 11 lines

Clean up CodeObservers

Move CodeObserver registration to the OS abstraction
Move Pprof logic to the OS abstraction
Add DISALLOW and AllStatic to Code Observers where appropriate

BUG=7321

Committed: https://code.google.com/p/dart/source/detail?r=16273

Review URL: https://codereview.chromium.org//11572032
------------------------------------------------------------------------
r16439 | fschneider@google.com | 2012-12-21 20:56:11 +0900 (金, 21 12月 2012) | 2 lines

Cleanup: Don't allocate a frame iterator in the IC miss handler when it's not needed.
Review URL: https://codereview.chromium.org//11607018
------------------------------------------------------------------------
r16420 | kmillikin@google.com | 2012-12-21 17:58:32 +0900 (金, 21 12月 2012) | 6 lines

Simplify basic block discovery -- handle all blcoks uniformly.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11571057
------------------------------------------------------------------------
r16417 | asiva@google.com | 2012-12-21 12:07:10 +0900 (金, 21 12月 2012) | 3 lines

Fix latin1 character predefinition in the symbol table. The code
was doing two calls to FindIndex for every character.
Review URL: https://codereview.chromium.org//11644038
------------------------------------------------------------------------
r16416 | asiva@google.com | 2012-12-21 11:33:05 +0900 (金, 21 12月 2012) | 4 lines

Create read only handles for empty_array and sentinel objects
(trying out a basic framework and will extend it to others once this
works).
Review URL: https://codereview.chromium.org//11648006
------------------------------------------------------------------------
r16414 | meh@google.com | 2012-12-21 10:50:27 +0900 (金, 21 12月 2012) | 7 lines

Revert "Implement a native identical function in the VM."

This reverts commit 0f29c63d64de37beb5f1b927a492687fde6de58a.

BUG=

Review URL: https://codereview.chromium.org//11645060
------------------------------------------------------------------------
r16412 | meh@google.com | 2012-12-21 10:14:32 +0900 (金, 21 12月 2012) | 9 lines

Implement a native identical function in the VM.

Returns true if objects are the same instance.

BUG=7378

Committed: https://code.google.com/p/dart/source/detail?r=16400

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16402 | meh@google.com | 2012-12-21 06:49:54 +0900 (金, 21 12月 2012) | 19 lines

Revert "Implement a native identical function in the VM."

This reverts commit b6265dc1f0711711bcd26413826155f338c49c6d.

Merge remote-tracking branch 'git-svn' into revert-identical

Revert "Implement a native identical function in the VM."

This reverts commit b6265dc1f0711711bcd26413826155f338c49c6d.

Merge remote-tracking branch 'git-svn' into identical

Merge remote-tracking branch 'git-svn' into identical

stage for submission

BUG=

Review URL: https://codereview.chromium.org//11649045
------------------------------------------------------------------------
r16400 | meh@google.com | 2012-12-21 06:35:38 +0900 (金, 21 12月 2012) | 9 lines

Implement a native identical function in the VM.

Takes two objects and returns a boolean.
If the objects are SMIs, then returns true if the values are identical.
If the objects are not SMIs, then returns true if the references are identical.

BUG=7378

Review URL: https://codereview.chromium.org//11613003
------------------------------------------------------------------------
r16394 | ager@google.com | 2012-12-21 05:03:07 +0900 (金, 21 12月 2012) | 5 lines

Reapply "Optimize the message queue for many active ports with few messages."

BUG=

Review URL: https://codereview.chromium.org//11647038
------------------------------------------------------------------------
r16392 | ager@google.com | 2012-12-21 04:40:29 +0900 (金, 21 12月 2012) | 8 lines

Revert "Optimize the message queue for many active ports with few messages."

No failures locally. I'll investigate tomorrow.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//11642048
------------------------------------------------------------------------
r16390 | srdjan@google.com | 2012-12-21 04:29:52 +0900 (金, 21 12月 2012) | 1 line

Mark final fields as immutable.
------------------------------------------------------------------------
r16388 | ager@google.com | 2012-12-21 04:20:44 +0900 (金, 21 12月 2012) | 15 lines

Optimize the message queue for many active ports with few messages.

The current message queue implementation is very inefficient if you are using
many active ports with few messages. This happens when you use 'call' a lot
on ports which is currently done in dart:io.

This patch does not remove messages from the queue when closing a port. Instead
it drops messages for closed ports when it processes them. This dramatically
speeds up dart:io benchmarks that enqueue tons of writes on a file output
stream.

R=iposva@google.com
BUG=http://dartbug.com/6911

Review URL: https://codereview.chromium.org//11440035
------------------------------------------------------------------------
r16360 | fschneider@google.com | 2012-12-20 21:42:11 +0900 (木, 20 12月 2012) | 2 lines

Cache resolution of two static functions frequently used in I/O.
Review URL: https://codereview.chromium.org//11636017
------------------------------------------------------------------------
r16352 | vegorov@google.com | 2012-12-20 09:16:42 +0900 (木, 20 12月 2012) | 6 lines

When replacing one value with another ensure that replacement has SSA index assigned.

R=srdjan@google.com
BUG=dart:7513

Review URL: https://codereview.chromium.org//11638030
------------------------------------------------------------------------
r16343 | regis@google.com | 2012-12-20 06:26:29 +0900 (木, 20 12月 2012) | 2 lines

Simplify method invocation runtime entries.
Review URL: https://codereview.chromium.org//11636025
------------------------------------------------------------------------
r16339 | srdjan@google.com | 2012-12-20 04:47:13 +0900 (木, 20 12月 2012) | 2 lines

Fix test failure issue 7471: Signature classes have different type checking rules, i.e., they have no subclasses but other signature classes may be subtypes (must check signature).
Review URL: https://codereview.chromium.org//11640025
------------------------------------------------------------------------
r16331 | vegorov@google.com | 2012-12-20 02:47:01 +0900 (木, 20 12月 2012) | 12 lines

Set kArrayCid as ResultCid for CreateArray instruction.

Propagate the length of the array returned by CreateArray in constant propagation.

Fold constant RelationalOp instructions.

Together this allows to kill considerable amount of unrechable code emitted from array literal allocation.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11635017
------------------------------------------------------------------------
r16314 | fschneider@google.com | 2012-12-19 20:48:30 +0900 (水, 19 12月 2012) | 2 lines

Make getter for capacity in _GrowableObjectArray private.
Review URL: https://codereview.chromium.org//11606023
------------------------------------------------------------------------
r16311 | fschneider@google.com | 2012-12-19 19:43:13 +0900 (水, 19 12月 2012) | 2 lines

Inline ByteArrayBase.length in the flow graph optimizer.
Review URL: https://codereview.chromium.org//11628011
------------------------------------------------------------------------
r16296 | srdjan@google.com | 2012-12-19 08:48:03 +0900 (水, 19 12月 2012) | 2 lines

UnboxDouble: convert smi constants to doubles at compile time instead of at runtime.
Review URL: https://codereview.chromium.org//11645006
------------------------------------------------------------------------
r16295 | asiva@google.com | 2012-12-19 08:47:35 +0900 (水, 19 12月 2012) | 3 lines

Cleanup the exceptions create code to use Arrays instead GrowableArrays so
that it is consistent with the DartEntry invoke code that it calls finally.
Review URL: https://codereview.chromium.org//11639007
------------------------------------------------------------------------
r16288 | asiva@google.com | 2012-12-19 06:36:01 +0900 (水, 19 12月 2012) | 4 lines

Changed the API in DartEntry for invoking dart code from C++ to make it more compatible with the requirements of the runtime.

Deleted all the code duplication that was added to circumvent the old DartEntry API requirements.
Review URL: https://codereview.chromium.org//11613009
------------------------------------------------------------------------
r16285 | meh@google.com | 2012-12-19 04:59:30 +0900 (水, 19 12月 2012) | 7 lines

Revert "Cleanup CodeObservers (and update build file)"

This reverts commit b528d673e762b0db88b902ec2e45f917e21d8a67.

BUG=

Review URL: https://codereview.chromium.org//11638002
------------------------------------------------------------------------
r16284 | meh@google.com | 2012-12-19 04:54:12 +0900 (水, 19 12月 2012) | 10 lines

Cleanup CodeObservers (and update build file)

- Move CodeObserver registration to the OS abstraction
- Add DISALLOW and AllStatic to Code Observers where appropriate

The builds for Mac and Windows broke when I submitted the earlier CL (11572032). This CL removes obselete files from the .gypi build file.

BUG=7321

Review URL: https://codereview.chromium.org//11630007
------------------------------------------------------------------------
r16277 | meh@google.com | 2012-12-19 04:11:09 +0900 (水, 19 12月 2012) | 7 lines

Revert "Cleanup CodeObservers"

This reverts commit 16a9677a8a8f0fb8f91c9e6348e188aa167b36c7.

BUG=

Review URL: https://codereview.chromium.org//11607022
------------------------------------------------------------------------
r16274 | srdjan@google.com | 2012-12-19 03:57:05 +0900 (水, 19 12月 2012) | 2 lines

Fix build.
Review URL: https://codereview.chromium.org//11607021
------------------------------------------------------------------------
r16273 | meh@google.com | 2012-12-19 03:54:30 +0900 (水, 19 12月 2012) | 8 lines

Cleanup CodeObservers

Move CodeObserver registration to the OS abstraction
Add DISALLOW and AllStatic to Code Observers where appropriate

BUG=7321

Review URL: https://codereview.chromium.org//11572032
------------------------------------------------------------------------
r16272 | srdjan@google.com | 2012-12-19 03:43:29 +0900 (水, 19 12月 2012) | 2 lines

Add DoubleToSmi optimistically, preventing boxing/unboxing of doubles and propagate smi-nessof the result.
Review URL: https://codereview.chromium.org//11568044
------------------------------------------------------------------------
r16269 | srdjan@google.com | 2012-12-19 03:15:41 +0900 (水, 19 12月 2012) | 2 lines

Use call counts to prevent cold calls from being inlined.
Review URL: https://codereview.chromium.org//11541002
------------------------------------------------------------------------
r16267 | iposva@google.com | 2012-12-19 02:45:55 +0900 (水, 19 12月 2012) | 2 lines

- Consider the growth policy even when allocating large pages.
Review URL: https://codereview.chromium.org//11434056
------------------------------------------------------------------------
r16237 | regis@google.com | 2012-12-18 09:13:33 +0900 (火, 18 12月 2012) | 5 lines

Include super type in interface list for cycle detection (issue 4318).
Report an error if a type appears in both extends clause and implements clause.
Add language test.
Close old pending issue 4905685.
Review URL: https://codereview.chromium.org//11613007
------------------------------------------------------------------------
r16220 | regis@google.com | 2012-12-18 04:35:16 +0900 (火, 18 12月 2012) | 4 lines

Invoke noSuchMethod instead of immediately throwing NoSuchMethodError when
invoking a non-closure as a closure (reopened issue 3326).
Address comments of last cl.
Review URL: https://codereview.chromium.org//11612002
------------------------------------------------------------------------
r16212 | vegorov@google.com | 2012-12-18 00:22:16 +0900 (火, 18 12月 2012) | 7 lines

Store optimized flow graph statistics on the function itself.

This gives a good estimate for an early bailout from the inlining attempt.

BUG=

Review URL: https://codereview.chromium.org//11567012
------------------------------------------------------------------------
r16199 | cshapiro@google.com | 2012-12-16 04:58:45 +0900 (日, 16 12月 2012) | 3 lines

Merge the Merlin heap tracing to top-of-trunk.

Review URL: https://codereview.chromium.org//11428067
------------------------------------------------------------------------
r16187 | regis@google.com | 2012-12-15 09:28:41 +0900 (土, 15 12月 2012) | 2 lines

Implement InvocationMirror.invokeOn method in the vm (issue 7227).
Review URL: https://codereview.chromium.org//11570042
------------------------------------------------------------------------
r16186 | tball@google.com | 2012-12-15 09:20:07 +0900 (土, 15 12月 2012) | 7 lines

Second version of support for specifying an unhandled exception callback
in Dart.  Isolate.spawnFunction optionally takes a callback parameter,
which is not resolved until an unhandled exception occurs.  If a callback
wasn't specified, the VM will then call an "_unhandledExceptionCallback"
function if it is defined in the isolate's source file. If no callback
is provided, the error is logged as the isolate is closed.
Review URL: https://codereview.chromium.org//11558034
------------------------------------------------------------------------
r16175 | regis@google.com | 2012-12-15 04:04:01 +0900 (土, 15 12月 2012) | 3 lines

Implement Function.apply in vm (issue 5670).
Fix a closure parameter count check bug (unveiled by an apply test).
Review URL: https://codereview.chromium.org//11564029
------------------------------------------------------------------------
r16152 | asiva@google.com | 2012-12-14 16:17:27 +0900 (金, 14 12月 2012) | 2 lines

Fix windows build.
Review URL: https://codereview.chromium.org//11566025
------------------------------------------------------------------------
r16150 | asiva@google.com | 2012-12-14 15:59:26 +0900 (金, 14 12月 2012) | 2 lines

Fix build break.
Review URL: https://codereview.chromium.org//11565028
------------------------------------------------------------------------
r16149 | asiva@google.com | 2012-12-14 15:44:26 +0900 (金, 14 12月 2012) | 7 lines

Changes per discussion with Anton
- Add a new API call Dart_StringTolatin1 so that the contents of a
  string object that satisfies Dart_IsStringLatin1 can be gotten
- Tweak Dart_MakeExternalString to copy out the contents of the string
  for valid string objects that can not be externalized by the VM
  (e.g strings in the VM isolate)
Review URL: https://codereview.chromium.org//11580003
------------------------------------------------------------------------
r16127 | srdjan@google.com | 2012-12-14 01:27:09 +0900 (金, 14 12月 2012) | 2 lines

Increase optimziation counter threshold to 3000, improves dart2js preformance.
Review URL: https://codereview.chromium.org//11442059
------------------------------------------------------------------------
r16119 | vegorov@google.com | 2012-12-14 00:31:29 +0900 (金, 14 12月 2012) | 10 lines

Implement store to load forwarding.

Implementation is done on top of load to load forwarding. In addition to killing loads stores now generate values for corresponding load ids.

To find load expression id corresponding to a store we change KeyValueTrait of the map used for load numbering. New trait allows to lookup a load by store.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11568011
------------------------------------------------------------------------
r16117 | fschneider@google.com | 2012-12-14 00:24:32 +0900 (金, 14 12月 2012) | 5 lines

Store canonical type argments in a hash table instead of linear list.

The code closely follows the symbol table implementation, but adjusted 
for use with TypeArguments objects.
Review URL: https://codereview.chromium.org//11474056
------------------------------------------------------------------------
r16114 | vegorov@google.com | 2012-12-13 23:48:30 +0900 (木, 13 12月 2012) | 6 lines

Never try to add 0 bytes to free list.

R=iposva@google.com
BUG=dart:7288

Review URL: https://codereview.chromium.org//11564015
------------------------------------------------------------------------
r16109 | vegorov@google.com | 2012-12-13 23:10:38 +0900 (木, 13 12月 2012) | 12 lines

Improve redundant load elimination.

Previously it incorrectly computed OUT sets during the fix point iteration: did not propagate changed from IN to OUT.

However just computing bitset representation of IN set was actually not enough because different values might be coming in from different predecessors.

This algorithm inserts phis at merge points.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11505002
------------------------------------------------------------------------
r16084 | meh@google.com | 2012-12-13 09:42:19 +0900 (木, 13 12月 2012) | 12 lines

Move generate_perf_events_symbols flag to VM (new issue with @google address)

Changes reviewed and approved here:
https://chromiumcodereview.appspot.com/11490026

Created a new issue using meh@google.com instead of meh@chromium.org so I can commit to trunk.

BUG=

Committed: https://code.google.com/p/dart/source/detail?r=16016

Review URL: https://codereview.chromium.org//11549011
------------------------------------------------------------------------
r16083 | iposva@google.com | 2012-12-13 09:39:12 +0900 (木, 13 12月 2012) | 2 lines

- Remove duplicate declaration of flag.
Review URL: https://codereview.chromium.org//11548048
------------------------------------------------------------------------
r16075 | cshapiro@google.com | 2012-12-13 08:05:51 +0900 (木, 13 12月 2012) | 3 lines

Fix format type specifier discrepancies on 64-bit targets.

Review URL: https://codereview.chromium.org//11555032
------------------------------------------------------------------------
r16074 | cshapiro@google.com | 2012-12-13 07:58:24 +0900 (木, 13 12月 2012) | 11 lines

Improve the reporting of scavenger and free list reports.

The scavenger now reports survival and promotion statistics.

The statistics for the large free list are now reported.  Previously,
only information about the small free list was printed.  Each report
indicates whether the data is from before or after a garbage collection,
each row of a report is preceded by the free list type (small or large),
and cumulative bytes are reported for the free list type.

Review URL: https://codereview.chromium.org//11416384
------------------------------------------------------------------------
r16069 | regis@google.com | 2012-12-13 07:33:15 +0900 (木, 13 12月 2012) | 2 lines

Fix type test for callable objects (issue 7338).
Review URL: https://codereview.chromium.org//11549027
------------------------------------------------------------------------
r16057 | kmillikin@google.com | 2012-12-13 04:52:47 +0900 (木, 13 12月 2012) | 11 lines

Refactor the InstanceFunctionLookupStub.

The stub is used in the case that an IC miss handler cannot find a
cacheable target.  It handles implicit closures, calls to instance
fields, and no such method.

Refactor the stub to make a single call into the runtime.

BUG=

Review URL: https://codereview.chromium.org//11316353
------------------------------------------------------------------------
r16044 | fschneider@google.com | 2012-12-13 00:13:21 +0900 (木, 13 12月 2012) | 5 lines

Narrow result cid and type of BinarySmiOp to be always smi.

After smi-SHL was changed to deoptimize in case of overflow,
the result type can be narrowed to smi only.
Review URL: https://codereview.chromium.org//11557012
------------------------------------------------------------------------
r16040 | kmillikin@google.com | 2012-12-12 23:20:42 +0900 (水, 12 12月 2012) | 5 lines

Remove inadvertently duplicated code.

BUG=

Review URL: https://codereview.chromium.org//11555016
------------------------------------------------------------------------
r16037 | fschneider@google.com | 2012-12-12 22:40:14 +0900 (水, 12 12月 2012) | 9 lines

Extend sminess propagator to process branch instructions.

When doing comparisons like (x == null) and the comparison
is dominated by a smi-check, we can fold the comparison away.

One example where this occurs is the List constructor where the length
parameter is checked for null. If not null, the length of the list
is fixed and known and can be used to eliminate bounds checks.
Review URL: https://codereview.chromium.org//11442053
------------------------------------------------------------------------
r16017 | meh@google.com | 2012-12-12 12:41:30 +0900 (水, 12 12月 2012) | 7 lines

Revert "Move generate_perf_events_symbols flag to VM (new issue with @google address)"

This reverts commit d4d38edbb889d186930c9346c867a0252f425e99.

BUG=

Review URL: https://codereview.chromium.org//11519025
------------------------------------------------------------------------
r16016 | meh@google.com | 2012-12-12 11:55:21 +0900 (水, 12 12月 2012) | 10 lines

Move generate_perf_events_symbols flag to VM (new issue with @google address)

Changes reviewed and approved here:
https://chromiumcodereview.appspot.com/11490026

Created a new issue using meh@google.com instead of meh@chromium.org so I can commit to trunk.

BUG=

Review URL: https://codereview.chromium.org//11549011
------------------------------------------------------------------------
r16015 | asiva@google.com | 2012-12-12 11:52:14 +0900 (水, 12 12月 2012) | 5 lines

Dynamically Allocate the predefined handles structure in Symbols
so that an "exit" will not result in static destructors being run
and zapping the handles area while some other isolates are still
running.
Review URL: https://codereview.chromium.org//11549010
------------------------------------------------------------------------
r16009 | regis@google.com | 2012-12-12 09:48:58 +0900 (水, 12 12月 2012) | 2 lines

Support call operator in the vm.
Review URL: https://codereview.chromium.org//11316343
------------------------------------------------------------------------
r16008 | asiva@google.com | 2012-12-12 09:35:48 +0900 (水, 12 12月 2012) | 3 lines

Add dump_symbol_stats to dump symbol table stats at the end of a test run
when --trace-isolates --dump_symbol_stats is used.
Review URL: https://codereview.chromium.org//11416356
------------------------------------------------------------------------
r15942 | asiva@google.com | 2012-12-11 10:20:02 +0900 (火, 11 12月 2012) | 7 lines

Add read only handles for the following predefined symbols
 "=="
 "[]"
 "[]="
 "this"
and use them in the code.
Review URL: https://codereview.chromium.org//11519006
------------------------------------------------------------------------
r15941 | asiva@google.com | 2012-12-11 10:06:44 +0900 (火, 11 12月 2012) | 4 lines

Start a fresh zone and handle scope for each function being compiled
in CompileAll (currently handles and memory is not being released
until all the functions are compiled).
Review URL: https://codereview.chromium.org//11280315
------------------------------------------------------------------------
r15940 | cshapiro@google.com | 2012-12-11 09:50:31 +0900 (火, 11 12月 2012) | 3 lines

Provide a mechanism for dumping of heap profiles on predefined events.

Review URL: https://codereview.chromium.org//11478012
------------------------------------------------------------------------
r15939 | regis@google.com | 2012-12-11 09:31:53 +0900 (火, 11 12月 2012) | 2 lines

Pass the proper invocation mirror argument to noSuchMethod.
Review URL: https://codereview.chromium.org//11523002
------------------------------------------------------------------------
r15926 | asiva@google.com | 2012-12-11 04:28:14 +0900 (火, 11 12月 2012) | 2 lines

Restructure Add and SetAt to not create a Handle.
Review URL: https://codereview.chromium.org//11443024
------------------------------------------------------------------------
r15920 | asiva@google.com | 2012-12-11 03:24:34 +0900 (火, 11 12月 2012) | 6 lines

- Create frame work for adding read only handles for symbols in the VM isolate
- Make the symbol corresponding to "." use this frame work and change code
  which was creating a handle to use the read only handle instead.
  (Once we agree on this frame work we could create similar read only handles
   for the frequently used symbols)
Review URL: https://codereview.chromium.org//11469036
------------------------------------------------------------------------
r15919 | regis@google.com | 2012-12-11 02:59:40 +0900 (火, 11 12月 2012) | 4 lines

Rename GET_NATIVE_ARGUMENT macro to GET_NON_NULL_NATIVE_ARGUMENT.
Introduce new GET_NATIVE_ARGUMENT macro accepting null.
Add test.
Review URL: https://codereview.chromium.org//11468016
------------------------------------------------------------------------
r15890 | kmillikin@google.com | 2012-12-10 19:03:35 +0900 (月, 10 12月 2012) | 9 lines

Fix compilation on Windows.

Visual Studio reports that only static integral constants are allowed to be
initialized in the class.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//11478047
------------------------------------------------------------------------
r15889 | kmillikin@google.com | 2012-12-10 18:48:52 +0900 (月, 10 12月 2012) | 7 lines

Cache lookups at megamorphic call sites in optimized code.

The function name and argument descriptor are mapped to a lookup cache
at compile time.  The cache maps class id to target function.  It is
resizable.

Review URL: https://codereview.chromium.org//11299298
------------------------------------------------------------------------
r15868 | srdjan@google.com | 2012-12-08 06:45:37 +0900 (土, 08 12月 2012) | 2 lines

Add code comments to slow paths.
Review URL: https://codereview.chromium.org//11475042
------------------------------------------------------------------------
r15850 | srdjan@google.com | 2012-12-08 02:59:53 +0900 (土, 08 12月 2012) | 2 lines

Cleanups based on Kevin's and Florian's suggestions.
Review URL: https://codereview.chromium.org//11481002
------------------------------------------------------------------------
r15847 | iposva@google.com | 2012-12-08 02:18:22 +0900 (土, 08 12月 2012) | 2 lines

- Do not read past the end of the utf32_array.
Review URL: https://codereview.chromium.org//11447009
------------------------------------------------------------------------
r15845 | kmillikin@google.com | 2012-12-07 22:00:38 +0900 (金, 07 12月 2012) | 8 lines

Reapply "Do not call ResolveCompileInstanceFunction from the lookup stub."

With a fix for a crash bug on x64.  The near jump encoding could fail on
some platforms due to platform-specific code.

BUG=

Review URL: https://codereview.chromium.org//11476021
------------------------------------------------------------------------
r15843 | kmillikin@google.com | 2012-12-07 20:21:13 +0900 (金, 07 12月 2012) | 7 lines

Revert "Do not call ResolveCompileInstanceFunction from the lookup stub."

This reverts svn revision 15842 due to a snapshot build failure on Mac.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//11467015
------------------------------------------------------------------------
r15842 | kmillikin@google.com | 2012-12-07 20:13:51 +0900 (金, 07 12月 2012) | 9 lines

Do not call ResolveCompileInstanceFunction from the lookup stub.

The InstanceFunctionLookup stub is only called after the inline cache miss
handler.  The miss handler ensures that ResolveCompileInstanceCallTarget is
called.

BUG=

Review URL: https://codereview.chromium.org//11451036
------------------------------------------------------------------------
r15833 | asiva@google.com | 2012-12-07 10:41:53 +0900 (金, 07 12月 2012) | 4 lines

Return an unhandled exception error on an OOM or other errors while
reading a message. This ensures that we never call FindExceptionHelper
with no dart invocation frames.
Review URL: https://codereview.chromium.org//11475012
------------------------------------------------------------------------
r15821 | srdjan@google.com | 2012-12-07 08:27:01 +0900 (金, 07 12月 2012) | 2 lines

Fix failures in byte array tests, reenabled test.
Review URL: https://codereview.chromium.org//11471014
------------------------------------------------------------------------
r15814 | srdjan@google.com | 2012-12-07 07:30:08 +0900 (金, 07 12月 2012) | 5 lines

Windows complains:
'dart::RawUint8Array' : base classes cannot contain zero-sized arrays

Replicate code for now instead of subclassing.
Review URL: https://codereview.chromium.org//11464011
------------------------------------------------------------------------
r15807 | cshapiro@google.com | 2012-12-07 06:56:31 +0900 (金, 07 12月 2012) | 3 lines

Unify specification of file open, close, and write callbacks.

Review URL: https://codereview.chromium.org//11442024
------------------------------------------------------------------------
r15806 | srdjan@google.com | 2012-12-07 06:53:51 +0900 (金, 07 12月 2012) | 2 lines

Added Uint8ClampedList. COmpielr optimziations to follow in next CL.
Review URL: https://codereview.chromium.org//11437028
------------------------------------------------------------------------
r15775 | fschneider@google.com | 2012-12-06 18:32:49 +0900 (木, 06 12月 2012) | 4 lines

Save a handle allocation in two accessor functions of class Type.

The ASSERT already makes sure, that we have the correct type at hand.
Review URL: https://codereview.chromium.org//11444008
------------------------------------------------------------------------
r15766 | vsm@google.com | 2012-12-06 09:27:04 +0900 (木, 06 12月 2012) | 8 lines

Refactored Android samples / embedder.

- Started moving generic embedder code from sample into runtime/embedders/android.  I'd like to move more in a later CL.
- Removed dependence on vm/bin in sample.

Ivan or Siva: can one of you review the changes under runtime?

Review URL: https://codereview.chromium.org//11416343
------------------------------------------------------------------------
r15764 | hausner@google.com | 2012-12-06 09:09:36 +0900 (木, 06 12月 2012) | 9 lines

Set BP in closurized function if necessary

If a function has been closurized, and both the regular function as well as
the closurized function are already compiled when the user sets a breakpoint,
then two code breakpoints have to be installed.

Fixed issue 2318.
 
Review URL: https://codereview.chromium.org//11446020
------------------------------------------------------------------------
r15763 | asiva@google.com | 2012-12-06 08:37:37 +0900 (木, 06 12月 2012) | 7 lines

Issue - 7123

Rename
 String::New(const uint8_t latin1_array......) to String::FromLatin1
 String::New(const uint16_t utf16_array......) to String::FromUTF16
 String::New(const int32_t utf32_array.......) to String::FromUTF32
Review URL: https://codereview.chromium.org//11443005
------------------------------------------------------------------------
r15748 | srdjan@google.com | 2012-12-06 04:50:50 +0900 (木, 06 12月 2012) | 2 lines

Pass handles not raw objects into methods.
Review URL: https://codereview.chromium.org//11441021
------------------------------------------------------------------------
r15737 | kmillikin@google.com | 2012-12-06 00:35:18 +0900 (木, 06 12月 2012) | 10 lines

Pass IC data and arguments descriptor to IC miss runtime functions.

Before, we obtained them by pattern matching backwards on the machine
instructions at the call site.  This previous approach becomes unwieldy when
we need to use to use multiple instance call patterns.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//11438017
------------------------------------------------------------------------
r15733 | vegorov@google.com | 2012-12-05 23:29:41 +0900 (水, 05 12月 2012) | 6 lines

Remove unused field AstNode::ic_data.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11438018
------------------------------------------------------------------------
r15732 | fschneider@google.com | 2012-12-05 22:59:41 +0900 (水, 05 12月 2012) | 2 lines

Avoid unneccary handle allocation in OptimizeTypeArguments.
Review URL: https://codereview.chromium.org//11453008
------------------------------------------------------------------------
r15731 | vegorov@google.com | 2012-12-05 22:46:58 +0900 (水, 05 12月 2012) | 6 lines

Kill unused CodeGenInfo field in AstNode.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11447012
------------------------------------------------------------------------
r15727 | kmillikin@google.com | 2012-12-05 21:05:57 +0900 (水, 05 12月 2012) | 5 lines

Introduce a class encapsulating arguments descriptor arrays.

BUG=

Review URL: https://codereview.chromium.org//11442010
------------------------------------------------------------------------
r15724 | kustermann@google.com | 2012-12-05 18:04:55 +0900 (水, 05 12月 2012) | 5 lines

Part of fix for http://dartbug.com/6528

Committed: https://code.google.com/p/dart/source/detail?r=15690

Review URL: https://codereview.chromium.org//11434106
------------------------------------------------------------------------
r15711 | asiva@google.com | 2012-12-05 07:18:12 +0900 (水, 05 12月 2012) | 3 lines

Fix for issue 7089 (Symbols::New was not quite working correctly
when there are non ASCII Latin-1 characters in the string).
Review URL: https://codereview.chromium.org//11411341
------------------------------------------------------------------------
r15710 | srdjan@google.com | 2012-12-05 06:52:02 +0900 (水, 05 12月 2012) | 2 lines

Improve C++ code for string splittig (Dromaeo benchmark).
Review URL: https://codereview.chromium.org//11308337
------------------------------------------------------------------------
r15695 | fschneider@google.com | 2012-12-05 02:07:50 +0900 (水, 05 12月 2012) | 12 lines

Improve and fix constant propagation for type arguments.

Corretly match the constant propagator's analysis code for
InstantiateTypeArguments with the code generator template for it and handle
the case of NULL-type arguments.  This improves code like

new List()

in checked mode. The old code would only improve code with type arguments like

new List<type>();
Review URL: https://codereview.chromium.org//11416340
------------------------------------------------------------------------
r15690 | kustermann@google.com | 2012-12-05 00:24:16 +0900 (水, 05 12月 2012) | 3 lines

Part of fix for http://dartbug.com/6528

Review URL: https://codereview.chromium.org//11434106
------------------------------------------------------------------------
r15689 | fschneider@google.com | 2012-12-04 23:51:43 +0900 (火, 04 12月 2012) | 8 lines

Instantiate uninstantiated types with known constant type-arguments.

The enables eliminating more type-checks.

For type-checks that have a uninstantiated target type and a constant
instantiator type arguments as input, we can instantiate the type
at compile-time.
Review URL: https://codereview.chromium.org//11280230
------------------------------------------------------------------------
r15636 | johnmccutchan@google.com | 2012-12-04 00:25:07 +0900 (火, 04 12月 2012) | 3 lines

s/transferrable/transferable

Review URL: https://codereview.chromium.org//11434077
------------------------------------------------------------------------
r15618 | asiva@google.com | 2012-12-01 09:34:19 +0900 (土, 01 12月 2012) | 3 lines

Partial cleanup towards fixing Issue 6726
(try to add all constants strings in the VM to the symbols list).
Review URL: https://codereview.chromium.org//11419261
------------------------------------------------------------------------
r15615 | srdjan@google.com | 2012-12-01 09:22:18 +0900 (土, 01 12月 2012) | 2 lines

Added native to split OneByteString with a char code as pattern.
Review URL: https://codereview.chromium.org//11414273
------------------------------------------------------------------------
r15614 | srdjan@google.com | 2012-12-01 09:03:04 +0900 (土, 01 12月 2012) | 2 lines

Add result cid to StringFromCharCode.
Review URL: https://codereview.chromium.org//11412284
------------------------------------------------------------------------
r15612 | hausner@google.com | 2012-12-01 08:20:01 +0900 (土, 01 12月 2012) | 4 lines

Eliminate old style import from language tests

Also implement multi-part library names.
Review URL: https://codereview.chromium.org//11316283
------------------------------------------------------------------------
r15604 | asiva@google.com | 2012-12-01 06:53:58 +0900 (土, 01 12月 2012) | 3 lines

Fix bug in Utf8::CodePointCount which was causing some strings with latin1
characters to be stored as TwoByteStrings.
Review URL: https://codereview.chromium.org//11419259
------------------------------------------------------------------------
r15603 | johnmccutchan@google.com | 2012-12-01 06:39:09 +0900 (土, 01 12月 2012) | 4 lines

Fix win32 build breakage
Change signature of OS::AlignedAllocate from using intptr_t to size_t

Review URL: https://codereview.chromium.org//11416291
------------------------------------------------------------------------
r15598 | johnmccutchan@google.com | 2012-12-01 05:35:22 +0900 (土, 01 12月 2012) | 3 lines

Expose transferable constructor to Int8List

Review URL: https://codereview.chromium.org//11414211
------------------------------------------------------------------------
r15589 | srdjan@google.com | 2012-12-01 02:19:42 +0900 (土, 01 12月 2012) | 2 lines

Add more spcific ranges for String length and charCode methods.
Review URL: https://codereview.chromium.org//11280248
------------------------------------------------------------------------
r15586 | kmillikin@google.com | 2012-11-30 22:29:42 +0900 (金, 30 11月 2012) | 6 lines

Increment CompilerStats::code_allocated when allocating in executable pages.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//11299247
------------------------------------------------------------------------
r15585 | sgjesse@google.com | 2012-11-30 22:06:44 +0900 (金, 30 11月 2012) | 15 lines

Add support for surrogates when serializing and deserializing for native ports

As Dart allows creating string with UTF-16 surrogate code units which
are not always in lead/trail pairs, we need to support this in the
communication with native ports.

This change allows surrogate code units in messages to/from native
ports and supports them in the UTF-8 encoding used on the Dart_CObject
structure string representation.

R=ager@google.com, erikcorry@google.com, asiva@google.com

BUG=

Review URL: https://codereview.chromium.org//11280150
------------------------------------------------------------------------
r15576 | kmillikin@google.com | 2012-11-30 20:53:44 +0900 (金, 30 11月 2012) | 6 lines

Enable building with VTune support on Windows.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//11419230
------------------------------------------------------------------------
r15568 | cshapiro@google.com | 2012-11-30 12:33:37 +0900 (金, 30 11月 2012) | 3 lines

Move various top-level Unicode definitions into classes and methods.

Review URL: https://codereview.chromium.org//11414249
------------------------------------------------------------------------
r15565 | cshapiro@google.com | 2012-11-30 11:36:19 +0900 (金, 30 11月 2012) | 3 lines

Use the code point iterator when computing 16-bit string hash codes.

Review URL: https://codereview.chromium.org//11412258
------------------------------------------------------------------------
r15562 | regis@google.com | 2012-11-30 10:26:31 +0900 (金, 30 11月 2012) | 5 lines

Remove support for interfaces.
For now, disable tests using obsolete syntax.
Tests disabled in this cl and in previous ones removing default factory classes
will either be deleted or updated in a later cl.
Review URL: https://codereview.chromium.org//11411271
------------------------------------------------------------------------
r15554 | asiva@google.com | 2012-11-30 08:43:47 +0900 (金, 30 11月 2012) | 6 lines

Fix StringBase_createFromCodePoints to correctly accept Latin-1 characters
as one_byte_string.

Rename Dart_NewExternalUTF8String to Dart_NewExternalLatin1String, this reflects
the functionality correctly.
Review URL: https://codereview.chromium.org//11280241
------------------------------------------------------------------------
r15553 | asiva@google.com | 2012-11-30 08:19:17 +0900 (金, 30 11月 2012) | 4 lines

When externalizing a string ensure that the basic tag bits are preserved.
Also make sure we do not try to externalize read only strings that are in
the VM isolate.
Review URL: https://codereview.chromium.org//11411204
------------------------------------------------------------------------
r15548 | srdjan@google.com | 2012-11-30 07:55:09 +0900 (金, 30 11月 2012) | 2 lines

Implement faster splitting with empty string as pattern. Add special native for computing substring of OneByteString (preparation for instrinsic).
Review URL: https://codereview.chromium.org//11416270
------------------------------------------------------------------------
r15538 | asiva@google.com | 2012-11-30 04:28:22 +0900 (金, 30 11月 2012) | 8 lines

Fix for issue 6359 - Make snapshots platform independent.
The issue previously was that an instance size was stored a
size in bytes, similarly field offsets were stored as an offset
in bytes. This caused issues when generating the snapshot on
one platform and reading it on another platform.
The VM has been changed to store the instance size as a size in
words and the field offset as an offset in words.
Review URL: https://codereview.chromium.org//11421117
------------------------------------------------------------------------
r15532 | hausner@google.com | 2012-11-30 03:33:45 +0900 (金, 30 11月 2012) | 4 lines

Eliminate support for old getter syntax

Empty parameter list in a getter declaration is now a compile time error.
Review URL: https://codereview.chromium.org//11416254
------------------------------------------------------------------------
r15518 | vegorov@google.com | 2012-11-29 23:47:06 +0900 (木, 29 11月 2012) | 12 lines

Implement better side effect tracking for load-to-load forwarding.

Any field store can interfere only with stores to the same offset.

Indexed store can only interfere with indexed load.

This tracking is not yet used by LICM.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11280232
------------------------------------------------------------------------
r15517 | vegorov@google.com | 2012-11-29 22:54:06 +0900 (木, 29 11月 2012) | 6 lines

Support VTune's JIT interface.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//11412106
------------------------------------------------------------------------
r15515 | fschneider@google.com | 2012-11-29 22:43:20 +0900 (木, 29 11月 2012) | 4 lines

Cleanup: Remove unused return value in OptimizeTypeArguments.

Instead use it to replace the bool*  output-parameter.
Review URL: https://codereview.chromium.org//11428079
------------------------------------------------------------------------
r15486 | srdjan@google.com | 2012-11-29 09:49:42 +0900 (木, 29 11月 2012) | 3 lines

Attempt to do direct class comparison for type checks using CHA.
Next step is to convert instanceof nodes to an integer comparison node, which would then be automatically merged with branch.
Review URL: https://codereview.chromium.org//11348289
------------------------------------------------------------------------
r15480 | regis@google.com | 2012-11-29 08:39:27 +0900 (木, 29 11月 2012) | 4 lines

Remove support for default factory classes.
For now, disable tests using obsolete syntax. More will get disabled as support
for interfaces is completely removed. We may then permanently remove some tests,
while updating and reenabling others whose purpose is not related to interfaces.
------------------------------------------------------------------------
r15477 | srdjan@google.com | 2012-11-29 07:57:26 +0900 (木, 29 11月 2012) | 2 lines

Add flag 'implements' to class, it is set anytime someone implements this class. This is a way to recognize implicit interfaces in order to improve class checks.
Review URL: https://codereview.chromium.org//11348283
------------------------------------------------------------------------
r15472 | regis@google.com | 2012-11-29 06:14:43 +0900 (木, 29 11月 2012) | 3 lines

Remove ClosureArgumentMismatch runtime entry in vm and
replace with call to noSuchMethod.
Review URL: https://codereview.chromium.org//11421134
------------------------------------------------------------------------
r15447 | fschneider@google.com | 2012-11-28 20:22:23 +0900 (水, 28 11月 2012) | 5 lines

Improve constant propagation to handle InstantiateTypeArguments.

If the input to an InstantiateTypeArguments instruction is a constant
it can be eliminated and replaced with the constant.
Review URL: https://codereview.chromium.org//11299204
------------------------------------------------------------------------
r15431 | asiva@google.com | 2012-11-28 10:36:04 +0900 (水, 28 11月 2012) | 4 lines

Rename the field type_arguments_instance_field_offset_ to
type_arguments_field_offset_ in preparation for calling it
type_arguments_field_offset_in_words_
Review URL: https://codereview.chromium.org//11316203
------------------------------------------------------------------------
r15428 | regis@google.com | 2012-11-28 10:11:29 +0900 (水, 28 11月 2012) | 6 lines

Enforce rule in vm that factory name must match enclosing class name.
This is a step towards removing support for obsolete default factory classes.
For now, disable tests using obsolete syntax. More will get disabled as support
is completely removed. We may then permanently remove some tests, while updating
and reenabling others whose purpose is not related to default factory classes.
Review URL: https://codereview.chromium.org//11419191
------------------------------------------------------------------------
r15427 | asiva@google.com | 2012-11-28 09:23:28 +0900 (水, 28 11月 2012) | 2 lines

Canonicalize all integer constants that we create by parsing a string.
Review URL: https://codereview.chromium.org//11348259
------------------------------------------------------------------------
r15404 | hausner@google.com | 2012-11-28 02:33:17 +0900 (水, 28 11月 2012) | 7 lines

Eliminate support of legacy type Dyamic

With this change, Dynamic is no longer implicitly converted
to dynamic.

This change breaks code that still uses Dynamic.
Review URL: https://codereview.chromium.org//11419176
------------------------------------------------------------------------
r15368 | iposva@google.com | 2012-11-27 14:41:14 +0900 (火, 27 11月 2012) | 2 lines

- Remove unneeded library tags when concatenating libraries.
Review URL: https://codereview.chromium.org//11411176
------------------------------------------------------------------------
r15359 | tball@google.com | 2012-11-27 09:33:21 +0900 (火, 27 11月 2012) | 2 lines

Commented out child isolate test until it's fixed with monitor.
Review URL: https://codereview.chromium.org//11419172
------------------------------------------------------------------------
r15356 | tball@google.com | 2012-11-27 09:11:07 +0900 (火, 27 11月 2012) | 2 lines

Fixed race-condition in isolate test.
Review URL: https://codereview.chromium.org//11411186
------------------------------------------------------------------------
r15352 | tball@google.com | 2012-11-27 08:31:47 +0900 (火, 27 11月 2012) | 5 lines

Added support for isolate unhandled exceptions.

BUG=

Review URL: https://codereview.chromium.org//11413101
------------------------------------------------------------------------
r15332 | srdjan@google.com | 2012-11-27 03:35:45 +0900 (火, 27 11月 2012) | 8 lines

Fix for issue 6678: Result of identical(a, b) with a and b doubles not consistent.

Implement proposed new identity spec (flag --new_identity_spec). It will be enabled/committed once the new spec been confirmed.

The new spec says that identity of numbers is computed on their values instead of on the object reference. This provides deterministic behavior without having to disable optimizations in the VM. In some cases 'identical' is now slower than 'equality' as more checks need to be done. The VM compiler can optimize 'identical' in the future.

My benchmarks do not show any slow down.
Review URL: https://codereview.chromium.org//11414136
------------------------------------------------------------------------
r15330 | iposva@google.com | 2012-11-27 03:08:08 +0900 (火, 27 11月 2012) | 2 lines

- Do not visit length and hash of string objects. They are guaranteed to be Smi.
Review URL: https://codereview.chromium.org//11299170
------------------------------------------------------------------------
r15316 | srdjan@google.com | 2012-11-27 02:00:51 +0900 (火, 27 11月 2012) | 2 lines

Throw OutOfMemory instead of crashing when bigint multiply overflows.
Review URL: https://codereview.chromium.org//11299173
------------------------------------------------------------------------
r15310 | srdjan@google.com | 2012-11-27 01:09:50 +0900 (火, 27 11月 2012) | 3 lines

Cleanups and added more checks for valid Integer allocation (must be Smi, Mint or Bigint for their corresponding range).
Integer boxing in compielr seems to check correctly fro smi/mint. Can you think of any other places where we could create incorrect Mints or Bigints?
Review URL: https://codereview.chromium.org//11421064
------------------------------------------------------------------------
r15305 | fschneider@google.com | 2012-11-26 20:50:07 +0900 (月, 26 11月 2012) | 12 lines

Support loads from Uint8Array and ExternalUint8Array in the optimizing compiler.

This is done by extending LoadIndexed to handle Uint8Array and ExternalUint8Array.

Small cleanups:
 - Share code for computing the element addresses for indexed loads.

 - Remove kGrowableArrayCid where it cannot occur. We only ever emit
   LoadIndexedInstr for fixed-size arrays. Loads from growable arrays
   are split into loading the backing store first and then an indexed
   load from the backing store.
Review URL: https://codereview.chromium.org//11411142
------------------------------------------------------------------------
r15291 | vegorov@google.com | 2012-11-24 01:04:34 +0900 (土, 24 11月 2012) | 10 lines

Heuristically predict interference on the back edge and use it to minimize number of register reshuffling which is especially expensive when cycles of XMM registers arise.

When allocating free register check if hint can potentially interfere on the back edge try ignoring hint and search for a better candidate.

Additionally fix handling of constants in the liveness analysis to accommodate constants used as immediates.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11418135
------------------------------------------------------------------------
r15261 | ager@google.com | 2012-11-23 00:00:24 +0900 (金, 23 11月 2012) | 9 lines

Port intrisification of setIndexed on Uint8 and Int8 arrays from ia32 to x64.

This is a direct port of the ia32 intrinsifier. We noticed this was
missing when looking at HTTP benchmark profiles.

R=fschneider@google.com,srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//11415116
------------------------------------------------------------------------
r15254 | erikcorry@google.com | 2012-11-22 21:51:14 +0900 (木, 22 11月 2012) | 6 lines

Fix Unicode issues in dart2js and dart2dart.

R=floitsch@google.com
BUG=

Review URL: https://codereview.chromium.org//11418115
------------------------------------------------------------------------
r15253 | fschneider@google.com | 2012-11-22 21:46:57 +0900 (木, 22 11月 2012) | 4 lines

Only require SSE2 at minimum hardware requirement.

BUG=dart:6010
Review URL: https://codereview.chromium.org//11416136
------------------------------------------------------------------------
r15246 | fschneider@google.com | 2012-11-22 21:06:52 +0900 (木, 22 11月 2012) | 10 lines

Inline [] operator on one-byte strings.

str[i] is translated into

temp = str.charCodeAt(i)
result = StringFromCharCode(temp);

The existing code for charCodeAt is reused and contains
the necessary range class id and range check.
Review URL: https://codereview.chromium.org//11416129
------------------------------------------------------------------------
r15242 | iposva@google.com | 2012-11-22 16:54:21 +0900 (木, 22 11月 2012) | 4 lines

Fix bug 6467:
- Do not attempt to Dart_ExitScope if no scope exists.
- Print more informative message if Dart_Initialization fails.
Review URL: https://codereview.chromium.org//11308166
------------------------------------------------------------------------
r15241 | iposva@google.com | 2012-11-22 16:54:00 +0900 (木, 22 11月 2012) | 2 lines

- Make RawObject::tags_ private.
Review URL: https://codereview.chromium.org//11411139
------------------------------------------------------------------------
r15240 | ajohnsen@google.com | 2012-11-22 16:40:52 +0900 (木, 22 11月 2012) | 7 lines

Make List an abstract class.

This was the last interface in dart:core.

BUG=

Review URL: https://codereview.chromium.org//11417051
------------------------------------------------------------------------
r15233 | regis@google.com | 2012-11-22 09:14:08 +0900 (木, 22 11月 2012) | 3 lines

Ambiguous type references require a compile time error in some special cases
(fix issue 6741).
Review URL: https://codereview.chromium.org//11348188
------------------------------------------------------------------------
r15230 | srdjan@google.com | 2012-11-22 07:46:38 +0900 (木, 22 11月 2012) | 2 lines

Reenable function source fingerprint checks. Added checks to MethodRecognizer.
Review URL: https://codereview.chromium.org//11412137
------------------------------------------------------------------------
r15218 | srdjan@google.com | 2012-11-22 04:27:44 +0900 (木, 22 11月 2012) | 2 lines

Fix build on Linux. Disable fingerprint checking as the finger prints changed.
Review URL: https://codereview.chromium.org//11308146
------------------------------------------------------------------------
r15217 | srdjan@google.com | 2012-11-22 04:15:54 +0900 (木, 22 11月 2012) | 3 lines

Use fingerprint to detect changes in methods that are intrinsified.
Make sure that the fingerprints are portable across 32 and 64 bit platforms.
Review URL: https://codereview.chromium.org//11421024
------------------------------------------------------------------------
r15210 | hausner@google.com | 2012-11-22 02:23:35 +0900 (木, 22 11月 2012) | 5 lines

Remove abstract from class members in dart libraries

Add VM flag to produce compile error for explicitly
defined abstract class members.
Review URL: https://codereview.chromium.org//11299121
------------------------------------------------------------------------
r15200 | ager@google.com | 2012-11-22 00:35:15 +0900 (木, 22 11月 2012) | 12 lines

Intrinsify ExternalUint8Array.[].

This helps the HTTP parser quite a bit. I was playing around with
it and thought I might as well upload it for review. Feel free
to take over the changelist if I'm doing this wrong. In that
case you should see this as a request for intrinsification of
ExternalUint8Arrays. :-)

R=fschneider@google.com,srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//11280121
------------------------------------------------------------------------
r15189 | cshapiro@google.com | 2012-11-21 10:05:52 +0900 (水, 21 11月 2012) | 5 lines

Resolve C++11 narrowing conversion errors when compiling with GCC 4.7.

BUG=4495

Review URL: https://codereview.chromium.org//11418107
------------------------------------------------------------------------
r15188 | cshapiro@google.com | 2012-11-21 09:30:27 +0900 (水, 21 11月 2012) | 3 lines

Use a signed 32-bit integer for representing code points.

Review URL: https://codereview.chromium.org//11419086
------------------------------------------------------------------------
r15185 | cshapiro@google.com | 2012-11-21 08:46:05 +0900 (水, 21 11月 2012) | 3 lines

Use the code point iterator in equality comparisons to C strings.

Review URL: https://codereview.chromium.org//11418095
------------------------------------------------------------------------
r15182 | srdjan@google.com | 2012-11-21 08:00:32 +0900 (水, 21 11月 2012) | 2 lines

Add source fingerprint computation to function. Will be used to detect unexpected changes of functions in internal library (e.g, the ones used for intrinsification)
Review URL: https://codereview.chromium.org//11416120
------------------------------------------------------------------------
r15178 | regis@google.com | 2012-11-21 04:55:05 +0900 (水, 21 11月 2012) | 2 lines

Address review comments of https://codereview.chromium.org/11299020/
Review URL: https://codereview.chromium.org//11418098
------------------------------------------------------------------------
r15166 | cshapiro@google.com | 2012-11-21 03:08:17 +0900 (水, 21 11月 2012) | 3 lines

Use the Equals method for C strings when comparing against C strings.

Review URL: https://codereview.chromium.org//11416094
------------------------------------------------------------------------
r15162 | johnmccutchan@google.com | 2012-11-21 02:37:07 +0900 (水, 21 11月 2012) | 3 lines

Add support for XMM8..XMM15

Review URL: https://codereview.chromium.org//11358262
------------------------------------------------------------------------
r15152 | erikcorry@google.com | 2012-11-21 00:23:41 +0900 (水, 21 11月 2012) | 8 lines

Revert "Add some support for the code-point code-unit distinction."

This reverts commit r15150

R=karlklose@google.com
BUG=

Review URL: https://codereview.chromium.org//11411092
------------------------------------------------------------------------
r15150 | erikcorry@google.com | 2012-11-20 23:51:25 +0900 (火, 20 11月 2012) | 12 lines

Add some support for the code-point code-unit distinction.

Adds String.fromCodeUnits and String.codeUnitAt, and modifies
String.fromCodePoints and String.codePointAt to actually use code points.
Fixes String.charCodes to use code points and adds String.codeUnits.
Reenables some tests, and adds new ones for non-BMP characters.
Fixes issues 6418, 6501 and 1357.

R=floitsch@google.com
BUG=

Review URL: https://codereview.chromium.org//11368138
------------------------------------------------------------------------
r15136 | lrn@google.com | 2012-11-20 18:21:52 +0900 (火, 20 11月 2012) | 9 lines

Remove NullPointerException.

Accessing non-existing members on null now throws NoSuchMethodError.
Throwing a null value fails by throwing a NullThrownError.
Methods checking for null now generally throw new ArgumentError(null).

Committed: https://code.google.com/p/dart/source/detail?r=15061

Review URL: https://codereview.chromium.org//11415028
------------------------------------------------------------------------
r15128 | cshapiro@google.com | 2012-11-20 11:37:21 +0900 (火, 20 11月 2012) | 7 lines

Correct a misnomer regarding supplementary code points.

The supplementary multilingual plane (SMP) code points were assumed to
be equivalent supplementary code points.  In fact, smp code points are
a small subset of all supplementary code points.

Review URL: https://codereview.chromium.org//11299084
------------------------------------------------------------------------
r15126 | srdjan@google.com | 2012-11-20 09:04:08 +0900 (火, 20 11月 2012) | 2 lines

Remove loading of function object in static calls.
Review URL: https://codereview.chromium.org//11419073
------------------------------------------------------------------------
r15122 | hausner@google.com | 2012-11-20 08:46:23 +0900 (火, 20 11月 2012) | 4 lines

Proper reporting of illegal characters in source code

Fixes bug 6778.
Review URL: https://codereview.chromium.org//11417074
------------------------------------------------------------------------
r15113 | hausner@google.com | 2012-11-20 06:34:53 +0900 (火, 20 11月 2012) | 5 lines

Fix bug 6713

Ensure that we find the correct closure type class when re-parsing
a nested function or closure.
Review URL: https://codereview.chromium.org//11420066
------------------------------------------------------------------------
r15109 | cshapiro@google.com | 2012-11-20 05:57:14 +0900 (火, 20 11月 2012) | 3 lines

Provide a code point iterator to the String class to simplify iteration.

Review URL: https://codereview.chromium.org//11416054
------------------------------------------------------------------------
r15101 | srdjan@google.com | 2012-11-20 04:17:02 +0900 (火, 20 11月 2012) | 2 lines

Simplify CodePatcher::GetStaticCallAt.
Review URL: https://codereview.chromium.org//11411072
------------------------------------------------------------------------
r15091 | srdjan@google.com | 2012-11-20 01:39:07 +0900 (火, 20 11月 2012) | 2 lines

First part of static call cleanup: store static call targets into code object, referenced by code-offset.
Review URL: https://codereview.chromium.org//11418046
------------------------------------------------------------------------
r15088 | fschneider@google.com | 2012-11-20 01:06:19 +0900 (火, 20 11月 2012) | 7 lines

Add one-char string table for faster String.charAt to the VM.

This is used for a fast lookup when executing String.charAt.
Currently it is only used in the C-runtime, but the plan is to
generate optimized code for the table lookup for speeding up
String.charAt.
Review URL: https://codereview.chromium.org//11369259
------------------------------------------------------------------------
r15086 | sgjesse@google.com | 2012-11-19 23:58:26 +0900 (月, 19 11月 2012) | 9 lines

Always zero-initialize array used for mapping VM symbols to Dart_CObject

NULL pointer checks are used to check for valid entries.

TBR=ager@google.com

BUG=

Review URL: https://codereview.chromium.org//11280059
------------------------------------------------------------------------
r15082 | sgjesse@google.com | 2012-11-19 23:02:25 +0900 (月, 19 11月 2012) | 10 lines

Deserialize same symbol as same Dart_CObject

When symbols are deserialized as part of a Dart_CObject the same
symbols are now turned into the same Dart_CObject objects.

R=ager@google.com

BUG=

Review URL: https://codereview.chromium.org//11415048
------------------------------------------------------------------------
r15065 | lrn@google.com | 2012-11-19 18:59:59 +0900 (月, 19 11月 2012) | 5 lines

Revert "Remove NullPointerException."

Crashes in the x64 VM.

Review URL: https://codereview.chromium.org//11417058
------------------------------------------------------------------------
r15061 | lrn@google.com | 2012-11-19 17:51:49 +0900 (月, 19 11月 2012) | 7 lines

Remove NullPointerException.

Accessing non-existing members on null now throws NoSuchMethodError.
Throwing a null value fails by throwing a NullThrownError.
Methods checking for null now generally throw new ArgumentError(null).

Review URL: https://codereview.chromium.org//11415028
------------------------------------------------------------------------
r15058 | iposva@google.com | 2012-11-19 15:12:32 +0900 (月, 19 11月 2012) | 2 lines

- Remove obsolete random number generator from the VM code.
Review URL: https://codereview.chromium.org//11417049
------------------------------------------------------------------------
r15048 | asiva@google.com | 2012-11-17 10:48:45 +0900 (土, 17 11月 2012) | 3 lines

Change the library directive syntax in the VM unit tests,
to the new format.
Review URL: https://codereview.chromium.org//11412048
------------------------------------------------------------------------
r15032 | iposva@google.com | 2012-11-17 04:42:02 +0900 (土, 17 11月 2012) | 3 lines

- Move MathNatives from dart:core to dart:math.
- Split out double and integer parsing from MathNatives.
Review URL: https://codereview.chromium.org//11316031
------------------------------------------------------------------------
r14997 | regis@google.com | 2012-11-16 10:31:15 +0900 (金, 16 11月 2012) | 4 lines

Make creation of list literal more resilient to changes in the underlying
dart implementation of List in the core library.
Do the same for map literal creation.
Review URL: https://codereview.chromium.org//11299020
------------------------------------------------------------------------
r14993 | hausner@google.com | 2012-11-16 09:57:09 +0900 (金, 16 11月 2012) | 7 lines

Disallow const native factories

We removed the only user of const native factory methods, so remove
the hack in the VM.

Issue 6662.
Review URL: https://codereview.chromium.org//11414019
------------------------------------------------------------------------
r14989 | asiva@google.com | 2012-11-16 09:13:18 +0900 (金, 16 11月 2012) | 3 lines

Revert OneByteString back to ISO Latin-1 instead of ASCII
as webkit supports ISO Latin-1 and UTF-16 encodings for strings.
Review URL: https://codereview.chromium.org//11365243
------------------------------------------------------------------------
r14978 | asiva@google.com | 2012-11-16 06:37:26 +0900 (金, 16 11月 2012) | 3 lines

- Add functionality to morph a string into an external string
- Add Dart API call Dart_MakeExternalString
Review URL: https://codereview.chromium.org//11360114
------------------------------------------------------------------------
r14951 | ager@google.com | 2012-11-15 20:03:02 +0900 (木, 15 11月 2012) | 10 lines

Don't copy Int8Arrays when passing them in as lists of bytes and don't
call from C to Dart to get the values either.

Just copying the values over as is will behave the same as it does
now and will be a lot faster.

R=sgjesse@google.com
BUG=

Review URL: https://codereview.chromium.org//11418004
------------------------------------------------------------------------
r14948 | iposva@google.com | 2012-11-15 18:15:14 +0900 (木, 15 11月 2012) | 2 lines

- Make sure to add predefined symbols into the current symbol table after growth.
Review URL: https://codereview.chromium.org//11308032
------------------------------------------------------------------------
r14943 | sgjesse@google.com | 2012-11-15 17:16:27 +0900 (木, 15 11月 2012) | 7 lines

Address comments to r14887

TBR=iposva@google.com

BUG=

Review URL: https://codereview.chromium.org//11308031
------------------------------------------------------------------------
r14939 | asiva@google.com | 2012-11-15 10:51:50 +0900 (木, 15 11月 2012) | 2 lines

Fix build failure on linux.
Review URL: https://codereview.chromium.org//11366257
------------------------------------------------------------------------
r14938 | srdjan@google.com | 2012-11-15 10:36:04 +0900 (木, 15 11月 2012) | 2 lines

Address Florian's comments: use restricted lazy deoptimization, fix typo.
Review URL: https://codereview.chromium.org//11364245
------------------------------------------------------------------------
r14937 | hausner@google.com | 2012-11-15 10:14:01 +0900 (木, 15 11月 2012) | 7 lines

Fix native argument handling

Native functions need to fetch arguments differently if they are
called through a closure.

fixes issue 6696.
Review URL: https://codereview.chromium.org//11293290
------------------------------------------------------------------------
r14936 | asiva@google.com | 2012-11-15 10:14:07 +0900 (木, 15 11月 2012) | 3 lines

Do not try to write ContextScope into a snapshot.
(partially addresses issue 6358).
Review URL: https://codereview.chromium.org//11275336
------------------------------------------------------------------------
r14935 | cshapiro@google.com | 2012-11-15 10:05:48 +0900 (木, 15 11月 2012) | 3 lines

Fail new space promotions only when old space is truly exhausted.

Review URL: https://codereview.chromium.org//11363226
------------------------------------------------------------------------
r14934 | srdjan@google.com | 2012-11-15 09:41:53 +0900 (木, 15 11月 2012) | 2 lines

Upon script loading deoptimize only functions whose owener has been subclassed, as that is the only CHA optimizations being applied to the code at the moment.
Review URL: https://codereview.chromium.org//11365273
------------------------------------------------------------------------
r14926 | asiva@google.com | 2012-11-15 08:14:41 +0900 (木, 15 11月 2012) | 5 lines

Throw illegal argument exception when
- objects which extend NativeWrapper are passed in isolate messages
- closure objects are passed in isolate messages
(issues 6108, 6312)
Review URL: https://codereview.chromium.org//11293163
------------------------------------------------------------------------
r14916 | regis@google.com | 2012-11-15 04:56:39 +0900 (木, 15 11月 2012) | 2 lines

Fix result type checking of redirecting factory in checked mode (issue 6596).
Review URL: https://codereview.chromium.org//11404004
------------------------------------------------------------------------
r14905 | regis@google.com | 2012-11-15 02:33:50 +0900 (木, 15 11月 2012) | 2 lines

Never compile a redirecting factory (issue 6697).
Review URL: https://codereview.chromium.org//11377164
------------------------------------------------------------------------
r14887 | sgjesse@google.com | 2012-11-14 22:01:57 +0900 (水, 14 11月 2012) | 15 lines

Add support for non ASCII strings when communicating with native ports

The string representation in a Dart_CObject strructure is now
UTF8. All strings read are now converted to UTF8 from either ASCII or
UTF16 serialization. All strings posted should be valid UTF8 and are
serialized as either ASCII or UTF16 depending on the content.

Proper andling of surrogate pairs is missing, but will be added when
https://codereview.chromium.org/11368138/ lands.

R=ager@google.com, erikcorry@google.com, asiva@google.com

BUG=

Review URL: https://codereview.chromium.org//11410032
------------------------------------------------------------------------
r14873 | regis@google.com | 2012-11-14 13:28:02 +0900 (水, 14 11月 2012) | 3 lines

Remove private class helping the parser to construct literal lists and maps.
Patch List and Map (implementation) classes with literal factories.
Review URL: https://codereview.chromium.org//11369234
------------------------------------------------------------------------
r14872 | fschneider@google.com | 2012-11-14 08:45:23 +0900 (水, 14 11月 2012) | 6 lines

Enable inlining of functions containing instance-of.

The corresponding issues have been fixed and all tests pass now.

BUG=dart:5216,dart:5217
Review URL: https://codereview.chromium.org//11369230
------------------------------------------------------------------------
r14871 | srdjan@google.com | 2012-11-14 08:31:07 +0900 (水, 14 11月 2012) | 2 lines

Move lazy deoptimization of all optimized code from top level parsing to end of class finalization (after installing new classes, and --use_cha, we need to invalidate some optimzied code)
Review URL: https://codereview.chromium.org//11370008
------------------------------------------------------------------------
r14870 | vegorov@google.com | 2012-11-14 08:21:02 +0900 (水, 14 11月 2012) | 6 lines

Count per check hits in ICData.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//11275290
------------------------------------------------------------------------
r14866 | regis@google.com | 2012-11-14 06:05:55 +0900 (水, 14 11月 2012) | 2 lines

Create symbols for string constants.
Review URL: https://codereview.chromium.org//11360231
------------------------------------------------------------------------
r14864 | fschneider@google.com | 2012-11-14 05:00:47 +0900 (水, 14 11月 2012) | 6 lines

Improve SHR by using range information for the shift count.

Avoid emitting unnecessary range checks for the shift count
if the value is known to be positive and/or less than the
max shift count.
Review URL: https://codereview.chromium.org//11364222
------------------------------------------------------------------------
r14862 | regis@google.com | 2012-11-14 04:02:08 +0900 (水, 14 11月 2012) | 2 lines

Check result type of redirecting factory in checked mode.
Review URL: https://codereview.chromium.org//11369219
------------------------------------------------------------------------
r14860 | srdjan@google.com | 2012-11-14 03:34:05 +0900 (水, 14 11月 2012) | 4 lines

In optimized code use IC calls for instance calls that have no IC data instead of deoptimizing. The optimized IC call increments usage counter and reoptimizes optimized function if the threshold is met.

Recognize closure calls and mark them in ICData. Closure calls do not populate ICData, i.e., number of checks is always 0 (unless mixed closure calls with regular instance calls). Therefore closure IC calls do not count for reoptimization.
Review URL: https://codereview.chromium.org//11361225
------------------------------------------------------------------------
r14838 | ajohnsen@google.com | 2012-11-13 19:41:37 +0900 (火, 13 11月 2012) | 8 lines

Move JSSyntaxRegExp to core as a private member. This removes the last refrences to dart:coreimpl.

After this cleanup, RegExp no longer have a const constructor. Use 'new
RegExp(...)' from now on.

BUG=

Review URL: https://codereview.chromium.org//11365196
------------------------------------------------------------------------
r14828 | hausner@google.com | 2012-11-13 10:06:48 +0900 (火, 13 11月 2012) | 2 lines

Enforce proper library/import syntax
Review URL: https://codereview.chromium.org//11312197
------------------------------------------------------------------------
r14827 | vegorov@google.com | 2012-11-13 09:50:57 +0900 (火, 13 11月 2012) | 8 lines

Eradicate CallSiteInliner::next_ssa_temp_index_.

It should always be equal to the max SSA temp index stored on the caller graph itself. Thus it is redundant and dangerous to store it in two places.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//11312200
------------------------------------------------------------------------
r14825 | srdjan@google.com | 2012-11-13 09:43:17 +0900 (火, 13 11月 2012) | 2 lines

Do not add InstantiatedTypeArgument entries into cache as they cannot be canonicalized. Limit the maximum subtype cache size, so that it does not become brobdingnagian and thus slows the GC.
Review URL: https://codereview.chromium.org//11369204
------------------------------------------------------------------------
r14823 | hausner@google.com | 2012-11-13 08:51:51 +0900 (火, 13 11月 2012) | 2 lines

Fix debugger test
Review URL: https://codereview.chromium.org//11369203
------------------------------------------------------------------------
r14822 | iposva@google.com | 2012-11-13 08:26:38 +0900 (火, 13 11月 2012) | 2 lines

- Fix x64 build.
Review URL: https://codereview.chromium.org//11362214
------------------------------------------------------------------------
r14821 | iposva@google.com | 2012-11-13 08:21:04 +0900 (火, 13 11月 2012) | 5 lines

- Do not mix scalar values and object fields in RawInstance to
  simplify the traversal for GC. Classes with native fields
  have a hidden reference to a typed array containing the
  native fields.
Review URL: https://codereview.chromium.org//11312183
------------------------------------------------------------------------
r14816 | hausner@google.com | 2012-11-13 07:57:39 +0900 (火, 13 11月 2012) | 2 lines

More function literal changes in tests.
Review URL: https://codereview.chromium.org//11363206
------------------------------------------------------------------------
r14814 | fschneider@google.com | 2012-11-13 07:44:34 +0900 (火, 13 11月 2012) | 12 lines

Restrict immediate operands to smi where only smis are supported.

Re-enable redundant phi elimination.

Add x64 codegen templates and assembler instructions for immediate operands.

Fix x64 assembler for imull when using r8-r15.

Add x64 instruction for imulq(reg, imm).

Fix x64 disassembler printing of immediates.
Review URL: https://codereview.chromium.org//11362210
------------------------------------------------------------------------
r14805 | hausner@google.com | 2012-11-13 04:55:11 +0900 (火, 13 11月 2012) | 8 lines

Remove named function literals from library and tests

Start eliminating old-style function literals, i.e. remove
return type and function names.

Enforcing new style function literal syntax can be turned
on with the vm flag --strict_function_literals.
Review URL: https://codereview.chromium.org//11377102
------------------------------------------------------------------------
r14802 | asiva@google.com | 2012-11-13 04:02:44 +0900 (火, 13 11月 2012) | 2 lines

Fix for issue 6623 - Canonicalize implicit static closure objects.
Review URL: https://codereview.chromium.org//11359151
------------------------------------------------------------------------
r14794 | floitsch@google.com | 2012-11-13 02:19:58 +0900 (火, 13 11月 2012) | 7 lines

a === b -> identical(a, b)

Replace === null with == null.

BUG=http://dartbug.com/6380

Review URL: https://codereview.chromium.org//11361190
------------------------------------------------------------------------
r14779 | lrn@google.com | 2012-11-12 17:16:59 +0900 (月, 12 11月 2012) | 5 lines

Convert String to a class.

Remove the StringImplementation class.

Review URL: https://codereview.chromium.org//11085003
------------------------------------------------------------------------
r14769 | regis@google.com | 2012-11-10 08:51:06 +0900 (土, 10 11月 2012) | 6 lines

Fix result type checking of factory constructors of generic classes in VM.
Add a language test.
Fix some language tests.
Fix runtime library.
Note: This does not yet fix result checking of redirecting factories.
Review URL: https://codereview.chromium.org//11369168
------------------------------------------------------------------------
r14756 | srdjan@google.com | 2012-11-10 05:55:31 +0900 (土, 10 11月 2012) | 3 lines

Remove unused/not working function tracing flag and functionality.
Other small fixes, use stub to call optimization of a function (in preparation for reoptimization).
Review URL: https://codereview.chromium.org//11364184
------------------------------------------------------------------------
r14755 | fschneider@google.com | 2012-11-10 04:54:55 +0900 (土, 10 11月 2012) | 6 lines

Reland: Improve smi shift operations and avoid repeated deoptimizations.

This CL includes a bug fix where a NULL check of the pc was missing.

Also change the dart2js test status of arithmetic_test from Skip to Fail.
Review URL: https://codereview.chromium.org//11369158
------------------------------------------------------------------------
r14752 | kmillikin@google.com | 2012-11-10 04:42:01 +0900 (土, 10 11月 2012) | 8 lines

Fix Code::ToCString.

It was printing the entry address in decimal and only the low 32 bits on x64.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//11365179
------------------------------------------------------------------------
r14718 | srdjan@google.com | 2012-11-09 09:58:21 +0900 (金, 09 11月 2012) | 2 lines

Make sure that ParsedFunction holds onto zone handles.
Review URL: https://codereview.chromium.org//11364166
------------------------------------------------------------------------
r14716 | hausner@google.com | 2012-11-09 09:19:43 +0900 (金, 09 11月 2012) | 2 lines

Implement const expressions for local variables
Review URL: https://codereview.chromium.org//11265047
------------------------------------------------------------------------
r14712 | fschneider@google.com | 2012-11-09 07:37:26 +0900 (金, 09 11月 2012) | 4 lines

Revert r14711 and r14709 because of test failures.

TBR=srdjan@google.com
Review URL: https://codereview.chromium.org//11363151
------------------------------------------------------------------------
r14711 | fschneider@google.com | 2012-11-09 07:18:46 +0900 (金, 09 11月 2012) | 4 lines

Fix broken VM build.

TBR=srdjan@google.com
Review URL: https://codereview.chromium.org//11364161
------------------------------------------------------------------------
r14709 | fschneider@google.com | 2012-11-09 07:03:47 +0900 (金, 09 11月 2012) | 8 lines

Improve smi shift operations and avoid repeated deoptimizations.

Smi left shifts do not contain a call now. Only after deoptimizing
at a smi operation we we generate mint code or a generic call to
avoid repeated deoptimization.

Added a test case for the code that was not covered by existing tests.
Review URL: https://codereview.chromium.org//11363141
------------------------------------------------------------------------
r14705 | vegorov@google.com | 2012-11-09 04:13:57 +0900 (金, 09 11月 2012) | 8 lines

Use structural loop info computed by register allocator to mark loop phis.

Currently it disagrees with loop information computed in other parts of optimization pipeline that do not require loops to be properly nested.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11404003
------------------------------------------------------------------------
r14701 | gram@google.com | 2012-11-09 03:41:58 +0900 (金, 09 11月 2012) | 2 lines

Fix library syntax
Review URL: https://codereview.chromium.org//11368124
------------------------------------------------------------------------
r14698 | regis@google.com | 2012-11-09 03:28:07 +0900 (金, 09 11月 2012) | 4 lines

Pass closure object as first implicit argument to closure functions.
Remove code passing captured receiver to native instance closures; instead,
access captured receiver in context, as non-native functions do.
Review URL: https://codereview.chromium.org//11360116
------------------------------------------------------------------------
r14695 | iposva@google.com | 2012-11-09 03:07:54 +0900 (金, 09 11月 2012) | 5 lines

Fix bug 6586:
- Attempt to run the Monitor thread_test multiple times before failing
  due to its potential to failure due to timing.
- Use named constants when converting millis to seconds and nanos.
Review URL: https://codereview.chromium.org//11361157
------------------------------------------------------------------------
r14673 | vegorov@google.com | 2012-11-08 11:23:41 +0900 (木, 08 11月 2012) | 10 lines

Try allocating loop phi into a register even if phi has only unconstrained uses but there are cheap eviction candidates: values that come into the loop and have only unconstrained uses in it.

When spilling a value inside the loop that has only unconstrained uses in this loop move spilling point outside of the loop.

This tweaks allow to minimize amount of memory moves on loop back edges.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11361161
------------------------------------------------------------------------
r14668 | srdjan@google.com | 2012-11-08 09:19:53 +0900 (木, 08 11月 2012) | 1 line

Add flag --remove-redundant-phis, default to false until incorrect code generation is fixed. This CL makes all test pass with --optimization-counter-threshold=5 .
------------------------------------------------------------------------
r14611 | srdjan@google.com | 2012-11-07 10:34:50 +0900 (水, 07 11月 2012) | 2 lines

Fixed disabling inlining of static calls that were not executed.
Review URL: https://codereview.chromium.org//11275180
------------------------------------------------------------------------
r14605 | srdjan@google.com | 2012-11-07 08:47:19 +0900 (水, 07 11月 2012) | 2 lines

Do not inline static calls that have not been executed in unoptimized code: the inlined function does not have type feedback that takes that call's arguments into account. As a side effect, it fixes a crash in smi-equality.
Review URL: https://codereview.chromium.org//11312105
------------------------------------------------------------------------
r14600 | hausner@google.com | 2012-11-07 07:51:01 +0900 (水, 07 11月 2012) | 2 lines

Make sure setter does not conflict with method
Review URL: https://codereview.chromium.org//11312109
------------------------------------------------------------------------
r14589 | asiva@google.com | 2012-11-07 04:11:07 +0900 (水, 07 11月 2012) | 2 lines

Avoid duplicate null checks when calling SetRaw from InitializeHandle
Review URL: https://codereview.chromium.org//11369028
------------------------------------------------------------------------
r14588 | asiva@google.com | 2012-11-07 04:07:43 +0900 (水, 07 11月 2012) | 2 lines

Fix length computation in Dart_StringToUTF8.
Review URL: https://codereview.chromium.org//11275107
------------------------------------------------------------------------
r14583 | hausner@google.com | 2012-11-07 02:54:27 +0900 (水, 07 11月 2012) | 8 lines

Fix various inheritance bugs

Fields can be overridden by subclasses
A setter does not conflict with a method
Eliminate outdated tests

Fixes issue 6482
Review URL: https://codereview.chromium.org//11312095
------------------------------------------------------------------------
r14553 | asiva@google.com | 2012-11-06 11:58:00 +0900 (火, 06 11月 2012) | 2 lines

Fix some warnings generated when -Wconversion-null is used.
Review URL: https://codereview.chromium.org//11312096
------------------------------------------------------------------------
r14549 | asiva@google.com | 2012-11-06 09:56:53 +0900 (火, 06 11月 2012) | 2 lines

Added a unit test case for issue 6448
Review URL: https://codereview.chromium.org//11359064
------------------------------------------------------------------------
r14548 | asiva@google.com | 2012-11-06 09:56:41 +0900 (火, 06 11月 2012) | 2 lines

Fix compiler warning.
Review URL: https://codereview.chromium.org//11364084
------------------------------------------------------------------------
r14547 | tball@google.com | 2012-11-06 08:51:40 +0900 (火, 06 11月 2012) | 5 lines

Made string sub-classes friends of Object, to give them access to Object::Allocate when compiling with clang.

BUG=

Review URL: https://codereview.chromium.org//11362101
------------------------------------------------------------------------
r14545 | tball@google.com | 2012-11-06 07:22:19 +0900 (火, 06 11月 2012) | 10 lines

Merged String subclasses into String.

Merged String subclasses (OneByteString, etc.) into String, keeping
their raw types.  This allows String handles to continue to point
to a String after its raw type is changed, such as to make its data
external.

BUG=

Review URL: https://codereview.chromium.org//11367044
------------------------------------------------------------------------
r14544 | regis@google.com | 2012-11-06 06:00:12 +0900 (火, 06 11月 2012) | 4 lines

Do not copy type parameter bound from declaration to reference, since we are
not able to properly finalize it. Revisit later.
This fixes issue 6488. Siva will add a test.
Review URL: https://codereview.chromium.org//11366093
------------------------------------------------------------------------
r14540 | srdjan@google.com | 2012-11-06 02:07:06 +0900 (火, 06 11月 2012) | 2 lines

Remove special meaning when usage counter reaches the threshold.
Review URL: https://codereview.chromium.org//11366076
------------------------------------------------------------------------
r14500 | hausner@google.com | 2012-11-03 05:30:08 +0900 (土, 03 11月 2012) | 4 lines

Make library, import, export, part pseudo-keywords

Resubmit cl 14446 after Ivan's keyword table fix.
Review URL: https://codereview.chromium.org//11367069
------------------------------------------------------------------------
r14499 | srdjan@google.com | 2012-11-03 05:21:33 +0900 (土, 03 11月 2012) | 2 lines

For megamorphic calls (IC calls in optimized code), use a stub without attempting to count usage of function.
Review URL: https://codereview.chromium.org//11359046
------------------------------------------------------------------------
r14486 | srdjan@google.com | 2012-11-03 01:35:05 +0900 (土, 03 11月 2012) | 2 lines

Various little cleanups to avoid excessive allocation of handles.
Review URL: https://codereview.chromium.org//11358052
------------------------------------------------------------------------
r14482 | dgrove@google.com | 2012-11-03 01:01:27 +0900 (土, 03 11月 2012) | 5 lines

Add missing path_separator arguments after sdk paths became
deeper.

TBR=iposva@google.com
Review URL: https://codereview.chromium.org//11293063
------------------------------------------------------------------------
r14477 | dgrove@google.com | 2012-11-03 00:35:25 +0900 (土, 03 11月 2012) | 2 lines

Fix a few more dregs from sdk move
Review URL: https://codereview.chromium.org//11360061
------------------------------------------------------------------------
r14475 | dgrove@google.com | 2012-11-03 00:18:11 +0900 (土, 03 11月 2012) | 2 lines

Changes outside pkg/ and lib/ for directory refactoring
Review URL: https://codereview.chromium.org//11358024
------------------------------------------------------------------------
r14471 | zerny@google.com | 2012-11-02 23:02:53 +0900 (金, 02 11月 2012) | 7 lines

Revert "Remove push arguments and replace constants in FlowGraph::InlineCall."

This reverts r14468 due to test failures.

TBR=kmillikin@google.com

Review URL: https://codereview.chromium.org//11362060
------------------------------------------------------------------------
r14468 | zerny@google.com | 2012-11-02 22:29:35 +0900 (金, 02 11月 2012) | 5 lines

Remove push arguments and replace constants in FlowGraph::InlineCall.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11262008
------------------------------------------------------------------------
r14463 | zerny@google.com | 2012-11-02 21:26:07 +0900 (金, 02 11月 2012) | 8 lines

More inlining flags and tuned heuristics.

The heuristics should be examined further, but these maintain about the same
runtime for the benchmarks while decreasing compile time for dart2js.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11269040
------------------------------------------------------------------------
r14453 | iposva@google.com | 2012-11-02 16:29:12 +0900 (金, 02 11月 2012) | 3 lines

- Prepopulate the keyword symbol table otherwise we can end up
  with empty spots when reading from a snapshot.
Review URL: https://codereview.chromium.org//11366058
------------------------------------------------------------------------
r14448 | hausner@google.com | 2012-11-02 09:19:48 +0900 (金, 02 11月 2012) | 2 lines

Revert cl 14446
Review URL: https://codereview.chromium.org//11293054
------------------------------------------------------------------------
r14446 | hausner@google.com | 2012-11-02 08:47:25 +0900 (金, 02 11月 2012) | 2 lines

Make library, import, export, part built-in identifiers
Review URL: https://codereview.chromium.org//11360051
------------------------------------------------------------------------
r14444 | srdjan@google.com | 2012-11-02 08:25:26 +0900 (金, 02 11月 2012) | 2 lines

Add is_intrinsic and is_not_intrinsic bits to prevent repeated tests on the same function (inlining, recompilations). The bist are set lazily, initially both are false.
Review URL: https://codereview.chromium.org//11358047
------------------------------------------------------------------------
r14441 | fschneider@google.com | 2012-11-02 07:47:41 +0900 (金, 02 11月 2012) | 12 lines

Inline native String.charCodeAt in optimized code and fix a bounds-check bug.

Introduce a new IL instruction that does charCodeAt from
1- and 2-byte character strings. The existing CheckArrayBound
instructions is extended to be used for string bounds checking.

Also fix a bug with a missing compile-time bounds-check on constant
arrays.

TEST=tests/language/optimized_string_charcodeat.dart,
tests/language/optimized_constant_array_string_access.dart
Review URL: https://codereview.chromium.org//11360033
------------------------------------------------------------------------
r14434 | srdjan@google.com | 2012-11-02 06:06:36 +0900 (金, 02 11月 2012) | 2 lines

Do not recompute unary_checks repeatedly. Add special (and quicker) way to check for method overrides using CHA.
Review URL: https://codereview.chromium.org//11275110
------------------------------------------------------------------------
r14426 | vegorov@google.com | 2012-11-02 03:56:39 +0900 (金, 02 11月 2012) | 8 lines

Improve RangeBoundary::LowerBound/UpperBound.

They should not just return MinSmi/MaxSmi when symbol's range is not available. Instead they should take offset into account.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11275098
------------------------------------------------------------------------
r14422 | srdjan@google.com | 2012-11-02 03:10:30 +0900 (金, 02 11月 2012) | 2 lines

Fix issue 6288, move DeoptimizeAll to top level parsing. Allow optimizing compiler to optimize even when ooptimzied code is active.
Review URL: https://codereview.chromium.org//11293038
------------------------------------------------------------------------
r14420 | asiva@google.com | 2012-11-02 02:58:58 +0900 (金, 02 11月 2012) | 2 lines

Remove some unnecessary class handle creations.
Review URL: https://codereview.chromium.org//11293031
------------------------------------------------------------------------
r14405 | lrn@google.com | 2012-11-01 22:46:30 +0900 (木, 01 11月 2012) | 5 lines

Renaming IndexOutOfRangeException to RangeError.

It now extends ArgumentError.

Review URL: https://codereview.chromium.org//11275042
------------------------------------------------------------------------
r14381 | sgjesse@google.com | 2012-11-01 17:09:30 +0900 (木, 01 11月 2012) | 7 lines

Fix broken VM build caused by 14380

TBR=csaphiro@google.com

BUG=

Review URL: https://codereview.chromium.org//11361028
------------------------------------------------------------------------
r14380 | sgjesse@google.com | 2012-11-01 16:53:33 +0900 (木, 01 11月 2012) | 15 lines

New APIs for external byte arrays

The following APIs have been added:

Dart_IsExternalByteArray: Check whether an object is an external byte
array.

Dart_ExternalByteArrayGetData: Return the pointer to the external data
hosted by the external byte array.

R=cshapiro@google.com

BUG=

Review URL: https://codereview.chromium.org//11362009
------------------------------------------------------------------------
r14377 | srdjan@google.com | 2012-11-01 08:17:20 +0900 (木, 01 11月 2012) | 2 lines

Any instance call with too many checks is left to be megamorphic. This helps with, e.g., LoadField instructions with large number of checks and frequent deoptimization. Deoptimization improves on dart2js/swarm: total number of deoptimization 956 -> 753; number of methods becoming unoptimizable 101 -> 52.
Review URL: https://codereview.chromium.org//11367022
------------------------------------------------------------------------
r14367 | srdjan@google.com | 2012-11-01 05:07:31 +0900 (木, 01 11月 2012) | 2 lines

Add flag --always_cleared_ic_data, which forces a cleared ICData to be emitted with each IC call (instead of propagating the ICData from unoptimized to optimized code). This addresses Kevin's concern that propagating the ICData may hurt performance when inlining methods as the IC calls of inlined methods may not need all classes as the unoptimized code. Currently running with cleared ICData slows dart2js by > 2%, probably because the ICData has to be repopulated by optimized code through calls to runtime. Adding the flag for experimenting as we work on inlining strategies and megamorphic calls.
Review URL: https://codereview.chromium.org//11347049
------------------------------------------------------------------------
r14366 | hausner@google.com | 2012-11-01 04:43:44 +0900 (木, 01 11月 2012) | 4 lines

Prevent mutation of final variables

Fixes issue 4328
Review URL: https://codereview.chromium.org//11363012
------------------------------------------------------------------------
r14362 | regis@google.com | 2012-11-01 03:13:12 +0900 (木, 01 11月 2012) | 4 lines

Remove references to ObjectNotClosureException and ClosureArgumentMismatchException
from the VM (issue 6124).
These are replaced with NoSuchMethodError for now (work in progress).
Review URL: https://codereview.chromium.org//11312019
------------------------------------------------------------------------
r14357 | asiva@google.com | 2012-11-01 02:56:46 +0900 (木, 01 11月 2012) | 23 lines

- Represent strings internally in UTF-16 format, this makes it
  compatible with webkit and will allow for easy externalization of
  strings. One byte strings are retained for pure ASCII strings.
  (The language specification was changed recently to reflect this as
   follows "A string is a sequence of UTF-16 code units").
- Remove four byte string class and all references to it.
- Rename some of the string functions in Dart API to make them
  consistent and better describe the underlying functionality
  Dart_NewString => Dart_NewStringFromCString
  Dart_NewString8 => Dart_NewStringFromUTF8
  Dart_NewString16 => Dart_NewStringFromUTF16
  Dart_NewString32 => Dart_NewStringFromUTF32
  Dart_NewExternalString8 => Dart_NewExternalUTF8String
  Dart_NewExternalString16 => Dart_NewExternalUTF16String
  Dart_NewExternalString32 => Dart_NewExternalUTF32String
  Dart_StringGet8 => Dart_StringToUTF8
  Dart_StringGet16 => Dart_StringToUTF16
  Dart_StringToCString => Dart_StringToCString
  Dart_IsString8 => Removed
  Dart_IsString16 -> Removed
  Dart_StringToBytes -> Removed
  Dart_StringGet32 -> Removed
Review URL: https://codereview.chromium.org//11318018
------------------------------------------------------------------------
r14350 | srdjan@google.com | 2012-11-01 01:35:30 +0900 (木, 01 11月 2012) | 2 lines

Use unary class checks when emitting instance calls in optimized mode.
Review URL: https://codereview.chromium.org//11339033
------------------------------------------------------------------------
r14343 | fschneider@google.com | 2012-10-31 23:53:15 +0900 (水, 31 10月 2012) | 2 lines

Relational comparisons for unboxed mints.
Review URL: https://codereview.chromium.org//11344011
------------------------------------------------------------------------
r14324 | lrn@google.com | 2012-10-31 19:32:54 +0900 (水, 31 10月 2012) | 9 lines

Change signature of noSuchMethod to take an InvocationMirror.

Requires VM and dart2js/dart2dart changes to work.

Committed: https://code.google.com/p/dart/source/detail?r=14198

Committed: https://code.google.com/p/dart/source/detail?r=14254

Review URL: https://codereview.chromium.org//11231074
------------------------------------------------------------------------
r14309 | srdjan@google.com | 2012-10-31 05:59:22 +0900 (水, 31 10月 2012) | 2 lines

Fix equality instruction to switch from checked (polymorphic) to megamorphic state. This helps dart2js as it eliminates excessive deoptimizations (probeForAdding runs now in optimized mode) -> 5% improvement.
Review URL: https://codereview.chromium.org//11343046
------------------------------------------------------------------------
r14304 | srdjan@google.com | 2012-10-31 04:59:58 +0900 (水, 31 10月 2012) | 2 lines

Add range to kBIT_AND with positive constants. Use that range to eliminate compares in left shifts.
Review URL: https://codereview.chromium.org//11175013
------------------------------------------------------------------------
r14296 | hausner@google.com | 2012-10-31 02:45:36 +0900 (水, 31 10月 2012) | 4 lines

Disallow 'dynamic' as type parameter name

Fixes issue 2492
Review URL: https://codereview.chromium.org//11343044
------------------------------------------------------------------------
r14295 | srdjan@google.com | 2012-10-31 02:27:58 +0900 (水, 31 10月 2012) | 2 lines

Fix issue 6403: do not crash if super indexed load does not exist (return 'no-such-method call' instrcution as result.
Review URL: https://codereview.chromium.org//11273117
------------------------------------------------------------------------
r14293 | vegorov@google.com | 2012-10-31 01:26:46 +0900 (水, 31 10月 2012) | 11 lines

Allow bound check elimination to eliminate checks when both array length and index boundaries are expressed through the same symbol.

For example:

var list = new List(n);
for (var i = 0; i < n; i++) list[i];

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11273111
------------------------------------------------------------------------
r14281 | ajohnsen@google.com | 2012-10-30 23:19:57 +0900 (火, 30 10月 2012) | 5 lines

Move StringImplementation from coreimpl to core as _StringImpl.

BUG=

Review URL: https://codereview.chromium.org//11348035
------------------------------------------------------------------------
r14274 | ajohnsen@google.com | 2012-10-30 22:25:04 +0900 (火, 30 10月 2012) | 5 lines

Move ListImplementation from coreimpl to core, as a private member.

BUG=

Review URL: https://codereview.chromium.org//11189141
------------------------------------------------------------------------
r14260 | lrn@google.com | 2012-10-30 19:47:42 +0900 (火, 30 10月 2012) | 5 lines

Revert "Change signature of noSuchMethod to take an InvocationMirror."

TBR=ager@google.com

Review URL: https://codereview.chromium.org//11339042
------------------------------------------------------------------------
r14258 | vegorov@google.com | 2012-10-30 19:27:51 +0900 (火, 30 10月 2012) | 14 lines

Fold away x === null comparisons when propagated cid of x is not kDynamicCid.

Eliminate single operand phis that appear in the graph after constant propagation.

Recognize constructors for _ObjectArray and _GrowableObjectArray.

Fix bug in result cid recognition for List. constructor call. A call with an argument does not guarantee that fixed size array (kArrayCid) is returned.

These changes together allow us to produce better code after inlining of List constructor, otherwise we lose information due to non-specialized control-flow that chooses between _GrowableObjectArray and _ObjectArray.

R=kmillikin@google.com
BUG=

Review URL: https://codereview.chromium.org//11342014
------------------------------------------------------------------------
r14254 | lrn@google.com | 2012-10-30 19:04:12 +0900 (火, 30 10月 2012) | 7 lines

Change signature of noSuchMethod to take an InvocationMirror.

Requires VM and dart2js/dart2dart changes to work.

Committed: https://code.google.com/p/dart/source/detail?r=14198

Review URL: https://codereview.chromium.org//11231074
------------------------------------------------------------------------
r14252 | kmillikin@google.com | 2012-10-30 18:50:35 +0900 (火, 30 10月 2012) | 9 lines

Compress deoptimization information by sharing common suffixes.

For all the deoptimization entries in a function, build a suffix trie.  Add
a new deoptimization instruction that indicates the rest of the translation
is a fixed-length suffix of another entry.

BUG=

Review URL: https://codereview.chromium.org//11040058
------------------------------------------------------------------------
r14249 | kmillikin@google.com | 2012-10-30 18:37:35 +0900 (火, 30 10月 2012) | 10 lines

Simplify the implementation and generated code for the IC stubs.

The implementation now uses the same code for 1 and >1 argument cases.  For
the 1 argument case the generated code is essentially the same code as
before.  For the >1 argument case the generated code is slightly improved.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11272028
------------------------------------------------------------------------
r14237 | iposva@google.com | 2012-10-30 09:52:21 +0900 (火, 30 10月 2012) | 3 lines

- GrowableArray::RemoveLast returns the value being removed
  to avoid having to call Last() followed by RemoveLast().
Review URL: https://codereview.chromium.org//11348026
------------------------------------------------------------------------
r14236 | srdjan@google.com | 2012-10-30 09:48:11 +0900 (火, 30 10月 2012) | 2 lines

Propagate ICData from unoptimized code to instance calls in optimized code.
Review URL: https://codereview.chromium.org//11341025
------------------------------------------------------------------------
r14234 | regis@google.com | 2012-10-30 09:06:24 +0900 (火, 30 10月 2012) | 3 lines

Fix wrong canonicalization of signature class due to name collision (issue 6353).
Add test.
Review URL: https://codereview.chromium.org//11342028
------------------------------------------------------------------------
r14233 | hausner@google.com | 2012-10-30 09:02:22 +0900 (火, 30 10月 2012) | 4 lines

Handle super call to unary operators

Fix issue 1288.
Review URL: https://codereview.chromium.org//11342027
------------------------------------------------------------------------
r14224 | asiva@google.com | 2012-10-30 06:17:54 +0900 (火, 30 10月 2012) | 2 lines

Fix for issue 6311 (serialize the right type).
Review URL: https://codereview.chromium.org//11344018
------------------------------------------------------------------------
r14221 | iposva@google.com | 2012-10-30 05:26:14 +0900 (火, 30 10月 2012) | 4 lines

- Avoid recursion in the scavenger by remembering weak properties
  with reachable keys in a stack.
- Added assertion to trigger when scavenger is called recursively.
Review URL: https://codereview.chromium.org//11338017
------------------------------------------------------------------------
r14215 | regis@google.com | 2012-10-30 03:31:24 +0900 (火, 30 10月 2012) | 2 lines

Remove --reject_named_argument_as_positional flag from the VM.
Review URL: https://codereview.chromium.org//11341014
------------------------------------------------------------------------
r14199 | lrn@google.com | 2012-10-29 23:07:10 +0900 (月, 29 10月 2012) | 5 lines

Revert "Change signature of noSuchMethod to take an InvocationMirror."

TBR=floitsch@google.com

Review URL: https://codereview.chromium.org//11336011
------------------------------------------------------------------------
r14198 | lrn@google.com | 2012-10-29 22:34:58 +0900 (月, 29 10月 2012) | 5 lines

Change signature of noSuchMethod to take an InvocationMirror.

Requires VM and dart2js/dart2dart changes to work.

Review URL: https://codereview.chromium.org//11231074
------------------------------------------------------------------------
r14173 | ajohnsen@google.com | 2012-10-29 17:38:15 +0900 (月, 29 10月 2012) | 5 lines

Move Arrays, Collections and Maps into a new library, dart:collections.

BUG=

Review URL: https://codereview.chromium.org//11274043
------------------------------------------------------------------------
r14157 | hausner@google.com | 2012-10-27 07:31:49 +0900 (土, 27 10月 2012) | 8 lines

More fixes for super[]

Extend the LoadIndexedNode to also handle super[] and super[]=

Make sure super []= returns the value.
Handle side effects in index expression correctly.
Defer operator function resolution to the flow graph build phase.
Review URL: https://codereview.chromium.org//11267027
------------------------------------------------------------------------
r14141 | vegorov@google.com | 2012-10-27 01:04:55 +0900 (土, 27 10月 2012) | 10 lines

Simple array bounds check elimination on top of range analysis framework.

Currenly eliminates only bounds checks when there is an implicit constraint bounding index's range with array length.

Does not eliminate redundancy in expressions like a[i + 1], a[i].

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11262033
------------------------------------------------------------------------
r14131 | fschneider@google.com | 2012-10-26 21:28:11 +0900 (金, 26 10月 2012) | 4 lines

Small performance fix for mint equality operation.

Mint compares don't have side effects and can't deoptimize.
Review URL: https://codereview.chromium.org//11313005
------------------------------------------------------------------------
r14122 | lrn@google.com | 2012-10-26 17:28:33 +0900 (金, 26 10月 2012) | 3 lines

Convert NoMoreElementsException and EmptyQueueException to StateError.

Review URL: https://codereview.chromium.org//11269045
------------------------------------------------------------------------
r14121 | ager@google.com | 2012-10-26 17:00:05 +0900 (金, 26 10月 2012) | 8 lines

Introduce VM API for the patching mechanism.

This will be used to use patching for the dart:io library.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//11264032
------------------------------------------------------------------------
r14118 | cshapiro@google.com | 2012-10-26 10:26:56 +0900 (金, 26 10月 2012) | 3 lines

Avoid integer overflow when computing the size of new space in bytes.

Review URL: https://codereview.chromium.org//11276022
------------------------------------------------------------------------
r14113 | iposva@google.com | 2012-10-26 08:46:01 +0900 (金, 26 10月 2012) | 4 lines

- Consolidate code into the old generation.
- Record pointers between code objects.
- Collect unreferenced code objects.
Review URL: https://codereview.chromium.org//11265026
------------------------------------------------------------------------
r14112 | tball@google.com | 2012-10-26 08:38:45 +0900 (金, 26 10月 2012) | 5 lines

Updated GetTimeZoneName() to return "" if localtime_r fails or has a NULL for its tm_zone value, like V8 does.  Also updated GetTimeZoneOffsetInSeconds() to return 0 on localtime_r failure, like V8.

BUG=5943

Review URL: https://codereview.chromium.org//11267051
------------------------------------------------------------------------
r14098 | srdjan@google.com | 2012-10-26 05:18:54 +0900 (金, 26 10月 2012) | 4 lines

Check class instruction supports Smi check. This fixes missed inlining of isOdd/isEven
Fixed a nasty bug in equality optimization. Make sure that we emit CheckSmiInstr instead of CheckClassInstr if we are only checking for smi.
 
Review URL: https://codereview.chromium.org//11262025
------------------------------------------------------------------------
r14079 | fschneider@google.com | 2012-10-25 23:31:44 +0900 (木, 25 10月 2012) | 10 lines

Small IL cleanup.

1. Remove manual inlining and intrinsification of Double.toDouble
and Integer.toInt. The flow graph inliner can handle these since
they are not native library functions.

2. Remove unused member instance_call_ from UnarySmiOp.

R=kmillikin@google.com
Review URL: https://codereview.chromium.org//11267043
------------------------------------------------------------------------
r14068 | vegorov@google.com | 2012-10-25 20:38:31 +0900 (木, 25 10月 2012) | 10 lines

Simplify range analysis algorithm.

Replace generic fix point range analysis algorithm based on widening and narrowing operators with an ad hoc single dominator tree pass.

To improve precision discover initial value and direction of the growth for simple induction variables.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11283002
------------------------------------------------------------------------
r14065 | ager@google.com | 2012-10-25 18:57:06 +0900 (木, 25 10月 2012) | 7 lines

Revert change that was based on a local change that was not
part of the test script change.

R=sgjesse@google.com
BUG=

Review URL: https://codereview.chromium.org//11274042
------------------------------------------------------------------------
r14064 | ager@google.com | 2012-10-25 18:38:51 +0900 (木, 25 10月 2012) | 6 lines

Fix CCTestSuite in test.dart.

R=sgjesse@google.com
BUG=

Review URL: https://codereview.chromium.org//11270032
------------------------------------------------------------------------
r14053 | srdjan@google.com | 2012-10-25 09:33:11 +0900 (木, 25 10月 2012) | 2 lines

Hopefully fix warnings of uninitialized variables.
Review URL: https://codereview.chromium.org//11264024
------------------------------------------------------------------------
r14051 | srdjan@google.com | 2012-10-25 09:24:17 +0900 (木, 25 10月 2012) | 2 lines

Intrinsify Mint/Smi combined comparisons by extending a Smi to a 64 bit integer and doing a 64-bit integer compare (ia32 only).
Review URL: https://codereview.chromium.org//11262019
------------------------------------------------------------------------
r14046 | iposva@google.com | 2012-10-25 07:29:34 +0900 (木, 25 10月 2012) | 3 lines

- Do not pre-resolve static calls. This makes it easier to
  record the out-going edges to other generated code.
Review URL: https://codereview.chromium.org//11266022
------------------------------------------------------------------------
r14036 | srdjan@google.com | 2012-10-25 05:38:53 +0900 (木, 25 10月 2012) | 2 lines

Trace when disabling optimized code (--trace-disabling-optimized-code)
Review URL: https://codereview.chromium.org//11282003
------------------------------------------------------------------------
r14033 | fschneider@google.com | 2012-10-25 03:18:11 +0900 (木, 25 10月 2012) | 8 lines

Fix deoptimzation bug in hoisting smi operation out of loops.

The hoisted operations used an incorrect deoptimization target
so that the program continued with an incorrect environment
after deoptimization.

TEST=tests/language/deopt_smi_op.dart
Review URL: https://codereview.chromium.org//11270013
------------------------------------------------------------------------
r14022 | floitsch@google.com | 2012-10-25 00:04:32 +0900 (木, 25 10月 2012) | 3 lines

Make isEmpty a getter.

Review URL: https://codereview.chromium.org//11238035
------------------------------------------------------------------------
r14015 | floitsch@google.com | 2012-10-24 22:05:11 +0900 (水, 24 10月 2012) | 3 lines

Make hasNext a getter instead of a method.

Review URL: https://codereview.chromium.org//11230011
------------------------------------------------------------------------
r14006 | fschneider@google.com | 2012-10-24 19:44:00 +0900 (水, 24 10月 2012) | 20 lines

Enable merging of comparisons into branches in checked mode.

Instead of inserting an explicit type check at branches, the
branch instruction checks the input for boolean itself:

"if (a < b)" will be translated by the flowgraph builder
like this:

  CheckedBranch(a < b)

before it would look like this:

  t1 <- (a < b)
  t2 <- AssertBool(t1)
  Branch(t2 === true)


Also in this change:
flow_graph_optimizer.cc contains a small fix of an assert triggered when running with --trace-optimization.
Review URL: https://codereview.chromium.org//11232063
------------------------------------------------------------------------
r14001 | zerny@google.com | 2012-10-24 18:46:24 +0900 (水, 24 10月 2012) | 8 lines

Set previous pointer to graph entry for initial definitions.

This should be replace with direct pointers to the containing block on all
instructions.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11265005
------------------------------------------------------------------------
r13999 | zerny@google.com | 2012-10-24 17:22:11 +0900 (水, 24 10月 2012) | 5 lines

Inlining of calls with optional parameters.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11028140
------------------------------------------------------------------------
r13992 | lrn@google.com | 2012-10-24 15:17:21 +0900 (水, 24 10月 2012) | 5 lines

Move ObjectNotClosureException and ClosureArgumentMismatchException to patch file.

They are no longer available in the core library, and are only used by the VM.

Review URL: https://codereview.chromium.org//11233063
------------------------------------------------------------------------
r13987 | regis@google.com | 2012-10-24 07:29:44 +0900 (水, 24 10月 2012) | 3 lines

Ambiguous references do not necessarily cause compilation errors (issue 5736).
Triage related co19 test failures.
Review URL: https://codereview.chromium.org//11232071
------------------------------------------------------------------------
r13985 | srdjan@google.com | 2012-10-24 05:56:51 +0900 (水, 24 10月 2012) | 2 lines

Print time when tracing compiler.
Review URL: https://codereview.chromium.org//11251002
------------------------------------------------------------------------
r13981 | hausner@google.com | 2012-10-24 03:02:25 +0900 (水, 24 10月 2012) | 4 lines

Fix resolution of super getters and setters

Issue 2243
Review URL: https://codereview.chromium.org//11230061
------------------------------------------------------------------------
r13974 | floitsch@google.com | 2012-10-24 01:15:36 +0900 (水, 24 10月 2012) | 3 lines

isEven, isOdd, isNegative, isMaxValue, isMinValue, isInfinite, isPositive, isSingleValue.

Review URL: https://codereview.chromium.org//11227042
------------------------------------------------------------------------
r13973 | srdjan@google.com | 2012-10-24 01:13:33 +0900 (水, 24 10月 2012) | 2 lines

Convert 'identical' to strict equal.
Review URL: https://codereview.chromium.org//11234047
------------------------------------------------------------------------
r13972 | srdjan@google.com | 2012-10-24 01:03:56 +0900 (水, 24 10月 2012) | 2 lines

Cleanups in the inliner.
Review URL: https://codereview.chromium.org//11231065
------------------------------------------------------------------------
r13969 | fschneider@google.com | 2012-10-24 00:46:28 +0900 (水, 24 10月 2012) | 2 lines

Propagate class-id through checked mode type checks.
Review URL: https://codereview.chromium.org//11230053
------------------------------------------------------------------------
r13927 | zerny@google.com | 2012-10-23 17:14:59 +0900 (火, 23 10月 2012) | 5 lines

Restructure code generation timers and add sub-timers for inlining phases.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11236063
------------------------------------------------------------------------
r13922 | zerny@google.com | 2012-10-23 15:11:31 +0900 (火, 23 10月 2012) | 5 lines

Avoid rediscovering blocks on each call to FlowGraph::InlineCall.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11092102
------------------------------------------------------------------------
r13917 | hausner@google.com | 2012-10-23 09:13:39 +0900 (火, 23 10月 2012) | 4 lines

Make super accessible in closures.

Fix issue 3197.
Review URL: https://codereview.chromium.org//11225050
------------------------------------------------------------------------
r13915 | hausner@google.com | 2012-10-23 08:23:57 +0900 (火, 23 10月 2012) | 2 lines

Add == method name to symbol table
Review URL: https://codereview.chromium.org//11236050
------------------------------------------------------------------------
r13909 | srdjan@google.com | 2012-10-23 05:59:41 +0900 (火, 23 10月 2012) | 2 lines

Fix a typo in super ==.
Review URL: https://codereview.chromium.org//11232050
------------------------------------------------------------------------
r13907 | srdjan@google.com | 2012-10-23 05:33:12 +0900 (火, 23 10月 2012) | 2 lines

Fix super ==: Test first for null before call inf super ==.
Review URL: https://codereview.chromium.org//11230034
------------------------------------------------------------------------
r13901 | hausner@google.com | 2012-10-23 03:54:58 +0900 (火, 23 10月 2012) | 4 lines

Fix inheritance of certain static members in VM

Fixes bug 3778
Review URL: https://codereview.chromium.org//11225033
------------------------------------------------------------------------
r13893 | johnmccutchan@google.com | 2012-10-23 02:04:50 +0900 (火, 23 10月 2012) | 3 lines

Inline load and store index on Float32Arrays.

Review URL: https://codereview.chromium.org//11198072
------------------------------------------------------------------------
r13891 | regis@google.com | 2012-10-23 01:46:26 +0900 (火, 23 10月 2012) | 2 lines

Enforce new optional parameter rules.
Review URL: https://codereview.chromium.org//11186064
------------------------------------------------------------------------
r13882 | zerny@google.com | 2012-10-23 00:13:32 +0900 (火, 23 10月 2012) | 5 lines

Cache parsed functions when inlining.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11228022
------------------------------------------------------------------------
r13877 | zerny@google.com | 2012-10-22 23:19:08 +0900 (月, 22 10月 2012) | 7 lines

Enable recursive inlining.

Reverts r13842.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11233036
------------------------------------------------------------------------
r13874 | vegorov@google.com | 2012-10-22 22:36:35 +0900 (月, 22 10月 2012) | 8 lines

Allow splitting at lifetime holes.

If the allocation finger is moved past lifetime hole unwind pending interval to the start of the range before attempting to split.

R=fschneider@google.com
BUG=dart:6094

Review URL: https://codereview.chromium.org//11228025
------------------------------------------------------------------------
r13871 | fschneider@google.com | 2012-10-22 22:31:31 +0900 (月, 22 10月 2012) | 5 lines

Avoid creating unnecessary environments during SSA renaming.

Only instructions that can deoptimize and Goto-instructions
ever need an environment.
Review URL: https://codereview.chromium.org//11225028
------------------------------------------------------------------------
r13866 | floitsch@google.com | 2012-10-22 21:41:04 +0900 (月, 22 10月 2012) | 3 lines

Make hashCode a getter and not a method.

Review URL: https://codereview.chromium.org//11191078
------------------------------------------------------------------------
r13863 | lrn@google.com | 2012-10-22 20:52:48 +0900 (月, 22 10月 2012) | 3 lines

Remove unused WrongArgumentCountException.

Review URL: https://codereview.chromium.org//11236020
------------------------------------------------------------------------
r13859 | fschneider@google.com | 2012-10-22 19:40:19 +0900 (月, 22 10月 2012) | 5 lines

Enable redundancy elimination for array loads.

This CL also adds a second round of CSE if necessary to make use
 of secondary effects for more optimization opportunities.
Review URL: https://codereview.chromium.org//11234002
------------------------------------------------------------------------
r13857 | lrn@google.com | 2012-10-22 18:51:14 +0900 (月, 22 10月 2012) | 5 lines

Change StackOverflowException to be an Error.

Also change OutOfMemoryError to actually extend Error.

Review URL: https://codereview.chromium.org//11227021
------------------------------------------------------------------------
r13843 | tball@google.com | 2012-10-20 07:15:11 +0900 (土, 20 10月 2012) | 5 lines

Fixed failing 4_External_Functions_A01_t01 test, updated co19-runtime.status with triaged test bug numbers.

BUG=5430

Review URL: https://codereview.chromium.org//11231015
------------------------------------------------------------------------
r13842 | srdjan@google.com | 2012-10-20 06:39:13 +0900 (土, 20 10月 2012) | 2 lines

Temporary change inlining-depth-threshold to 1 until crash in optimizing compiler is fixed (apdoc.dart)
Review URL: https://codereview.chromium.org//11232018
------------------------------------------------------------------------
r13840 | srdjan@google.com | 2012-10-20 06:07:21 +0900 (土, 20 10月 2012) | 11 lines

Tuned inlining parameters:

inlining_size_threshold: 250 -> 50
inlining_depth_threshold: 1 -> 3

All measurements on my Linux box:

dart2js: 2% slower, 9% increased code size.

The following benchmarks got approx. 20% faster: DeltaBlueClosures, Richards, BinaryTrees, Sum, Towers, RayTrace.
Review URL: https://codereview.chromium.org//11231014
------------------------------------------------------------------------
r13837 | hausner@google.com | 2012-10-20 05:06:03 +0900 (土, 20 10月 2012) | 7 lines

Handle super != and ?

Fix two bugs regarding != and argument definition test.

issue 2554
issue 6050
Review URL: https://codereview.chromium.org//11225006
------------------------------------------------------------------------
r13829 | asiva@google.com | 2012-10-20 02:41:00 +0900 (土, 20 10月 2012) | 2 lines

Put the GDB symbols stuff under conditional compile.
Review URL: https://codereview.chromium.org//11231009
------------------------------------------------------------------------
r13823 | srdjan@google.com | 2012-10-20 00:01:18 +0900 (土, 20 10月 2012) | 2 lines

Fix bigint modulo operation. Fixes bug 6056
Review URL: https://codereview.chromium.org//11192074
------------------------------------------------------------------------
r13822 | lrn@google.com | 2012-10-19 23:01:24 +0900 (金, 19 10月 2012) | 7 lines

Rename OutOfMemoryException to OutOfMemoryError.

This is a reapply with missing status file changes.

TBR=kasperl@google.com

Review URL: https://codereview.chromium.org//11233004
------------------------------------------------------------------------
r13820 | kasperl@google.com | 2012-10-19 22:11:15 +0900 (金, 19 10月 2012) | 10 lines

Revert "Rename OutOfMemoryException to OutOfMemoryError."

This reverts r13818.

TBR'ed.

R=lrn@google.com
BUG=

Review URL: https://codereview.chromium.org//11229003
------------------------------------------------------------------------
r13818 | lrn@google.com | 2012-10-19 21:20:52 +0900 (金, 19 10月 2012) | 5 lines

Rename OutOfMemoryException to OutOfMemoryError.

Also move ExceptionImplementation to core.

Review URL: https://codereview.chromium.org//11228002
------------------------------------------------------------------------
r13803 | iposva@google.com | 2012-10-19 07:33:45 +0900 (金, 19 10月 2012) | 4 lines

- Remove a couple static_cast and make them safe, by checking
  the handle types.
- Ensure that the obj handle does not survive past the zone unwind.
Review URL: https://codereview.chromium.org//11188070
------------------------------------------------------------------------
r13798 | srdjan@google.com | 2012-10-19 05:41:58 +0900 (金, 19 10月 2012) | 2 lines

Apply optimization after class-id propagation: instance calls without ICData are optimized by using input argument class-ids to create fake ICData. This reduces the number of deoptimizations. 
Review URL: https://codereview.chromium.org//11187046
------------------------------------------------------------------------
r13794 | fschneider@google.com | 2012-10-19 03:23:00 +0900 (金, 19 10月 2012) | 2 lines

Inline indexed store ([]=) array operations in checked mode.
Review URL: https://codereview.chromium.org//11186047
------------------------------------------------------------------------
r13792 | iposva@google.com | 2012-10-19 02:40:12 +0900 (金, 19 10月 2012) | 3 lines

- Do not bump allocate in old-space pages. Always use
  the freelist in preparation for chunked allocation.
Review URL: https://codereview.chromium.org//11186013
------------------------------------------------------------------------
r13791 | fschneider@google.com | 2012-10-19 02:37:04 +0900 (金, 19 10月 2012) | 8 lines

Disable hoisting of checked-mode assertions out of loops.

They can only be safely hoisted if the loop is always executed at least
once. For now, I added a TODO to add an analysis for safely hoisting these
asserts.

TEST=tests/language/optimized_hoisting_checked_mode_assert.dart
Review URL: https://codereview.chromium.org//11195042
------------------------------------------------------------------------
r13790 | hausner@google.com | 2012-10-19 02:20:59 +0900 (金, 19 10月 2012) | 4 lines

Check illegal reference to 'this' in factory redirection

Fixes bug 2103.
Review URL: https://codereview.chromium.org//11190033
------------------------------------------------------------------------
r13762 | srdjan@google.com | 2012-10-18 07:57:55 +0900 (木, 18 10月 2012) | 2 lines

Fix optimization of %: replace IC call even if not optimizable.
Review URL: https://codereview.chromium.org//11190036
------------------------------------------------------------------------
r13757 | hausner@google.com | 2012-10-18 05:39:42 +0900 (木, 18 10月 2012) | 4 lines

Fix Ping Pong snapshot test

More illegal constructor names.
Review URL: https://codereview.chromium.org//11194037
------------------------------------------------------------------------
r13755 | hausner@google.com | 2012-10-18 05:02:07 +0900 (木, 18 10月 2012) | 7 lines

Enable constructor name check by default

Remove the runtime flag that turns on the name check
for named constructors.

Eliminate obsolete test and test case.
Review URL: https://codereview.chromium.org//11194033
------------------------------------------------------------------------
r13753 | hausner@google.com | 2012-10-18 03:36:37 +0900 (木, 18 10月 2012) | 2 lines

Add warning flag for legacy getter syntax
Review URL: https://codereview.chromium.org//11190009
------------------------------------------------------------------------
r13751 | tball@google.com | 2012-10-18 03:06:26 +0900 (木, 18 10月 2012) | 5 lines

Removed StackZone allocation from DARTSCOPE macro, added StackZones in the few places they were still needed.

BUG=

Review URL: https://codereview.chromium.org//11185015
------------------------------------------------------------------------
r13743 | fschneider@google.com | 2012-10-17 23:34:37 +0900 (水, 17 10月 2012) | 6 lines

Enable more redundancy elimination for checked mode asserts.

This CL enables CSE for AssertBoolean and AssertAssignable.
In additions it allows removing redundant assignable-checks
by using static class-id information from the optimized IL.
Review URL: https://codereview.chromium.org//11186023
------------------------------------------------------------------------
r13712 | srdjan@google.com | 2012-10-17 08:46:27 +0900 (水, 17 10月 2012) | 6 lines

In optimized code always deoptimize if we encounter an instance call without type feedback (ICData has no checks).

Fix a bug in inliner: do not inline methods that have no compiled code as we can not deoptimize into them. This is the simplest fix, more complex fixes can be implemented if we see a need for them.

This improves the speed of Meteor by 15% and NavierStokes by 40% (Mac OS X). 
Review URL: https://codereview.chromium.org//11186007
------------------------------------------------------------------------
r13707 | tball@google.com | 2012-10-17 07:05:40 +0900 (水, 17 10月 2012) | 5 lines

Changed StackZone and ApiZone to be containers for Zone.

BUG=

Review URL: https://codereview.chromium.org//11028145
------------------------------------------------------------------------
r13704 | srdjan@google.com | 2012-10-17 06:55:36 +0900 (水, 17 10月 2012) | 2 lines

Add value tests to intrinisics GrowableArray _setData and setLength. Thos are private native methods that could be invoked via mirrors with incorrect values.
Review URL: https://codereview.chromium.org//11195007
------------------------------------------------------------------------
r13703 | johnmccutchan@google.com | 2012-10-17 06:39:18 +0900 (水, 17 10月 2012) | 3 lines

Intrinsify writing to Uint8 and Int8 arrays on IA32.

Review URL: https://codereview.chromium.org//11074016
------------------------------------------------------------------------
r13700 | hausner@google.com | 2012-10-17 05:19:06 +0900 (水, 17 10月 2012) | 5 lines

Remove built-in identifier 'negate' from VM

Keep the token kNEGATE for the backend to distinguish between
unary and binary - operator.
Review URL: https://codereview.chromium.org//11199002
------------------------------------------------------------------------
r13696 | johnmccutchan@google.com | 2012-10-17 03:52:14 +0900 (水, 17 10月 2012) | 3 lines

Intrinsify natural world typed array getters

Review URL: https://codereview.chromium.org//11139004
------------------------------------------------------------------------
r13685 | srdjan@google.com | 2012-10-17 01:36:46 +0900 (水, 17 10月 2012) | 2 lines

Fix receiver's type for constructors.
Review URL: https://codereview.chromium.org//11187003
------------------------------------------------------------------------
r13684 | regis@google.com | 2012-10-17 01:03:47 +0900 (水, 17 10月 2012) | 2 lines

Change core lib, dart2js, and more for new optional parameters syntax and semantics (new semantics is not enforced yet).
Review URL: https://codereview.chromium.org//11090016
------------------------------------------------------------------------
r13683 | fschneider@google.com | 2012-10-17 00:59:48 +0900 (水, 17 10月 2012) | 6 lines

Optimize type checks for boolean expressions using class-id information.

This CL adds a canonicalization pass for AssertBoolean instructions.
If the input class id is guaranteed to be bool, the check can be
eliminated.
Review URL: https://codereview.chromium.org//11191002
------------------------------------------------------------------------
r13682 | srdjan@google.com | 2012-10-17 00:40:54 +0900 (水, 17 10月 2012) | 3 lines

Inline indexed load and store of typed array float64.
NavierStokes time improves from 34,775us to 12,000us (v8 runs NavierStokes in 16000 us).
Review URL: https://codereview.chromium.org//11092090
------------------------------------------------------------------------
r13664 | srdjan@google.com | 2012-10-16 05:04:13 +0900 (火, 16 10月 2012) | 2 lines

Fix crashes in intrinsified float32/float64 array setters when attempting to store a Smi. Added tests.
Review URL: https://codereview.chromium.org//11144021
------------------------------------------------------------------------
r13637 | hausner@google.com | 2012-10-13 07:40:24 +0900 (土, 13 10月 2012) | 8 lines

Support for type dynamic in VM

Old name Dynamic is supported, and automatically converted to
lower-case dynamic when parsed.

VM flag --warn_legacy_dynamic prints warnings when Dynamic
is found.
Review URL: https://codereview.chromium.org//11125005
------------------------------------------------------------------------
r13598 | kmillikin@google.com | 2012-10-12 17:12:24 +0900 (金, 12 10月 2012) | 5 lines

Guard against buffer overflow in the x64 disassembler.

BUG=

Review URL: https://codereview.chromium.org//11092099
------------------------------------------------------------------------
r13581 | asiva@google.com | 2012-10-12 05:34:08 +0900 (金, 12 10月 2012) | 3 lines

- Get rid of RawClosure class and use RawInstance for closures.
- Simplify SetRaw to not require an access to the Current Isolate.
Review URL: https://codereview.chromium.org//11087070
------------------------------------------------------------------------
r13576 | srdjan@google.com | 2012-10-12 04:44:47 +0900 (金, 12 10月 2012) | 2 lines

Apply John's change (Issue 11077007: Intrinsify Float64 array access on ia32 and x64.).
Review URL: https://codereview.chromium.org//11087087
------------------------------------------------------------------------
r13563 | regis@google.com | 2012-10-12 02:28:33 +0900 (金, 12 10月 2012) | 2 lines

Resolve interfaces before starting finalizing classes (issue 5586).
Review URL: https://codereview.chromium.org//11088079
------------------------------------------------------------------------
r13559 | asiva@google.com | 2012-10-12 02:08:30 +0900 (金, 12 10月 2012) | 3 lines

- Remove deprecated Dart API calls Dart_ClosureSmrck and DartClosureSetSmrck
- Remove the smrck field from RawClosure object.
Review URL: https://codereview.chromium.org//11017069
------------------------------------------------------------------------
r13555 | fschneider@google.com | 2012-10-12 01:35:47 +0900 (金, 12 10月 2012) | 10 lines

Remove support for optimized dart leaf functions.

This optimization does not bring any benefit since all functions
have at least a call in the slow-path of the stack-overflow check.

I'm suggesting to remove support for this optimization since it
does not get triggered currently, therefore is also not tested.
Plus we have inlining now, which already makes calls to (small 
enough) leaf functions fast.
Review URL: https://codereview.chromium.org//11086044
------------------------------------------------------------------------
r13547 | fschneider@google.com | 2012-10-12 00:07:49 +0900 (金, 12 10月 2012) | 5 lines

Mark optimized functions with a * in the perf event symbol output.

This allows to distinguish time spent in optimized code vs unoptimized code
in our profile information.
Review URL: https://codereview.chromium.org//11028143
------------------------------------------------------------------------
r13544 | fschneider@google.com | 2012-10-11 23:19:41 +0900 (木, 11 10月 2012) | 5 lines

Fix bug in the sminess propagation that limited optimization opportunities.

The existing code did not add phi-uses of phis to the worklist properly and
as a result the sminess was not propagated across phis.
Review URL: https://codereview.chromium.org//11087079
------------------------------------------------------------------------
r13536 | fschneider@google.com | 2012-10-11 21:25:55 +0900 (木, 11 10月 2012) | 2 lines

Remove support for generating visualizer format file for the flowgraph.
Review URL: https://codereview.chromium.org//11099061
------------------------------------------------------------------------
r13514 | iposva@google.com | 2012-10-11 16:17:09 +0900 (木, 11 10月 2012) | 4 lines

- Generate a version string based on the VERSION file.
- Add a Dart_VersionString to the API.
- Print version string when passing --version to the standalone binary.
Review URL: https://codereview.chromium.org//11086065
------------------------------------------------------------------------
r13506 | cshapiro@google.com | 2012-10-11 08:36:13 +0900 (木, 11 10月 2012) | 3 lines

Add missing scope initializations.

Review URL: https://codereview.chromium.org//11017064
------------------------------------------------------------------------
r13500 | srdjan@google.com | 2012-10-11 05:54:49 +0900 (木, 11 10月 2012) | 4 lines

Report error in APIs if type is malformed instead of crashing. Example:

Dart_FunctionReturnType: malformed type encountered: 'file:///sources/dartall/dart/pkg/intl/lib/intl.dart': Error: line 235 pos 10: cannot resolve class name 'dynamic' from 'Intl'
Review URL: https://codereview.chromium.org//11099049
------------------------------------------------------------------------
r13496 | srdjan@google.com | 2012-10-11 05:27:33 +0900 (木, 11 10月 2012) | 2 lines

Fix a crash in compiler.
Review URL: https://codereview.chromium.org//11087062
------------------------------------------------------------------------
r13471 | zerny@google.com | 2012-10-10 22:18:40 +0900 (水, 10 10月 2012) | 7 lines

Recursive inlining.

Due to large performance regressions on dart2js the default depth is set to 1, i.e., we only inline the first level of calls by default. The depth can be changed with the inlining_depth_threshold flag.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11029027
------------------------------------------------------------------------
r13462 | fschneider@google.com | 2012-10-10 19:49:06 +0900 (水, 10 10月 2012) | 2 lines

Slightly improved register constraints for mint add and sub.
Review URL: https://codereview.chromium.org//11099034
------------------------------------------------------------------------
r13456 | zerny@google.com | 2012-10-10 17:03:28 +0900 (水, 10 10月 2012) | 8 lines

Remove slow assert from VM.

Replaced slow-asserts with verify-compiler and removed vm/assert.h

R=srdjan@google.com
BUG=5720

Review URL: https://codereview.chromium.org//11017027
------------------------------------------------------------------------
r13448 | srdjan@google.com | 2012-10-10 07:40:54 +0900 (水, 10 10月 2012) | 2 lines

Fix build breakage, removed arguments twice instead of once.
Review URL: https://codereview.chromium.org//11092038
------------------------------------------------------------------------
r13443 | srdjan@google.com | 2012-10-10 06:43:10 +0900 (水, 10 10月 2012) | 2 lines

Implement SmiToInt and DoubleToInt. All necessary tests are in tests/language/arithmetic_test.dart
Review URL: https://codereview.chromium.org//11098009
------------------------------------------------------------------------
r13433 | asiva@google.com | 2012-10-10 04:49:11 +0900 (水, 10 10月 2012) | 4 lines

Instead of aborting with an assert, exit with an error when we get an OOM
while handling messages. This is a temporary solution until we have the
isolate error handling mechanism in place (for issue 1403).
Review URL: https://codereview.chromium.org//10915295
------------------------------------------------------------------------
r13427 | srdjan@google.com | 2012-10-10 03:46:25 +0900 (水, 10 10月 2012) | 2 lines

Address Florian's comments.
Review URL: https://codereview.chromium.org//11090027
------------------------------------------------------------------------
r13408 | fschneider@google.com | 2012-10-09 20:59:44 +0900 (火, 09 10月 2012) | 5 lines

Faster 64-bit left-shift for ia32.

This CL adds a fast left-shift that operates on unboxed mints.
(64-bit integers) to the ia32 optimizing compiler.
Review URL: https://codereview.chromium.org//11085004
------------------------------------------------------------------------
r13387 | iposva@google.com | 2012-10-09 09:47:42 +0900 (火, 09 10月 2012) | 2 lines

- Update status files for failing tests.
Review URL: https://codereview.chromium.org//11093013
------------------------------------------------------------------------
r13384 | iposva@google.com | 2012-10-09 09:14:42 +0900 (火, 09 10月 2012) | 8 lines

Land http://codereview.chromium.org/11047027/ for Matthias:

Implement export clause in VM 

Implement export namespace support in VM compiler. 

Missing functionality: ensuring that a name is only re-exported once.
Review URL: https://codereview.chromium.org//11028084
------------------------------------------------------------------------
r13376 | regis@google.com | 2012-10-09 06:37:34 +0900 (火, 09 10月 2012) | 2 lines

Look up getter in super call (issue 3621).
Review URL: https://codereview.chromium.org//11088014
------------------------------------------------------------------------
r13372 | fschneider@google.com | 2012-10-09 05:20:53 +0900 (火, 09 10月 2012) | 14 lines

Fix bug with missing unboxed mint-to-double conversion.

In case of a mixed integer/double operation that has a mint
input, the corresponding conversion from unboxed mint to unboxed
double was missing.

This CL converts a unboxed mint to a double by first boxing,
and then unboxing. Currently, we deoptimize in case the result
does not fit into a smi because we can only optimize mixed
smi/double operations and not yet mint/double operations.

BUG=dart:5721
TEST=tests/language/mint_arithmetic.dart
Review URL: https://codereview.chromium.org//11017017
------------------------------------------------------------------------
r13352 | ager@google.com | 2012-10-08 22:00:33 +0900 (月, 08 10月 2012) | 6 lines

Hide internal details of VM string implementation.

R=lrn@google.com,srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//11035057
------------------------------------------------------------------------
r13333 | asiva@google.com | 2012-10-06 08:10:28 +0900 (土, 06 10月 2012) | 17 lines

- Add support to interrupt a running isolate with the following command:
<===  InterruptCmd = "{" RequestId "," command ":" interrupt "," params ":" "{" isolateId ":" Integer "}" "}"
===>  InterruptCmdResp = "{" RequestId "}"

- Send isolate events over to the debugger client in the following format:
===>  "{" event ":" isolate "," params ":" "{" reason ":" created "," id ":" Integer "}" "}"
===>  "{" event ":" isolate "," params ":" "{" reason ":" shutdown "," id ":" Integer "}" "}"
===>  "{" event ":" paused "," params ":" "{" reason ":" interrupted "," callFrames ":" StackTrace "}" "}"

- Added id ";" Integer, to params in all paused events messages

- create per isolate debugger message queues, instead of the global static one

- Add 'i' command in ddbg to exercise the interrupt feature

- Add support for handling isolave event messages in ddbg
Review URL: https://codereview.chromium.org//11028040
------------------------------------------------------------------------
r13316 | regis@google.com | 2012-10-06 05:29:02 +0900 (土, 06 10月 2012) | 3 lines

Implement new scope rules for type variables (issue 5230).
Fix tests.
Review URL: https://codereview.chromium.org//11030056
------------------------------------------------------------------------
r13314 | tball@google.com | 2012-10-06 04:52:55 +0900 (土, 06 10月 2012) | 5 lines

Renamed Zone->StackZone, BaseZone->Zone, in preparation for changing isolate->get_zone() to return what was called the BaseZone instead of its wrapper.  The GetBaseZone() methods were not renamed, to help the next CL.

BUG=

Review URL: https://codereview.chromium.org//11040062
------------------------------------------------------------------------
r13295 | fschneider@google.com | 2012-10-05 23:42:00 +0900 (金, 05 10月 2012) | 2 lines

Faster 64-bit right-shift for the ia32 compiler.
Review URL: https://codereview.chromium.org//11027060
------------------------------------------------------------------------
r13274 | iposva@google.com | 2012-10-05 15:52:42 +0900 (金, 05 10月 2012) | 3 lines

Fix bug 5575:
- Remove residue of typed arrays from dart:core.
Review URL: https://codereview.chromium.org//11031063
------------------------------------------------------------------------
r13257 | srdjan@google.com | 2012-10-05 05:20:17 +0900 (金, 05 10月 2012) | 2 lines

Restore x64 performance by reinstering an accidentally deleted LoadClassId instruction.
Review URL: https://codereview.chromium.org//11033032
------------------------------------------------------------------------
r13255 | hausner@google.com | 2012-10-05 04:42:25 +0900 (金, 05 10月 2012) | 11 lines

Better error message for const loop variables

issue 5629

The new error message is:


'file:/n.dart': Error: line 4 pos 8: Loop variable cannot be 'const'
  for (const i in [1,2,3]) {
       ^
Review URL: https://codereview.chromium.org//11027036
------------------------------------------------------------------------
r13254 | srdjan@google.com | 2012-10-05 04:35:23 +0900 (金, 05 10月 2012) | 4 lines

Support for mixed null/smi equality: do not deoptimize, emit same optimized code as if that was smi-equality only.
Moved assert for duplicate class checks into ICData.
Allow CheckClassInstr to check for Smi as well.
Review URL: https://codereview.chromium.org//11048032
------------------------------------------------------------------------
r13240 | hausner@google.com | 2012-10-05 01:10:45 +0900 (金, 05 10月 2012) | 12 lines

Add catchless catch clauses

The Dart grammar says the catch clause is optional, ie. the following is legal:

try {
  ...
} on String {
  ...
}

Added a test case
Review URL: https://codereview.chromium.org//11051031
------------------------------------------------------------------------
r13237 | fschneider@google.com | 2012-10-05 00:54:16 +0900 (金, 05 10月 2012) | 5 lines

Renaming Unboxed* IL instructions to shorter names.

Since we don't have boxed mint and double operations anymore,
we can use shorter names.
Review URL: https://codereview.chromium.org//11027026
------------------------------------------------------------------------
r13227 | kmillikin@google.com | 2012-10-04 22:08:05 +0900 (木, 04 10月 2012) | 6 lines

Do not override (lower) the VM's code heap size for benchmarks tests.

R=zerny@google.com
BUG=

Review URL: https://codereview.chromium.org//11036033
------------------------------------------------------------------------
r13223 | zerny@google.com | 2012-10-04 21:24:25 +0900 (木, 04 10月 2012) | 7 lines

Don't inline functions above the deoptimization threshold.

Moved deoptimization counter increment code into the PcMarker instruction where it executes on each occurring function in the optimized frame.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11031040
------------------------------------------------------------------------
r13221 | fschneider@google.com | 2012-10-04 21:01:12 +0900 (木, 04 10月 2012) | 2 lines

Add fast 64-bit bitwise negation to the IA32 optimizing compiler.
Review URL: https://codereview.chromium.org//11043020
------------------------------------------------------------------------
r13214 | kmillikin@google.com | 2012-10-04 18:03:28 +0900 (木, 04 10月 2012) | 11 lines

Pack deopt ID into the return before and return after deopt instructions.

Pack it into a machine word-sized bit field along with the object table
index.  The commands do not implicitly use the object table index any more,
which allows removing deopt IDs from the object table and pooling function
entries.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//11014020
------------------------------------------------------------------------
r13211 | fschneider@google.com | 2012-10-04 17:50:28 +0900 (木, 04 10月 2012) | 8 lines

Add fast 64-bit integer ADD and SUB to the optimizing compiler.

They operate on unboxed 64-bit integers stored in xmm registers.

I also fixed an issue with some SSE 4 specific assembler
tests where we hit an assert with an empty assembler buffer
when running with --no-use-sse41.
Review URL: https://codereview.chromium.org//11016028
------------------------------------------------------------------------
r13208 | regis@google.com | 2012-10-04 09:15:38 +0900 (木, 04 10月 2012) | 10 lines

Change compile-time errors into dynamic errors in instance creation expression
(issue 3085).
Change compile-time errors into dynamic errors in static getter and setter
calls (issues 3088, 3094).
Fix a crash in flow graph builder for missing static getter (issue 4360).
Add support in VM for NoSuchMethodError.
Remove support in VM for StaticResolutionException.
Add, remove, update related language tests.
Triage related co19 tests.
Review URL: https://codereview.chromium.org//11049038
------------------------------------------------------------------------
r13207 | asiva@google.com | 2012-10-04 09:13:37 +0900 (木, 04 10月 2012) | 11 lines

1. Create a port when a debugger object is created for an isolate, use this
   port as the unique ID to represent an isolate in the debugger message
   format.

2. Switch the Event handler API to use an isolate id instead of the isolate
   object itself.

3. Add a unit test case for isolate debugger event handling with an
   interrupt of isolate to ensure that interrupting the isolate runs
   the interrupt event handler.
Review URL: https://codereview.chromium.org//11052006
------------------------------------------------------------------------
r13174 | zerny@google.com | 2012-10-04 00:05:27 +0900 (木, 04 10月 2012) | 5 lines

Set previous instruction pointers when building the graph.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11043016
------------------------------------------------------------------------
r13172 | fschneider@google.com | 2012-10-03 23:20:45 +0900 (水, 03 10月 2012) | 4 lines

Remove now unused BinaryMintOp from the IL.

It has been replaced with UnboxedMintBinaryOp.
Review URL: https://codereview.chromium.org//11031024
------------------------------------------------------------------------
r13170 | kmillikin@google.com | 2012-10-03 20:09:19 +0900 (水, 03 10月 2012) | 9 lines

Run canonicalization again after constant propagation.

This eliminates smi checks of constant-valued instructions.  Also fix
printing of block numbers in code comments.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10989077
------------------------------------------------------------------------
r13164 | fschneider@google.com | 2012-10-03 18:11:21 +0900 (水, 03 10月 2012) | 6 lines

Fix bug with mint unboxing on non-SSE 4.1 machines.

I forgot to check for SSE 4.1 support in one place. For machines
that do not support SSE 4.1 we should never generated unboxed
mint operations.
Review URL: https://codereview.chromium.org//11038016
------------------------------------------------------------------------
r13161 | ager@google.com | 2012-10-03 17:08:34 +0900 (水, 03 10月 2012) | 6 lines

Minor style and comment fixes from review comments.

R=iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//11024002
------------------------------------------------------------------------
r13157 | cshapiro@google.com | 2012-10-03 10:40:23 +0900 (水, 03 10月 2012) | 5 lines

Scavenge watched objects by scavenging their watchers.

BUG=http://code.google.com/p/dart/issues/detail?id=5546

Review URL: https://codereview.chromium.org//11055007
------------------------------------------------------------------------
r13154 | srdjan@google.com | 2012-10-03 08:49:30 +0900 (水, 03 10月 2012) | 2 lines

Fix movmskpd test, add masking to result.
Review URL: https://codereview.chromium.org//11049013
------------------------------------------------------------------------
r13150 | iposva@google.com | 2012-10-03 08:31:57 +0900 (水, 03 10月 2012) | 2 lines

- Add regression test case for dartbug.com/5546.
Review URL: https://codereview.chromium.org//11047007
------------------------------------------------------------------------
r13149 | srdjan@google.com | 2012-10-03 07:52:39 +0900 (水, 03 10月 2012) | 4 lines

Fix crashes in Smi equality comparisons: Smi equality instruction may have null as inputs. Null is treated specially in equality and therefore does not enter the ICdata, type feedback does not know about null being encountered.
TODO: fix excessive deoptimziation due to one of the inputs not being Smi.
(Crash was reproduced running test suite with optimization counter threshold 5)
Review URL: https://codereview.chromium.org//11049011
------------------------------------------------------------------------
r13145 | hausner@google.com | 2012-10-03 06:54:46 +0900 (水, 03 10月 2012) | 2 lines

Eliminate support for old raw string format
Review URL: https://codereview.chromium.org//11043010
------------------------------------------------------------------------
r13138 | srdjan@google.com | 2012-10-03 05:40:26 +0900 (水, 03 10月 2012) | 2 lines

Split flag --trace-deopt into --trace-deoptimization and --trace-deoptimization-verbose. Print source line and function where deoptimization occured.
Review URL: https://codereview.chromium.org//11054002
------------------------------------------------------------------------
r13132 | asiva@google.com | 2012-10-03 04:06:52 +0900 (水, 03 10月 2012) | 2 lines

Fix dartium build break.
Review URL: https://codereview.chromium.org//11043003
------------------------------------------------------------------------
r13130 | asiva@google.com | 2012-10-03 03:09:55 +0900 (水, 03 10月 2012) | 3 lines

Add isolate event handler setup in order to be able to propagate isolate
events (create/shutdown/interrupted)
Review URL: https://codereview.chromium.org//11026011
------------------------------------------------------------------------
r13128 | srdjan@google.com | 2012-10-03 02:45:13 +0900 (水, 03 10月 2012) | 2 lines

Do not trigger optimization on functions that are not optimizable (e.g. natives).
Review URL: https://codereview.chromium.org//11031016
------------------------------------------------------------------------
r13118 | srdjan@google.com | 2012-10-02 23:56:37 +0900 (火, 02 10月 2012) | 2 lines

Remove temporary hack for throttling inlining.
Review URL: https://codereview.chromium.org//11034023
------------------------------------------------------------------------
r13112 | fschneider@google.com | 2012-10-02 20:25:53 +0900 (火, 02 10月 2012) | 13 lines

Support for unboxed 64-bit integer bitwise operations and equality on ia32.

This CL adds AND, OR, XOR and == operations on unboxed 64-bit integers
(aka. mints).

Unboxed mints are stored in xmm registers. Each xmm register location
has an additional bit to keep track of its value representation.

Unboxed mints are materialized on the heap on deoptmization in the same way as
unboxed doubles.

The SSE instructions used are available on all CPUs that support SSE 4.1.
Review URL: https://codereview.chromium.org//10968059
------------------------------------------------------------------------
r13093 | johnmccutchan@google.com | 2012-10-02 09:44:25 +0900 (火, 02 10月 2012) | 3 lines

Intrinsify Float32Array_setIndexed on IA32 and X64

Review URL: https://codereview.chromium.org//11032011
------------------------------------------------------------------------
r13090 | iposva@google.com | 2012-10-02 07:28:02 +0900 (火, 02 10月 2012) | 6 lines

- WeakProperty keys in other generations are black. Avoid trying to
  set the watch bit on keys in the VM isolate or on keys that are
  non-heap objects (aka Smis).
- Add appropriate tests.
- Fixes example code from comment 2 in issue 5546.
Review URL: https://codereview.chromium.org//11038004
------------------------------------------------------------------------
r13085 | srdjan@google.com | 2012-10-02 05:24:23 +0900 (火, 02 10月 2012) | 7 lines

Enable inlining of control flow, increase code heap size 12 -> 18Mb (note that code will be moved to old space where it can grow). Print heap size at exit of VM using trace-isolates.

Code heap increase because of inline-control-flow (dart2js):

production mode: 4,143k -> 5,143k
checked mode: 10,789k -> 14,545k
Review URL: https://codereview.chromium.org//11035009
------------------------------------------------------------------------
r13081 | srdjan@google.com | 2012-10-02 03:33:13 +0900 (火, 02 10月 2012) | 2 lines

Revert r13022 (revert inlining of methods with control flow), Review URL: https://codereview.chromium.org//10979078; disable inlining of methods with control-flow so that we do not run out of heap space.
Review URL: https://codereview.chromium.org//11029002
------------------------------------------------------------------------
r13077 | johnmccutchan@google.com | 2012-10-02 02:59:51 +0900 (火, 02 10月 2012) | 7 lines

Enable Float32Array_getIndexed on X64 now that cvtss2sd is implemented

Merge remote-tracking branch 'git-svn'

Implement cvtss2sd and cvtsd2ss on X64

Review URL: https://codereview.chromium.org//11009006
------------------------------------------------------------------------
r13075 | srdjan@google.com | 2012-10-02 01:57:20 +0900 (火, 02 10月 2012) | 2 lines

Add integer negate back to list of intrinsified methods.
Review URL: https://codereview.chromium.org//11032003
------------------------------------------------------------------------
r13069 | zerny@google.com | 2012-10-01 23:27:45 +0900 (月, 01 10月 2012) | 5 lines

Added slow_assert macro and flag for slow development assertions in the VM.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//11014013
------------------------------------------------------------------------
r13066 | ager@google.com | 2012-10-01 22:31:18 +0900 (月, 01 10月 2012) | 13 lines

Cleaning up in VM number hierarchy which was exposing a bunch
of implementation details as public methods.

The only remaining thing is that int and double have a pow
method in the VM which is not officially a part of corelib.
Maybe it should be so I have left that out of this change
and maybe we should add it to num and implement in dart2js
too?

R=sgjesse@google.com,lrn@google.com
BUG=

Review URL: https://codereview.chromium.org//11019011
------------------------------------------------------------------------
r13056 | kmillikin@google.com | 2012-10-01 19:16:22 +0900 (月, 01 10月 2012) | 10 lines

Remove deoptimization index PC descriptors.

Put the PC (offset) of the deoptimization point and the deoptimization
reason in the DeoptInfo table.  The table entries are now triples of
(PC offset, info, reason).

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//10982088
------------------------------------------------------------------------
r13047 | srdjan@google.com | 2012-09-29 08:20:57 +0900 (土, 29  9月 2012) | 2 lines

The real fix of float32.
Review URL: https://codereview.chromium.org//10987103
------------------------------------------------------------------------
r13046 | srdjan@google.com | 2012-09-29 08:17:06 +0900 (土, 29  9月 2012) | 2 lines

Fix broken x64 build temporarily. cvtss2sd missing on x64.
Review URL: https://codereview.chromium.org//11013003
------------------------------------------------------------------------
r13044 | johnmccutchan@google.com | 2012-09-29 08:02:20 +0900 (土, 29  9月 2012) | 5 lines

Intrinsify Float32Array_getIndexed on IA32 and X64.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10911153
------------------------------------------------------------------------
r13040 | srdjan@google.com | 2012-09-29 05:14:05 +0900 (土, 29  9月 2012) | 2 lines

Convert MOD to AND for power-of-two positive constants.
Review URL: https://codereview.chromium.org//10982095
------------------------------------------------------------------------
r13032 | srdjan@google.com | 2012-09-29 02:40:29 +0900 (土, 29  9月 2012) | 2 lines

Inline String isEmpty, refactor inlining of intrinsics.
Review URL: https://codereview.chromium.org//10993023
------------------------------------------------------------------------
r13022 | kmillikin@google.com | 2012-09-28 22:50:17 +0900 (金, 28  9月 2012) | 11 lines

Revert several inlining related changes.

Revert svn revisions r12990, r12991, r12995, and r13000.  Increased inlining
leads to excessive code growth, preventing dart2js to run in checked mode.
The changes will be relanded when we can come up with improved size
thresholds.

R=ngeoffray@google.com
BUG=

Review URL: https://codereview.chromium.org//10979078
------------------------------------------------------------------------
r13009 | lrn@google.com | 2012-09-28 21:13:58 +0900 (金, 28  9月 2012) | 3 lines

Rename CastException to CastError.

Review URL: https://codereview.chromium.org//10977078
------------------------------------------------------------------------
r13003 | ager@google.com | 2012-09-28 20:08:38 +0900 (金, 28  9月 2012) | 8 lines

Reapply change to hide VM-only List implementation classes.

The performance issue was that I had not updated the method
recognizer.

BUG=

Review URL: https://codereview.chromium.org//10990083
------------------------------------------------------------------------
r13000 | zerny@google.com | 2012-09-28 19:22:29 +0900 (金, 28  9月 2012) | 5 lines

Instruction size and growth threshold for inlining.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//10996057
------------------------------------------------------------------------
r12995 | zerny@google.com | 2012-09-28 17:34:35 +0900 (金, 28  9月 2012) | 5 lines

Disable slow debug assertions in use-list verification code.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//10979073
------------------------------------------------------------------------
r12992 | sgjesse@google.com | 2012-09-28 16:55:00 +0900 (金, 28  9月 2012) | 14 lines

Handle receiving GrowableObjectArrays correctly on native ports

The deserialization when receiving GrowableObjectArrays through native
ports was not correct. A GrowableObjectArrays is now handled as an
internal VM object and is now handled on all code paths.

Added a more comprehensiive test using array literals which are
represented as GrowableObjectArrays.

R=ager@google.com

BUG=dart:5474

Review URL: https://codereview.chromium.org//10989074
------------------------------------------------------------------------
r12990 | zerny@google.com | 2012-09-28 16:10:06 +0900 (金, 28  9月 2012) | 5 lines

Inlining functions with control flow.

Functions containing control flow are now inlined and incrementally extend the graph in SSA form. For the special case of a function with only one exit, we locally update the dominator tree. If multiple exits occur, we currently recompute the dominator tree for the full resulting graph.

Review URL: https://codereview.chromium.org//10967007
------------------------------------------------------------------------
r12989 | zerny@google.com | 2012-09-28 16:09:30 +0900 (金, 28  9月 2012) | 5 lines

Don't inline recursive calls.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//10977075
------------------------------------------------------------------------
r12981 | iposva@google.com | 2012-09-28 06:19:00 +0900 (金, 28  9月 2012) | 5 lines

- Implement first class types in the VM.
- Make AbstractType a subclass of Instance and map it and its subclasses
  to private Dart classes in dart:core implementing the Type interface.
- Avoid dispatching through statics in Object if not strictly needed.
Review URL: https://codereview.chromium.org//10979058
------------------------------------------------------------------------
r12975 | regis@google.com | 2012-09-28 02:52:35 +0900 (金, 28  9月 2012) | 4 lines

Change many instance creation errors from compile-time errors to dynamic errors
per revised spec (issue 3801).
Add negative tests for factory redirection.
Review URL: https://codereview.chromium.org//10979053
------------------------------------------------------------------------
r12963 | ager@google.com | 2012-09-27 23:07:56 +0900 (木, 27  9月 2012) | 8 lines

Revert hiding of VM-only coreimpl list implementation types. While I
investigate performance regression (even after fixing constructors
in the intrinsifier).

R=iposva@google.com,srdjan@google.com,fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11000025
------------------------------------------------------------------------
r12958 | ager@google.com | 2012-09-27 22:35:19 +0900 (木, 27  9月 2012) | 13 lines

Intrinsify named constructors on private classes.

This was broken before my GrowableArray change as well for the
_Double.fromInteger constructor.

This is using the fact that named constructors are the only method
names that contain '.'. Therefore, it is enough to check that the
classes match and that the method name starting at the '.' matches.

R=srdjan@google.com,iposva@google.com,fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//11000021
------------------------------------------------------------------------
r12955 | lrn@google.com | 2012-09-27 22:07:54 +0900 (木, 27  9月 2012) | 8 lines

Stop using the Hashable interface.

All objects have a hashCode method, so there is no need for a Hashable
interface.
The interface itself is retained for at least two weeks, to give time for
code to remove uses of it.

Review URL: https://codereview.chromium.org//10993059
------------------------------------------------------------------------
r12952 | ager@google.com | 2012-09-27 21:37:30 +0900 (木, 27  9月 2012) | 4 lines

Hide VM-only coreimpl List implementation types. These should not be
exposed as visible parts of coreimpl.

Review URL: https://codereview.chromium.org//10990055
------------------------------------------------------------------------
r12941 | ager@google.com | 2012-09-27 15:21:07 +0900 (木, 27  9月 2012) | 9 lines

Make data setter private on GrowableObjectArray.

There is no data setter on Lists. Additionally, this allows to
create buffer overflows.

R=vegorov@google.com,iposva@google.com
BUG=

Review URL: https://codereview.chromium.org//10982045
------------------------------------------------------------------------
r12929 | srdjan@google.com | 2012-09-27 06:00:51 +0900 (木, 27  9月 2012) | 3 lines

More compact code for strict compare with 0. 
Noticed while tracking mysterious Bubblesort performance degradation.
Review URL: https://codereview.chromium.org//10984051
------------------------------------------------------------------------
r12928 | hausner@google.com | 2012-09-27 05:53:36 +0900 (木, 27  9月 2012) | 11 lines

Make throw an expression

Throw e is now an expression rather than a statement. The language
spec says that throw without an expression (i.e. rethrowing the
current exception) is an expression as well. I have not implemented
this. It is rather difficult to determine at expression level whether
the keyword "throw" is followed by an expression or not. Thus,
throw without an expression is only allowed at statement level.

I think we should change the language spec to that effect.
Review URL: https://codereview.chromium.org//10982051
------------------------------------------------------------------------
r12920 | iposva@google.com | 2012-09-27 02:25:39 +0900 (木, 27  9月 2012) | 2 lines

- Remove obsolete class.
Review URL: https://codereview.chromium.org//10979035
------------------------------------------------------------------------
r12897 | fschneider@google.com | 2012-09-26 18:08:21 +0900 (水, 26  9月 2012) | 7 lines

Add code for CPU feature detection and use it to detect SSE3 and SSE 4.1.

The Dart VM now requires at least SSE3 to build and run.

There is a new flag --use-sse41 (default:true) to disable the use of 
SSE 4.1 features manually. 
Review URL: https://codereview.chromium.org//10990028
------------------------------------------------------------------------
r12896 | zerny@google.com | 2012-09-26 17:28:45 +0900 (水, 26  9月 2012) | 5 lines

Relax assertions on equality of load fields.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//10986044
------------------------------------------------------------------------
r12893 | ager@google.com | 2012-09-26 15:01:23 +0900 (水, 26  9月 2012) | 6 lines

Update all occurrences of raw strings.

R=hausner@google.com,kasperl@google.com
BUG=

Review URL: https://codereview.chromium.org//10977027
------------------------------------------------------------------------
r12881 | srdjan@google.com | 2012-09-26 05:59:37 +0900 (水, 26  9月 2012) | 2 lines

Fix incorrect strict not-equal comparison when both arguments are constants.
Review URL: https://codereview.chromium.org//10977021
------------------------------------------------------------------------
r12879 | srdjan@google.com | 2012-09-26 05:34:15 +0900 (水, 26  9月 2012) | 2 lines

In strict comarison use constants instead of registers if possible.
Review URL: https://codereview.chromium.org//10977020
------------------------------------------------------------------------
r12872 | regis@google.com | 2012-09-26 04:26:53 +0900 (水, 26  9月 2012) | 4 lines

Fix snapshot reading of canonicalized types.
Change some redirecting factory compile-time errors into dynamic errors after
discussion with Gilad (negative tests still missing).
Review URL: https://codereview.chromium.org//10996002
------------------------------------------------------------------------
r12870 | srdjan@google.com | 2012-09-26 04:04:06 +0900 (水, 26  9月 2012) | 2 lines

Call compiled static targets directly instead of resolving them at first call.
Review URL: https://codereview.chromium.org//10987031
------------------------------------------------------------------------
r12861 | hausner@google.com | 2012-09-26 02:59:35 +0900 (水, 26  9月 2012) | 3 lines

Make assert a reserved word

Issue 5051.
------------------------------------------------------------------------
r12854 | srdjan@google.com | 2012-09-26 02:19:11 +0900 (水, 26  9月 2012) | 2 lines

Move HasOneTarget to ICData.
Review URL: https://codereview.chromium.org//10981010
------------------------------------------------------------------------
r12850 | hausner@google.com | 2012-09-26 01:45:14 +0900 (水, 26  9月 2012) | 4 lines

Implement part header

This is the final piece in the new import syntax.
Review URL: https://codereview.chromium.org//10989010
------------------------------------------------------------------------
r12849 | zerny@google.com | 2012-09-26 01:41:51 +0900 (水, 26  9月 2012) | 5 lines

Fix error in r12771 disabling licm.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//10990031
------------------------------------------------------------------------
r12848 | vegorov@google.com | 2012-09-26 01:36:56 +0900 (水, 26  9月 2012) | 6 lines

Disregard constants with no SSA temp index in register allocator.

R=fschneider@google.com
BUG=dart:5416

Review URL: https://codereview.chromium.org//10983024
------------------------------------------------------------------------
r12842 | zerny@google.com | 2012-09-25 21:58:51 +0900 (火, 25  9月 2012) | 8 lines

Add is_inlinable field to functions.

Repeated attempts at inlining functions that cannot be inlined leads to
noticeable performance regression when compiling with dart2js.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//10989016
------------------------------------------------------------------------
r12841 | lrn@google.com | 2012-09-25 21:27:52 +0900 (火, 25  9月 2012) | 3 lines

Change IllegalArgumentException to ArgumentError.

Review URL: https://codereview.chromium.org//10989013
------------------------------------------------------------------------
r12820 | asiva@google.com | 2012-09-25 08:25:44 +0900 (火, 25  9月 2012) | 2 lines

Fix the types used in bit fields and a few other places.
Review URL: https://codereview.chromium.org//10967044
------------------------------------------------------------------------
r12818 | hausner@google.com | 2012-09-25 08:18:04 +0900 (火, 25  9月 2012) | 4 lines

Implement part directive

This replaces the existing #source directive.
Review URL: https://codereview.chromium.org//10985005
------------------------------------------------------------------------
r12812 | srdjan@google.com | 2012-09-25 06:54:51 +0900 (火, 25  9月 2012) | 2 lines

Emit kDeoptBefore only in unoptimzied code (target when switching from optimized to unoptimized code).
Review URL: https://codereview.chromium.org//10979004
------------------------------------------------------------------------
r12811 | hausner@google.com | 2012-09-25 06:53:45 +0900 (火, 25  9月 2012) | 4 lines

Address Siva's comments

TBR=asiva
Review URL: https://codereview.chromium.org//10982012
------------------------------------------------------------------------
r12804 | hausner@google.com | 2012-09-25 05:46:56 +0900 (火, 25  9月 2012) | 7 lines

Support for show/hide combinators

- Add a new VM object called a Namespace.
- A Namespace is a library, and two list of names to hide/show.
- Convert Library and LibraryPrefix to contain Namespace
  objects instead of Libraries in their import list.
Review URL: https://codereview.chromium.org//10967052
------------------------------------------------------------------------
r12791 | regis@google.com | 2012-09-25 02:28:37 +0900 (火, 25  9月 2012) | 5 lines

Support redirecting factory constructors in the VM (issue 3969).
Add test (negative tests still missing).
Some more work is needed regarding when to throw a dynamic error and when to
report a compile-time error. Some questions are not answered by the spec.
Review URL: https://codereview.chromium.org//10964058
------------------------------------------------------------------------
r12778 | kmillikin@google.com | 2012-09-24 22:14:54 +0900 (月, 24  9月 2012) | 10 lines

Support constant folding of instructions with constant smi values.

In sparse conditional constant propagation, replace instructions with
constant smi values with their constant value.  Extend the analysis to
understant shift and bitwise binary operations.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10968058
------------------------------------------------------------------------
r12777 | zerny@google.com | 2012-09-24 22:01:55 +0900 (月, 24  9月 2012) | 5 lines

Remove caller arguments from nested deoptimization environments.

R=vegorov@google.com

Review URL: https://codereview.chromium.org//10960053
------------------------------------------------------------------------
r12776 | kmillikin@google.com | 2012-09-24 21:56:25 +0900 (月, 24  9月 2012) | 6 lines

Check for a NULL value before passing it to a function that assumes non-NULL.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//10972010
------------------------------------------------------------------------
r12772 | vegorov@google.com | 2012-09-24 21:00:19 +0900 (月, 24  9月 2012) | 16 lines

Fix convergence issues in range analysis.

Split it into three phases: initialization, widening and narrowing.

During widening and narrowing phi-ranges change according to classical widening and narrowing operators defined as:

Widening:
  [_|_, _|_] v [a, b] = [a, b]
  [a, b] v [c, d] = [c < a ? -inf : a, d > b ? +inf : b]

Narrowing:
  [a, b] ^ [c, d] = [(a == -inf) ? c : min(a, c), (b == +inf) ? d : max(b, d)]

R=fschneider@google.com

Review URL: https://codereview.chromium.org//10972003
------------------------------------------------------------------------
r12771 | zerny@google.com | 2012-09-24 20:28:51 +0900 (月, 24  9月 2012) | 5 lines

Disable loop invariant code motion on deoptimized functions.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//10974005
------------------------------------------------------------------------
r12756 | kmillikin@google.com | 2012-09-24 16:27:36 +0900 (月, 24  9月 2012) | 13 lines

Reapply "A simpler scheme for garbage collection of ureachable phi inputs."

Fix two issues:

* Unreachable code elimination did not correctly identify all unreachable
  blocks.

* Loop detection in the register allocator relied on the block IDs.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//10956013
------------------------------------------------------------------------
r12740 | vegorov@google.com | 2012-09-22 06:51:40 +0900 (土, 22  9月 2012) | 6 lines

Disable range analysis. Causes timeouts on dart2js buildbots.

TBR=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10964052
------------------------------------------------------------------------
r12738 | vegorov@google.com | 2012-09-22 06:08:32 +0900 (土, 22  9月 2012) | 5 lines

Do not collect smi values with no ssa index for range analysis.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//10959048
------------------------------------------------------------------------
r12734 | vegorov@google.com | 2012-09-22 05:17:15 +0900 (土, 22  9月 2012) | 6 lines

Fix Mac build broken by r12733.

TBR=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10968041
------------------------------------------------------------------------
r12733 | vegorov@google.com | 2012-09-22 05:06:31 +0900 (土, 22  9月 2012) | 5 lines

Implement range analysis for smi values.

And use it to eliminate overflow checks on + and - operations.

Review URL: https://codereview.chromium.org//10960014
------------------------------------------------------------------------
r12718 | zerny@google.com | 2012-09-22 00:25:21 +0900 (土, 22  9月 2012) | 5 lines

Fix for off-by-one error in assertion for r12715.

TBR=vegorov@google.com

Review URL: https://codereview.chromium.org//10964042
------------------------------------------------------------------------
r12715 | zerny@google.com | 2012-09-21 23:58:30 +0900 (金, 21  9月 2012) | 9 lines

Use the inner deoptimization frame when setting incoming arguments.

This fixes issue 5318 where deoptimization of an inlined call resulted in an
incorrect value being set in the deoptimized frames.

R=vegorov@google.com
BUG=5318

Review URL: https://codereview.chromium.org//10963027
------------------------------------------------------------------------
r12708 | fschneider@google.com | 2012-09-21 23:07:46 +0900 (金, 21  9月 2012) | 6 lines

Fix bug in assigning the positions of safepoints.

Safepoints are associated with the end of instructions so that
splitting a live range at a safe point position makes the safepoint
at that position belong to the correct live range.
Review URL: https://codereview.chromium.org//10963029
------------------------------------------------------------------------
r12703 | vegorov@google.com | 2012-09-21 22:30:23 +0900 (金, 21  9月 2012) | 6 lines

Improve ShouldSpecializeForDouble to handle ICs with multiple checks.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10967041
------------------------------------------------------------------------
r12679 | ager@google.com | 2012-09-21 14:40:33 +0900 (金, 21  9月 2012) | 18 lines

Fix implicit super constructor calls for sub-classes of native field wrappers.

The current code does not add implicit super calls for any sub-classes
of native field wrappers. It should only omit them from the actual
native field wrappers.

I encountered this issue when looking into dartbug.com/5301.

The test in the parser is not pretty. However, since the native field
wrappers can be generated through the API a better solution was not
immediate. I wanted to check if the class was from the
dart:nativewrappers library, but through the API you can create
native wrappers in any other library as well.

R=hausner@google.com,asiva@google.com
BUG=

Review URL: https://codereview.chromium.org//10963009
------------------------------------------------------------------------
r12673 | asiva@google.com | 2012-09-21 09:43:08 +0900 (金, 21  9月 2012) | 3 lines

Fix for issue 5223 : Import 'dart:core' implicitly only if it has not been
already explicitly imported in the script.
Review URL: https://codereview.chromium.org//10949028
------------------------------------------------------------------------
r12657 | asiva@google.com | 2012-09-21 06:04:14 +0900 (金, 21  9月 2012) | 2 lines

Issue a more meaningful error message when we see duplicate definitions (ambiguous reference)
Review URL: https://codereview.chromium.org//10969002
------------------------------------------------------------------------
r12651 | iposva@google.com | 2012-09-21 03:19:06 +0900 (金, 21  9月 2012) | 3 lines

- Make the VM understand the --checked flag to be aligned with dart2js.
- Adjust some of the checked mode tests to pass --checked and --enable-checked-mode.
Review URL: https://codereview.chromium.org//10962013
------------------------------------------------------------------------
r12649 | iposva@google.com | 2012-09-21 02:38:01 +0900 (金, 21  9月 2012) | 2 lines

- Fix flag names.
Review URL: https://codereview.chromium.org//10958002
------------------------------------------------------------------------
r12645 | zerny@google.com | 2012-09-21 00:36:26 +0900 (金, 21  9月 2012) | 10 lines

Disable inlining by default.

Inlining deoptimizable code currently causes errors.

See Issue 5318.

R=fschneider@google.com
BUG=5318

Review URL: https://codereview.chromium.org//10968012
------------------------------------------------------------------------
r12630 | vegorov@google.com | 2012-09-20 21:05:02 +0900 (木, 20  9月 2012) | 5 lines

Improve SminessPropagator to propagate sminess across cycles of phis.

R=fschneider@google.com

Review URL: https://codereview.chromium.org//10950035
------------------------------------------------------------------------
r12624 | kmillikin@google.com | 2012-09-20 18:11:44 +0900 (木, 20  9月 2012) | 8 lines

Revert "A simpler scheme for garbage collection of ureachable phi inputs."

This reverts svn revision 12621.  It causes unexpected test timouts.

TBR=sgjesse@google.com
BUG=

Review URL: https://codereview.chromium.org//10964012
------------------------------------------------------------------------
r12621 | kmillikin@google.com | 2012-09-20 17:47:57 +0900 (木, 20  9月 2012) | 10 lines

A simpler scheme for garbage collection of ureachable phi inputs.

Simplify the garbage collection of unreachable phi inputs.  Assign immutable
block ids to basic blocks and ensure that both predecessor blocks and phi
inputs are kept sorted by block id.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//10939036
------------------------------------------------------------------------
r12620 | kmillikin@google.com | 2012-09-20 17:38:33 +0900 (木, 20  9月 2012) | 10 lines

Make some static helpers into member functions.

Four helper functions that moved from lib/integers.cc to vm/object.cc so
they could be used during constant folding are more properly member
functions than static functions.

R=srdjan@google.com
BUG=

Review URL: https://codereview.chromium.org//10937030
------------------------------------------------------------------------
r12616 | ager@google.com | 2012-09-20 16:08:10 +0900 (木, 20  9月 2012) | 13 lines

Introduce a VM-only dart:scalarlist library for byte arrays.

Include it in the SDK so users can use it. Create a dummy
implementation and patch file for the library for dart2js so it can be
documented. Johnni, can you think of a nicer way of making
documentation generation work for a VM only library? Also, it seems that
patching kills the documentation comments and they do not show up in
the generated docs.

R=iposva@google.com,johnniwinther@google.com
BUG=

Review URL: https://codereview.chromium.org//10919267
------------------------------------------------------------------------
r12608 | vegorov@google.com | 2012-09-20 06:48:50 +0900 (木, 20  9月 2012) | 8 lines

Ensure that parser throws an error when parsing x is! T with malformed type T.

Otherwise VM crashes in the flow graph builder

R=regis@google.com
BUG=

Review URL: https://codereview.chromium.org//10944041
------------------------------------------------------------------------
r12601 | regis@google.com | 2012-09-20 05:59:01 +0900 (木, 20  9月 2012) | 3 lines

Control static type propagation with a flag in optimizing compiler.
Minor cleanup.
Review URL: https://codereview.chromium.org//10952009
------------------------------------------------------------------------
r12577 | hausner@google.com | 2012-09-20 02:09:42 +0900 (木, 20  9月 2012) | 7 lines

Add virtual method to Object to ease dictionary code

Add a virtual method at the root of the object hierarchy
that returns the name of the object that is used in the
namespace dictionary. Only object types that are kept in
the dictionary need to overwrite the default implementation. 
Review URL: https://codereview.chromium.org//10945020
------------------------------------------------------------------------
r12570 | kmillikin@google.com | 2012-09-20 01:05:58 +0900 (木, 20  9月 2012) | 8 lines

Fix a typo in an input index computation.

Bug was found by varying the order of predecessors.

R=vegorov@google.com
BUG=

Review URL: https://codereview.chromium.org//10949022
------------------------------------------------------------------------
r12563 | vegorov@google.com | 2012-09-19 23:38:31 +0900 (水, 19  9月 2012) | 8 lines

Turn definitions that do not produce results (e.g. Checks) into instructions.

This allows more uniform iteration of IR for example when we are looking for all Smi values.

R=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10949019
------------------------------------------------------------------------
r12561 | kmillikin@google.com | 2012-09-19 23:10:14 +0900 (水, 19  9月 2012) | 10 lines

Reapply "Initial implementation of sparse conditional constant propagation."

With a fix for compilation on Mac.  GrowableArray is DISALLOW_COPY_AND_ASSIGN,
so we can't create a temporary one to be ignored and have to pass one in to be
ignored.

R=fschneider@google.com,zerny@google.com
BUG=

Review URL: https://codereview.chromium.org//10949020
------------------------------------------------------------------------
r12556 | zerny@google.com | 2012-09-19 21:43:48 +0900 (水, 19  9月 2012) | 5 lines

Remove check for stack overflow on entry to an inlined function.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//10945025
------------------------------------------------------------------------
r12555 | zerny@google.com | 2012-09-19 21:37:57 +0900 (水, 19  9月 2012) | 9 lines

Replace start_env with initial_definitions in GraphEntryInstr.

The initial definitions do not have any deoptimization information and can be
represented as just a list of definitions. For easy access, the constant_null
getter remains but assumes that index 0 contains the constant.

R=kmillikin@google.com

Review URL: https://codereview.chromium.org//10939031
------------------------------------------------------------------------
r12552 | kmillikin@google.com | 2012-09-19 20:04:36 +0900 (水, 19  9月 2012) | 8 lines

Revert "Initial implementation of sparse conditional constant propagation."

Revert due to compilation failures on Mac.

TBR=fschneider@google.com
BUG=

Review URL: https://codereview.chromium.org//10946027
------------------------------------------------------------------------
r12549 | kmillikin@google.com | 2012-09-19 19:34:14 +0900 (水, 19  9月 2012) | 7 lines

Initial implementation of sparse conditional constant propagation.

Use the results of SCC to eliminate unreachable code.

BUG=

Review URL: https://codereview.chromium.org//10943007
------------------------------------------------------------------------
r12539 | fschneider@google.com | 2012-09-19 17:33:07 +0900 (水, 19  9月 2012) | 4 lines

Delete code for the now unused IL instruction NumberNegate.

It was replaced by an unboxed double operation in a previous change.
Review URL: https://codereview.chromium.org//10938011
------------------------------------------------------------------------
r12527 | cshapiro@google.com | 2012-09-19 10:11:37 +0900 (水, 19  9月 2012) | 9 lines

Constraint List length values to the Smi type.

This change also makes the fast path and slow path cases in some integer
handling functions explicit.  Values are asserted not to be a Smi in the
slow path as they should have been picked off in the fast path.

BUG=https://code.google.com/p/dart/issues/detail?id=1750

Review URL: https://codereview.chromium.org//10941018
------------------------------------------------------------------------
r12511 | cshapiro@google.com | 2012-09-19 06:15:46 +0900 (水, 19  9月 2012) | 8 lines

Lazy peer API.

This change provides getters and setters for a lazily allocated field
associated with every heap allocated object.  It is a generalization
of the peer field of external string instances, external byte array
instances, and the smrck field of closure instances.

Review URL: https://chromiumcodereview.appspot.com//10905251
------------------------------------------------------------------------
r12502 | regis@google.com | 2012-09-19 00:12:43 +0900 (水, 19  9月 2012) | 5 lines

Fix bad optimization of instance-of with uninstantiated types (issue 5216).
Fix bad assert when type check elimination is disabled (issue 5217).
Cleanup of type elimination code in optimizing compiler.
Add test.
Review URL: https://codereview.chromium.org//10942006
------------------------------------------------------------------------
r12499 | zerny@google.com | 2012-09-18 22:41:20 +0900 (火, 18  9月 2012) | 7 lines

Reapply "Deoptimization support in inlined code."

This reapplies r12488 with a fix.

R=kmillikin@google.com,fschneider@google.com

Review URL: https://codereview.chromium.org//10952002
------------------------------------------------------------------------
r12497 | vegorov@google.com | 2012-09-18 22:27:21 +0900 (火, 18  9月 2012) | 8 lines

Prohibit inlining of functions containing throw. Inliner does not handle abnormal control flow.

In StrictCompareInstr::Canonicalize don't remove right_constant from the graph. It might leave the graph in the inconsistent state.

R=srdjan@google.com
BUG=dart:5136

Review URL: https://codereview.chromium.org//10918212
------------------------------------------------------------------------
r12492 | zerny@google.com | 2012-09-18 21:18:04 +0900 (火, 18  9月 2012) | 7 lines

Revert "Deoptimization support in inlined code."

This reverts commit a78e33f178aae74a97f4231ca98183adf97fda71.

TBR=fschneider@google.com

Review URL: https://codereview.chromium.org//10948007
------------------------------------------------------------------------
r12488 | zerny@google.com | 2012-09-18 20:53:59 +0900 (火, 18  9月 2012) | 3 lines

Deoptimization support in inlined code.

Review URL: https://codereview.chromium.org//10928232
------------------------------------------------------------------------
r12443 | fschneider@google.com | 2012-09-18 01:34:22 +0900 (火, 18  9月 2012) | 5 lines

Avoid using a temp register when unboxing a known smi.

Instead of saving into a temp, restore the input by re-tagging
it after the conversion.
Review URL: https://codereview.chromium.org//10909272
------------------------------------------------------------------------
r12439 | fschneider@google.com | 2012-09-18 00:17:38 +0900 (火, 18  9月 2012) | 4 lines

Fix typo introduced by wrong conflict merge.

TBR=vegorov@google.com
Review URL: https://codereview.chromium.org//10907256
------------------------------------------------------------------------
r12437 | fschneider@google.com | 2012-09-17 23:27:45 +0900 (月, 17  9月 2012) | 8 lines

Simple redundant load elimination.

This analysis uses bit vectors to track side effects. Currently, there is
only one type of side effect which affects all mutable load-field instructions.
The elimination pass is a dominator tree preorder traversal like the existing
CSE pass. Instead of a hash-map it keeps an array with the current dominating
occurrence for each load expression.
Review URL: https://codereview.chromium.org//10914314
------------------------------------------------------------------------
r12430 | fschneider@google.com | 2012-09-17 20:33:48 +0900 (月, 17  9月 2012) | 2 lines

Enable CSE for binary smi ops and constants.
Review URL: https://codereview.chromium.org//10917292
------------------------------------------------------------------------
r12427 | vegorov@google.com | 2012-09-17 18:50:21 +0900 (月, 17  9月 2012) | 6 lines

Mangle private names in the method recognizer otherwise they are not recognized.

R=fschneider@google.com
BUG=dart:5203

Review URL: https://codereview.chromium.org//10914313
------------------------------------------------------------------------
r12408 | hausner@google.com | 2012-09-15 07:46:54 +0900 (土, 15  9月 2012) | 4 lines

Stop making classes implicitly abstract

Allocating an implicitly abstract class is no longer a runtime error.
Review URL: https://codereview.chromium.org//10910284
------------------------------------------------------------------------
r12399 | johnmccutchan@google.com | 2012-09-15 04:38:33 +0900 (土, 15  9月 2012) | 5 lines

Fix typed array intrinsifier.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10908265
------------------------------------------------------------------------
r12378 | fschneider@google.com | 2012-09-14 21:08:31 +0900 (金, 14  9月 2012) | 6 lines

Enable redundancy elimination for initialized static final fields.

Once initialized, static final fields are immutable and can participate
in common subexpression elimination and code motion without  being
 affected by side effects.
Review URL: https://codereview.chromium.org//10928201
------------------------------------------------------------------------
r12358 | hausner@google.com | 2012-09-14 07:25:09 +0900 (金, 14  9月 2012) | 2 lines

Get rid of #resource directive in VM
Review URL: https://codereview.chromium.org//10918226
------------------------------------------------------------------------
r12342 | turnidge@google.com | 2012-09-14 02:47:25 +0900 (金, 14  9月 2012) | 39 lines

Implement more of the mirrors library, primarily stuff to do with types.

Highlights:

- Implement FunctionClassMirror, used to reflect on the class of
  function objects.

- Implement TypeVariableMirror, used to reflect on type variables.

- Implement TypedefMirror, used to reflect on typedefs.

- Implement returnType for MethodMirror

- Implement type for VariableMirror/ParameterMirror

- Added supporting functions to the dart embedding api:
  - Dart_ClassIsTypedef
  - Dart_ClassGetTypedefReferent
  - Dart_ClassIsFunctionClass
  - Dart_ClassGetFunctionClassSignature
  - Dart_FunctionReturnType
  - Dart_FunctionParameterType
  - Dart_VariableType
  - Dart_GetTypeVariableNames
  - Dart_LookupTypeVariable
  - Dart_IsTypeVariable
  - Dart_TypeVariableOwner
  - Dart_TypeVariableUpperBound

Other stuff:

- Fixed bug in Function::NumberOfImplicitParameters for signature
  functions.

- Chnaged the default upper bound for type variables to Object from
  Dynamic.  Discussed this with Gilad and Regis.

- Fixed some smaller problems in mirrors_impl.dart.
Review URL: https://chromiumcodereview.appspot.com//10916252
------------------------------------------------------------------------
r12333 | srdjan@google.com | 2012-09-13 23:48:07 +0900 (木, 13  9月 2012) | 2 lines

Copy of Issue 10910254: Fix excessive deoptimizations on bounds check, make constant length a Smi. The original was nuked by mistake.
Review URL: https://codereview.chromium.org//10915261
------------------------------------------------------------------------
r12332 | fschneider@google.com | 2012-09-13 23:42:19 +0900 (木, 13  9月 2012) | 6 lines

Add unboxed double negation and reenable optimized smi negation.

Fix the optimizer to recognize unary minus operations and
implement double negation as (x * -1) using the unboxed double
multiplication.
Review URL: https://codereview.chromium.org//10905260
------------------------------------------------------------------------
r12330 | iposva@google.com | 2012-09-13 23:13:55 +0900 (木, 13  9月 2012) | 2 lines

- Move double and int implementations into dart:core and make them private.
Review URL: https://codereview.chromium.org//10918213
------------------------------------------------------------------------
r12322 | srdjan@google.com | 2012-09-13 21:49:50 +0900 (木, 13  9月 2012) | 2 lines

Optimize code for bound checks if array is constant. Skip unnecessary Smi checks if they still survived to code emission.
Review URL: https://codereview.chromium.org//10911277
------------------------------------------------------------------------
r12321 | kasperl@google.com | 2012-09-13 21:37:00 +0900 (木, 13  9月 2012) | 8 lines

Re-land r12289.

Looks like Johnni has fixed the dartdoc issues.

R=iposva@google.com,hausner@google.com
BUG=

Review URL: https://codereview.chromium.org//10919263
------------------------------------------------------------------------
r12319 | srdjan@google.com | 2012-09-13 21:09:44 +0900 (木, 13  9月 2012) | 2 lines

Fix issues 5137: instance of test on constant value should return true or false, not the value itself.
Review URL: https://codereview.chromium.org//10909200
------------------------------------------------------------------------
r12310 | fschneider@google.com | 2012-09-13 19:49:01 +0900 (木, 13  9月 2012) | 5 lines

Improve register usage for StoreInstanceField and StoreIndexed.

No need for a temp if we don't emit a write barrier and
use a immediate operand for the value if available.
Review URL: https://codereview.chromium.org//10910252
------------------------------------------------------------------------
r12308 | srdjan@google.com | 2012-09-13 18:46:04 +0900 (木, 13  9月 2012) | 2 lines

FIx crash in disassembler: check that an addrs is tagged before testing it to be part of the heap.
Review URL: https://codereview.chromium.org//10915256
------------------------------------------------------------------------
r12304 | lrn@google.com | 2012-09-13 16:17:27 +0900 (木, 13  9月 2012) | 7 lines

Make int an abstract class.

This looks deceptively simple (the only real change is in init, which
just copies the code for double, and the rest are just renaming for
consistency). It seems to work.

Review URL: https://chromiumcodereview.appspot.com//10933039
------------------------------------------------------------------------
r12300 | asiva@google.com | 2012-09-13 14:31:05 +0900 (木, 13  9月 2012) | 3 lines

Set heap_growth_space_ratio to 100 so that the benchmark runs do not
show variance based on the initial heap size.
Review URL: https://codereview.chromium.org//10915253
------------------------------------------------------------------------
r12291 | hausner@google.com | 2012-09-13 09:22:12 +0900 (木, 13  9月 2012) | 4 lines

Revert change 12289

Will resubmit tomorrow. Dartc and Editor need to cleanup static finals.
Review URL: https://codereview.chromium.org//10928169
------------------------------------------------------------------------
r12290 | asiva@google.com | 2012-09-13 09:20:37 +0900 (木, 13  9月 2012) | 16 lines

Move all the closure related fields in RawFunction into a new class
called RawClosureData
Add a field called 'data_' in RawFunction which points to a RawClosureData
object for closure functions, a signature class for signature functions or
an implicit closure function if there is an implicit closure for a regular
function.

This ensures that we don't burn 5 fields in RawFunction for normal functions.
The heap savings from this change on standalone dart is about 67k.

After this change:
New space (0k of 32768k) Old space (886k of 1024k) Code space (0k of 0k)

Prior to this change:
New space (0k of 32768k) Old space (953k of 1024k) Code space (0k of 0k)
Review URL: https://chromiumcodereview.appspot.com//10917222
------------------------------------------------------------------------
r12289 | hausner@google.com | 2012-09-13 09:03:16 +0900 (木, 13  9月 2012) | 5 lines

Stop treating finals as const

Toplevel final variables and static final fields are no longer
considered compile-time constants.
Review URL: https://codereview.chromium.org//10918203
------------------------------------------------------------------------
r12288 | regis@google.com | 2012-09-13 08:35:05 +0900 (木, 13  9月 2012) | 4 lines

Limit the maximum number of formal parameters (32K fixed and 32K optional)
in order to save space in function objects.
Naming cleanup.
Review URL: https://codereview.chromium.org//10928160
------------------------------------------------------------------------
r12285 | vegorov@google.com | 2012-09-13 07:12:23 +0900 (木, 13  9月 2012) | 6 lines

Guard against allocation top overflow in ObjectArray_Allocate intrinsic.

R=iposva@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10917223
------------------------------------------------------------------------
r12280 | iposva@google.com | 2012-09-13 05:13:25 +0900 (木, 13  9月 2012) | 2 lines

- Fixed patching of named factory constructors. Bug 4727.
- Added test to check for error free patching of native factories.
------------------------------------------------------------------------
r12275 | devoncarew@google.com | 2012-09-13 03:01:50 +0900 (木, 13  9月 2012) | 4 lines

Fix for http://code.google.com/p/dart/issues/detail?id=5085 - break-on-exceptions in the debugger can recurse.

This CL turns off the break-on-exceptions behavior when evaluating Dart code in the debugger (in particular, the toString() method).
Review URL: https://chromiumcodereview.appspot.com//10928149
------------------------------------------------------------------------
r12274 | fschneider@google.com | 2012-09-13 02:43:37 +0900 (木, 13  9月 2012) | 5 lines

Cleanup: Replace LoadInstanceFieldInstr with LoadVMFieldInstr.

They already have the same code generation template and LoadVMField
contains all necessary information.
Review URL: https://chromiumcodereview.appspot.com//10933046
------------------------------------------------------------------------
r12273 | vegorov@google.com | 2012-09-13 02:38:23 +0900 (木, 13  9月 2012) | 6 lines

Mark phi as producing a smi value if it is dominated by SmiChecks over its operands.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10915234
------------------------------------------------------------------------
r12268 | srdjan@google.com | 2012-09-13 00:52:58 +0900 (木, 13  9月 2012) | 2 lines

Using type feedback, eliminate store barriers for indexed stores.
Review URL: https://chromiumcodereview.appspot.com//10910224
------------------------------------------------------------------------
r12265 | fschneider@google.com | 2012-09-12 22:49:12 +0900 (水, 12  9月 2012) | 6 lines

Add immediate operand support for indexed operations.

The value and/or the index of indexed loads/stores can
be emitted as immediate operands to reduce the number
of registers needed when constants are used.
Review URL: https://chromiumcodereview.appspot.com//10933045
------------------------------------------------------------------------
r12259 | vegorov@google.com | 2012-09-12 21:43:40 +0900 (水, 12  9月 2012) | 8 lines

Revert "Whenever possible use length passed to the List constructor for bounds checks instead of loading it from the array object itself."

It completely eliminated bounds checks (Canonicalize method has to guarantee that replacement is inserted in the graph).

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10908214
------------------------------------------------------------------------
r12257 | srdjan@google.com | 2012-09-12 20:55:21 +0900 (水, 12  9月 2012) | 3 lines

Use ICData to collect type feedback on instance setter value. If value is always Smi, insert a smi check and eliminate the store barrier.
TODO: Implement it for indexed store (collecting three arguments).
Review URL: https://chromiumcodereview.appspot.com//10933043
------------------------------------------------------------------------
r12254 | vegorov@google.com | 2012-09-12 19:46:00 +0900 (水, 12  9月 2012) | 6 lines

Whenever possible use length passed to the List constructor for bounds checks instead of loading it from the array object itself.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10905233
------------------------------------------------------------------------
r12249 | srdjan@google.com | 2012-09-12 18:31:19 +0900 (水, 12  9月 2012) | 2 lines

Flush instruction cache when patching for lazy deopt.
Review URL: https://chromiumcodereview.appspot.com//10914223
------------------------------------------------------------------------
r12245 | fschneider@google.com | 2012-09-12 17:45:02 +0900 (水, 12  9月 2012) | 12 lines

Split array loads/stores for growable arrays into two IL instructions.

This simplifies the code generation function for indexed loads/stores
a lot and help eliminating the load of the backing store in the future.

Enable CSE for loads of immutable fields like string length or fixed array
length.

Rename HasSideEffect into AffectedBySideEffect. Currently, only instructions
that are not affected by side effects can participate in hoisting or redundancy
elimination.
Review URL: https://chromiumcodereview.appspot.com//10911214
------------------------------------------------------------------------
r12244 | kmillikin@google.com | 2012-09-12 17:25:24 +0900 (水, 12  9月 2012) | 9 lines

Inline monomorphic calls.

Also add inlining support for more instructions that can not deoptimize.

Original changelist: http://codereview.chromium.org/10913010/

BUG=

Review URL: https://chromiumcodereview.appspot.com//10916228
------------------------------------------------------------------------
r12242 | srdjan@google.com | 2012-09-12 16:55:20 +0900 (水, 12  9月 2012) | 2 lines

Fixed a "typo" in setting result cid.
Review URL: https://chromiumcodereview.appspot.com//10915223
------------------------------------------------------------------------
r12234 | srdjan@google.com | 2012-09-12 15:37:48 +0900 (水, 12  9月 2012) | 2 lines

PolymorphicInstanceCall: eliminate duplicate printing of ICData; eliminate Smi class id loading if Smi is not expected.
Review URL: https://chromiumcodereview.appspot.com//10933025
------------------------------------------------------------------------
r12233 | kasperl@google.com | 2012-09-12 14:29:03 +0900 (水, 12  9月 2012) | 11 lines

Remove support for operator negate and replace occurrences with unary
operator -.

In the VM, I have disabled the operator negate support in the parser but I
have not removed the keyword because the token is used in quite a few other
places.

R=ahe@google.com,iposva@google.com,hausner@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10911206
------------------------------------------------------------------------
r12227 | hausner@google.com | 2012-09-12 08:21:16 +0900 (水, 12  9月 2012) | 2 lines

Fix dart2js status for raw string test
Review URL: https://chromiumcodereview.appspot.com//10928131
------------------------------------------------------------------------
r12226 | asiva@google.com | 2012-09-12 08:06:01 +0900 (水, 12  9月 2012) | 3 lines

Shrink the size of deoptimization_counter_ and kind_tag_ fields. This
compensates for the new num_optional_named_parameters_ field.
Review URL: https://chromiumcodereview.appspot.com//10905220
------------------------------------------------------------------------
r12225 | hausner@google.com | 2012-09-12 07:53:45 +0900 (水, 12  9月 2012) | 2 lines

Support r"xxx" raw strings
Review URL: https://chromiumcodereview.appspot.com//10914213
------------------------------------------------------------------------
r12216 | hausner@google.com | 2012-09-12 05:10:56 +0900 (水, 12  9月 2012) | 8 lines

Support new library/import syntax

This change simply adds new syntax support for the functionality we
currently have in the VM.

- Support for library and import, import-as.
- Still to do: show/hide combinators, export, library parts.
Review URL: https://chromiumcodereview.appspot.com//10928121
------------------------------------------------------------------------
r12214 | regis@google.com | 2012-09-12 03:44:16 +0900 (水, 12  9月 2012) | 3 lines

Fix issue with optional named parameters.
Update tests.
Review URL: https://chromiumcodereview.appspot.com//10911217
------------------------------------------------------------------------
r12208 | srdjan@google.com | 2012-09-12 00:41:34 +0900 (水, 12  9月 2012) | 2 lines

Improve moves of Smi and null objects. Add result cid to List constructor calls. Add tracing of inline cache misses in optimized code (a big no-no).
Review URL: https://chromiumcodereview.appspot.com//10933019
------------------------------------------------------------------------
r12202 | iposva@google.com | 2012-09-12 00:03:40 +0900 (水, 12  9月 2012) | 3 lines

- Do not limit the compiler message buffer, by allocating the message
  into a String object.
Review URL: https://chromiumcodereview.appspot.com//10933021
------------------------------------------------------------------------
r12200 | vegorov@google.com | 2012-09-11 23:52:32 +0900 (火, 11  9月 2012) | 6 lines

Optimistically inline Math.sqrt as unboxed sqrtsd instruction.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10915200
------------------------------------------------------------------------
r12197 | sgjesse@google.com | 2012-09-11 23:37:07 +0900 (火, 11  9月 2012) | 17 lines

Support receiving GrowableObjectArray on native ports

Array literals are created as GrowableObjectArrays internally.

A GrowableObjectArray holds a length and a backing store. The backing
store is an array. When receiving a GrowableObjectArray an object is
created for holding the GrowableObjectArray. The the backing store has
been read the object holding the GrowableObjectArray is transformed
into an array with its content from the backing store.

R=asiva@google.com, ager@google.com

BUG=dart:4993
TEST=runtime/vm/snapshot_test.cc/DartGeneratedArrayLiteralMessagesWithBackref,
     runtime/vm/snapshot_test.cc/DartGeneratedArrayLiteralMessages

Review URL: https://chromiumcodereview.appspot.com//10916207
------------------------------------------------------------------------
r12193 | vegorov@google.com | 2012-09-11 21:50:52 +0900 (火, 11  9月 2012) | 9 lines

Add support for WritableRegister policy in the register allocator.

Use it to eliminate push/pop on the fast path of the write barrier.

Tighten assertions in StoreIntoObject to ensure that value register is not equal to object register. Current code can't cope with that.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10909169
------------------------------------------------------------------------
r12190 | kmillikin@google.com | 2012-09-11 21:30:21 +0900 (火, 11  9月 2012) | 11 lines

Introduce nested deoptimization environments.

Add an optional outer deoptimization environment to support inlining.
Introduce a pair of environment iterators.

Original codereview: https://chromiumcodereview.appspot.com/10928048/

R=fschneider@google.com,zerny@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10909168
------------------------------------------------------------------------
r12181 | ager@google.com | 2012-09-11 20:03:50 +0900 (火, 11  9月 2012) | 6 lines

Reapply changes to Expando patching.

R=ajohnsen@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10911201
------------------------------------------------------------------------
r12172 | lrn@google.com | 2012-09-11 18:52:25 +0900 (火, 11  9月 2012) | 6 lines

Rename NoSuchMethodException to NoSuchMethodError.

Moved NoSuchMethodError to errors.dart.
No changes in co19 tests, but test status updated.

Review URL: https://chromiumcodereview.appspot.com//10909166
------------------------------------------------------------------------
r12161 | srdjan@google.com | 2012-09-11 16:03:07 +0900 (火, 11  9月 2012) | 2 lines

Inline GrowableObjectArray capacity getter, use CHA to eliminate load/store fields class checks.
Review URL: https://chromiumcodereview.appspot.com//10918164
------------------------------------------------------------------------
r12153 | asiva@google.com | 2012-09-11 11:06:59 +0900 (火, 11  9月 2012) | 6 lines

Fix for issue 1204.

Do not allocate a buffer of 64KB by default when writing a message out. Start
with a much smaller buffer. FOr script and full snapshots the buffer
allocated remains 64 KB.
Review URL: https://chromiumcodereview.appspot.com//10908185
------------------------------------------------------------------------
r12124 | vegorov@google.com | 2012-09-11 01:02:40 +0900 (火, 11  9月 2012) | 8 lines

Refactor building of StoreStaticField and StoreLocal to manually preserve value.

This is first step towards eliminating manual value preservation in the write barrier's fast-path.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10905182
------------------------------------------------------------------------
r12111 | fschneider@google.com | 2012-09-10 22:03:27 +0900 (月, 10  9月 2012) | 10 lines

Avoid allocating unnecessary result locations for some instructions.

If the result of an instruction is not needed, we don't need to
assign a result location. I fixed StoreStatic and StoreVMField.

For calls, it does not hurt since all registers are blocked anyway.
Other instructions that don't have side effects usually don't occur
in an effect context and should be removed by a separate pass before
entering the register allocator.
Review URL: https://chromiumcodereview.appspot.com//10918144
------------------------------------------------------------------------
r12109 | srdjan@google.com | 2012-09-10 20:54:43 +0900 (月, 10  9月 2012) | 2 lines

Use CHA to eliminate checks for calls on receiver of caller: check that there can be only one target.
Review URL: https://chromiumcodereview.appspot.com//10918142
------------------------------------------------------------------------
r12093 | srdjan@google.com | 2012-09-10 00:00:51 +0900 (月, 10  9月 2012) | 2 lines

Finish implementing lazy deoptimization (ia32, x64). Ran tests with --deoptimize-alot.
Review URL: https://chromiumcodereview.appspot.com//10912146
------------------------------------------------------------------------
r12092 | asiva@google.com | 2012-09-09 14:26:37 +0900 (日, 09  9月 2012) | 8 lines

- Add a test case to test Source code generation of all the corelibs
  (core, coreimpl, isolate, math and mirrors).

- Fix bugs in source code generation which were causing the above tests to
  fail.

(This should take care of issue 4647 and related bugs).
Review URL: https://chromiumcodereview.appspot.com//10911159
------------------------------------------------------------------------
r12079 | hausner@google.com | 2012-09-08 08:10:43 +0900 (土, 08  9月 2012) | 2 lines

Add missing dot in comment
Review URL: https://chromiumcodereview.appspot.com//10908152
------------------------------------------------------------------------
r12078 | hausner@google.com | 2012-09-08 08:06:48 +0900 (土, 08  9月 2012) | 7 lines

VM can parse and ignore metadata

Support parsing of metadata in all legal locations except library
and import directives. The metadata is simply ignored. It is not
evaluated or validated for correctness.
 
Review URL: https://chromiumcodereview.appspot.com//10913138
------------------------------------------------------------------------
r12075 | cshapiro@google.com | 2012-09-08 07:37:10 +0900 (土, 08  9月 2012) | 5 lines

New test case to ensure finalizers are not invoked on deleted handles.

This also removes a needless allocation from the complementary test.

Review URL: https://chromiumcodereview.appspot.com//10916185
------------------------------------------------------------------------
r12072 | cshapiro@google.com | 2012-09-08 07:17:56 +0900 (土, 08  9月 2012) | 5 lines

Revert "Revert "Finalize reachable weak persistent handles at isolate shutdown.""

This reverts commit d701af3a2c8a7169898adcb38fe9da0a667ae7ff.

Review URL: https://chromiumcodereview.appspot.com//10928065
------------------------------------------------------------------------
r12064 | srdjan@google.com | 2012-09-08 05:41:53 +0900 (土, 08  9月 2012) | 2 lines

Intrinsify Double.toInt.
Review URL: https://chromiumcodereview.appspot.com//10914142
------------------------------------------------------------------------
r12052 | vegorov@google.com | 2012-09-08 03:34:15 +0900 (土, 08  9月 2012) | 8 lines

Fix format used to write information into /tmp/perf-<pid>.map.

Address and size should be hex numbers without 0x prefix.

R=cshapiro@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10918123
------------------------------------------------------------------------
r12028 | kasperl@google.com | 2012-09-07 21:56:21 +0900 (金, 07  9月 2012) | 9 lines

Remove more () from getters.

This makes it possible to run all standard tests except co19
without ever using a getter that's defined with ().

R=iposva@google.com,hausner@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10928051
------------------------------------------------------------------------
r12023 | lrn@google.com | 2012-09-07 21:30:55 +0900 (金, 07  9月 2012) | 6 lines

Move dart:web to pkg:htmlescape.

Remove the dart:web library from the VM.
Remove reference to web library from libraries.dart.

Review URL: https://chromiumcodereview.appspot.com//10919147
------------------------------------------------------------------------
r12022 | vegorov@google.com | 2012-09-07 21:23:01 +0900 (金, 07  9月 2012) | 6 lines

Optimistically hoist SmiCheck through phi when the only value of unknown type coming into the phi is an operand corresponding to the loop's pre-header.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10916155
------------------------------------------------------------------------
r12014 | kmillikin@google.com | 2012-09-07 20:05:02 +0900 (金, 07  9月 2012) | 8 lines

Repair flow graph printing after graph refactoring.

Recent refactoring broke flow graph printing (including code comments).
Clean it up.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10915141
------------------------------------------------------------------------
r12006 | cshapiro@google.com | 2012-09-07 12:50:44 +0900 (金, 07  9月 2012) | 5 lines

Revert "Finalize reachable weak persistent handles at isolate shutdown."

This reverts commit b67c5b5d0651a6c9d335ff5ce511901948fd1a51.

Review URL: https://chromiumcodereview.appspot.com//10917126
------------------------------------------------------------------------
r12005 | cshapiro@google.com | 2012-09-07 12:14:41 +0900 (金, 07  9月 2012) | 5 lines

Finalize reachable weak persistent handles at isolate shutdown.

BUG=http://code.google.com/p/dart/issues/detail?id=4071

Review URL: https://chromiumcodereview.appspot.com//10910123
------------------------------------------------------------------------
r12004 | regis@google.com | 2012-09-07 10:13:27 +0900 (金, 07  9月 2012) | 5 lines

Implement new optional parameters syntax in the vm (issue 4290).
Provide --reject_named_argument_as_positional flag to ease transition to new
syntax (default is false).
Add tests.
Review URL: https://chromiumcodereview.appspot.com//10910119
------------------------------------------------------------------------
r12001 | cshapiro@google.com | 2012-09-07 09:08:56 +0900 (金, 07  9月 2012) | 3 lines

Eliminate a potential warning about extra format arguments.

Review URL: https://chromiumcodereview.appspot.com//10908133
------------------------------------------------------------------------
r11988 | regis@google.com | 2012-09-07 06:08:07 +0900 (金, 07  9月 2012) | 3 lines

Removed properties on some sources (svn propdel svn:eol-style *) that force
diff tools to create temp files.
Review URL: https://chromiumcodereview.appspot.com//10913124
------------------------------------------------------------------------
r11977 | asiva@google.com | 2012-09-07 03:46:51 +0900 (金, 07  9月 2012) | 10 lines

Use external byte arrays for token stream, this moves the token stream out of the isolate heap. For full snapshots the external byte array points to the snapshot buffer thus incurring no extra space in the C heap either.

Heap usage stats before this change is:
New space (0k of 32768k) Old space (1085k of 1280k) Code space (0k of 0k)

Heap Usage stats after this change is:
New space (0k of 32768k) Old space (947k of 1024k) Code space (0k of 0k)

A savings of about 138k.
Review URL: https://chromiumcodereview.appspot.com//10914050
------------------------------------------------------------------------
r11972 | hausner@google.com | 2012-09-07 03:02:41 +0900 (金, 07  9月 2012) | 14 lines

Add named constructor name checking

Named constructors may not clash with any other class members.
Add a check but enable it only when --construcotr_name_check
runtime flag is passed to the VM.

Eliminate one named constructor in Process class in core library,
as well as a couple of cases in dart2js.

The dart2js team may want to rename the constructors I changed.

Issue 3990  (http://code.google.com/p/dart/issues/detail?id=3990)
 
Review URL: https://chromiumcodereview.appspot.com//10905109
------------------------------------------------------------------------
r11969 | srdjan@google.com | 2012-09-07 02:07:20 +0900 (金, 07  9月 2012) | 2 lines

In preparation for lazy deoptimization add "is_alive_" field to RawCode: visit embedded pointers only if it is set to true. It will be set to false when patching the code to call lazy deopt-trampoline stub, thus potentially destroying embedded pointers.
Review URL: https://chromiumcodereview.appspot.com//10915120
------------------------------------------------------------------------
r11968 | srdjan@google.com | 2012-09-07 02:03:43 +0900 (金, 07  9月 2012) | 2 lines

Fix Token::kAS and its printing according to Regis' comment.
Review URL: https://chromiumcodereview.appspot.com//10909098
------------------------------------------------------------------------
r11947 | vegorov@google.com | 2012-09-06 22:27:30 +0900 (木, 06  9月 2012) | 12 lines

Allow smi comparisons to have constant operands.

Remove unnecessary temps reserved for them.

Load constants directly in phi moves.

Generate xor(reg, reg) for loading of 0 instead of mov.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10918097
------------------------------------------------------------------------
r11946 | fschneider@google.com | 2012-09-06 22:21:20 +0900 (木, 06  9月 2012) | 10 lines

Implement loop invariant code motion for check instructions.

This CL adds a new optimization pass that hoist loop invariant
instructions upwards out of loops.

I'm adding a deoptimzation point at every Goto so that we
can move deoptimizing instructions like checks out of loops.
As a result there may be multiple deoptimization descriptors
with the same PC. The corresponding assert are removed.
Review URL: https://chromiumcodereview.appspot.com//10909094
------------------------------------------------------------------------
r11945 | kasperl@google.com | 2012-09-06 22:17:01 +0900 (木, 06  9月 2012) | 8 lines

Revert "Move dart:web to pkg:htmlescape."

This reverts r11943.

R=lrn@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10912123
------------------------------------------------------------------------
r11943 | lrn@google.com | 2012-09-06 21:54:59 +0900 (木, 06  9月 2012) | 3 lines

Move dart:web to pkg:htmlescape.

Review URL: https://chromiumcodereview.appspot.com//10905125
------------------------------------------------------------------------
r11941 | srdjan@google.com | 2012-09-06 21:18:23 +0900 (木, 06  9月 2012) | 2 lines

Restoring assert that deopt_id() should be accessed only if the instruction can deoptimize. Print resulting ssa_temp_indexes if available. Add an IL printing helper.
Review URL: https://chromiumcodereview.appspot.com//10912120
------------------------------------------------------------------------
r11932 | vegorov@google.com | 2012-09-06 19:13:54 +0900 (木, 06  9月 2012) | 8 lines

Allow test context to have multiple true and false branch slots.

Implement special handling for && and || in the test context to eliminate materialization of intermediate boolean values.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10916119
------------------------------------------------------------------------
r11929 | srdjan@google.com | 2012-09-06 18:21:35 +0900 (木, 06  9月 2012) | 2 lines

Do not append input value of AS comparison if the check is eliminated. Fixes issue 4944, crash caused by incorrect stack size at exit.
Review URL: https://chromiumcodereview.appspot.com//10919119
------------------------------------------------------------------------
r11928 | zerny@google.com | 2012-09-06 18:12:32 +0900 (木, 06  9月 2012) | 8 lines

Execute deoptimization instruction in reverse order.

This is in preparation for deoptimization of inlined calls where it simplifies
calculating the frame pointer for nested frames.

R=kmillikin@google.com

Review URL: https://chromiumcodereview.appspot.com//10915087
------------------------------------------------------------------------
r11925 | kmillikin@google.com | 2012-09-06 17:40:07 +0900 (木, 06  9月 2012) | 8 lines

Fix a small but embarassing braino.

Fix a bug that limited open-coded arithmetic to once per basic block in the
optimizing compiler.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10916139
------------------------------------------------------------------------
r11915 | cshapiro@google.com | 2012-09-06 10:32:19 +0900 (木, 06  9月 2012) | 3 lines

A third attempt to provide correct conversion specifiers on MacOS.

Review URL: https://chromiumcodereview.appspot.com//10905120
------------------------------------------------------------------------
r11913 | cshapiro@google.com | 2012-09-06 10:14:09 +0900 (木, 06  9月 2012) | 7 lines

Fix build break on Win32 and MacOS related to printf format string checks.

Implement remaining inttypes.h format specifiers on Win32

Resolve some conversion specifier discrepancies on MacOS.

Review URL: https://chromiumcodereview.appspot.com//10928013
------------------------------------------------------------------------
r11912 | cshapiro@google.com | 2012-09-06 09:58:25 +0900 (木, 06  9月 2012) | 6 lines

Add attributions so printf like functions can have their arguments checked.

This change also corrects some misuses of format strings and format
arguments that discovered by the compiler checks.

Review URL: https://chromiumcodereview.appspot.com//10869063
------------------------------------------------------------------------
r11894 | asiva@google.com | 2012-09-06 03:49:07 +0900 (木, 06  9月 2012) | 4 lines

Rename Builtin::LoadLibrary to Builtin::LoadAndCheckLibrary as the name
LoadLibrary seems to conflict with some windows predefined macros causing
build failures on windows build of dartium.
Review URL: https://chromiumcodereview.appspot.com//10905102
------------------------------------------------------------------------
r11890 | kmillikin@google.com | 2012-09-06 02:04:49 +0900 (木, 06  9月 2012) | 10 lines

Reapply "Remove classes Computation and BindInstr."

Reapply svn revision 11868 with a bugfix.

Original code review at http://codereview.chromium.org/10908091/

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10912094
------------------------------------------------------------------------
r11869 | kmillikin@google.com | 2012-09-05 20:20:14 +0900 (水, 05  9月 2012) | 8 lines

Revert "Remove classes Computation and BindInstr."

This reverts svn revision 11868.

TBR=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10917085
------------------------------------------------------------------------
r11868 | kmillikin@google.com | 2012-09-05 20:15:34 +0900 (水, 05  9月 2012) | 9 lines

Remove classes Computation and BindInstr.

The former Computation classes are folded into the Instruction class
hierarchy.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10908091
------------------------------------------------------------------------
r11843 | tball@google.com | 2012-09-05 06:42:20 +0900 (水, 05  9月 2012) | 5 lines

Fixed parsing of parameterized type test assert statement in production mode.

BUG=3741
TEST=Verified with bug's test, plus all VM tests.
Review URL: https://chromiumcodereview.appspot.com//10911042
------------------------------------------------------------------------
r11842 | hausner@google.com | 2012-09-05 06:28:48 +0900 (水, 05  9月 2012) | 4 lines

Catch illegally declared constructors

Constructors cannot be abstract or static.
Review URL: https://chromiumcodereview.appspot.com//10910079
------------------------------------------------------------------------
r11835 | regis@google.com | 2012-09-05 03:59:01 +0900 (水, 05  9月 2012) | 2 lines

Fix argument definition test (issue 4888).
Review URL: https://chromiumcodereview.appspot.com//10907064
------------------------------------------------------------------------
r11824 | fschneider@google.com | 2012-09-05 00:15:36 +0900 (水, 05  9月 2012) | 2 lines

Support immediate operands for array bounds checks.
Review URL: https://chromiumcodereview.appspot.com//10916090
------------------------------------------------------------------------
r11798 | vegorov@google.com | 2012-09-04 18:58:57 +0900 (火, 04  9月 2012) | 10 lines

Make register allocator to disregard constant computation with no uses.

Inline constant values into environments, instead of creating a use of the constant definition.

Change BinarySmiOpComp code template to allow inline constant uses for the right hand side.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10916082
------------------------------------------------------------------------
r11774 | fschneider@google.com | 2012-09-04 01:56:31 +0900 (火, 04  9月 2012) | 7 lines

Revert r11772: Add check for non-smi to the IL and use it for class checks.

In its current state this causes some performance regressions because
we can't eliminate non-smi checks properly in the optimizer.

TBR=vegorov@google.com
Review URL: https://chromiumcodereview.appspot.com//10905065
------------------------------------------------------------------------
r11772 | fschneider@google.com | 2012-09-04 00:19:27 +0900 (火, 04  9月 2012) | 2 lines

Add check for non-smi to the IL and use it for class checks.
Review URL: https://chromiumcodereview.appspot.com//10911057
------------------------------------------------------------------------
r11768 | fschneider@google.com | 2012-09-03 23:35:02 +0900 (月, 03  9月 2012) | 4 lines

Landing: Remove the is_used_ field from BindInstr.

Original CL: https://chromiumcodereview.appspot.com/10916078/
Review URL: https://chromiumcodereview.appspot.com//10908058
------------------------------------------------------------------------
r11767 | fschneider@google.com | 2012-09-03 23:28:34 +0900 (月, 03  9月 2012) | 4 lines

Remove old implementation of binary double operations.

With the new unboxed operations, the old one is not needed anymore.
Review URL: https://chromiumcodereview.appspot.com//10914066
------------------------------------------------------------------------
r11764 | fschneider@google.com | 2012-09-03 22:07:21 +0900 (月, 03  9月 2012) | 5 lines

Eliminate environment uses at smi-comparisons.

Smi comparisons can't deoptimize. Therefore we can eliminate
their deoptimization environnment.
Review URL: https://chromiumcodereview.appspot.com//10908057
------------------------------------------------------------------------
r11761 | kmillikin@google.com | 2012-09-03 21:21:30 +0900 (月, 03  9月 2012) | 9 lines

Change the order of definitions in intermediate_language.h.

This is a cosmetic change to reorder definitions in intermediate_language.h
so that all the instruction classes are defined before all the computation
classes.

R=zerny@google.com

Review URL: https://chromiumcodereview.appspot.com//10905015
------------------------------------------------------------------------
r11758 | fschneider@google.com | 2012-09-03 20:37:37 +0900 (月, 03  9月 2012) | 12 lines

Add explicit smi-checks to smi comparisons.

This change works around some difficulties that come from
the distiction between Instruction and Computation in our IL.

We have now two instructions that can wrap a computation and
that makes visiting and replacing in the flow graph optimizer
harder. I added some helpers to work around this for now.

Also fix register constraints for double comparisons: xmm1
 is used, but was not reserved as temp.
Review URL: https://chromiumcodereview.appspot.com//10914008
------------------------------------------------------------------------
r11757 | vegorov@google.com | 2012-09-03 20:30:16 +0900 (月, 03  9月 2012) | 10 lines

Specialize binary operations with mixed Smi-Double feedback as Double ones.

Fix specialization of DIV operation (missing break).

Don't specialize double MOD operation: we have no fast path code to handle it in the codegen.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10915053
------------------------------------------------------------------------
r11756 | fschneider@google.com | 2012-09-03 20:27:09 +0900 (月, 03  9月 2012) | 12 lines

Only store IC data with instructions that collect type feedback.

Currently only three instructions collect IC data:
InstanceCall, EqualityOp and RelationalOp.

Specialized instructions use the IC data of the original
instance call or convert the original IC data for their
purpose.

This CL eliminates ic_data_ member from Computation and avoids
the explicit setting of ic_data in the flow graph optimizer.
Review URL: https://chromiumcodereview.appspot.com//10910003
------------------------------------------------------------------------
r11754 | kasperl@google.com | 2012-09-03 19:15:47 +0900 (月, 03  9月 2012) | 6 lines

Disable all support for legacy try-catch in the VM.

R=ngeoffray@google.com,hausner@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10910060
------------------------------------------------------------------------
r11720 | srdjan@google.com | 2012-09-01 05:18:40 +0900 (土, 01  9月 2012) | 4 lines

Split deopt-after and deopt-before handling:
- deopt-before describes a deoptimization that occurs before the instructionhas completed and requires a stub
- deopt-after describes deoptimziation after the instruction, used by lazy deooptimization, requires no stub.
Review URL: https://chromiumcodereview.appspot.com//10913031
------------------------------------------------------------------------
r11719 | turnidge@google.com | 2012-09-01 05:12:21 +0900 (土, 01  9月 2012) | 8 lines

The forward declaration of Dart_SetReturnValue in native_arguments.h
was causing the function to appear to be ambiguous on windows due to
the DART_EXTERN_C annotation.  Refactor the code so that a different
function is forward-declared in order to fix the build.

Another fix would have been to prefix all calls to Dart_SetReturnValue
by :: in lib/mirrors.cc, but that looks ugly.
Review URL: https://chromiumcodereview.appspot.com//10919039
------------------------------------------------------------------------
r11717 | turnidge@google.com | 2012-09-01 04:59:37 +0900 (土, 01  9月 2012) | 8 lines

Use SetReturnUnsafe in dart_api_impl.cc.

Before (median of 5):
    UseDartApi(RunTime): 384366

After (median of 5);
    UseDartApi(RunTime): 313525
Review URL: https://chromiumcodereview.appspot.com//10907012
------------------------------------------------------------------------
r11708 | hausner@google.com | 2012-09-01 03:06:42 +0900 (土, 01  9月 2012) | 11 lines

Throw AbstractClassInstantiationError if an abstract class is instantiated

This is the second try to my previous attempt to implement the
new abstract class handling. Instead of a compile-time error,
the VM now throws an AbstractClassInstantiationError at runtime
if an abstract class is instantiated. Added the new error class
to the core library.

For now I'm still using the rule that a class is abstract if it is explicitly
marked as abstract, or if it defines a new abstract method.
Review URL: https://chromiumcodereview.appspot.com//10916039
------------------------------------------------------------------------
r11698 | asiva@google.com | 2012-09-01 01:55:03 +0900 (土, 01  9月 2012) | 2 lines

Get rid of support for string interpolation in #import strings.
Review URL: https://chromiumcodereview.appspot.com//10911025
------------------------------------------------------------------------
r11693 | srdjan@google.com | 2012-09-01 00:46:10 +0900 (土, 01  9月 2012) | 4 lines

We can throw an exception but we cannot deoptimize at a runtime call.

Remove deopt ids at runtime calls. Mark several computations/instructions that they cannot deoptimize.
Review URL: https://chromiumcodereview.appspot.com//10915026
------------------------------------------------------------------------
r11673 | tball@google.com | 2012-08-31 10:49:28 +0900 (金, 31  8月 2012) | 4 lines

Removed handle creation and inlined Instance::IsValidNativeIndex().
The Dromaeo dom core benchmark shows significant time spent in it, 
where ~half the time is spent creating a handle.
Review URL: https://chromiumcodereview.appspot.com//10918016
------------------------------------------------------------------------
r11670 | asiva@google.com | 2012-08-31 08:28:22 +0900 (金, 31  8月 2012) | 2 lines

Fix for issue 4848 (Added missing store buffer updates when storing an object reference into another object at a number of places).
Review URL: https://chromiumcodereview.appspot.com//10918010
------------------------------------------------------------------------
r11668 | srdjan@google.com | 2012-08-31 08:20:47 +0900 (金, 31  8月 2012) | 2 lines

Remove deprecated deoptimization code.
Review URL: https://chromiumcodereview.appspot.com//10911022
------------------------------------------------------------------------
r11666 | srdjan@google.com | 2012-08-31 07:55:53 +0900 (金, 31  8月 2012) | 2 lines

Add disassembly of movaps to ia32 disassembler (movaps is better than movsd, avoids stalls etc.)
Review URL: https://chromiumcodereview.appspot.com//10917022
------------------------------------------------------------------------
r11664 | regis@google.com | 2012-08-31 07:46:44 +0900 (金, 31  8月 2012) | 4 lines

Implement argument definition test in the vm.
Add tests.
Various cleanups.
Review URL: https://chromiumcodereview.appspot.com//10915022
------------------------------------------------------------------------
r11659 | vegorov@google.com | 2012-08-31 06:21:59 +0900 (金, 31  8月 2012) | 8 lines

Fix computations in LeaveCallRuntimeFrame to use kDoubleSize for saved XMM registers.

On ia32 a single XMM register occupies two words.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10912028
------------------------------------------------------------------------
r11652 | vegorov@google.com | 2012-08-31 05:39:48 +0900 (金, 31  8月 2012) | 16 lines

Unbox phis that were proven to be of type Double.

Eliminate Boxing/Unboxing pairs.

Allow boxing, unboxing and double binary operations to participate in CSE.

Allow double comparisons to operate on unboxed inputs.

Support XMM registers and double spill slots in deoptimization.

Save XMM registers when calling to runtime from WriteBarrier stub.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10919008
------------------------------------------------------------------------
r11647 | turnidge@google.com | 2012-08-31 04:40:27 +0900 (金, 31  8月 2012) | 4 lines

Make fewer assumptions about the layout of api handles.

Found these problems by changing the layout and seeing what broke.
Review URL: https://chromiumcodereview.appspot.com//10915015
------------------------------------------------------------------------
r11645 | cshapiro@google.com | 2012-08-31 04:26:28 +0900 (金, 31  8月 2012) | 3 lines

Format pointer type declarations more consistently.

Review URL: https://chromiumcodereview.appspot.com//10896054
------------------------------------------------------------------------
r11642 | srdjan@google.com | 2012-08-31 03:53:46 +0900 (金, 31  8月 2012) | 12 lines

Deoptimization can occur at Dart calls (includes native calls to C) but not at runtime calls. This assumption (verified with Todd and Gilad) simplifies the implementation of lazy deoptimization considerably.

Add flag --deoptimize-alot, which will lazily deoptimize all live optimized frames. Currently only the presence of deoptimization information is checked.

Add kDeoptAfter deoptimization point, which is the continuation for lazy deoptimization, after a call. Rename kDeopt to kDeoptBefore.

Removed a tests case that called into a native without properly setting up a Dart frame (Ok-d by Siva).

Native functions are not optimizable.

TODO: Split deoptimization information from DeoptimizationStubs. Check for redundant PcDescriptor information (what can be merged, especially at calls).
Review URL: https://chromiumcodereview.appspot.com//10885039
------------------------------------------------------------------------
r11637 | vegorov@google.com | 2012-08-31 03:08:30 +0900 (金, 31  8月 2012) | 6 lines

Restrict objects printing in disassembler to avoid GC.

R=iposva@google.com
BUG=4709

Review URL: https://chromiumcodereview.appspot.com//10918008
------------------------------------------------------------------------
r11634 | vegorov@google.com | 2012-08-31 02:49:23 +0900 (金, 31  8月 2012) | 8 lines

Rematerialize constants instead of spilling them.

This also fixes the crash that occurs when we try to spill constant null at the graph entry.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10918006
------------------------------------------------------------------------
r11633 | turnidge@google.com | 2012-08-31 02:41:19 +0900 (金, 31  8月 2012) | 6 lines

Use the return value of vm native methods to set the return value,
based on Siva's earlier suggestion (he actually suggested putting it
in the generated stub, which I haven't done).

Added SetReturnUnsafe and use it exactly one place so far.
Review URL: https://chromiumcodereview.appspot.com//10874072
------------------------------------------------------------------------
r11631 | hausner@google.com | 2012-08-31 02:29:49 +0900 (金, 31  8月 2012) | 6 lines

Convert double interface into abstract class

In a future change, we can implement double in the core
library, eliminating class Double (using the patch class
feature).
Review URL: https://chromiumcodereview.appspot.com//10876100
------------------------------------------------------------------------
r11613 | zerny@google.com | 2012-08-30 22:28:11 +0900 (木, 30  8月 2012) | 5 lines

Clear use lists for globals and definitions in start environment in release mode.

R=vegorov@google.com

Review URL: https://chromiumcodereview.appspot.com//10919005
------------------------------------------------------------------------
r11606 | ajohnsen@google.com | 2012-08-30 20:45:40 +0900 (木, 30  8月 2012) | 5 lines

Move core and coreimpl from corelib/ to lib/core and lib/coreimpl.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10890030
------------------------------------------------------------------------
r11603 | ager@google.com | 2012-08-30 20:31:30 +0900 (木, 30  8月 2012) | 13 lines

Move print to corelib.

Allow embedder customization in the VM through a static field that can
be set by the embedder.

Mark failing test that is unrelated to this change. The VM does not
like when you import dart:core explicitly and tells you there both
'dart:core' and 'dart:core' define 'print'.

R=ajohnsen@google.com,iposva@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10887024
------------------------------------------------------------------------
r11600 | kasperl@google.com | 2012-08-30 20:14:39 +0900 (木, 30  8月 2012) | 9 lines

More uses of the new try-catch syntax.

With this change, the VM can run all tests (except co19) without
allowing the use of the old try-catch syntax.

R=ngeoffray@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10917006
------------------------------------------------------------------------
r11598 | fschneider@google.com | 2012-08-30 19:50:37 +0900 (木, 30  8月 2012) | 4 lines

Add explicit class checks: LoadVMField.

R=kmillikin@google.com
Review URL: https://chromiumcodereview.appspot.com//10917005
------------------------------------------------------------------------
r11595 | kmillikin@google.com | 2012-08-30 19:20:26 +0900 (木, 30  8月 2012) | 10 lines

Put live register bits in stackmaps.

Add a count of live registers to each stackmap and add bits describing the
registers.  This allows untagged values in general purpose registers at
safepoints.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10882055
------------------------------------------------------------------------
r11590 | kmillikin@google.com | 2012-08-30 18:08:27 +0900 (木, 30  8月 2012) | 9 lines

Eliminate class UseVal.

This was the only subclass of Value.  All functionality is moved to the base
class, and all functions are made non-virtual.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10891025
------------------------------------------------------------------------
r11586 | zerny@google.com | 2012-08-30 17:54:56 +0900 (木, 30  8月 2012) | 8 lines

Reapply "Inlining of static calls with trivial function bodies."

Reapply r11579 with a bug fix.
Original review at https://chromiumcodereview.appspot.com/10919004

R=kmillikin@google.com

Review URL: https://chromiumcodereview.appspot.com//10911004
------------------------------------------------------------------------
r11583 | zerny@google.com | 2012-08-30 17:17:54 +0900 (木, 30  8月 2012) | 8 lines

Revert "Inlining of static calls with trivial function bodies."

This reverts r11579. Reverted due to test failures on dartc builders.

TBR=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10919004
------------------------------------------------------------------------
r11579 | zerny@google.com | 2012-08-30 16:35:16 +0900 (木, 30  8月 2012) | 5 lines

Inlining of static calls with trivial function bodies.

R=kmillikin@google.com,srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10893027
------------------------------------------------------------------------
r11571 | asiva@google.com | 2012-08-30 09:17:52 +0900 (木, 30  8月 2012) | 2 lines

Remove inclusion of 'include/dart_api.h' in 'raw_object.h'
Review URL: https://chromiumcodereview.appspot.com//10902002
------------------------------------------------------------------------
r11567 | hausner@google.com | 2012-08-30 07:49:52 +0900 (木, 30  8月 2012) | 6 lines

Revert change 11558

I learnt that instantiating an abstract class is a runtime error, not a compile time error.

TBR=regis
Review URL: https://chromiumcodereview.appspot.com//10894048
------------------------------------------------------------------------
r11558 | hausner@google.com | 2012-08-30 07:13:06 +0900 (木, 30  8月 2012) | 4 lines

Add compiler error when instantiating abstract class

Also, make abstract keyword on methods optional.
Review URL: https://chromiumcodereview.appspot.com//10899039
------------------------------------------------------------------------
r11547 | jackpal@google.com | 2012-08-30 05:42:28 +0900 (木, 30  8月 2012) | 17 lines

Add support for building the Dart VM for Android OS.

The Android target OS is based upon the existing Linux target OS.
The existing _linux source files have been copied to create
corresponding _android source files. The copies have been
modified as needed to adapt to differences between the Linux
platform and the Android platform.

Currently the dart vm binary builds on Linux and runs on x86 Android,
Simple test scripts execute correctly, but no formal testing has been
done.

The process for building the Dart VM for Android will be documented on
the Dart wiki.
BUG=

Review URL: https://chromiumcodereview.appspot.com//10823209
------------------------------------------------------------------------
r11544 | asiva@google.com | 2012-08-30 05:20:52 +0900 (木, 30  8月 2012) | 3 lines

Ensure types are canonicalized when canonicalization is requested and the type is already finalized.
(Reduces initial heap size by about 15k)
Review URL: https://chromiumcodereview.appspot.com//10886038
------------------------------------------------------------------------
r11540 | tball@google.com | 2012-08-30 05:04:55 +0900 (木, 30  8月 2012) | 7 lines

Reworked previous CL (ExternalStringGetPeer speed up) to avoid the
need for an 'extern "C"' declaration in raw_object.h, which broke
the Windows builds.  Instead, a peer() method is added to the
RawExternalString*Object classes, and RawObject::ToAddr() is used
to fetch the address of these raw instances.  This avoids the need
for Dart_ExternalStringGetPeer needing friend access to those classes.
Review URL: https://chromiumcodereview.appspot.com//10891036
------------------------------------------------------------------------
r11534 | tball@google.com | 2012-08-30 03:06:17 +0900 (木, 30  8月 2012) | 17 lines

Performance improvement for the Dart VM runtime method 
Dart_ExternalStringGetPeer. This change is basically an unrolling 
of the templates that previously defined the method, to reduce 
the number of handles allocated. 

This change is supported by the DartStringAccess VM benchmark, which 
showed a ~20x improvement from the above change. Currently this 
benchmark focuses on Dart_ExternalStringGetPeer, rather than String 
performance in general. 

Please review this carefully. Commented-out is a "NoGCScope no_gc_scope;" 
line, which when enabled asserts that GC doesn't happen when this function 
is called. However, one of the tests fails this check, though when I 
set a breakpoint in gdb before the NoGCScope item is allocated, it's not 
hit before the assertion fails. I commented out that line, in the hope 
that more senior reviewers suggest improvements.
Review URL: https://chromiumcodereview.appspot.com//10897014
------------------------------------------------------------------------
r11528 | vegorov@google.com | 2012-08-30 01:44:18 +0900 (木, 30  8月 2012) | 8 lines

Stop attaching try_index to individual instructions put it at block entry instead.

This simplifies code motion and insertion of instructions that make calls after graph is constructed.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10892037
------------------------------------------------------------------------
r11518 | kmillikin@google.com | 2012-08-29 21:56:57 +0900 (水, 29  8月 2012) | 10 lines

Make constants computations instead of values.

This change requires a pool of global constants that don't have an easy
place to go in the instruction stream.  Currently, that is only the constant
null used to mark eliminated phis in deoptimization environments.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10894034
------------------------------------------------------------------------
r11515 | fschneider@google.com | 2012-08-29 21:36:49 +0900 (水, 29  8月 2012) | 13 lines

Fix bug in flow graph builder that caused invalid optimization.

Using type-feedback in the flow graph builder to generate optimized
code violates the invariant that the initial flow graph of the
non-optimized version and the optimized version of a function
have to be identical.

Eliminating type checks based on type feedback has to be done later.
(e.g. after the flow graph optimizer and after type propagation
where we specialized operation based on type feedback)

BUG=dart:4797
Review URL: https://chromiumcodereview.appspot.com//10900024
------------------------------------------------------------------------
r11513 | ajohnsen@google.com | 2012-08-29 20:57:37 +0900 (水, 29  8月 2012) | 7 lines

Expose remaining 'errors' in an unified dart:core.

This is a follow-up on my previous move of AssertionError.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10896007
------------------------------------------------------------------------
r11500 | fschneider@google.com | 2012-08-29 18:07:11 +0900 (水, 29  8月 2012) | 11 lines

Refactor branch instructions to enable further optimizations.

This CL simplifies the code generation for branches: Each BranchInstr
wraps a comparison computation and we can reuse the code between the two
in many cases. Similar to BindInstr, most accessors forward to the wrapped
computation. One exception is the location summary, which is modified for
branches: The result location is removed since branches don't produce a result.

This way, it is easier to replace a comparison branch
with a specialized version and eliminate redundante checks before branches.
Review URL: https://chromiumcodereview.appspot.com//10887009
------------------------------------------------------------------------
r11499 | ager@google.com | 2012-08-29 18:05:47 +0900 (水, 29  8月 2012) | 6 lines

Fix compilation errors on Windows.

R=antonm@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10899030
------------------------------------------------------------------------
r11494 | ager@google.com | 2012-08-29 17:35:43 +0900 (水, 29  8月 2012) | 16 lines

Beginning support for library prefixes in the dart API.

This is a request for comments. Do we want to expose library
prefixes like this? Is there a way to import with a prefix already
and lookup members?

The reason why I would like to do this is so that I can import the
user-supplied builtins library under a prefix. This will be a useful
first step to move the print function to corelib while preserving
the ability to patch in a print implementation via the builtins
library.

R=iposva@google.com,turnidge@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10867032
------------------------------------------------------------------------
r11486 | asiva@google.com | 2012-08-29 09:51:32 +0900 (水, 29  8月 2012) | 2 lines

Use Heap::kOld when allocating objects for script snapshots.
Review URL: https://chromiumcodereview.appspot.com//10867046
------------------------------------------------------------------------
r11485 | cshapiro@google.com | 2012-08-29 09:49:14 +0900 (水, 29  8月 2012) | 3 lines

Report the reason for a garbage collection when verbose GC is enabled.

Review URL: https://chromiumcodereview.appspot.com//10872074
------------------------------------------------------------------------
r11483 | asiva@google.com | 2012-08-29 09:27:42 +0900 (水, 29  8月 2012) | 3 lines

Add StorePointer when updating fields from a snapshot for
InstantiatedTypeArguments, ContextScope and JSRegExp
Review URL: https://chromiumcodereview.appspot.com//10892026
------------------------------------------------------------------------
r11476 | tball@google.com | 2012-08-29 06:18:21 +0900 (水, 29  8月 2012) | 2 lines

Rollback of previous commit -- still under review.
Review URL: https://chromiumcodereview.appspot.com//10896018
------------------------------------------------------------------------
r11475 | tball@google.com | 2012-08-29 05:55:16 +0900 (水, 29  8月 2012) | 3 lines

First implementation of performance improvement for
Dart_ExternalStringGetPeer.

------------------------------------------------------------------------
r11471 | srdjan@google.com | 2012-08-29 03:26:42 +0900 (水, 29  8月 2012) | 2 lines

Fix crash with --code-comments.
Review URL: https://chromiumcodereview.appspot.com//10896011
------------------------------------------------------------------------
r11469 | srdjan@google.com | 2012-08-29 03:02:19 +0900 (水, 29  8月 2012) | 2 lines

Eliminate try-index for deopt stubs.
Review URL: https://chromiumcodereview.appspot.com//10886015
------------------------------------------------------------------------
r11467 | srdjan@google.com | 2012-08-29 02:25:10 +0900 (水, 29  8月 2012) | 3 lines

Emit deoptimization information at stati calls (preparation for full deoptimization). Currently we use Deoptimization stubs to maintain the deoptimization info, do not emit stubs though for static calls.
Any instruction  that calls out of Dart code and into other Dart code or C++ may deoptimize.
Review URL: https://chromiumcodereview.appspot.com//10880079
------------------------------------------------------------------------
r11448 | ajohnsen@google.com | 2012-08-28 23:39:50 +0900 (火, 28  8月 2012) | 5 lines

Unify AssertionError.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10882056
------------------------------------------------------------------------
r11433 | fschneider@google.com | 2012-08-28 18:14:57 +0900 (火, 28  8月 2012) | 11 lines

Implement array bounds checks explicitly in the optimized IL.

They are inserted by the flow-graph optimizer when specializing
array operations.

As a result, LoadIndexed and StoreIndexed can't deoptimize themselves
anymore. All checks happen before in check-instructions.

Redundant array bound checks can be eliminated by CSE if all operands
match.
Review URL: https://chromiumcodereview.appspot.com//10867086
------------------------------------------------------------------------
r11430 | cshapiro@google.com | 2012-08-28 11:44:28 +0900 (火, 28  8月 2012) | 3 lines

Fix a build break caused by a type mismatch on 64-bit build targets.

Review URL: https://chromiumcodereview.appspot.com//10871096
------------------------------------------------------------------------
r11429 | cshapiro@google.com | 2012-08-28 11:32:55 +0900 (火, 28  8月 2012) | 3 lines

Increase the page space growth rate when there is insufficient free space.

Review URL: https://chromiumcodereview.appspot.com//10876095
------------------------------------------------------------------------
r11425 | iposva@google.com | 2012-08-28 08:51:37 +0900 (火, 28  8月 2012) | 3 lines

- Change "static final" to "static const" in the runtime/ directory.
- Fixed parsing of top-level static const.
Review URL: https://chromiumcodereview.appspot.com//10883071
------------------------------------------------------------------------
r11418 | hausner@google.com | 2012-08-28 06:09:23 +0900 (火, 28  8月 2012) | 4 lines

Eliminate interface bool

Replace with concrete class bool instead, and getting rid of class Bool in core_impl library.
Review URL: https://chromiumcodereview.appspot.com//10874071
------------------------------------------------------------------------
r11417 | srdjan@google.com | 2012-08-28 06:06:30 +0900 (火, 28  8月 2012) | 2 lines

Simplify EmitTestAndCall and eliminated excessive code generation (two Smi tests emitted).
Review URL: https://chromiumcodereview.appspot.com//10872096
------------------------------------------------------------------------
r11413 | turnidge@google.com | 2012-08-28 05:25:44 +0900 (火, 28  8月 2012) | 11 lines

Avoid trusting the length encoded in the Snapshot if there is an
external length available.  We now pass a length with all messages in
the vm and verify that there is no mismatch with the length from the
Snapshot.

Fixed a bug in the use of ApiMessageReader.  We were always manually
adding Snapshot::kHeaderSize to the data, but neglecting to subtract
kHeaderSize from the message length.

Added FullSnapshotWriter and MessageWriter classes.
Review URL: https://chromiumcodereview.appspot.com//10829444
------------------------------------------------------------------------
r11398 | srdjan@google.com | 2012-08-28 02:05:09 +0900 (火, 28  8月 2012) | 2 lines

Factored out code, based on Florian's recent submit.
Review URL: https://chromiumcodereview.appspot.com//10868109
------------------------------------------------------------------------
r11394 | fschneider@google.com | 2012-08-28 01:10:04 +0900 (火, 28  8月 2012) | 2 lines

Add explicit smi checks for unary smi operations.
Review URL: https://chromiumcodereview.appspot.com//10883063
------------------------------------------------------------------------
r11386 | zerny@google.com | 2012-08-27 23:16:02 +0900 (月, 27  8月 2012) | 5 lines

Environment sets the environment position when copying to maintain the use lists.

R=fschneider@google.com

Review URL: https://chromiumcodereview.appspot.com//10870100
------------------------------------------------------------------------
r11385 | fschneider@google.com | 2012-08-27 23:07:41 +0900 (月, 27  8月 2012) | 9 lines

Split class and smi check from array operations.

Array loads and stores have explicit receiver class
check and index smi check instead of emitting the checks
as part of the original instruction.

This allows redundant checks before array operations
to be eliminated.
Review URL: https://chromiumcodereview.appspot.com//10883054
------------------------------------------------------------------------
r11383 | fschneider@google.com | 2012-08-27 23:01:27 +0900 (月, 27  8月 2012) | 5 lines

Clean up LoadInstanceField and StoreInstanceField.

Since we have explicit class-id checks, I removed the now
unused code that emitted the checks as part of the instruction.
Review URL: https://chromiumcodereview.appspot.com//10876079
------------------------------------------------------------------------
r11379 | zerny@google.com | 2012-08-27 21:17:47 +0900 (月, 27  8月 2012) | 5 lines

Validate well-formedness of the use lists in debug mode.

R=fschneider@google.com,kmillikin@google.com

Review URL: https://chromiumcodereview.appspot.com//10879041
------------------------------------------------------------------------
r11373 | fschneider@google.com | 2012-08-27 18:30:20 +0900 (月, 27  8月 2012) | 8 lines

Separate branch on strict compare into a new IL instruction.

This avoid unnecessary environment uses since the strict compare
can not deoptimize.

This is a first step in refactoring branch instructions so that we
can easily do explicit checks for specialized comparisons (smi, double).
Review URL: https://chromiumcodereview.appspot.com//10867050
------------------------------------------------------------------------
r11369 | ager@google.com | 2012-08-27 16:15:18 +0900 (月, 27  8月 2012) | 8 lines

Use patching for Expando so the implementation-specific files are not needed in the SDK.

Make extra methods private in VM version.

R=ajohnsen@google.com,cshapiro@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10870064
------------------------------------------------------------------------
r11357 | srdjan@google.com | 2012-08-25 09:27:07 +0900 (土, 25  8月 2012) | 2 lines

Use type propagation to eliminate store barriers.
Review URL: https://chromiumcodereview.appspot.com//10876072
------------------------------------------------------------------------
r11354 | srdjan@google.com | 2012-08-25 08:06:12 +0900 (土, 25  8月 2012) | 2 lines

Skip store buffer update for compile time constants.
Review URL: https://chromiumcodereview.appspot.com//10873070
------------------------------------------------------------------------
r11346 | srdjan@google.com | 2012-08-25 06:48:57 +0900 (土, 25  8月 2012) | 2 lines

Require ResultCid specification in every computation, that way we can differentiate between computation that do not produce results (kIllegalCid as result-cid).
Review URL: https://chromiumcodereview.appspot.com//10875058
------------------------------------------------------------------------
r11336 | srdjan@google.com | 2012-08-25 04:11:06 +0900 (土, 25  8月 2012) | 3 lines

Do not intrinisify closurized functions (they may have different arguments). Fix capacity check.
Tested with apidoc.dart.
Review URL: https://chromiumcodereview.appspot.com//10870053
------------------------------------------------------------------------
r11329 | regis@google.com | 2012-08-25 03:17:11 +0900 (土, 25  8月 2012) | 2 lines

Propagate type of list literal from parser to ast, graph, and optimizer.
Review URL: https://chromiumcodereview.appspot.com//10878042
------------------------------------------------------------------------
r11328 | hausner@google.com | 2012-08-25 02:57:57 +0900 (土, 25  8月 2012) | 8 lines

Suppress "Waiting for debugger..." message on cosole

Less noise in the debugger console window.

Also put the verbose debugger output under command line flag
instead of compile time flag.

Review URL: https://chromiumcodereview.appspot.com//10874065
------------------------------------------------------------------------
r11325 | srdjan@google.com | 2012-08-25 01:51:03 +0900 (土, 25  8月 2012) | 2 lines

Fix intrinsified allocation of arrays which cuased crash on ia32: do not allow allocation of arrays with a length that is too large.
Review URL: https://chromiumcodereview.appspot.com//10874061
------------------------------------------------------------------------
r11313 | vegorov@google.com | 2012-08-24 23:45:42 +0900 (金, 24  8月 2012) | 8 lines

Add support for XMM registers in SSA code generation pipeline.

Split BinaryDoubleOp into several instructions that manipulate unboxed doubles.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10875030
------------------------------------------------------------------------
r11302 | fschneider@google.com | 2012-08-24 20:10:36 +0900 (金, 24  8月 2012) | 17 lines

Reland "Add a simple dominator based redundancy elimination" and fix a register allocation bug.

Original CL: http://codereview.chromium.org/10872035/

It enables elimination of redundant expressions across
basic blocks.

Currently used for smi checks and class checks, but will
be extended to other expressions in a separate CL.


Additionally, this fixes a bug in the register allocator where
a blocked register was illegally assigned to an unallocated live range.

It also fixes a Mac compiler issue with the constructor of
DirectChainedHashMap.
Review URL: https://chromiumcodereview.appspot.com//10871060
------------------------------------------------------------------------
r11280 | srdjan@google.com | 2012-08-24 09:25:41 +0900 (金, 24  8月 2012) | 2 lines

Disable intrinisification of GrowableArray add until apidoc crash is fixed.
Review URL: https://chromiumcodereview.appspot.com//10871052
------------------------------------------------------------------------
r11279 | iposva@google.com | 2012-08-24 09:22:07 +0900 (金, 24  8月 2012) | 5 lines

- GET_NATIVE_ARGUMENT uses the isolate which is passed in to allocate the handle.
- Avoid frequent calls to Isolate::Current().
- Avoid handle allocation in a loop for StringBase.createFromCodepoints.
- Avoid copying in StringBase._interpolate.
Review URL: https://chromiumcodereview.appspot.com//10878037
------------------------------------------------------------------------
r11277 | srdjan@google.com | 2012-08-24 09:07:07 +0900 (金, 24  8月 2012) | 2 lines

Intrinsify GrowableObjectArray.add.
Review URL: https://chromiumcodereview.appspot.com//10869038
------------------------------------------------------------------------
r11276 | srdjan@google.com | 2012-08-24 08:50:23 +0900 (金, 24  8月 2012) | 2 lines

Type of PhasePramater is Smi.
Review URL: https://chromiumcodereview.appspot.com//10868057
------------------------------------------------------------------------
r11275 | asiva@google.com | 2012-08-24 08:36:37 +0900 (金, 24  8月 2012) | 2 lines

Add smi_type, mint_type and double_type to the predefined types list for script snapshots.
Review URL: https://chromiumcodereview.appspot.com//10869035
------------------------------------------------------------------------
r11263 | turnidge@google.com | 2012-08-24 06:59:28 +0900 (金, 24  8月 2012) | 2 lines

Missing file from last commit.
Review URL: https://chromiumcodereview.appspot.com//10874043
------------------------------------------------------------------------
r11262 | turnidge@google.com | 2012-08-24 06:48:40 +0900 (金, 24  8月 2012) | 5 lines

Make StringBase._substringUnchecked a native function.

This avoids making a throw-away list on every substring operation.
Fixed the underscore on the function name while I was at it.
Review URL: https://chromiumcodereview.appspot.com//10874038
------------------------------------------------------------------------
r11260 | tball@google.com | 2012-08-24 06:26:15 +0900 (金, 24  8月 2012) | 4 lines

Reordered handle validity tests in order of handle type likelihood. 
This slightly speeds up verification in Api::UnwrapHandle, which 
only runs with DEBUG enabled.

------------------------------------------------------------------------
r11259 | srdjan@google.com | 2012-08-24 06:25:27 +0900 (金, 24  8月 2012) | 2 lines

If a PolymorphicInstanceCall has a single target, move its check into a separate class check so that it can get eliminated.
Review URL: https://chromiumcodereview.appspot.com//10876052
------------------------------------------------------------------------
r11258 | regis@google.com | 2012-08-24 06:04:13 +0900 (金, 24  8月 2012) | 4 lines

Add convenience static members of Type: Smi and Mint.
Use them during type propagation.
Various cleanups.
Review URL: https://chromiumcodereview.appspot.com//10873036
------------------------------------------------------------------------
r11250 | iposva@google.com | 2012-08-24 03:55:42 +0900 (金, 24  8月 2012) | 3 lines

- Remove redundant assertion.
- Add flag --verify-handles to enable checking when assigning to handles.
Review URL: https://chromiumcodereview.appspot.com//10872043
------------------------------------------------------------------------
r11248 | hausner@google.com | 2012-08-24 03:32:10 +0900 (金, 24  8月 2012) | 2 lines

Gentle start with removing explicit interfaces
Review URL: https://chromiumcodereview.appspot.com//10832401
------------------------------------------------------------------------
r11247 | srdjan@google.com | 2012-08-24 03:24:55 +0900 (金, 24  8月 2012) | 2 lines

Specify kSmiCid as result of get string or array length operation.
Review URL: https://chromiumcodereview.appspot.com//10875033
------------------------------------------------------------------------
r11241 | zerny@google.com | 2012-08-24 01:23:05 +0900 (金, 24  8月 2012) | 7 lines

Compute the def-use list on-demand by walking the dominator tree.

This replaces the previous implementation that maintained the def-use lists.

R=vegorov@google.com,kmillikin@google.com

Review URL: https://chromiumcodereview.appspot.com//10879036
------------------------------------------------------------------------
r11229 | fschneider@google.com | 2012-08-23 22:39:24 +0900 (木, 23  8月 2012) | 4 lines

Revert my last change r11227.

TBR=kmillikin@google.com
Review URL: https://chromiumcodereview.appspot.com//10871040
------------------------------------------------------------------------
r11227 | fschneider@google.com | 2012-08-23 22:17:16 +0900 (木, 23  8月 2012) | 8 lines

Add a simple dominator based redundancy elimination.

It enables elimination of redundant expressions across
basic blocks.

Currently used for smi checks and class checks, but will
be extended to other expressions in a separate CL.
Review URL: https://chromiumcodereview.appspot.com//10872035
------------------------------------------------------------------------
r11219 | kmillikin@google.com | 2012-08-23 19:08:37 +0900 (木, 23  8月 2012) | 9 lines

Use the location summary to represent safepoint information.

Pass a LocationSummary everywhere instead of a BitmapBuilder.  The
LocationSummary contains information about live registers.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10873027
------------------------------------------------------------------------
r11218 | ager@google.com | 2012-08-23 18:24:40 +0900 (木, 23  8月 2012) | 5 lines

Use patching for regexp implementation.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10880020
------------------------------------------------------------------------
r11216 | fschneider@google.com | 2012-08-23 17:24:29 +0900 (木, 23  8月 2012) | 25 lines

Add a smi-check instruction for arithmetic smi operations.

The flowgraph optimizer inserts smi checks for the inputs of
arithmetic smi operations:

      PushArgument v0
      PushArgument v1
v2 <- InstanceCall(+, v0, v1) IC[1: Smi, Smi]

becomes

      CheckSmi(v0)
      CheckSmi(v1)
v2 <- BinarySmiOp(+, v0, v1)


Each input operand is checked separately. This avoids using a temp
register for a combined smi check. It also allows us to easily eliminate
the checks for left and right input separately.

There are two ways to eliminate smi checks:
1. By common subexpression elimination: if the value checked is already
   checked for smi-ness before.
2. By class-id propagation: If the input value is guaranteed to be a smi.
Review URL: https://chromiumcodereview.appspot.com//10867012
------------------------------------------------------------------------
r11215 | kmillikin@google.com | 2012-08-23 17:16:12 +0900 (木, 23  8月 2012) | 8 lines

Do not clear the spill slots in optimized code.

Also, change all calls in the prologue to have a stackmap.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10877011
------------------------------------------------------------------------
r11209 | cshapiro@google.com | 2012-08-23 13:24:01 +0900 (木, 23  8月 2012) | 8 lines

Disable an expensive GC assert unless heap verification also enabled.

This assert verifies every pointer being pushed on the mark stack as
belonging to old-space.  Unfortunately, it turns out that checking for
containment in old-space domainates the running time of programs that
frequently invoke an old-space garbage collection.

Review URL: https://chromiumcodereview.appspot.com//10880019
------------------------------------------------------------------------
r11206 | regis@google.com | 2012-08-23 12:26:20 +0900 (木, 23  8月 2012) | 2 lines

Re-enable checking of native resolvers.
Review URL: https://chromiumcodereview.appspot.com//10882007
------------------------------------------------------------------------
r11201 | srdjan@google.com | 2012-08-23 10:10:47 +0900 (木, 23  8月 2012) | 2 lines

Fix inlining and intrinsification for moved Math methods.
Review URL: https://chromiumcodereview.appspot.com//10877030
------------------------------------------------------------------------
r11200 | regis@google.com | 2012-08-23 10:01:14 +0900 (木, 23  8月 2012) | 3 lines

Temporarily disable checking of native resolvers to make Dartium build green.
A more permanent fix will follow.
Review URL: https://chromiumcodereview.appspot.com//10869024
------------------------------------------------------------------------
r11199 | regis@google.com | 2012-08-23 09:42:43 +0900 (木, 23  8月 2012) | 2 lines

Fix Mac build.
Review URL: https://chromiumcodereview.appspot.com//10869022
------------------------------------------------------------------------
r11198 | regis@google.com | 2012-08-23 09:27:49 +0900 (木, 23  8月 2012) | 5 lines

Make ClassFinalizer indifferent on whether we are generating a snapshot or not.
Add flag --error_on_malformed_type.
Remove obsolete flag --verify_implements.
Support snapshotting of LanguageError (for malformed types) and ApiError.
Review URL: https://chromiumcodereview.appspot.com//10871005
------------------------------------------------------------------------
r11196 | cshapiro@google.com | 2012-08-23 09:03:40 +0900 (木, 23  8月 2012) | 3 lines

Provide an Expando implementation for the VM.

Review URL: https://chromiumcodereview.appspot.com//10861041
------------------------------------------------------------------------
r11192 | srdjan@google.com | 2012-08-23 07:48:10 +0900 (木, 23  8月 2012) | 2 lines

Fix printing of symbols for profiling on x64.
Review URL: https://chromiumcodereview.appspot.com//10870018
------------------------------------------------------------------------
r11190 | asiva@google.com | 2012-08-23 07:21:44 +0900 (木, 23  8月 2012) | 2 lines

Use kInstanceCid instead of object_store()->object_class() when checking to see if the class is object class.
Review URL: https://chromiumcodereview.appspot.com//10873004
------------------------------------------------------------------------
r11155 | ager@google.com | 2012-08-22 23:33:01 +0900 (水, 22  8月 2012) | 3 lines

Deprecate Math object in corelib in favor of dart:math library.

Review URL: https://chromiumcodereview.appspot.com//10829459
------------------------------------------------------------------------
r11148 | whesse@google.com | 2012-08-22 22:42:06 +0900 (水, 22  8月 2012) | 5 lines

Check for an error handle passed in, in all dart_api functions that return a handle.  Pass the error handle through unchanged.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10834084
------------------------------------------------------------------------
r11138 | kmillikin@google.com | 2012-08-22 21:42:54 +0900 (水, 22  8月 2012) | 14 lines

Give a length field to stack bitmaps.

The bitmaps describing the stack have an explicit length field.  It is now
an assertion failure to read bits outside the length --- they are no longer
assumed to be false.

Also remove an unused method and simplify the implementation of
BitmapBuilder by removing an embedded member that was always referred to via
a pointer.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10832410
------------------------------------------------------------------------
r11132 | fschneider@google.com | 2012-08-22 20:17:57 +0900 (水, 22  8月 2012) | 5 lines

Split BinaryOp into BinarySmiOp and BinaryMintOp.

This refactoring is a preparation for inserting explicit
class checks for arithmetic operations.
Review URL: https://chromiumcodereview.appspot.com//10879005
------------------------------------------------------------------------
r11121 | srdjan@google.com | 2012-08-22 09:42:00 +0900 (水, 22  8月 2012) | 2 lines

Factor out code for insertin class checks.
Review URL: https://chromiumcodereview.appspot.com//10868013
------------------------------------------------------------------------
r11118 | asiva@google.com | 2012-08-22 09:18:43 +0900 (水, 22  8月 2012) | 2 lines

Retry r11091 with explicit template instatiation to keep the linker happy.
Review URL: https://chromiumcodereview.appspot.com//10869005
------------------------------------------------------------------------
r11116 | srdjan@google.com | 2012-08-22 09:11:26 +0900 (水, 22  8月 2012) | 2 lines

Separate the checks from StoreInstanceField so that they can be eliminated.
Review URL: https://chromiumcodereview.appspot.com//10870004
------------------------------------------------------------------------
r11107 | asiva@google.com | 2012-08-22 07:34:40 +0900 (水, 22  8月 2012) | 2 lines

Add a symbol for PatchClass as it currently has a null for the name.
Review URL: https://chromiumcodereview.appspot.com//10837298
------------------------------------------------------------------------
r11106 | srdjan@google.com | 2012-08-22 07:31:49 +0900 (水, 22  8月 2012) | 4 lines

Add --use_cha (default true, switch to false if you use dynamic class loading). Use CHA to specify receiver class if no subclasses of the receiver exist, eliminate check class computation.
Remove all optimized code whenever we load scripts/libraries/snapshots. Currently this occurs only when no Dart frame is live on stack. Future change (deoptimization) will allow dynamic class loading in presence of live Dart frames.
The cost of removing all optimized code is supposed to be low. If that assumptions turns out to be false I can add more elaborate tracking of optimized functions.
Review URL: https://chromiumcodereview.appspot.com//10825483
------------------------------------------------------------------------
r11097 | regis@google.com | 2012-08-22 06:09:28 +0900 (水, 22  8月 2012) | 2 lines

Move class hierarchy analysis to its own source.
Review URL: https://chromiumcodereview.appspot.com//10827450
------------------------------------------------------------------------
r11096 | asiva@google.com | 2012-08-22 06:01:10 +0900 (水, 22  8月 2012) | 2 lines

Revert change 11091.
Review URL: https://chromiumcodereview.appspot.com//10866004
------------------------------------------------------------------------
r11091 | asiva@google.com | 2012-08-22 05:13:39 +0900 (水, 22  8月 2012) | 2 lines

Currently we use a generated number as the class id for object class, this change tries to pin it to kInstanceCid so that we can do all the checks for object class using this class id.
Review URL: https://chromiumcodereview.appspot.com//10861023
------------------------------------------------------------------------
r11069 | vegorov@google.com | 2012-08-22 01:22:21 +0900 (水, 22  8月 2012) | 8 lines

Clean up EmitSmiBinaryOp template to remove redundant moves.

Now register allocator takes care of preserving values needed for deoptimization.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10836362
------------------------------------------------------------------------
r11045 | vegorov@google.com | 2012-08-21 22:58:57 +0900 (火, 21  8月 2012) | 7 lines

Remove support for non-ssa optimizing code generation.

This kills FrameRegisterAllocator and related code.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10832411
------------------------------------------------------------------------
r11041 | fschneider@google.com | 2012-08-21 22:36:36 +0900 (火, 21  8月 2012) | 7 lines

Make Value not a subclass of Computation.

Instead I introduce one new computation to materialize constants.

sizeof(UseVal) drops from 64 to 32.
sizeof(ConstantVal) drops from 48 to 16.
Review URL: https://chromiumcodereview.appspot.com//10829451
------------------------------------------------------------------------
r11037 | fschneider@google.com | 2012-08-21 22:07:40 +0900 (火, 21  8月 2012) | 4 lines

Fix a bug in Equals for UseVal and ConstantVal.

TEST=vm/intermediate_language_test.cc
Review URL: https://chromiumcodereview.appspot.com//10828414
------------------------------------------------------------------------
r11031 | whesse@google.com | 2012-08-21 20:18:18 +0900 (火, 21  8月 2012) | 5 lines

Sort the Dart vm flags before printing them out with the --print-flags option.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10854224
------------------------------------------------------------------------
r11019 | kmillikin@google.com | 2012-08-21 17:43:32 +0900 (火, 21  8月 2012) | 9 lines

Make stackmaps store their actual length.

This allows stackmaps with varying lengths in the same function, necessary
for the way we plan to support bitmaps for saved live registers.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10837303
------------------------------------------------------------------------
r11013 | zerny@google.com | 2012-08-21 16:33:25 +0900 (火, 21  8月 2012) | 5 lines

Fixed typos: defintion to definition.

TBR=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10836353
------------------------------------------------------------------------
r11012 | iposva@google.com | 2012-08-21 11:49:46 +0900 (火, 21  8月 2012) | 2 lines

- Pass the correct version of handle reference to Class::NewNativeWrapper.
Review URL: https://chromiumcodereview.appspot.com//10827434
------------------------------------------------------------------------
r11009 | asiva@google.com | 2012-08-21 09:19:10 +0900 (火, 21  8月 2012) | 2 lines

Use unreachable in snapshot generation when we do not expect the object to be sent in a message.
Review URL: https://chromiumcodereview.appspot.com//10829445
------------------------------------------------------------------------
r11008 | regis@google.com | 2012-08-21 09:16:46 +0900 (火, 21  8月 2012) | 2 lines

Add HasSubclasses function to class hierarchy analysis.
Review URL: https://chromiumcodereview.appspot.com//10829446
------------------------------------------------------------------------
r11007 | srdjan@google.com | 2012-08-21 08:46:21 +0900 (火, 21  8月 2012) | 2 lines

Fix queries for Dart's clas Obbject cid: get object class from object store and get its cid. This is temproary solution, Siva is working on a permanent one.
Review URL: https://chromiumcodereview.appspot.com//10824392
------------------------------------------------------------------------
r11006 | regis@google.com | 2012-08-21 08:38:09 +0900 (火, 21  8月 2012) | 3 lines

Implement class hierarchy analysis in the VM.
Add test.
Review URL: https://chromiumcodereview.appspot.com//10828399
------------------------------------------------------------------------
r11001 | srdjan@google.com | 2012-08-21 06:14:37 +0900 (火, 21  8月 2012) | 2 lines

Fix performance regression introduced by new equality semantic: we do not collect ICData when comparing with NULL. For now recognize left/right inputs as being null constant and convert the equality tests to strict-equality. There is still a problem if one of the equality arguments is always null but not a constant.
Review URL: https://chromiumcodereview.appspot.com//10861017
------------------------------------------------------------------------
r10998 | srdjan@google.com | 2012-08-21 05:04:25 +0900 (火, 21  8月 2012) | 2 lines

Test functions do not have scripts associated with them. Prevent their optimization by marking any function without a script to be not optimizable.
Review URL: https://chromiumcodereview.appspot.com//10832397
------------------------------------------------------------------------
r10993 | srdjan@google.com | 2012-08-21 02:59:09 +0900 (火, 21  8月 2012) | 2 lines

Removed incorrect EXPECT that gets triggered with low optimization_counter_threshold.
Review URL: https://chromiumcodereview.appspot.com//10823416
------------------------------------------------------------------------
r10991 | hausner@google.com | 2012-08-21 02:51:29 +0900 (火, 21  8月 2012) | 6 lines

Eliminate imported_into pointers in Library

The imported_into pointers are no longer necessary with the new
library scoping rules.
 
Review URL: https://chromiumcodereview.appspot.com//10829431
------------------------------------------------------------------------
r10977 | zerny@google.com | 2012-08-21 00:15:48 +0900 (火, 21  8月 2012) | 8 lines

Fixed issue 4580 introduced by revision 10894.

Binds of constants are dereferenced before adding them as inputs to phis.

R=srdjan@google.com,vegorov@google.com
BUG=dart:4580

Review URL: https://chromiumcodereview.appspot.com//10823411
------------------------------------------------------------------------
r10948 | fschneider@google.com | 2012-08-20 21:40:14 +0900 (月, 20  8月 2012) | 19 lines

Implement class id checks as a separate instruction and add a local CSE optimization pass.

This CL contains:
A new CheckClassComp instruction. Currently it is used only for instance loads:
(LoadInstanceFieldComp)

A pass LocalCSE that performs block-local common subexpression elimination. To identify
redundant expressions I use a hash map per basic block. Computations that do not have
side effects can participate in CSE. For now, I only enabled it for CheckClass.
Any computation that participates in CSE must implement the AttributesEqual function.


Other smaller fixes:

Places where we can pass the correct initial size for GrowableArrays
that have a known size. We should consider having a FixedLengthArray for this purpose.

Made the accessors ic_data() and set_ic_data() use a const ICData*.
Review URL: https://chromiumcodereview.appspot.com//10824349
------------------------------------------------------------------------
r10932 | cshapiro@google.com | 2012-08-18 12:25:44 +0900 (土, 18  8月 2012) | 3 lines

Expose the WeakProperty type.

Review URL: https://chromiumcodereview.appspot.com//10834397
------------------------------------------------------------------------
r10924 | srdjan@google.com | 2012-08-18 06:18:26 +0900 (土, 18  8月 2012) | 2 lines

Fix null-equality comparison for unoptimized branch code. Issue 2506.
Review URL: https://chromiumcodereview.appspot.com//10860018
------------------------------------------------------------------------
r10923 | hausner@google.com | 2012-08-18 06:06:16 +0900 (土, 18  8月 2012) | 15 lines

Implement import scope

Implement the new scope rule for imports.

- Imported identifiers are in a scope that is shadowed
  by the importing library's top-level scope.
- Conflicting names imported from different libraries
  are not an error unless the name is referenced.
- Conflicting type names are only an error in checked mode.

In a follow-on change, I'll remove the "imported_into" pointers in libraries. They are no longer needed.


Issue 2945
Review URL: https://chromiumcodereview.appspot.com//10823396
------------------------------------------------------------------------
r10918 | turnidge@google.com | 2012-08-18 04:56:50 +0900 (土, 18  8月 2012) | 3 lines

A round of edits to make mirrors.dart more like our current working
proposal.
Review URL: https://chromiumcodereview.appspot.com//10854197
------------------------------------------------------------------------
r10907 | srdjan@google.com | 2012-08-18 02:30:06 +0900 (土, 18  8月 2012) | 4 lines

Implement new equality spec. 

"If either o1 or o2 is null, then ee evaluates to identical(o1,o2), where identical() is the predefined dart function that returns true iff its two arguments are the same object. "
Review URL: https://chromiumcodereview.appspot.com//10855208
------------------------------------------------------------------------
r10898 | vegorov@google.com | 2012-08-17 23:04:10 +0900 (金, 17  8月 2012) | 9 lines

Repair x64 disassembler:

- fix disassembler constructor to initialize fields correctly;
- move more code from InstructionDecode to DecodeInstructionType, this ensures that it'll use the right value of current variable (which is not always equal to **data as it assumed before).

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10825418
------------------------------------------------------------------------
r10894 | zerny@google.com | 2012-08-17 22:06:08 +0900 (金, 17  8月 2012) | 8 lines

Replaced Value by Definition in the renaming environment.

Needed so the SSA renaming environment does not contribute uses in the use list.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10857056
------------------------------------------------------------------------
r10884 | fschneider@google.com | 2012-08-17 20:46:28 +0900 (金, 17  8月 2012) | 10 lines

Reland "Record the arguments for CreateArrayComp correctly as arguments.".

This time on the correct branch.

The elements are not real uses and are therefore not maintained accordingly.

BUG=dart:4563

TBR=vegorov@google.com
Review URL: https://chromiumcodereview.appspot.com//10860007
------------------------------------------------------------------------
r10870 | kmillikin@google.com | 2012-08-17 16:57:47 +0900 (金, 17  8月 2012) | 11 lines

Reduce space used for stackmaps.

Only allocate space for the bits covered by the stackmap, instead of
for the backing store of the utility class that built it.  Fix a bug
where the size in bytes was multiplied by the word size in bytes.

Also do some cleanup of the stackmap code and renaming in the tests.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10832292
------------------------------------------------------------------------
r10867 | cshapiro@google.com | 2012-08-17 10:17:39 +0900 (金, 17  8月 2012) | 11 lines

Add a weak property type to the virtual machine.

Weak properties are key-value pairs.  The liveness of the key determines
the liveness of the value.  If the key is reachable the value is traced.
However, if the key is unreachable, the value is subject to finalization.

At present, the sole finalization action is clearing the key and value
fields.  However, it is possible to extend this to invoking callbacks or
other techniques, as well as processing values in topological order.

Review URL: https://chromiumcodereview.appspot.com//10832199
------------------------------------------------------------------------
r10865 | srdjan@google.com | 2012-08-17 07:22:57 +0900 (金, 17  8月 2012) | 4 lines

Reenable elimination of strict equals when right side is true.
Reenable some Smi check eliminations. Soon Florian will factor out class checks into own instruction where the elimination will be moved.
Implement more ResultCid()-s, removed TODO to make it asbtract because almost all computations return kDynamicCid.
Review URL: https://chromiumcodereview.appspot.com//10827387
------------------------------------------------------------------------
r10861 | regis@google.com | 2012-08-17 05:44:32 +0900 (金, 17  8月 2012) | 6 lines

Require two type arguments for map literals (issue 4522).
Spec has been changed back.
VM temporarily accepts a single type argument and emits a warning.
Update tests, dart2js source, dartdoc, etc...
Disable failing co19 tests (issue 175 filed).
Review URL: https://chromiumcodereview.appspot.com//10854191
------------------------------------------------------------------------
r10849 | srdjan@google.com | 2012-08-17 02:39:37 +0900 (金, 17  8月 2012) | 2 lines

Propagate class ids using existing type propagation framework.
Review URL: https://chromiumcodereview.appspot.com//10830339
------------------------------------------------------------------------
r10847 | asiva@google.com | 2012-08-17 02:36:41 +0900 (金, 17  8月 2012) | 3 lines

1. Fix an issue with VM class names being null (this is exposed when doing a heap profile)
2. Move more VM class names as singletons to the VM isolate.
Review URL: https://chromiumcodereview.appspot.com//10827367
------------------------------------------------------------------------
r10846 | hausner@google.com | 2012-08-17 02:30:56 +0900 (金, 17  8月 2012) | 4 lines

New getter syntax for top-level getters

Fix 4538
Review URL: https://chromiumcodereview.appspot.com//10837288
------------------------------------------------------------------------
r10822 | zerny@google.com | 2012-08-16 23:08:45 +0900 (木, 16  8月 2012) | 6 lines

RemoveFromGraph on definitions asserts empty use lists.

R=fschneider@google.com,kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10855101
------------------------------------------------------------------------
r10807 | zerny@google.com | 2012-08-16 21:06:17 +0900 (木, 16  8月 2012) | 6 lines

Refactored FlowGraphBuilder into a separate FlowGraph representation.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10857016
------------------------------------------------------------------------
r10802 | fschneider@google.com | 2012-08-16 17:46:45 +0900 (木, 16  8月 2012) | 5 lines

Make all variants of RelationalOp work with SSA.

This is the last instruction that causes a bailout in the register
allocator. This bailout is now changed into an ASSERT.
Review URL: https://chromiumcodereview.appspot.com//10830333
------------------------------------------------------------------------
r10784 | iposva@google.com | 2012-08-16 09:00:04 +0900 (木, 16  8月 2012) | 4 lines

- Merge function lists when patching classes (no more duplicates).
- Report errors when applying a patch with duplicate fields or mismatched parameters.
- Fix bug 4526: Wrong error message when defining an already defined class.
Review URL: https://chromiumcodereview.appspot.com//10854176
------------------------------------------------------------------------
r10782 | regis@google.com | 2012-08-16 08:49:12 +0900 (木, 16  8月 2012) | 4 lines

Cleanup handling of NullType in type propagation.
Remove AssertAssignable type checks from graph (when possible), rather than just
marking them as eliminated.
Review URL: https://chromiumcodereview.appspot.com//10828319
------------------------------------------------------------------------
r10765 | iposva@google.com | 2012-08-16 04:57:32 +0900 (木, 16  8月 2012) | 2 lines

- Remove unused variable.
Review URL: https://chromiumcodereview.appspot.com//10834340
------------------------------------------------------------------------
r10735 | vegorov@google.com | 2012-08-15 23:26:39 +0900 (水, 15  8月 2012) | 6 lines

Rename is_call to always_calls and contains_call to can_call.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824308
------------------------------------------------------------------------
r10727 | fschneider@google.com | 2012-08-15 22:54:38 +0900 (水, 15  8月 2012) | 6 lines

Change indexed load and store IL instructions to fit with SSA backend.

Generic indexed operations are implemented as normal instance calls. Specialized
operations are inserted by the flow-graph optimizer. This also avoid a lot of duplicated code
in the code generator.
Review URL: https://chromiumcodereview.appspot.com//10836239
------------------------------------------------------------------------
r10715 | ager@google.com | 2012-08-15 21:06:17 +0900 (水, 15  8月 2012) | 7 lines

Update stopwatch to use patching to share sources instead of exposing
a Clock class.

R=lrn@google.com,ajohnsen@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10831327
------------------------------------------------------------------------
r10710 | fschneider@google.com | 2012-08-15 20:31:51 +0900 (水, 15  8月 2012) | 8 lines

Split ToDouble into two IL instruction to make it work with SSA.

This CL removes the bailout from SSA on smi-to-double conversions.

The smi-to-double conversion is implemented as a call and requires
its operand pushed, the double-to-double conversion has normal input
operands.
Review URL: https://chromiumcodereview.appspot.com//10834311
------------------------------------------------------------------------
r10709 | ager@google.com | 2012-08-15 20:25:40 +0900 (水, 15  8月 2012) | 13 lines

Cleanup of math sources.

Get rid of temporary unified directory version. Move back into
lib/math where it should be.

Rename patch files from the for math.dartp to the form
math_patch.dart.  They are just dart files and I don't like the new
dartp extension.

R=ajohnsen@google.com,lrn@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10831324
------------------------------------------------------------------------
r10703 | iposva@google.com | 2012-08-15 16:33:19 +0900 (水, 15  8月 2012) | 4 lines

- Split functionality of adding implicit constructors and checking
  for cycles into two functions.
- Fix handling of closures in patch classes.
Review URL: https://chromiumcodereview.appspot.com//10829332
------------------------------------------------------------------------
r10698 | iposva@google.com | 2012-08-15 13:50:14 +0900 (水, 15  8月 2012) | 2 lines

- Use the unified dart:math library in the VM.
Review URL: https://chromiumcodereview.appspot.com//10831301
------------------------------------------------------------------------
r10697 | jackpal@google.com | 2012-08-15 11:02:16 +0900 (水, 15  8月 2012) | 5 lines

Add GDB JIT support back into Android build.

Based on Linux version.

Review URL: https://chromiumcodereview.appspot.com//10827327
------------------------------------------------------------------------
r10696 | asiva@google.com | 2012-08-15 10:06:01 +0900 (水, 15  8月 2012) | 3 lines

use bit fields for class state and field type values. This shrinks the snapshot
size by about 4k
Review URL: https://chromiumcodereview.appspot.com//10837247
------------------------------------------------------------------------
r10694 | srdjan@google.com | 2012-08-15 09:16:58 +0900 (水, 15  8月 2012) | 2 lines

Disable using CompileType for class check elimination.
Review URL: https://chromiumcodereview.appspot.com//10828318
------------------------------------------------------------------------
r10687 | srdjan@google.com | 2012-08-15 07:54:53 +0900 (水, 15  8月 2012) | 2 lines

Added Smi, Mint and Double types to object store.
Review URL: https://chromiumcodereview.appspot.com//10823324
------------------------------------------------------------------------
r10672 | hausner@google.com | 2012-08-15 04:52:00 +0900 (水, 15  8月 2012) | 7 lines

Allow non-const field initializers

Revision 0.11 of the spec allows arbitrary initializer expressions
for instance fields.

Issue 3848
Review URL: https://chromiumcodereview.appspot.com//10832283
------------------------------------------------------------------------
r10663 | srdjan@google.com | 2012-08-15 03:48:13 +0900 (水, 15  8月 2012) | 2 lines

Fix crash with exhausted heap size: benchmarks' code heap size set to 12Mb).
Review URL: https://chromiumcodereview.appspot.com//10827328
------------------------------------------------------------------------
r10639 | vegorov@google.com | 2012-08-14 21:47:42 +0900 (火, 14  8月 2012) | 8 lines

Implement basic support for deferred slow path code with calls that save and restore live registers.

Use it to avoid spilling over stack-checks.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10823308
------------------------------------------------------------------------
r10630 | fschneider@google.com | 2012-08-14 20:18:48 +0900 (火, 14  8月 2012) | 4 lines

Fix crash bug when replacing a definition with a definition that has no uses.

TEST=vm/intermediate_language_test.cc
Review URL: https://chromiumcodereview.appspot.com//10826299
------------------------------------------------------------------------
r10618 | kmillikin@google.com | 2012-08-14 15:59:24 +0900 (火, 14  8月 2012) | 11 lines

Build and use stack maps in the SSA compiler.

Add a stack bitmap to the location summaries for calls that are GC
safepoints.  The bitmap covers the spill slots.  The register
allocator collects these bitmaps into a list and then marks live
pointer values during register allocation.  When emitting code for a
call, a heap-allocated stackmap is built.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10831261
------------------------------------------------------------------------
r10617 | iposva@google.com | 2012-08-14 10:23:41 +0900 (火, 14  8月 2012) | 2 lines

- Remove debug printing.
Review URL: https://chromiumcodereview.appspot.com//10836230
------------------------------------------------------------------------
r10616 | iposva@google.com | 2012-08-14 09:38:01 +0900 (火, 14  8月 2012) | 2 lines

- Support for patching of class methods and fields.
Review URL: https://chromiumcodereview.appspot.com//10827288
------------------------------------------------------------------------
r10615 | srdjan@google.com | 2012-08-14 08:44:07 +0900 (火, 14  8月 2012) | 3 lines

Optimize equality for case when all targets are Object.equals.
Also fixes a couple of issues with https://chromiumcodereview.appspot.com/10830275/
Review URL: https://chromiumcodereview.appspot.com//10826285
------------------------------------------------------------------------
r10613 | jackpal@google.com | 2012-08-14 08:06:52 +0900 (火, 14  8月 2012) | 17 lines

Add _android files for building DartVM on Android

Split directory_posix -> directory_(android|linux|macos)
  This allows us to cleanly make Android-specific changes to
  directory_android.cc

Copy all _linux files to _android files and edit as needed to account
for the differences between Linux and Android:

 + getcwd(0, NULL) doesn't work on Android, have to emulate
 + Android doesn't have a '/tmp' directory, have to emulate
 + Android doesn't provide mkdtemp(), have to emulate.
 + Small differences in the available system include files.
 + Use pthread_cond_timedwait_monotonic instead of
   pthread_condattr_setclock

Review URL: https://chromiumcodereview.appspot.com//10826233
------------------------------------------------------------------------
r10612 | iposva@google.com | 2012-08-14 08:01:20 +0900 (火, 14  8月 2012) | 5 lines

- Split Dart core libraries into shared sources and patch sources.
  Currently this split goes along the runtime vs. library directories,
  eventually more shared code will be sitting in the shared library
  sources.
Review URL: https://chromiumcodereview.appspot.com//10834284
------------------------------------------------------------------------
r10611 | regis@google.com | 2012-08-14 07:37:22 +0900 (火, 14  8月 2012) | 2 lines

Missed file in previous change.
Review URL: https://chromiumcodereview.appspot.com//10832279
------------------------------------------------------------------------
r10610 | regis@google.com | 2012-08-14 07:31:07 +0900 (火, 14  8月 2012) | 2 lines

Eliminate condition type check when possible.
Review URL: https://chromiumcodereview.appspot.com//10832277
------------------------------------------------------------------------
r10608 | asiva@google.com | 2012-08-14 06:57:34 +0900 (火, 14  8月 2012) | 2 lines

Address review comments from previous CL.
Review URL: https://chromiumcodereview.appspot.com//10807078
------------------------------------------------------------------------
r10605 | regis@google.com | 2012-08-14 06:09:28 +0900 (火, 14  8月 2012) | 4 lines

In checked mode, make sure the ssa compiler propagates the checked types of
incoming arguments.
Propagate the type of the receiver and of the constructor phase argument.
Review URL: https://chromiumcodereview.appspot.com//10855134
------------------------------------------------------------------------
r10600 | hausner@google.com | 2012-08-14 05:15:06 +0900 (火, 14  8月 2012) | 7 lines

References to static functions are CT constants

A compile time constant expression may refer to top-level and
static closures.

Fix for issue 3406.
Review URL: https://chromiumcodereview.appspot.com//10823292
------------------------------------------------------------------------
r10587 | regis@google.com | 2012-08-14 01:56:10 +0900 (火, 14  8月 2012) | 3 lines

Cache the first evaluation of the compile time type of a definition as the
initial propagated type in order to prevent repeated evaluation.
Review URL: https://chromiumcodereview.appspot.com//10823279
------------------------------------------------------------------------
r10568 | fschneider@google.com | 2012-08-13 22:10:00 +0900 (月, 13  8月 2012) | 8 lines

Optimize expressions of the form (expr === true) when expr has boolean type.

This allows us to generate better code for many short-circuit
expressions like a || b, a && b if we can statically determine the type
of the subexpressions.

Also: Avoid disassembling optimized functions twice with --disassemble --disassemble-optimized.
Review URL: https://chromiumcodereview.appspot.com//10830275
------------------------------------------------------------------------
r10545 | srdjan@google.com | 2012-08-11 09:09:12 +0900 (土, 11  8月 2012) | 3 lines

Use type propagation for removing Smi checks in binary operations and comparisons. Regis will adapt type propagation to collect/propagate class ids and merge them into sets (arrays).
Added printing for propagated types and parameter instructions.
Review URL: https://chromiumcodereview.appspot.com//10823278
------------------------------------------------------------------------
r10542 | asiva@google.com | 2012-08-11 08:33:37 +0900 (土, 11  8月 2012) | 2 lines

Remove functions_cache_ and it's references as it is not being used anymore.
Review URL: https://chromiumcodereview.appspot.com//10824266
------------------------------------------------------------------------
r10541 | hausner@google.com | 2012-08-11 07:53:34 +0900 (土, 11  8月 2012) | 6 lines

Support new getter syntax (no formal parameter list)

Support both new and old getter syntax in the VM compiler.
One co19 test becomes invalid, as it expects a compile error
due to missing getter formal parameters.
Review URL: https://chromiumcodereview.appspot.com//10837208
------------------------------------------------------------------------
r10535 | asiva@google.com | 2012-08-11 06:43:00 +0900 (土, 11  8月 2012) | 8 lines

1. Register canonical names for internal VM classes and get rid of the method GetSingletonClassName
2. Create the empty_array object as a singleton in the VM isolate and remove it from the object store
3. Remove eager population of the functions_cache entry in the class. This results in a pretty impressive reduction of the initial isolate heap size:
    - on IA32 it goes from 1331k to 1071k
    - on X64 it goes from 2431k to 1911k
    - snapshot size also is reduced from 859219 bytes to 789147 bytes.
    (as a follow up change I will consider completely removing functions cache)
Review URL: https://chromiumcodereview.appspot.com//10827249
------------------------------------------------------------------------
r10529 | srdjan@google.com | 2012-08-11 05:48:18 +0900 (土, 11  8月 2012) | 2 lines

Enable SSA by default for IA32 as well.
Review URL: https://chromiumcodereview.appspot.com//10825301
------------------------------------------------------------------------
r10528 | asiva@google.com | 2012-08-11 05:35:59 +0900 (土, 11  8月 2012) | 4 lines

1. Write out only the kind_tag_ field of a function in the snapshot instead of the individual bits as boolean values. This reduces the snapshot size by about 4k

2. Move the kind_tag_ accessor functions from RawFunction to Function (we try not to have any code in the Raw classes).
Review URL: https://chromiumcodereview.appspot.com//10831248
------------------------------------------------------------------------
r10523 | hausner@google.com | 2012-08-11 03:30:22 +0900 (土, 11  8月 2012) | 10 lines

Support for new operator -

Implement unary operator -. Operator negate is still recognized,
but internally it is represented like unary -. In particular,
operator negate no longer implies an instance method named
negate.

Marked several co19 tests that use "negate" as failing and filed
co19 issue 169 to have these tests updated.
Review URL: https://chromiumcodereview.appspot.com//10830253
------------------------------------------------------------------------
r10518 | vegorov@google.com | 2012-08-11 02:28:01 +0900 (土, 11  8月 2012) | 6 lines

In AllocateAnyRegister allow spliting at blocked_at position inclusive.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10825300
------------------------------------------------------------------------
r10517 | srdjan@google.com | 2012-08-11 02:20:10 +0900 (土, 11  8月 2012) | 2 lines

Add X64 assembler.
Review URL: https://chromiumcodereview.appspot.com//10826248
------------------------------------------------------------------------
r10515 | iposva@google.com | 2012-08-11 02:01:08 +0900 (土, 11  8月 2012) | 5 lines

- Improve generated sources:
  + Strip private key from identifiers.
  + Properly handle strings with interpolation.
- Keep private key in the token stream and properly snapshot. 
Review URL: https://chromiumcodereview.appspot.com//10823269
------------------------------------------------------------------------
r10514 | srdjan@google.com | 2012-08-11 01:57:41 +0900 (土, 11  8月 2012) | 2 lines

Small bug fix in comparison of usage_counter for x64.
Review URL: https://chromiumcodereview.appspot.com//10828260
------------------------------------------------------------------------
r10508 | vegorov@google.com | 2012-08-10 23:28:02 +0900 (金, 10  8月 2012) | 7 lines

Put PushArgument into the environment instead of raw values.

This allows to shorten live ranges and avoid spilling when PushArgument is the last real use of the value.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10825282
------------------------------------------------------------------------
r10497 | zerny@google.com | 2012-08-10 21:35:59 +0900 (金, 10  8月 2012) | 6 lines

Added def-use chain to the intermediate language.

R=fschneider@google.com,kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10826230
------------------------------------------------------------------------
r10489 | fschneider@google.com | 2012-08-10 19:53:01 +0900 (金, 10  8月 2012) | 2 lines

Add flag --disassemble-optimized to selectively disassemble function with optimized code.
Review URL: https://chromiumcodereview.appspot.com//10827275
------------------------------------------------------------------------
r10488 | fschneider@google.com | 2012-08-10 19:34:38 +0900 (金, 10  8月 2012) | 8 lines

Match input operand count of BranchInstr with the input location count.

For now this is achieved by making the branch instruction push its
arguments itself in the case it performs an instance call.

Also remove the result location from the location summary of BranchInstr
in the instance call case since it does never produce a result.
Review URL: https://chromiumcodereview.appspot.com//10823258
------------------------------------------------------------------------
r10478 | regis@google.com | 2012-08-10 10:26:13 +0900 (金, 10  8月 2012) | 6 lines

Retrying r10475 (now with null check):
Continue work on type propagation in optimizing compiler (still WIP).
Propagated types are cached in ssa definition nodes.
Type propagation iterates until fix point is reached.
Type checks are marked as eliminated when possible.
Review URL: https://chromiumcodereview.appspot.com//10854084
------------------------------------------------------------------------
r10476 | regis@google.com | 2012-08-10 09:39:42 +0900 (金, 10  8月 2012) | 2 lines

Revert r10475.
Review URL: https://chromiumcodereview.appspot.com//10831252
------------------------------------------------------------------------
r10475 | regis@google.com | 2012-08-10 09:07:21 +0900 (金, 10  8月 2012) | 5 lines

Continue work on type propagation in optimizing compiler (still WIP).
Propagated types are cached in ssa definition nodes.
Type propagation iterates until fix point is reached.
Type checks are marked as eliminated when possible.
Review URL: https://chromiumcodereview.appspot.com//10829270
------------------------------------------------------------------------
r10469 | srdjan@google.com | 2012-08-10 08:46:38 +0900 (金, 10  8月 2012) | 2 lines

Replace deopt stubs location/register shuffling with using deopt-info. Added deopt instruction commands. Also fixes a crash in IA32 with use_ssa where the stack is incorrect after deoptimization. Tested IA32 with and without use-ssa.
Review URL: https://chromiumcodereview.appspot.com//10825236
------------------------------------------------------------------------
r10456 | hausner@google.com | 2012-08-10 05:14:18 +0900 (金, 10  8月 2012) | 6 lines

Implement new catch syntax in vm compiler

- Support for new on T catch (e) syntax
- warning (default:off) when old catch clause syntax is found
- convert one language test to used new catch syntax
Review URL: https://chromiumcodereview.appspot.com//10827240
------------------------------------------------------------------------
r10453 | vegorov@google.com | 2012-08-10 04:34:41 +0900 (金, 10  8月 2012) | 10 lines

Align AllocateObjectComp and AllocateObjectWithBoundsCheckComp with ssa allocator.

AllocateObjectComp becomes a call computation with all arguments pushed via PushArgument.

AllocateObjectWithBoundsCheckComp pushes inputs internally.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10855053
------------------------------------------------------------------------
r10448 | turnidge@google.com | 2012-08-10 01:20:46 +0900 (金, 10  8月 2012) | 2 lines

Don't hard-code getter prefix in code_generator.cc.
Review URL: https://chromiumcodereview.appspot.com//10828213
------------------------------------------------------------------------
r10424 | srdjan@google.com | 2012-08-09 07:15:38 +0900 (木, 09  8月 2012) | 2 lines

Move deopt reason into PcDescriptor so the EAX/RAX register is not destroyed. Some cleanups in PC descriptor.
Review URL: https://chromiumcodereview.appspot.com//10832214
------------------------------------------------------------------------
r10418 | asiva@google.com | 2012-08-09 04:46:23 +0900 (木, 09  8月 2012) | 7 lines

- Unify class ids and snapshot object ids list so that we don't have disparate
  and sometimes confusing values.
- Remove instance_kind_ field from RawClass.
- Rename all class id names to have a Cid suffix.
- Remove code from object.h and object_store.h which dealt with object ids
  of predefined classes for snapshots.
Review URL: https://chromiumcodereview.appspot.com//10827209
------------------------------------------------------------------------
r10415 | turnidge@google.com | 2012-08-09 03:28:14 +0900 (木, 09  8月 2012) | 2 lines

Don't call IdentifierPrettyName with signature classes.
Review URL: https://chromiumcodereview.appspot.com//10855052
------------------------------------------------------------------------
r10413 | hausner@google.com | 2012-08-09 03:02:51 +0900 (木, 09  8月 2012) | 9 lines

Fix super getter/setter

Fix handling of super getters and setters. In particular, parser
now correctly converts super getters into super setters for
compound assignment, and pre- and postfix increment operators.

co 19 tests still fail because super index operator is broken.
Will work on this next.
Review URL: https://chromiumcodereview.appspot.com//10849004
------------------------------------------------------------------------
r10409 | iposva@google.com | 2012-08-09 02:29:49 +0900 (木, 09  8月 2012) | 2 lines

- Allow patching of top-level methods and accessors.
Review URL: https://chromiumcodereview.appspot.com//10824209
------------------------------------------------------------------------
r10408 | turnidge@google.com | 2012-08-09 02:22:26 +0900 (木, 09  8月 2012) | 34 lines

Improve the stack trace output to be more readable.

BEFORE

Unhandled exception:
MyException
 0. Function: '::baz' url: 'file:///Users/turnidge/dart/bug.dart' line:2 col:3
 1. Function: '_OtherClass@11f7ef14._OtherClass@11f7ef14._named@11f7ef14' url: 'file:///Users/turnidge/dart/bug.dart' line:7 col:8
 2. Function: '::set:globalVar' url: 'file:///Users/turnidge/dart/bug.dart' line:12 col:3
 3. Function: '::_bar@11f7ef14' url: 'file:///Users/turnidge/dart/bug.dart' line:16 col:3
 4. Function: 'MyClass.get:field' url: 'file:///Users/turnidge/dart/bug.dart' line:25 col:9
 5. Function: 'MyClass.fooHelper' url: 'file:///Users/turnidge/dart/bug.dart' line:30 col:7
 6. Function: 'MyClass.foo' url: 'file:///Users/turnidge/dart/bug.dart' line:32 col:14
 7. Function: 'MyClass.function' url: 'file:///Users/turnidge/dart/bug.dart' line:21 col:15
 8. Function: 'MyClass.MyClass.' url: 'file:///Users/turnidge/dart/bug.dart' line:21 col:18
 9. Function: '::function' url: 'file:///Users/turnidge/dart/bug.dart' line:38 col:10
 10. Function: '::main' url: 'file:///Users/turnidge/dart/bug.dart' line:38 col:24

AFTER

Unhandled exception:
MyException
#0      baz (file:///Users/turnidge/dart/bug.dart:2:3)
#1      _OtherClass._OtherClass._named (file:///Users/turnidge/dart/bug.dart:7:8)
#2      globalVar= (file:///Users/turnidge/dart/bug.dart:12:3)
#3      _bar (file:///Users/turnidge/dart/bug.dart:16:3)
#4      MyClass.field (file:///Users/turnidge/dart/bug.dart:25:9)
#5      MyClass.foo.fooHelper (file:///Users/turnidge/dart/bug.dart:30:7)
#6      MyClass.foo (file:///Users/turnidge/dart/bug.dart:32:14)
#7      MyClass.MyClass.<anonymous closure> (file:///Users/turnidge/dart/bug.dart:21:15)
#8      MyClass.MyClass (file:///Users/turnidge/dart/bug.dart:21:18)
#9      main.<anonymous closure> (file:///Users/turnidge/dart/bug.dart:38:10)
#10     main (file:///Users/turnidge/dart/bug.dart:38:24)
Review URL: https://chromiumcodereview.appspot.com//10826191
------------------------------------------------------------------------
r10384 | fschneider@google.com | 2012-08-08 23:05:53 +0900 (水, 08  8月 2012) | 4 lines

Reapply and fix "Remove duplicate code for smi and double comparison from the compiler.".

The bug fix was to always allocate the correct number of temp registers on x64.
Review URL: https://chromiumcodereview.appspot.com//10855050
------------------------------------------------------------------------
r10382 | fschneider@google.com | 2012-08-08 22:15:12 +0900 (水, 08  8月 2012) | 4 lines

Revert r10379: "Remove duplicate code for smi and double comparison from the compiler."

TBR=vegorov@google.com
Review URL: https://chromiumcodereview.appspot.com//10828208
------------------------------------------------------------------------
r10379 | fschneider@google.com | 2012-08-08 22:04:41 +0900 (水, 08  8月 2012) | 2 lines

Remove duplicate code for smi and double comparison from the compiler.
Review URL: https://chromiumcodereview.appspot.com//10823228
------------------------------------------------------------------------
r10377 | vegorov@google.com | 2012-08-08 21:38:21 +0900 (水, 08  8月 2012) | 8 lines

Eliminate phis that do not reach any non-environment uses.

This takes care of phis for temporary variables like :expr_temp, lia, lix, igr, casc, alloc, sca that currently create unnecessary pressure on the back-edge of loops.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10832180
------------------------------------------------------------------------
r10354 | rnystrom@google.com | 2012-08-08 05:56:59 +0900 (水, 08  8月 2012) | 3 lines

Rename BadNumberFormatException -> FormatException.

Review URL: https://chromiumcodereview.appspot.com//10850034
------------------------------------------------------------------------
r10351 | srdjan@google.com | 2012-08-08 05:15:17 +0900 (水, 08  8月 2012) | 2 lines

Verify at method exit that stack size is the same as at entry, except for methods with finally clauses. Mark functions that have finally clauses as they may produce extra values on stack. Note that we currently do not optimize methods with finally clauses and therefore there are no issues related to incorrect stack size at deoptimization.
Review URL: https://chromiumcodereview.appspot.com//10824201
------------------------------------------------------------------------
r10350 | srdjan@google.com | 2012-08-08 05:14:53 +0900 (水, 08  8月 2012) | 2 lines

Fix a stack state error in checked mode.
Review URL: https://chromiumcodereview.appspot.com//10829222
------------------------------------------------------------------------
r10346 | turnidge@google.com | 2012-08-08 03:01:46 +0900 (水, 08  8月 2012) | 7 lines

Two edits based on feedback from whesse:

1. Simplify the ThrowException test to make it less confusing.

2. Provide better documentation for Dart_ThrowException and
Dart_PropagateError.
Review URL: https://chromiumcodereview.appspot.com//10823189
------------------------------------------------------------------------
r10342 | kmillikin@google.com | 2012-08-08 00:53:02 +0900 (水, 08  8月 2012) | 9 lines

Move all register allocator environment initialization into class Environment.

Move the register constraints and initial live ranges of environment values
out of the register allocator and into the environment class.

R=vegorov@google.com,srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10826184
------------------------------------------------------------------------
r10338 | kmillikin@google.com | 2012-08-07 22:43:46 +0900 (火, 07  8月 2012) | 9 lines

Add a function's initial stack check to the IL instruction stream.

This stack check needs a GC safepoint.  It is simplest to implement
that by exposing it as an explicit instruction.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10855019
------------------------------------------------------------------------
r10333 | vegorov@google.com | 2012-08-07 20:55:42 +0900 (火, 07  8月 2012) | 5 lines

Add hints when resolving phies and register constraints.

R=fschneider@google.com

Review URL: https://chromiumcodereview.appspot.com//10829218
------------------------------------------------------------------------
r10330 | fschneider@google.com | 2012-08-07 19:34:39 +0900 (火, 07  8月 2012) | 8 lines

Refactor Instruction classes to use a template base class.

This change makes instructions and computations more uniform.

Also make CreateArrayComp take a register input operand. This
is done by changing the convenience DECLARE_COMPUTATION macro accordingly and use
TemplateComputation as base class for call-instructions.
Review URL: https://chromiumcodereview.appspot.com//10831178
------------------------------------------------------------------------
r10329 | kmillikin@google.com | 2012-08-07 19:19:33 +0900 (火, 07  8月 2012) | 15 lines

Account for '\0' string terminator in allocated buffers.

OS::SNPrint takes a size in bytes argument that includes the null
terminator, it returns the number of characters printed not including
the null terminator.  Unfortunately we don't have a uniform way of
writing this.

This change fixes three sites that do not account for the terminator
when writing, with the effect of dropping the last character before
the terminator.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10823181
------------------------------------------------------------------------
r10323 | srdjan@google.com | 2012-08-07 09:32:22 +0900 (火, 07  8月 2012) | 2 lines

Do not silently convert integers to doubles in binary operations. Only when at least one of arguments is double can the result be double.
Review URL: https://chromiumcodereview.appspot.com//10828189
------------------------------------------------------------------------
r10321 | regis@google.com | 2012-08-07 08:17:04 +0900 (火, 07  8月 2012) | 3 lines

Store pointer instead of reference to LocalVariable in ast and flow graph.
Address comments of already committed r10203.
Review URL: https://chromiumcodereview.appspot.com//10832126
------------------------------------------------------------------------
r10320 | srdjan@google.com | 2012-08-07 08:10:56 +0900 (火, 07  8月 2012) | 2 lines

Forgot to save changes to comments.
Review URL: https://chromiumcodereview.appspot.com//10824190
------------------------------------------------------------------------
r10319 | srdjan@google.com | 2012-08-07 08:08:08 +0900 (火, 07  8月 2012) | 2 lines

Fix x64 performance regression, array allocation was always going via runtime. Improvements: Havlak 70%, DeltaBlue 20%, Meteor 20%.
Review URL: https://chromiumcodereview.appspot.com//10828182
------------------------------------------------------------------------
r10310 | asiva@google.com | 2012-08-07 06:56:39 +0900 (火, 07  8月 2012) | 4 lines

Do not try to serialize VM objects, these are read only canonical objects and should be referred to using ids.

Turn VM symbols back on.
Review URL: https://chromiumcodereview.appspot.com//10834069
------------------------------------------------------------------------
r10308 | srdjan@google.com | 2012-08-07 06:15:26 +0900 (火, 07  8月 2012) | 2 lines

Add deopt info to code object and print it. Still missing is the code to 'execute' the deopt instructions and thus deoptimize.
Review URL: https://chromiumcodereview.appspot.com//10823131
------------------------------------------------------------------------
r10306 | regis@google.com | 2012-08-07 05:24:03 +0900 (火, 07  8月 2012) | 3 lines

Get rid of ast node ids.
Rename cid to deopt_id.
Review URL: https://chromiumcodereview.appspot.com//10832150
------------------------------------------------------------------------
r10293 | vegorov@google.com | 2012-08-07 00:43:03 +0900 (火, 07  8月 2012) | 6 lines

Don't mark register constraints resolution moves as prefering registers.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10832159
------------------------------------------------------------------------
r10290 | kmillikin@google.com | 2012-08-07 00:13:21 +0900 (火, 07  8月 2012) | 10 lines

Allocate the environment's location backing store during register allocation.

The code relies on the addresses of elements in this backing store.  It was
correct but difficult to guarantee when it was a growable array's backing
store.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10831179
------------------------------------------------------------------------
r10289 | kmillikin@google.com | 2012-08-06 23:33:23 +0900 (月, 06  8月 2012) | 13 lines

Store variable counts in the flow graph builder.

Store the constant counts of copied parameters, non-copied parameters, and
(non-parameter) stack locals in the flow graph builder.  This saves passing
them around to flow graph member functions.

Change usage of "fixed parameter" to "non-copied parameter" because it is
different than what fixed parameter means in other parts of the system.

R=fschneider@google.com,zerny@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10855007
------------------------------------------------------------------------
r10287 | vegorov@google.com | 2012-08-06 21:24:12 +0900 (月, 06  8月 2012) | 17 lines

Ensure that ia32 build passes all tests with --use-ssa on.

Bugs fixed in register allocator:

- incorrect assertions in SplitAt;
- allocation finger should not cache positions that are owned by a sibling after split;
- UpdateFreeUntil should allow evicting live range with vreg 0;
- values expected in fixed locations should not cause an interference at the instruction itself, they can be evicted if need arises;

Bug fixed in deoptimization:

- parallel move resolver uses push/pop to free a scratch register for memory to memory moves, when using it for deoptimization we need to ensure that those push/pops do not interfere with actual moves;

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824165
------------------------------------------------------------------------
r10284 | fschneider@google.com | 2012-08-06 20:38:45 +0900 (月, 06  8月 2012) | 6 lines

Make CreateArrayComp a call by using explicit push-argument instructions.

This enables SSA compilation of functions containing CreateArray. Currently,
we don't support call-instructions that have pushed arguments and also take
input operands in registers. This will be done in a separate CL.
Review URL: https://chromiumcodereview.appspot.com//10831176
------------------------------------------------------------------------
r10282 | kmillikin@google.com | 2012-08-06 19:50:38 +0900 (月, 06  8月 2012) | 8 lines

Reapply "Use platform-independent format specifiers when disassembling code objects."

This reapplies svn revision 10163 with a (tested) fix for Windows.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10834155
------------------------------------------------------------------------
r10281 | fschneider@google.com | 2012-08-06 19:43:47 +0900 (月, 06  8月 2012) | 6 lines

Simplify BlockEntryInstr::DiscoverBlocks a bit.

We can remove the case of blocks containing a single instruction because
every basic block is now terminated with a Goto or Branch (except for the graph
entry, which is handled specially).
Review URL: https://chromiumcodereview.appspot.com//10825198
------------------------------------------------------------------------
r10280 | zerny@google.com | 2012-08-06 19:07:26 +0900 (月, 06  8月 2012) | 10 lines

Reapply "Added support for copied parameters to the SSA compiler."

This reapplies svn revision 10172 with a bug fix.

Original Review URL: https://chromiumcodereview.appspot.com//10837076

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824177
------------------------------------------------------------------------
r10278 | fschneider@google.com | 2012-08-06 17:55:13 +0900 (月, 06  8月 2012) | 5 lines

Replace InstanceSetterComp instruction with a plain instance call.

After my last change to InstanceSetterComp we do not need a separate
IL instruction for it anymore.
Review URL: https://chromiumcodereview.appspot.com//10829164
------------------------------------------------------------------------
r10276 | kmillikin@google.com | 2012-08-06 16:55:53 +0900 (月, 06  8月 2012) | 9 lines

Change EXPECT(!Dart_IsError(...)) to EXPECT_VALID(...) in VM tests.

This change will give better error messages when the expectation fails
in the tests.  EXPECT_VALID prints the error.

R=iposva@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10825178
------------------------------------------------------------------------
r10266 | rmacnak@google.com | 2012-08-04 07:56:21 +0900 (土, 04  8月 2012) | 3 lines

Made it possible to distinguish between a method or top-level function and the
function for a closure defined in such. Addresses issue 4337.
Review URL: https://chromiumcodereview.appspot.com//10831165
------------------------------------------------------------------------
r10264 | asiva@google.com | 2012-08-04 07:30:53 +0900 (土, 04  8月 2012) | 2 lines

Address review comments.
Review URL: https://chromiumcodereview.appspot.com//10829177
------------------------------------------------------------------------
r10262 | turnidge@google.com | 2012-08-04 07:15:51 +0900 (土, 04  8月 2012) | 2 lines

Improve method names in the ThrowException test to make it less misleading.
Review URL: https://chromiumcodereview.appspot.com//10832146
------------------------------------------------------------------------
r10254 | turnidge@google.com | 2012-08-04 06:51:44 +0900 (土, 04  8月 2012) | 11 lines

Change the zone allocation api.

Instead of passing a size in bytes to the allocation function, we now
have a templatized Alloc function:

  zone->Alloc<Type>(len)

This is better for security, as we can check for integer overflow in
the size computation before performing the allocation.  Before, we
often failed to check this.
Review URL: https://chromiumcodereview.appspot.com//10836061
------------------------------------------------------------------------
r10253 | turnidge@google.com | 2012-08-04 06:38:08 +0900 (土, 04  8月 2012) | 5 lines

Improve the error message for handle check failure to list the actual
and expected types:

   error: Handle check failed: saw <whatever> expected <whatever>
Review URL: https://chromiumcodereview.appspot.com//10843053
------------------------------------------------------------------------
r10248 | asiva@google.com | 2012-08-04 05:30:08 +0900 (土, 04  8月 2012) | 2 lines

Eagerly get the function and code corresponding to the frame elements in a stack trace so that we won't be doing expensive code object lookups when setting up the stack trace.
Review URL: https://chromiumcodereview.appspot.com//10824128
------------------------------------------------------------------------
r10222 | fschneider@google.com | 2012-08-03 20:14:07 +0900 (金, 03  8月 2012) | 6 lines

Refactor our IL instruction for static setters.

We do not need a separate IL instruction anymore. Instead I generate
a normal static call and save the result in a temporary local if it
is needed.
Review URL: https://chromiumcodereview.appspot.com//10825176
------------------------------------------------------------------------
r10216 | kmillikin@google.com | 2012-08-03 17:27:42 +0900 (金, 03  8月 2012) | 8 lines

Change TRACE_ALLOC to take a statement rather than an argument list.

This allows tracing things that are not arguments to OS::Print.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10825173
------------------------------------------------------------------------
r10210 | ager@google.com | 2012-08-03 16:24:29 +0900 (金, 03  8月 2012) | 7 lines

Remove old isolate API and update all code in the repository to use
the new API.

R=kasperl@google.com,sigmund@google.com,turnidge@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10837070
------------------------------------------------------------------------
r10208 | vegorov@google.com | 2012-08-03 15:29:35 +0900 (金, 03  8月 2012) | 9 lines

When selecting an optimal position for SplitBetween(from, to) ensure:

- that loop and block structure is taken into account;
- that split sibling has proper interference with values incoming into instruction corresponding to the to position.

R=srdjan@google.com
BUG=4308

Review URL: https://chromiumcodereview.appspot.com//10850023
------------------------------------------------------------------------
r10207 | cshapiro@google.com | 2012-08-03 09:34:25 +0900 (金, 03  8月 2012) | 3 lines

Describe the reserved header bits with their own bit-field definition.

Review URL: https://chromiumcodereview.appspot.com//10825167
------------------------------------------------------------------------
r10206 | srdjan@google.com | 2012-08-03 09:23:52 +0900 (金, 03  8月 2012) | 2 lines

Allow NULL classes in inline caches (for example for ==). Fixes a 22x regression with r9762 on a benchmark provided by Ryan.
Review URL: https://chromiumcodereview.appspot.com//10830154
------------------------------------------------------------------------
r10204 | turnidge@google.com | 2012-08-03 08:56:16 +0900 (金, 03  8月 2012) | 6 lines

The null tests that I added for Dart_NewString{8,16,32} were too restrictive.

It is okay to pass NULL codepoints if the length is zero.

This should fix the issue we were seeing in dartium.
Review URL: https://chromiumcodereview.appspot.com//10829153
------------------------------------------------------------------------
r10203 | regis@google.com | 2012-08-03 08:00:55 +0900 (金, 03  8月 2012) | 5 lines

Associate the correct type to method receivers (instead of Dynamic type).
Properly name the first implicit parameter to factories as ':type_arguments'
(instead of 'this', which made it accessible to user code).
Various cleanup.
Review URL: https://chromiumcodereview.appspot.com//10831142
------------------------------------------------------------------------
r10189 | srdjan@google.com | 2012-08-03 03:28:11 +0900 (金, 03  8月 2012) | 2 lines

Adding deopt info to code object.
Review URL: https://chromiumcodereview.appspot.com//10830131
------------------------------------------------------------------------
r10178 | fschneider@google.com | 2012-08-03 01:26:46 +0900 (金, 03  8月 2012) | 6 lines

Separate double binary operation into a separate instruction class.

Double operation are currently implemented as calls, so they need
arguments pushed on the stack. Smi and Mint operations are not calls,
so they are handled with the same instruction as before.
Review URL: https://chromiumcodereview.appspot.com//10850014
------------------------------------------------------------------------
r10176 | fschneider@google.com | 2012-08-03 00:54:42 +0900 (金, 03  8月 2012) | 4 lines

Support Throw and ReThrow in SSA-based compiler.

This change makes them call-instructions using explicit push-arguments.
Review URL: https://chromiumcodereview.appspot.com//10829141
------------------------------------------------------------------------
r10175 | kmillikin@google.com | 2012-08-03 00:52:05 +0900 (金, 03  8月 2012) | 8 lines

Revert "Use platform-independent format specifiers when disassembling code objects."

This is still broken on Windows.

TBR=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10826116
------------------------------------------------------------------------
r10174 | kmillikin@google.com | 2012-08-03 00:45:00 +0900 (金, 03  8月 2012) | 8 lines

Reapply "Use platform-independent format specifiers when disassembling code objects."

This reapplies svn revision 10163 with a fix for Windows.

R=ager@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824148
------------------------------------------------------------------------
r10173 | kmillikin@google.com | 2012-08-03 00:10:13 +0900 (金, 03  8月 2012) | 8 lines

Revert "Added support for copied parameters to the SSA compiler."

This reverts svn revision 10172.

TBR=zerny@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10837076
------------------------------------------------------------------------
r10172 | zerny@google.com | 2012-08-02 23:53:18 +0900 (木, 02  8月 2012) | 6 lines

Added support for copied parameters to the SSA compiler.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824147
------------------------------------------------------------------------
r10171 | vegorov@google.com | 2012-08-02 23:39:49 +0900 (木, 02  8月 2012) | 8 lines

Fix structure of WhileDo graph.

Normal entry to the loop should not go through a continue join.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10850016
------------------------------------------------------------------------
r10169 | kmillikin@google.com | 2012-08-02 22:51:23 +0900 (木, 02  8月 2012) | 8 lines

Revert "Use platform-independent format specifiers when disassembling code objects."

Revert svn revision 10163 while working on a Windows fix.

R=ager@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10850017
------------------------------------------------------------------------
r10166 | kmillikin@google.com | 2012-08-02 22:40:19 +0900 (木, 02  8月 2012) | 6 lines

Fix a register allocation crash on IA32, caused by an uninitialized finger.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10827139
------------------------------------------------------------------------
r10163 | kmillikin@google.com | 2012-08-02 22:19:28 +0900 (木, 02  8月 2012) | 6 lines

Use platform-independent format specifiers when disassembling code objects.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10824144
------------------------------------------------------------------------
r10157 | fschneider@google.com | 2012-08-02 19:23:29 +0900 (木, 02  8月 2012) | 4 lines

Use explicit push-argument for InstanceSetter instruction.

This allows optimizing functions with InstanceSetter.
Review URL: https://chromiumcodereview.appspot.com//10826097
------------------------------------------------------------------------
r10155 | vegorov@google.com | 2012-08-02 17:45:49 +0900 (木, 02  8月 2012) | 10 lines

Implement simple spill store elimination.

Values that are spilled somewhere during their life-time are spilled eagerly at their definiton.

Additionally improve liverange printing used for debugging purposes.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10828115
------------------------------------------------------------------------
r10151 | hausner@google.com | 2012-08-02 09:11:09 +0900 (木, 02  8月 2012) | 4 lines

Properly skip expressions that contain the operator as.

Fix 4277.
Review URL: https://chromiumcodereview.appspot.com//10830130
------------------------------------------------------------------------
r10147 | cshapiro@google.com | 2012-08-02 08:11:46 +0900 (木, 02  8月 2012) | 3 lines

Add a missing space after the class name and before a following colon.

Review URL: https://chromiumcodereview.appspot.com//10829116
------------------------------------------------------------------------
r10146 | hausner@google.com | 2012-08-02 07:25:36 +0900 (木, 02  8月 2012) | 11 lines

Add check for duplicate field initialization

This change adds a check that reports duplicate initialization
of instance fields. Fixes issues 921 and 1034.

There were several tests in the language suite that had duplicate
initializers for final instance fields. Corrected the tests.

dart2js also contained duplicate initializations of a couple
of final fields.
Review URL: https://chromiumcodereview.appspot.com//10825140
------------------------------------------------------------------------
r10135 | nweiz@google.com | 2012-08-02 03:47:33 +0900 (木, 02  8月 2012) | 7 lines

Fix the definition of kIllegalPort in dart_api.h.

Declaring a variable directly in a header will cause C to be unable to link
multiple object files that both include that header, even if that variable is
const.

Review URL: https://chromiumcodereview.appspot.com//10834017
------------------------------------------------------------------------
r10133 | turnidge@google.com | 2012-08-02 03:29:55 +0900 (木, 02  8月 2012) | 2 lines

Add missing files from last commit!
Review URL: https://chromiumcodereview.appspot.com//10829127
------------------------------------------------------------------------
r10130 | turnidge@google.com | 2012-08-02 03:22:30 +0900 (木, 02  8月 2012) | 13 lines

Enforce length/size limits for variable size heap object in order to
avoid overflow.

For each variable size heap object, compute the maximum number of
elements and use that in the ::New functions to avoid overflow.  If a
bad length/size reaches a ::New function, that is a FATAL error -- the
problem should have been caught earlier by the dart api or by the
library code.

Add "border guards" in the dart api and in library calls which cause
new variable size heap objects to be allocated.  We check for invalid
length/size and throw explanatory error messages.
Review URL: https://chromiumcodereview.appspot.com//10782016
------------------------------------------------------------------------
r10125 | regis@google.com | 2012-08-02 02:15:55 +0900 (木, 02  8月 2012) | 5 lines

Add type propagation phase in optimizing compiler (work in progress).
Remove unused cid field from Instruction node and add it to nodes subclassing
Instruction that need it: BranchInstr, ReturnInstr, ThrowInstr, ReThrowInstr.
Remove unused icdata field from Instruction node and add it to BranchInstr.
Review URL: https://chromiumcodereview.appspot.com//10830109
------------------------------------------------------------------------
r10115 | fschneider@google.com | 2012-08-01 21:09:10 +0900 (水, 01  8月 2012) | 7 lines

Eliminate unnecessary deoptimization environments.

This CL adds a CanOptimize predicate to every instruction. Before register
allocation there is a simple pass over the IR to remove environments from
instruction that never deoptmize. This reduces the number of uses and shortens
live ranges of values resulting in better code.
Review URL: https://chromiumcodereview.appspot.com//10829098
------------------------------------------------------------------------
r10114 | vegorov@google.com | 2012-08-01 20:52:40 +0900 (水, 01  8月 2012) | 6 lines

Mark phi-operands live-in for a predecessor if they are not defined by it.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10827116
------------------------------------------------------------------------
r10113 | vegorov@google.com | 2012-08-01 20:01:39 +0900 (水, 01  8月 2012) | 6 lines

Ignore life ranges with no uses for a values defined as fixed output.

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10836048
------------------------------------------------------------------------
r10112 | vegorov@google.com | 2012-08-01 19:37:16 +0900 (水, 01  8月 2012) | 6 lines

Do not mark phi-operands as live-out from predecessor.

R=srdjan@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10831091
------------------------------------------------------------------------
r10098 | hausner@google.com | 2012-08-01 08:33:48 +0900 (水, 01  8月 2012) | 12 lines

Optimize away most implicit const getter functions

If a static field has a very simple initializer expression
(a literal number or string for example) we initialize the field
directly while compiling instead of generating an implicit
getter. We only do this if the type of the expression is
assignment compatible with the field. If the expression is not
compatible, we let the implicit getter do the error checking.

This eliminates about 330 implicit getters in the core libraries
and saves 35k in the snapshot (830k, down from 865k).
Review URL: https://chromiumcodereview.appspot.com//10826090
------------------------------------------------------------------------
r10096 | rmacnak@google.com | 2012-08-01 07:47:52 +0900 (水, 01  8月 2012) | 2 lines

Added Dart_FunctionEnclosingClassOrLibrary.
Review URL: https://chromiumcodereview.appspot.com//10834096
------------------------------------------------------------------------
r10087 | turnidge@google.com | 2012-08-01 06:26:28 +0900 (水, 01  8月 2012) | 6 lines

Consolidate a few fields in RawFunction using bitfields.

Remove kAbstract from the list of function kinds.  It now has its own
dedicated bit.  This allows us to distinguish abstract methods from
abstract getters and setters.
Review URL: https://chromiumcodereview.appspot.com//10796004
------------------------------------------------------------------------
r10071 | srdjan@google.com | 2012-08-01 02:27:15 +0900 (水, 01  8月 2012) | 3 lines

First step toward deoptimization using deoptimization info: splits deoptimization into two steps: copy frame to buffer, fill unoptimized frame from buffer. The only changes in the frame are the return address and the PC marker. 
Second step will add deoptimization info 'instructions' that will fill the unoptimized frames using the saved registers and frame data.
Review URL: https://chromiumcodereview.appspot.com//10836020
------------------------------------------------------------------------
r10065 | vegorov@google.com | 2012-08-01 01:28:09 +0900 (水, 01  8月 2012) | 10 lines

Ensure that we never try to split range at its end position.

Move parallel moves corresponding to gotos and block entries into this intructions to separate them from normal parallel moves that are used data flow inside basic blocks.

Block fixed locations only from instruction's start to instruction end (not to the start of the next instruction).

R=fschneider@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10821108
------------------------------------------------------------------------
r10052 | kmillikin@google.com | 2012-07-31 20:51:47 +0900 (火, 31  7月 2012) | 10 lines

Remove the default contains_call parameter on location summaries.

The plan is to use this parameter to make finer distinctions between
calls (e.g., safepoint vs. non-safepoint).  It's a bit safer to eliminate
the default.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10843006
------------------------------------------------------------------------
r10050 | vegorov@google.com | 2012-07-31 20:16:51 +0900 (火, 31  7月 2012) | 12 lines

Revert instruction numbering scheme to an instruction start (2*k) - instruction end (2*k + 1) one. Current instruction numbering scheme does not capture interference between temporaries and inputs correctly which in rare cases causes allocation of the same register both to the temp and to the input register.

Allow live range splitting at every position.

Don't reuse phi-resolution parallel move for connecting live ranges or meeting register constraints, this might cause conflicts between moves.

Allow deoptimization with environments containing spilled values.

R=kmillikin@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10831070
------------------------------------------------------------------------
r10043 | kmillikin@google.com | 2012-07-31 17:32:33 +0900 (火, 31  7月 2012) | 13 lines

Change the stackmap builder API.

It is inconvenient for the stackmap table builder to use a singleton bitmap
for all safepoints in a code object.  Instead, split the bitmap from the
table builder and allow a bitmap per safepoint.

Take this opportunity to rename StackmapBuilder => StackmapTableBuilder
because it builds the entire table of stackmaps for a code object.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10825077
------------------------------------------------------------------------
r10029 | iposva@google.com | 2012-07-31 07:54:03 +0900 (火, 31  7月 2012) | 2 lines

Fix build: Missed x64 files.
Review URL: https://chromiumcodereview.appspot.com//10831079
------------------------------------------------------------------------
r10028 | iposva@google.com | 2012-07-31 07:46:24 +0900 (火, 31  7月 2012) | 2 lines

- Allow parsing of external methods.
Review URL: https://chromiumcodereview.appspot.com//10821076
------------------------------------------------------------------------
r10027 | hausner@google.com | 2012-07-31 07:37:10 +0900 (火, 31  7月 2012) | 8 lines

Better breakpoint management

If a function is already compiled, make a source breakpoint at
the actual breakpoint line number, which may be different from the
requested line number.

Fixes an issue that was brought up in bug 3782.
Review URL: https://chromiumcodereview.appspot.com//10839002
------------------------------------------------------------------------
r10020 | rmacnak@google.com | 2012-07-31 02:48:47 +0900 (火, 31  7月 2012) | 2 lines

Added InterfaceMirror.newInstance().
Review URL: https://chromiumcodereview.appspot.com//10834056
------------------------------------------------------------------------
r10013 | kmillikin@google.com | 2012-07-30 22:36:58 +0900 (月, 30  7月 2012) | 10 lines

Fix an off-by-one error in the stack frame iteration.

When using a stackmap, we mapped stackmap index 0 to the code slot in the
frame.  This code is still unused, but judging from the test the intent is
to map index 0 to the first local slot in the frame.

R=vegorov@google.com
BUG=

Review URL: https://chromiumcodereview.appspot.com//10835034
------------------------------------------------------------------------
r10012 | ajohnsen@google.com | 2012-07-30 22:31:50 +0900 (月, 30  7月 2012) | 7 lines

Rename MathNatives_2atan to MathNatives_atan2.

The comment doesn't appear to be valid anymore.

BUG=

Review URL: https://chromiumcodereview.appspot.com//10836006
------------------------------------------------------------------------
r10011 | fschneider@google.com | 2012-07-30 22:26:31 +0900 (月, 30  7月 2012) | 7 lines

Refactor building arguments for InstanceCall and fix deoptimization environment for pushed arguments.

This CL enables SSA compilation of functions containing InstanceCallComp computations.

It also contains a bug fix to correctly simulate the deoptimization environment for argument
expressions.
Review URL: https://chromiumcodereview.appspot.com//10833068
------------------------------------------------------------------------
r10008 | fschneider@google.com | 2012-07-30 20:19:42 +0900 (月, 30  7月 2012) | 6 lines

Add explicit PushArgument IL instructions to static calls.

This enables compiling static calls with the SSA-based code generator.

Add a helper to the graph builder for adding argument expressions to the graph.
Review URL: https://chromiumcodereview.appspot.com//10824078
------------------------------------------------------------------------
r10007 | vegorov@google.com | 2012-07-30 19:38:48 +0900 (月, 30  7月 2012) | 9 lines

Fix kStoreBufferBlockProcessRuntimeEntry calling sequence.

Poping of volatile registers was performed without taking into account the fact that stack pointer could have been  modified to ensure correct alignment _after_ volatile registers were pushed.

Enable --use-ssa on x64 again.

BUG=4221

Review URL: https://chromiumcodereview.appspot.com//10820053
------------------------------------------------------------------------
r10006 | kmillikin@google.com | 2012-07-30 19:02:16 +0900 (月, 30  7月 2012) | 7 lines

Change the stack map search to require an exact match.

R=vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10829036
------------------------------------------------------------------------
r9999 | hausner@google.com | 2012-07-28 08:23:24 +0900 (土, 28  7月 2012) | 4 lines

Fix issue 977

Constructors with redirection may not have a function body.
Review URL: https://chromiumcodereview.appspot.com//10820064
------------------------------------------------------------------------
r9992 | hausner@google.com | 2012-07-28 05:49:24 +0900 (土, 28  7月 2012) | 17 lines

Support const modifier in fields, variables

Issue 3551

This change adds const as a valid keyword to declare fields and
variables. The mandatory initializer has to be a compile time
const expression.

Static final variables still have to be initialized with
compile time constant expressions. I will add non-const static
finals (issue 3558) in another change.

Other small changes:
- allow null in some compile time constant expressions.
- allow only numbers, booleans, strings and null in compile time
  constant string interpolation.
Review URL: https://chromiumcodereview.appspot.com//10828053
------------------------------------------------------------------------
r9985 | iposva@google.com | 2012-07-28 03:16:12 +0900 (土, 28  7月 2012) | 2 lines

- On Windows int != DWORD.
Review URL: https://chromiumcodereview.appspot.com//10820054
------------------------------------------------------------------------
r9984 | iposva@google.com | 2012-07-28 03:07:59 +0900 (土, 28  7月 2012) | 3 lines

- Add the ability to protect VirtualMemory.
- Write protect the VM isolate once it has been constructed.
Review URL: https://chromiumcodereview.appspot.com//10830045
------------------------------------------------------------------------
r9974 | vegorov@google.com | 2012-07-27 20:53:06 +0900 (金, 27  7月 2012) | 5 lines

In FlowGraphAllocator::ComputeInitialSets use post-order number when accessing kill and live-in sets for graph entry

BUG=

Review URL: https://chromiumcodereview.appspot.com//10833048
------------------------------------------------------------------------
r9970 | cshapiro@google.com | 2012-07-27 08:52:20 +0900 (金, 27  7月 2012) | 5 lines

Rename WeakReference to WeakReferenceSet.

This makes room for naming other weak reference types.

Review URL: https://chromiumcodereview.appspot.com//10824053
------------------------------------------------------------------------
r9961 | srdjan@google.com | 2012-07-27 04:42:16 +0900 (金, 27  7月 2012) | 2 lines

Allow creating DartFrameIterator using explicit last_fp value (instead of always expecting it from isolate).
Review URL: https://chromiumcodereview.appspot.com//10827049
------------------------------------------------------------------------
r9958 | asiva@google.com | 2012-07-27 03:53:22 +0900 (金, 27  7月 2012) | 2 lines

One more attempt at trying to turn off usage of vm isolate for symbols.
Review URL: https://chromiumcodereview.appspot.com//10835010
------------------------------------------------------------------------
r9957 | regis@google.com | 2012-07-27 03:45:54 +0900 (金, 27  7月 2012) | 3 lines

Fix Function::NumberOfImplicitParameters() for closure functions.
Related to cl 10831021.
Review URL: https://chromiumcodereview.appspot.com//10829041
------------------------------------------------------------------------
r9956 | rmacnak@google.com | 2012-07-27 03:30:40 +0900 (金, 27  7月 2012) | 5 lines

Added a test of Dart_FunctionParameterCounts against a closure inside of an
instance method. It currently gives the wrong answer for the fixed parameter
count because the closure's function is identified as non-static => instance
=> one implicit parameter (receiver) in Function::NumberOfImplicitParameters.
Review URL: https://chromiumcodereview.appspot.com//10831021
------------------------------------------------------------------------
r9955 | asiva@google.com | 2012-07-27 03:22:52 +0900 (金, 27  7月 2012) | 2 lines

Turn off use-ssa temporarily until issue 4221 is fixed.
Review URL: https://chromiumcodereview.appspot.com//10825041
------------------------------------------------------------------------
r9953 | iposva@google.com | 2012-07-27 03:11:15 +0900 (金, 27  7月 2012) | 2 lines

- Fix build.
Review URL: https://chromiumcodereview.appspot.com//10834038
------------------------------------------------------------------------
r9952 | iposva@google.com | 2012-07-27 03:07:56 +0900 (金, 27  7月 2012) | 2 lines

- Improve the formatting of generated source text.
Review URL: https://chromiumcodereview.appspot.com//10823028
------------------------------------------------------------------------
r9950 | asiva@google.com | 2012-07-27 03:03:21 +0900 (金, 27  7月 2012) | 2 lines

Don't use vm heap for symbols yet, we need to change the snapshot writer to not mark object header first before this change can be activated.
Review URL: https://chromiumcodereview.appspot.com//10825039
------------------------------------------------------------------------
r9943 | regis@google.com | 2012-07-27 01:04:36 +0900 (金, 27  7月 2012) | 2 lines

Improve static type propagation.
Review URL: https://chromiumcodereview.appspot.com//10823022
------------------------------------------------------------------------
r9935 | fschneider@google.com | 2012-07-26 23:10:29 +0900 (木, 26  7月 2012) | 15 lines

Add an explicit push-argument instruction to the IL.

It is used in ClosureCall and CreateClosure. Refactoring the other call-instruction
will be done in a separate CL.

These instructions do not have their arguments as input operands anymore since they
are really call-arguments passed on the stack.

This allows us to optimize a function with closure calls with SSA. For example:

foo() {
  bar() { return 42; }
  return bar();
}
Review URL: https://chromiumcodereview.appspot.com//10825035
------------------------------------------------------------------------
r9934 | vegorov@google.com | 2012-07-26 22:21:39 +0900 (木, 26  7月 2012) | 18 lines

Add support for fixed parameters in the register allocator.

This remove bailout for functions with non-zero number of non-fixed parameters and increases our coverage.

SpillSlot location was renamed into StackSlot location and now allows to address spill slots (positive stack index) and incoming parameters (negative stack index).

Environment was reordered to match order of values on the stack (previously it was inversed).

Correctly reserve spill slots in the prologue of the code. Previously register allocator was allocating spill slots, but generated code did not reserve any space for them on the stack so they might have been overwritten by calls.

Fix off by one in DeoptimizationStub::GenerateCode - we were reserving one slot too many.

Change --optimization-filter flag to use substring search instead of prefix comparison, this is much more useful when VM prefixes function name with a path to the file.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10828018
------------------------------------------------------------------------
r9931 | kmillikin@google.com | 2012-07-26 19:40:09 +0900 (木, 26  7月 2012) | 7 lines

Implement deoptimization in the SSA compiler as a parallel move.

R=srdjan@google.com,vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10824017
------------------------------------------------------------------------
r9922 | cshapiro@google.com | 2012-07-26 09:21:25 +0900 (木, 26  7月 2012) | 3 lines

Emit symbol maps for compiled code for use by the Linux perf tool.

Review URL: https://chromiumcodereview.appspot.com//10831005
------------------------------------------------------------------------
r9920 | asiva@google.com | 2012-07-26 08:41:53 +0900 (木, 26  7月 2012) | 2 lines

Dump number of symbols in the isolate symbol table before shutting down an isolate under the --trace-isolates flag.
Review URL: https://chromiumcodereview.appspot.com//10809095
------------------------------------------------------------------------
r9914 | iposva@google.com | 2012-07-26 07:04:45 +0900 (木, 26  7月 2012) | 2 lines

- Avoid C++ pitfalls with "static const int" in header files.
Review URL: https://chromiumcodereview.appspot.com//10829022
------------------------------------------------------------------------
r9910 | hausner@google.com | 2012-07-26 06:31:02 +0900 (木, 26  7月 2012) | 4 lines

Make sure the "Skip*" functions know about cascades as well.

Also, handle index operator in cascades correctly.
Review URL: https://chromiumcodereview.appspot.com//10809089
------------------------------------------------------------------------
r9905 | asiva@google.com | 2012-07-26 05:31:26 +0900 (木, 26  7月 2012) | 2 lines

Move more symbols to the vm isolate.
Review URL: https://chromiumcodereview.appspot.com//10808111
------------------------------------------------------------------------
r9881 | vegorov@google.com | 2012-07-25 21:17:29 +0900 (水, 25  7月 2012) | 7 lines

When evicting interference convert uses from evicted ranges.

R=kmillikin@google.com
BUG=4193
TEST=

Review URL: https://chromiumcodereview.appspot.com//10834002
------------------------------------------------------------------------
r9875 | fschneider@google.com | 2012-07-25 17:31:50 +0900 (水, 25  7月 2012) | 8 lines

Add a backward instruction iterator and use it in the liveness analysis.

This avoids the complication when collecting the initial live_in sets while iterating forward.

Also simplify the ForwardInstructionIterator class because we have Goto instructions now and
the last instruction of each block does not use the next-link to
indicate a fall-through anymore.
Review URL: https://chromiumcodereview.appspot.com//10796108
------------------------------------------------------------------------
r9874 | srdjan@google.com | 2012-07-25 09:25:00 +0900 (水, 25  7月 2012) | 2 lines

Some cleanups.
Review URL: https://chromiumcodereview.appspot.com//10806099
------------------------------------------------------------------------
r9863 | regis@google.com | 2012-07-25 05:39:21 +0900 (水, 25  7月 2012) | 2 lines

Nitpicking.
Review URL: https://chromiumcodereview.appspot.com//10807093
------------------------------------------------------------------------
r9860 | rmacnak@google.com | 2012-07-25 02:59:12 +0900 (水, 25  7月 2012) | 4 lines

Added ClosureMirror to dart:mirrors. Added Dart_ClosureFunction to the
embedding API. ClosureMirrors currently implement answering the closure's
function and applying the closure.
Review URL: https://chromiumcodereview.appspot.com//10800065
------------------------------------------------------------------------
r9859 | srdjan@google.com | 2012-07-25 02:39:07 +0900 (水, 25  7月 2012) | 2 lines

Add HasSSATemp and an assert to ssa_temp_idnex setter.
Review URL: https://chromiumcodereview.appspot.com//10806089
------------------------------------------------------------------------
r9857 | hausner@google.com | 2012-07-25 02:20:49 +0900 (水, 25  7月 2012) | 6 lines

Implement cascade operator in VM

- Factoring out parsing of selectors
- Create temp variable holding the receiver of the cascade
  selectors
Review URL: https://chromiumcodereview.appspot.com//10796109
------------------------------------------------------------------------
r9856 | vegorov@google.com | 2012-07-25 02:19:20 +0900 (水, 25  7月 2012) | 10 lines

Adjust location summaries to match expectations of new register allocator.

Instructions containing calls can only use fixed registers everything else is blocked and unavailable for allocation.

Insert phi-connecting parallel moves after all instructions were numbered otherwise move gets incorrect position.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10818032
------------------------------------------------------------------------
r9851 | vegorov@google.com | 2012-07-25 01:01:54 +0900 (水, 25  7月 2012) | 3 lines

New linear scan allocator.

Review URL: https://chromiumcodereview.appspot.com//10800037
------------------------------------------------------------------------
r9836 | cshapiro@google.com | 2012-07-24 11:45:31 +0900 (火, 24  7月 2012) | 3 lines

Improve the performance of bit set searches with a compiler intrinsic.

Review URL: https://chromiumcodereview.appspot.com//10806078
------------------------------------------------------------------------
r9835 | srdjan@google.com | 2012-07-24 09:31:32 +0900 (火, 24  7月 2012) | 2 lines

Use kIllegalObjectKind instead of NULL object to terminate ICData array
Review URL: https://chromiumcodereview.appspot.com//10796103
------------------------------------------------------------------------
r9834 | asiva@google.com | 2012-07-24 09:01:50 +0900 (火, 24  7月 2012) | 4 lines

Create frequently used symbols in the vm isolate
- Avoids the need for doing a NewSymbol on these everytime
- saves space as they get shared by isolates
Review URL: https://chromiumcodereview.appspot.com//10783035
------------------------------------------------------------------------
r9832 | rmacnak@google.com | 2012-07-24 07:53:52 +0900 (火, 24  7月 2012) | 4 lines

Added getField/setField to ObjectMirror. For InstanceMirrors, this get/sets 
fields; for InterfaceMirrors, static fields; for LibraryMirrors, top-level 
fields.
Review URL: https://chromiumcodereview.appspot.com//10704259
------------------------------------------------------------------------
r9829 | srdjan@google.com | 2012-07-24 06:43:43 +0900 (火, 24  7月 2012) | 2 lines

Fix issue 4182: When inlining StringBase_get_length, we cannot assume that all receivers where subclasses of StringBase since we are running in production mode.
Review URL: https://chromiumcodereview.appspot.com//10795076
------------------------------------------------------------------------
r9826 | srdjan@google.com | 2012-07-24 05:29:51 +0900 (火, 24  7月 2012) | 2 lines

Add higher-level accesses to Environment. Print flow graph after register allocation. Most interesting with --print-flags --print-environments
Review URL: https://chromiumcodereview.appspot.com//10800080
------------------------------------------------------------------------
r9821 | srdjan@google.com | 2012-07-24 02:55:53 +0900 (火, 24  7月 2012) | 2 lines

Various cleanups, adding tests.
Review URL: https://chromiumcodereview.appspot.com//10807070
------------------------------------------------------------------------
r9811 | vegorov@google.com | 2012-07-23 23:21:51 +0900 (月, 23  7月 2012) | 7 lines

Rename MoveMemory to MoveMemoryToMemory to fix compilation on Win32

R=kmillikin@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10809052
------------------------------------------------------------------------
r9810 | vegorov@google.com | 2012-07-23 23:05:48 +0900 (月, 23  7月 2012) | 3 lines

Add spill slot locations.

Review URL: https://chromiumcodereview.appspot.com//10805053
------------------------------------------------------------------------
r9797 | iposva@google.com | 2012-07-21 10:08:14 +0900 (土, 21  7月 2012) | 3 lines

- Tighten assertions around store buffers.
- Use the correct object when filtering in store barriers.
Review URL: https://chromiumcodereview.appspot.com//10796075
------------------------------------------------------------------------
r9796 | cshapiro@google.com | 2012-07-21 09:55:47 +0900 (土, 21  7月 2012) | 5 lines

Revert "Revert "Favor free list allocation to bump pointer allocation.""

This reverts commit c3636953f7d7ab118b2c420b81058a0681fd237f.

Review URL: https://chromiumcodereview.appspot.com//10810048
------------------------------------------------------------------------
r9795 | srdjan@google.com | 2012-07-21 08:42:23 +0900 (土, 21  7月 2012) | 2 lines

Cleanups.
Review URL: https://chromiumcodereview.appspot.com//10809047
------------------------------------------------------------------------
r9794 | iposva@google.com | 2012-07-21 08:06:11 +0900 (土, 21  7月 2012) | 2 lines

- Do not try to determine the address of Smis.
Review URL: https://chromiumcodereview.appspot.com//10808067
------------------------------------------------------------------------
r9793 | iposva@google.com | 2012-07-21 07:31:46 +0900 (土, 21  7月 2012) | 2 lines

- Add missing store barrier in GrowableArray_setData intrinsic.
Review URL: https://chromiumcodereview.appspot.com//10803060
------------------------------------------------------------------------
r9792 | asiva@google.com | 2012-07-21 07:24:49 +0900 (土, 21  7月 2012) | 2 lines

Rename some of the enum definitions inside classes to avoid conflict with the ObjectKind enum.
Review URL: https://chromiumcodereview.appspot.com//10808064
------------------------------------------------------------------------
r9791 | iposva@google.com | 2012-07-21 06:41:55 +0900 (土, 21  7月 2012) | 3 lines

- Start using the collected store buffer entries to find
  old->new references during Scavenge.
Review URL: https://chromiumcodereview.appspot.com//10797021
------------------------------------------------------------------------
r9790 | srdjan@google.com | 2012-07-21 06:16:06 +0900 (土, 21  7月 2012) | 2 lines

Fix crash during parallel moves. Made MoveOperands ZoneAlloacted. Non-const ValueObjects a fragile, since it is easy to modify a copy instead of the original. It is also dangereous to use pointers to ValueObjects that contain copy constructors.
Review URL: https://chromiumcodereview.appspot.com//10806047
------------------------------------------------------------------------
r9785 | regis@google.com | 2012-07-21 03:08:05 +0900 (土, 21  7月 2012) | 3 lines

Fix build break, i.e. fix type finalization for function literals not assigned
to a function.
Review URL: https://chromiumcodereview.appspot.com//10807055
------------------------------------------------------------------------
r9782 | regis@google.com | 2012-07-21 01:08:43 +0900 (土, 21  7月 2012) | 4 lines

Add missing type finalization for function literals not assigned to a function
variable.
Various cleanup.
Review URL: https://chromiumcodereview.appspot.com//10797031
------------------------------------------------------------------------
r9780 | srdjan@google.com | 2012-07-21 01:06:40 +0900 (土, 21  7月 2012) | 2 lines

Minor cleanups: use GrowableArray::is_empty instead of ::length() == 0
Review URL: https://chromiumcodereview.appspot.com//10790086
------------------------------------------------------------------------
r9779 | srdjan@google.com | 2012-07-21 00:43:52 +0900 (土, 21  7月 2012) | 2 lines

Fix crashes because of far jumps.
Review URL: https://chromiumcodereview.appspot.com//10790101
------------------------------------------------------------------------
r9778 | srdjan@google.com | 2012-07-21 00:20:11 +0900 (土, 21  7月 2012) | 4 lines

Apply Kevin's suggestions, make branch-compare generation more robust
- remove setting previous link during graph building
- do not replace already inserted nodes
Review URL: https://chromiumcodereview.appspot.com//10808035
------------------------------------------------------------------------
r9774 | cshapiro@google.com | 2012-07-20 12:44:48 +0900 (金, 20  7月 2012) | 5 lines

Revert "Favor free list allocation to bump pointer allocation."

This reverts commit afe0eb0d9277cb7574a9595b793f8e001bc14a57.

Review URL: https://chromiumcodereview.appspot.com//10802045
------------------------------------------------------------------------
r9773 | cshapiro@google.com | 2012-07-20 12:11:59 +0900 (金, 20  7月 2012) | 14 lines

Favor free list allocation to bump pointer allocation.

This change improves the utilization of the smallest size classes on
benchmarks performing old space allocations including Splay, Box2D,
and Dart2JSCompileAll.

Initial measurements showed that free list allocation was slightly
slower than bump pointer allocation.  Profiling identified that free
list allocation spent most of its time searching for a matching size
class.  To eliminate this overhead, a bitmap index has been added
resulting in no appreciable difference in running time between either
method.

Review URL: https://chromiumcodereview.appspot.com//10807031
------------------------------------------------------------------------
r9772 | hausner@google.com | 2012-07-20 07:51:09 +0900 (金, 20  7月 2012) | 2 lines

Debugger API to enable/disable debugging of libraries
Review URL: https://chromiumcodereview.appspot.com//10797033
------------------------------------------------------------------------
r9764 | hausner@google.com | 2012-07-20 01:29:46 +0900 (金, 20  7月 2012) | 6 lines

Fix Dart_GetClassInfo

issue 4142.

Also address review comments from previous change list.
Review URL: https://chromiumcodereview.appspot.com//10800024
------------------------------------------------------------------------
r9762 | srdjan@google.com | 2012-07-20 00:52:44 +0900 (金, 20  7月 2012) | 2 lines

Fuse compare with branch at graph building time.
Review URL: https://chromiumcodereview.appspot.com//10802025
------------------------------------------------------------------------
r9748 | regis@google.com | 2012-07-19 06:51:27 +0900 (木, 19  7月 2012) | 3 lines

Hide names of internal classes from the user by mapping them to the documented
interfaces they implement.
Review URL: https://chromiumcodereview.appspot.com//10800002
------------------------------------------------------------------------
r9738 | kmillikin@google.com | 2012-07-18 22:44:12 +0900 (水, 18  7月 2012) | 10 lines

Revert "Revert "Introduce Goto instructions to the flow graph.""

Reapply svn revision 9731 with a bug fix.  The original review is at
http://chromiumcodereview.appspot.com/10735071/

R=vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10805008
------------------------------------------------------------------------
r9733 | kmillikin@google.com | 2012-07-18 19:44:54 +0900 (水, 18  7月 2012) | 9 lines

Revert "Introduce Goto instructions to the flow graph."

This reverts svn revision 9731 due to test failures.

TBR=vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10808008
------------------------------------------------------------------------
r9731 | kmillikin@google.com | 2012-07-18 19:28:37 +0900 (水, 18  7月 2012) | 16 lines

Introduce Goto instructions to the flow graph.

Goto is a control instruction with a single successor.

Before: basic blocks ended with an exit (return, throw, or rethrow), a
branch to a pair of target entries, or else they fell through to the
next block entry.

Now: basic blocks end with an exit, a branch, or an explicit goto to a
join entry.

R=vegorov@google.com,srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10735071
------------------------------------------------------------------------
r9722 | hausner@google.com | 2012-07-18 06:18:44 +0900 (水, 18  7月 2012) | 4 lines

Don't return private fields from imported libs

Fix for issue 4098 (dartbug.com/4098)
Review URL: https://chromiumcodereview.appspot.com//10783038
------------------------------------------------------------------------
r9721 | asiva@google.com | 2012-07-18 06:16:08 +0900 (水, 18  7月 2012) | 2 lines

Address some leftover review comments from previous CL.
Review URL: https://chromiumcodereview.appspot.com//10792019
------------------------------------------------------------------------
r9720 | asiva@google.com | 2012-07-18 05:57:46 +0900 (水, 18  7月 2012) | 2 lines

Minor changes based on the profile while running dart2js compile all.
Review URL: https://chromiumcodereview.appspot.com//10785007
------------------------------------------------------------------------
r9710 | srdjan@google.com | 2012-07-18 01:35:45 +0900 (水, 18  7月 2012) | 2 lines

Fix triggering of method optimization: increment counter at all IC calls and return as before but allow triggering of optimization only at exit of the method.
Review URL: https://chromiumcodereview.appspot.com//10779026
------------------------------------------------------------------------
r9687 | srdjan@google.com | 2012-07-17 08:07:11 +0900 (火, 17  7月 2012) | 2 lines

Shorter code for simple type comparisons.
Review URL: https://chromiumcodereview.appspot.com//10787024
------------------------------------------------------------------------
r9683 | rmacnak@google.com | 2012-07-17 07:05:16 +0900 (火, 17  7月 2012) | 4 lines

Add a limited version of ParameterMirrors that can only tell whether they are
optional. Add Dart_FunctionParameterCounts. Drop passing isSimpleValue to
instance mirrors: they can compute this on the Dart-side.
Review URL: https://chromiumcodereview.appspot.com//10778005
------------------------------------------------------------------------
r9681 | regis@google.com | 2012-07-17 06:34:07 +0900 (火, 17  7月 2012) | 7 lines

Fix type checking of void type.
Fix library and tests accordingly.
Add new test.
Disable new test for dart2js.
Disable some now failing co19 tests (new issue 158 filed).
Hide internal VM String types from user (not complete).
Review URL: https://chromiumcodereview.appspot.com//10787021
------------------------------------------------------------------------
r9680 | srdjan@google.com | 2012-07-17 05:55:09 +0900 (火, 17  7月 2012) | 2 lines

Fix problem of excessive attempts to optimize, fix excessive deoptimizations for load/store indexed, performance issue with non-inlineable instance setter (direct call instead of IC call). Add tracing of issues encountered when attepting to optimize a method (--trace_failed_optimization_attempts), rename flag --print_stacktrace_at_throw.
Review URL: https://chromiumcodereview.appspot.com//10704210
------------------------------------------------------------------------
r9673 | regis@google.com | 2012-07-17 04:05:38 +0900 (火, 17  7月 2012) | 2 lines

Revert fix for type checking of void type, because some top level tests fail.
Review URL: https://chromiumcodereview.appspot.com//10784020
------------------------------------------------------------------------
r9672 | regis@google.com | 2012-07-17 03:05:55 +0900 (火, 17  7月 2012) | 7 lines

Fix type checking of void type.
Fix library and tests accordingly.
Add new test.
Disable new test for dart2js.
Disable some now failing co19 tests (new issue 158 filed).
Hide internal VM String types from user (not complete).
Review URL: https://chromiumcodereview.appspot.com//10704216
------------------------------------------------------------------------
r9649 | cshapiro@google.com | 2012-07-14 08:23:45 +0900 (土, 14  7月 2012) | 5 lines

Ensure objects emitted in code are allocated in old space.

BUG=3866

Review URL: https://chromiumcodereview.appspot.com//10786003
------------------------------------------------------------------------
r9644 | srdjan@google.com | 2012-07-14 05:17:42 +0900 (土, 14  7月 2012) | 2 lines

Equality compare should record two arguments in IC data. Inline double equality comparison.
Review URL: https://chromiumcodereview.appspot.com//10702195
------------------------------------------------------------------------
r9612 | turnidge@google.com | 2012-07-13 05:40:06 +0900 (金, 13  7月 2012) | 6 lines

Some small changes to make the vm dart:mirrors somewhat closer to the
source mirror implementation by Johnni.

- Add the MirrorSystem interface
- Add a simple TypeMirror
Review URL: https://chromiumcodereview.appspot.com//10700149
------------------------------------------------------------------------
r9607 | asiva@google.com | 2012-07-13 04:22:33 +0900 (金, 13  7月 2012) | 2 lines

Don't create a Bigint object first for every integer while parsing the sources, instead first check to see if it can be represented as a Smi or Mint. This avoids unnecessary creation of Bigint objects.
Review URL: https://chromiumcodereview.appspot.com//10703150
------------------------------------------------------------------------
r9605 | srdjan@google.com | 2012-07-13 04:10:50 +0900 (金, 13  7月 2012) | 2 lines

Implement the remaining methods in intrinsifier_x64.cc
Review URL: https://chromiumcodereview.appspot.com//10704192
------------------------------------------------------------------------
r9602 | regis@google.com | 2012-07-13 02:46:55 +0900 (金, 13  7月 2012) | 2 lines

Provide better error message when passing wrong number of arguments.
Review URL: https://chromiumcodereview.appspot.com//10695137
------------------------------------------------------------------------
r9578 | srdjan@google.com | 2012-07-12 09:41:45 +0900 (木, 12  7月 2012) | 2 lines

Add some missing x64 instruction variations.
Review URL: https://chromiumcodereview.appspot.com//10696183
------------------------------------------------------------------------
r9573 | srdjan@google.com | 2012-07-12 07:37:41 +0900 (木, 12  7月 2012) | 2 lines

Implement more intrinisification for x64 (not as inlined code but as header of the target). 
Review URL: https://chromiumcodereview.appspot.com//10701147
------------------------------------------------------------------------
r9563 | vegorov@google.com | 2012-07-12 03:52:17 +0900 (木, 12  7月 2012) | 6 lines

Skeleton of a linear scan register allocator.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10696151
------------------------------------------------------------------------
r9559 | srdjan@google.com | 2012-07-12 03:16:30 +0900 (木, 12  7月 2012) | 2 lines

Use class id instead of class in subtype test cache.
Review URL: https://chromiumcodereview.appspot.com//10695136
------------------------------------------------------------------------
r9558 | turnidge@google.com | 2012-07-12 02:54:24 +0900 (木, 12  7月 2012) | 8 lines

Don't allow OS::SNPrint or OS::VSNPrint to return negative values.

If we encounter conditions that would have caused vsnprintf to return
a negative value, then something pretty wild is going on.  We choose
to terminate the vm when this occurs.

This fixes security bug 1745.
Review URL: https://chromiumcodereview.appspot.com//10696165
------------------------------------------------------------------------
r9556 | vegorov@google.com | 2012-07-12 02:41:54 +0900 (木, 12  7月 2012) | 6 lines

Change comparison-to-branch fusion to actually remove comparison from the graph.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10698153
------------------------------------------------------------------------
r9539 | asiva@google.com | 2012-07-11 09:11:58 +0900 (水, 11  7月 2012) | 55 lines

Represent tokens as a compressed stream instead of an array.

On x86:

Original sizes:
Size of isolate snapshot = 925655
New space (0k of 32768k) Old space (1700k of 1792k) Code space (0k of 0k)
out/ReleaseIA32/run_vm_tests --benchmarks
CorelibCompileAll(RunTime): 80944
CorelibIsolateStartup(RunTime): 5636
UseDartApi(RunTime): 404620
Dart2JSCompileAll(RunTime): 1379683
FrameLookup(RunTime): 45

Size with the new TokenStream implementation:
Size of isolate snapshot = 851352
New space (0k of 32768k) Old space (1368k of 1536k) Code space (0k of 0k)
out/ReleaseIA32/run_vm_tests --benchmarks
CorelibCompileAll(RunTime): 76918
CorelibIsolateStartup(RunTime): 4056
UseDartApi(RunTime): 502111
Dart2JSCompileAll(RunTime): 1251646
FrameLookup(RunTime): 45

(saves about 332k out of the original TokenStream size of 410k)

On x64:

Original sizes:
Size of isolate snapshot = 924865
New space (0k of 32768k) Old space (3234k of 3444k) Code space (0k of 0k)
out/ReleaseX64/run_vm_tests --benchmarks
CorelibCompileAll(RunTime): 109660
CorelibIsolateStartup(RunTime): 3985
UseDartApi(RunTime): 463009
Dart2JSCompileAll(RunTime): 2170309
FrameLookup(RunTime): 35

Size with the new TokenStream implementation:
Size of isolate snapshot = 849675
New space (0k of 32768k) Old space (2436k of 2560k) Code space (0k of 0k)
out/ReleaseX64/run_vm_tests --benchmarks
CorelibCompileAll(RunTime): 98716
CorelibIsolateStartup(RunTime): 2938
UseDartApi(RunTime): 509149
Dart2JSCompileAll(RunTime): 2042273
FrameLookup(RunTime): 39

(saves about 798k out of the original TokenStream size of 810k)

Token stats:
Number of tokens:   101470
  Literal tokens:   4550
    Ident tokens:   33020
Review URL: https://chromiumcodereview.appspot.com//10697055
------------------------------------------------------------------------
r9538 | regis@google.com | 2012-07-11 08:59:09 +0900 (水, 11  7月 2012) | 4 lines

Stop passing location argument to run time calls, since it is stored in the pc
descriptor.
Various cleanups.
Review URL: https://chromiumcodereview.appspot.com//10701131
------------------------------------------------------------------------
r9536 | asiva@google.com | 2012-07-11 08:19:57 +0900 (水, 11  7月 2012) | 2 lines

Add quotes around strings when generating source from the token stream.
Review URL: https://chromiumcodereview.appspot.com//10765017
------------------------------------------------------------------------
r9535 | asiva@google.com | 2012-07-11 08:03:07 +0900 (水, 11  7月 2012) | 2 lines

Invoke 'Scavenge' in the weak handle processing unit tests and not 'CollectGarbage' in order to avoid triggering of old space mark sweep in certain situations.
Review URL: https://chromiumcodereview.appspot.com//10748006
------------------------------------------------------------------------
r9532 | cshapiro@google.com | 2012-07-11 07:07:40 +0900 (水, 11  7月 2012) | 12 lines

Implement a 2-pass heap verification algorithm.

The previous algorithm would visit each pointer in the heap and verify it
without regard for whether the pointer had already been visited.

The new algorithm computes the set of allocated objects and verifies each
object in the set.  In a second pass, each pointer is visited and tested
for membership in the set.

BUG=2606

Review URL: https://chromiumcodereview.appspot.com//10696029
------------------------------------------------------------------------
r9529 | regis@google.com | 2012-07-11 06:54:13 +0900 (水, 11  7月 2012) | 3 lines

Allocate types in proper heap space.
Allow type finalization without canonicalization.
Review URL: https://chromiumcodereview.appspot.com//10696155
------------------------------------------------------------------------
r9525 | srdjan@google.com | 2012-07-11 06:06:52 +0900 (水, 11  7月 2012) | 2 lines

Cleanup usage of GrowableArrays in class Environment.
Review URL: https://chromiumcodereview.appspot.com//10692140
------------------------------------------------------------------------
r9520 | srdjan@google.com | 2012-07-11 03:22:45 +0900 (水, 11  7月 2012) | 2 lines

Improve code for checked instance calls (polymorphic calls) and expand printing of PolymorphicInstanceCall to include checked class names.
Review URL: https://chromiumcodereview.appspot.com//10698128
------------------------------------------------------------------------
r9495 | srdjan@google.com | 2012-07-10 10:09:32 +0900 (火, 10  7月 2012) | 2 lines

Intrinsify a couple of x64 methods (fix performance regression on Mandelbrot). Need to investigate Mandelbrot optimization next.
Review URL: https://chromiumcodereview.appspot.com//10753018
------------------------------------------------------------------------
r9494 | srdjan@google.com | 2012-07-10 09:14:25 +0900 (火, 10  7月 2012) | 2 lines

Rename Script's source to Source. Trace parser (--trace-parser) only if source is available (thus skipping all the 'noise' of bootstrap methods).
Review URL: https://chromiumcodereview.appspot.com//10752017
------------------------------------------------------------------------
r9493 | turnidge@google.com | 2012-07-10 08:57:08 +0900 (火, 10  7月 2012) | 2 lines

Implement method and variable reflection in dart:mirrors.
Review URL: https://chromiumcodereview.appspot.com//10687004
------------------------------------------------------------------------
r9490 | iposva@google.com | 2012-07-10 07:58:27 +0900 (火, 10  7月 2012) | 5 lines

- On store buffer block overflow call a VM leaf function to
  add the entries into the store buffer.
- Add a way to preserve and restore caller saved registers.
- Clean up the implementation of the stub for Assembler::Stop.
Review URL: https://chromiumcodereview.appspot.com//10758008
------------------------------------------------------------------------
r9482 | srdjan@google.com | 2012-07-10 05:31:25 +0900 (火, 10  7月 2012) | 2 lines

Cleanups.
Review URL: https://chromiumcodereview.appspot.com//10765007
------------------------------------------------------------------------
r9473 | regis@google.com | 2012-07-10 03:02:40 +0900 (火, 10  7月 2012) | 3 lines

Fix static type analysis of closure calls (issue 3959).
Add test.
Review URL: https://chromiumcodereview.appspot.com//10762003
------------------------------------------------------------------------
r9471 | regis@google.com | 2012-07-10 01:59:15 +0900 (火, 10  7月 2012) | 2 lines

Add --trace_type_check_elimination flag for debugging purposes.
Review URL: https://chromiumcodereview.appspot.com//10689099
------------------------------------------------------------------------
r9467 | kmillikin@google.com | 2012-07-09 21:58:36 +0900 (月, 09  7月 2012) | 7 lines

Use the instruction iterator rather than an explicit loop in more places.

R=vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10704119
------------------------------------------------------------------------
r9464 | kmillikin@google.com | 2012-07-09 20:38:29 +0900 (月, 09  7月 2012) | 9 lines

Rename the successor field of instruction to next.

Renaming only change to use a name parallel to 'previous'.

R=vegorov@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10693122
------------------------------------------------------------------------
r9438 | fschneider@google.com | 2012-07-06 21:31:37 +0900 (金, 06  7月 2012) | 4 lines

Add forward iterator to iterate instructions inside a basic block.

It is currently only used in SSA renaming.
Review URL: https://chromiumcodereview.appspot.com//10692107
------------------------------------------------------------------------
r9435 | kmillikin@google.com | 2012-07-06 20:10:53 +0900 (金, 06  7月 2012) | 10 lines

Remove the instruction pointer from computations.

Remove the back pointers from computations to instructions in favor of
passing the instruction explicitly when needed.

R=fschneider@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10700123
------------------------------------------------------------------------
r9416 | kmillikin@google.com | 2012-07-05 19:06:28 +0900 (木, 05  7月 2012) | 11 lines

Eliminate the type distinction between BindInstr and DoInstr.

Represent the distinction between computations whose value is used and
computations whose value is unused with a data member (instead of a
separate type).

R=fschneider@google.com,srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10700111
------------------------------------------------------------------------
r9408 | kmillikin@google.com | 2012-07-04 22:48:26 +0900 (水, 04  7月 2012) | 7 lines

Fix broken build.

TBR=fschneider@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10703088
------------------------------------------------------------------------
r9407 | kmillikin@google.com | 2012-07-04 22:43:28 +0900 (水, 04  7月 2012) | 16 lines

Simplify adding of computations to the flow graph.

In preparation for collapsing BindInstr/DoInstr and flattening
Computations into the Instruction hierarchy.

Add a pair of functions EffectGraphVisitor::Bind and
EffectGraphVisitor::Do for adding computations to the flow graph that
have respectively one and zero uses.  This creates a single site where
we construct new BindInstr and a single site where we construct new
DoInstr (also, a single site where we construct new UseVal during flow
graph construction).

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10702092
------------------------------------------------------------------------
r9405 | fschneider@google.com | 2012-07-04 22:07:22 +0900 (水, 04  7月 2012) | 2 lines

Remove unused code for StringConcatNode from the AST and the graph builder.
Review URL: https://chromiumcodereview.appspot.com//10693092
------------------------------------------------------------------------
r9391 | fschneider@google.com | 2012-07-04 19:24:19 +0900 (水, 04  7月 2012) | 12 lines

Add support for fixed parameters in SSA builder and fix a bug in the pre-order graph traversal.

Each fixed parameter is initially defined by a ParameterInstr as definition. This
definition is not in the instruction stream, but just in the initial environment
at the graph entry so that the live range of all parameters start at the same point.

The pre-order spanning tree was computed in the wrong way which caused test failures
when building SSA because renaming relies on the dominator tree which depends on
the preorder spanning tree.

Also change the IL printing functions to be more compatible with the visualizer tool.
Review URL: https://chromiumcodereview.appspot.com//10735002
------------------------------------------------------------------------
r9376 | regis@google.com | 2012-07-04 05:40:02 +0900 (水, 04  7月 2012) | 4 lines

Compile an instance setter call when a static getter is declared, but no field
or static setter are declared (issue 3941).
Add test.
Review URL: https://chromiumcodereview.appspot.com//10689083
------------------------------------------------------------------------
r9345 | fschneider@google.com | 2012-07-03 21:54:03 +0900 (火, 03  7月 2012) | 14 lines

Add deoptimization environments to instructions.

Each instruction that can deoptimize need to have the values of the
non-optimizing code as uses. The values are stored in an environment
(GrowableArray<Value*>) attached to the instruction when constructing
SSA form.

For now every instructions gets a deoptimization environment. It contains
the values of all locals, parameters and expression stack elements at
the start of the instruction.

The environment is not used yet, but can be printed in the flow graph
with the flag --print-environments.
Review URL: https://chromiumcodereview.appspot.com//10696090
------------------------------------------------------------------------
r9334 | vegorov@google.com | 2012-07-03 18:31:44 +0900 (火, 03  7月 2012) | 7 lines

Implement ActivationFrame::GetLocalVarValue on x64.

R=iposva@google.com
BUG=3961
TEST=Debug_ExprClosureBreakpoint

Review URL: https://chromiumcodereview.appspot.com//10702068
------------------------------------------------------------------------
r9332 | fschneider@google.com | 2012-07-03 17:35:00 +0900 (火, 03  7月 2012) | 8 lines

Fix a bug in SSA renaming introduced when using the RemoveFromGraph helper for removing instructions.

The helper function RemoveFromGraph resets previous and next instruction pointers to NULL
when deleting an instruction.

I changed it to return the successor of the removed instruction so that the function is
more convenient to use while iterating over the list of instructions.
Review URL: https://chromiumcodereview.appspot.com//10692072
------------------------------------------------------------------------
r9323 | iposva@google.com | 2012-07-03 09:10:23 +0900 (火, 03  7月 2012) | 6 lines

- Separate store buffer data in the isolate into the StoreBufferBlock and
  the actual StoreBuffer.
- Add a HashSet class to use for the StoreBuffer data.
- Fix allocation sites for definite old objects.
- Remove obsolete leaf runtime entry StoreBuffer.
Review URL: https://chromiumcodereview.appspot.com//10702067
------------------------------------------------------------------------
r9317 | regis@google.com | 2012-07-03 06:42:53 +0900 (火, 03  7月 2012) | 2 lines

Use VM type cast and save handles.
Review URL: https://chromiumcodereview.appspot.com//10693071
------------------------------------------------------------------------
r9297 | fschneider@google.com | 2012-07-03 01:08:58 +0900 (火, 03  7月 2012) | 14 lines

Make IL instructions a doubly-linked list within basic blocks.

In order to be able to efficiently iterate backwards over instructions
and removing or replacing instructions in the graph we want them to
be a double-linked list inside basic blocks. The list has the following

1. Block entry instructions do not have a previous instruction.
2. The last instruction in a block may or may not have a next instruction:
   - Branches have a NULL-successor.
   - Normal block exits have a block entry instructions as successor.

This CL also makes the accessor for previous and next instruction in this
list non-virtual. This avoidis the current code duplication there.
Review URL: https://chromiumcodereview.appspot.com//10665022
------------------------------------------------------------------------
r9291 | fschneider@google.com | 2012-07-03 00:41:37 +0900 (火, 03  7月 2012) | 7 lines

Fix bailing out of SSA compilation and enable --use-ssa on x64 by default.

We need to re-parse the function when retrying compilation after bailing out
because of the side-effects to the AST (break-, continue-labels).

To improve test coverage I'm enbabling building of SSA on x64 now.
Review URL: https://chromiumcodereview.appspot.com//10694053
------------------------------------------------------------------------
r9281 | ager@google.com | 2012-07-02 16:22:32 +0900 (月, 02  7月 2012) | 11 lines

Support posting of external data into dart as external uint8 arrays through the Dart API.

The native ports use the snapshot reader to create the dart objects. Added support for reading external arrays from snapshots but no support for writing them. The only way an external array is written to a snapshot is through the api message writer.

This allows dart:io to avoid one copy of data read from files and sockets. This change only contains one use of the new API.

R=asiva@google.com,iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10698011
------------------------------------------------------------------------
r9265 | hausner@google.com | 2012-06-30 05:39:48 +0900 (土, 30  6月 2012) | 6 lines

Make sure breakpoints are enabled

With my previous checkin it became possible that internal
code breakpoints became disabled. Now make sure that when
one of these breakpoints is re-used, it becomes enabled.
Review URL: https://chromiumcodereview.appspot.com//10690053
------------------------------------------------------------------------
r9262 | cshapiro@google.com | 2012-06-30 05:23:26 +0900 (土, 30  6月 2012) | 5 lines

Enhance raw object validation check and enable checks in release builds.

BUG=3866

Review URL: https://chromiumcodereview.appspot.com//10693044
------------------------------------------------------------------------
r9258 | hausner@google.com | 2012-06-30 03:24:35 +0900 (土, 30  6月 2012) | 9 lines

Fix Dart_RemoveBreakpoint

The debugger code assumed that breakpoints can only be removed
while the debugger is paused. That is not true. An embedder can
remove breakpoints while the isolate is idle and running any
Dart code.

Fix for issue 3781 (http://dartbug.com/3781)
Review URL: https://chromiumcodereview.appspot.com//10698051
------------------------------------------------------------------------
r9256 | fschneider@google.com | 2012-06-30 02:27:12 +0900 (土, 30  6月 2012) | 4 lines

Revert r9253 because of dartium test failures

TBR=vegorov
Review URL: https://chromiumcodereview.appspot.com//10693048
------------------------------------------------------------------------
r9253 | fschneider@google.com | 2012-06-30 01:31:37 +0900 (土, 30  6月 2012) | 6 lines

Add a goto instruction to the IL use it to terminate basic blocks.

Having an explicit control instruction at the end of each
basic block allows to easily remove instructions inside
a block because the last_instruction pointer can not change.
Review URL: https://chromiumcodereview.appspot.com//10700034
------------------------------------------------------------------------
r9228 | turnidge@google.com | 2012-06-29 06:28:12 +0900 (金, 29  6月 2012) | 2 lines

Add Dart_CurrentIsolateData().
Review URL: https://chromiumcodereview.appspot.com//10690027
------------------------------------------------------------------------
r9226 | regis@google.com | 2012-06-29 06:12:06 +0900 (金, 29  6月 2012) | 2 lines

Introduce a VM type cast to avoid repeating a type test and spare a handle.
Review URL: https://chromiumcodereview.appspot.com//10713008
------------------------------------------------------------------------
r9223 | turnidge@google.com | 2012-06-29 06:04:58 +0900 (金, 29  6月 2012) | 2 lines

Increase the iteration count for the UseDartApi benchmark.
Review URL: https://chromiumcodereview.appspot.com//10693034
------------------------------------------------------------------------
r9211 | turnidge@google.com | 2012-06-29 03:15:17 +0900 (金, 29  6月 2012) | 2 lines

Add a callback to inform embedders when an isolate is being shut down.
Review URL: https://chromiumcodereview.appspot.com//10450016
------------------------------------------------------------------------
r9210 | turnidge@google.com | 2012-06-29 02:56:26 +0900 (金, 29  6月 2012) | 3 lines

Add a unit test which exercises using Dart_LoadSource to load a "late"
source file.  Seems to work...
Review URL: https://chromiumcodereview.appspot.com//10659015
------------------------------------------------------------------------
r9197 | iposva@google.com | 2012-06-28 14:00:49 +0900 (木, 28  6月 2012) | 2 lines

- Skip old objects early while scavenging.
Review URL: https://chromiumcodereview.appspot.com//10696022
------------------------------------------------------------------------
r9189 | hausner@google.com | 2012-06-28 06:36:42 +0900 (木, 28  6月 2012) | 4 lines

Include variable names with _

Include local variables that begin with _.
Review URL: https://chromiumcodereview.appspot.com//10697011
------------------------------------------------------------------------
r9188 | regis@google.com | 2012-06-28 05:08:30 +0900 (木, 28  6月 2012) | 4 lines

Consider upper bounds of type parameters in type checks.
Fix pointer visiting in TypeParameter.
Make TypeParameter::index() non-virtual.
Review URL: https://chromiumcodereview.appspot.com//10696013
------------------------------------------------------------------------
r9181 | hausner@google.com | 2012-06-28 02:24:41 +0900 (木, 28  6月 2012) | 2 lines

Add a platform-independent max uword value.
Review URL: https://chromiumcodereview.appspot.com//10695009
------------------------------------------------------------------------
r9177 | hausner@google.com | 2012-06-28 01:25:11 +0900 (木, 28  6月 2012) | 2 lines

Write once debug everywhere
Review URL: https://chromiumcodereview.appspot.com//10696009
------------------------------------------------------------------------
r9176 | hausner@google.com | 2012-06-28 01:13:49 +0900 (木, 28  6月 2012) | 9 lines

Better breakpoint placement

Instead of using token distance to find the first possible breakpoint
position in a line, use generated code address, so the debugger
breaks before the first call on a source line.

Fix issue 3653 
http://code.google.com/p/dart/issues/detail?id=3318
Review URL: https://chromiumcodereview.appspot.com//10686003
------------------------------------------------------------------------
r9143 | iposva@google.com | 2012-06-27 09:08:03 +0900 (水, 27  6月 2012) | 3 lines

- Premark vm_isolate objects to avoid having to test for them
  during marking.
Review URL: https://chromiumcodereview.appspot.com//10675010
------------------------------------------------------------------------
r9122 | regis@google.com | 2012-06-27 02:43:44 +0900 (水, 27  6月 2012) | 2 lines

Remove old code generator.
Review URL: https://chromiumcodereview.appspot.com//10665038
------------------------------------------------------------------------
r9121 | hausner@google.com | 2012-06-27 02:32:34 +0900 (水, 27  6月 2012) | 8 lines

Debugger support to display global variables

- Add library id to ActivationFrame
- Add debugger function to get all global variables visible in
  a library (including imported variables).
- Add LibraryPrefixIterator
- Fix Dart_GetLibraryImports
Review URL: https://chromiumcodereview.appspot.com//10657048
------------------------------------------------------------------------
r9106 | vegorov@google.com | 2012-06-26 21:14:02 +0900 (火, 26  6月 2012) | 7 lines

Fix a bug in liveness analysis code and add more comments.

R=fschneider@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10657044
------------------------------------------------------------------------
r9098 | asiva@google.com | 2012-06-26 09:18:14 +0900 (火, 26  6月 2012) | 2 lines

Prepare for writing token streams directly into a snapshot and reading it directly from the snapshot using memmove.
Review URL: https://chromiumcodereview.appspot.com//10665035
------------------------------------------------------------------------
r9096 | srdjan@google.com | 2012-06-26 08:54:05 +0900 (火, 26  6月 2012) | 2 lines

Forgot to save file, missed changed comment.
Review URL: https://chromiumcodereview.appspot.com//10662034
------------------------------------------------------------------------
r9095 | srdjan@google.com | 2012-06-26 08:50:37 +0900 (火, 26  6月 2012) | 2 lines

Recognize leaf functions: skip stack check and populating the pc slot, store the pc slot lazily in case of deoptimization.
Review URL: https://chromiumcodereview.appspot.com//10668034
------------------------------------------------------------------------
r9091 | iposva@google.com | 2012-06-26 08:05:42 +0900 (火, 26  6月 2012) | 2 lines

- Sort sources in gyp files.
Review URL: https://chromiumcodereview.appspot.com//10663029
------------------------------------------------------------------------
r9089 | regis@google.com | 2012-06-26 07:25:21 +0900 (火, 26  6月 2012) | 2 lines

Minimize differences between ia32 and x64 sources to facilitate maintenance.
Review URL: https://chromiumcodereview.appspot.com//10636038
------------------------------------------------------------------------
r9075 | srdjan@google.com | 2012-06-26 03:13:33 +0900 (火, 26  6月 2012) | 2 lines

Intrinsify fixed and growable array allocation on x64.
Review URL: https://chromiumcodereview.appspot.com//10657012
------------------------------------------------------------------------
r9071 | asiva@google.com | 2012-06-26 02:35:20 +0900 (火, 26  6月 2012) | 2 lines

Fix issue 1968, replace usage of inline 'asm' constructs in 'stack alignment', 'jump to exception handler' and 'jump to error handler' code with calls to appropriate stubs.
Review URL: https://chromiumcodereview.appspot.com//10664004
------------------------------------------------------------------------
r9070 | regis@google.com | 2012-06-26 02:23:11 +0900 (火, 26  6月 2012) | 2 lines

Implement type cast in the VM.
Review URL: https://chromiumcodereview.appspot.com//10659005
------------------------------------------------------------------------
r9069 | vegorov@google.com | 2012-06-26 02:07:16 +0900 (火, 26  6月 2012) | 7 lines

Simple iterative liveness analysis over SSA.

R=fschneider@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10666026
------------------------------------------------------------------------
r9065 | hausner@google.com | 2012-06-26 00:43:04 +0900 (火, 26  6月 2012) | 7 lines

Fix parent function of deeply nested closures

We got the parent of nested closures wrong if the nesting level
was > 2.

Fix for issue 3412.
Review URL: https://chromiumcodereview.appspot.com//10665009
------------------------------------------------------------------------
r9051 | iposva@google.com | 2012-06-23 09:17:25 +0900 (土, 23  6月 2012) | 2 lines

- Document the store barrier.
Review URL: https://chromiumcodereview.appspot.com//10658008
------------------------------------------------------------------------
r9050 | iposva@google.com | 2012-06-23 08:48:51 +0900 (土, 23  6月 2012) | 4 lines

- Fix the x64 store-barrier.
- Allow assembler test drivers to be shared across architectures.
- Add a shared StoreIntoObject assembler test.
Review URL: https://chromiumcodereview.appspot.com//10636017
------------------------------------------------------------------------
r9048 | srdjan@google.com | 2012-06-23 08:28:34 +0900 (土, 23  6月 2012) | 2 lines

Expand ia32 intrinsic for integer modulo, implement it for x64. Next step will be to emit it directly.
Review URL: https://chromiumcodereview.appspot.com//10663006
------------------------------------------------------------------------
r9045 | cshapiro@google.com | 2012-06-23 06:17:38 +0900 (土, 23  6月 2012) | 8 lines

Log growth policy decisions when verbose gc is enabled.

This change also rationalizes some use of signed and unsigned types and
corrects the use of time values recorded for analysis.

BUG=3535

Review URL: https://chromiumcodereview.appspot.com//10576004
------------------------------------------------------------------------
r9044 | srdjan@google.com | 2012-06-23 06:07:03 +0900 (土, 23  6月 2012) | 2 lines

Do not issue Mint/Smi code sequence if we have only Smi/Smi comnbination.
Review URL: https://chromiumcodereview.appspot.com//10642026
------------------------------------------------------------------------
r9043 | asiva@google.com | 2012-06-23 05:37:01 +0900 (土, 23  6月 2012) | 4 lines

Make the parser agnostic to the TokenStream implementation. This is the first step towards compacting the token stream.

Pull the data stream writer/reader code out of snapshot into a generic file so that it can be reused into the token stream compaction implementation.
Review URL: https://chromiumcodereview.appspot.com//10632009
------------------------------------------------------------------------
r9039 | srdjan@google.com | 2012-06-23 03:28:16 +0900 (土, 23  6月 2012) | 2 lines

Fixed a typo, one more reason to get rid of StrictCompare vs StrictCompareComp distinction.
Review URL: https://chromiumcodereview.appspot.com//10634032
------------------------------------------------------------------------
r9027 | fschneider@google.com | 2012-06-22 19:59:06 +0900 (金, 22  6月 2012) | 8 lines

Add new files and data structures for the new register allocator.

This CL adds new files to hold the new register allocator and
adds a parallel-move instructions that will be used to insert
moves for register constraints, spills and phi-resolution.

No new functionality added yet.
Review URL: https://chromiumcodereview.appspot.com//10635020
------------------------------------------------------------------------
r9014 | iposva@google.com | 2012-06-22 16:57:11 +0900 (金, 22  6月 2012) | 2 lines

- Remove extra jumps from store barrier on x64.
Review URL: https://chromiumcodereview.appspot.com//10641018
------------------------------------------------------------------------
r9012 | regis@google.com | 2012-06-22 10:24:36 +0900 (金, 22  6月 2012) | 2 lines

Minimize differences between ia32 and x64 sources to facilitate maintenance.
Review URL: https://chromiumcodereview.appspot.com//10651008
------------------------------------------------------------------------
r9009 | srdjan@google.com | 2012-06-22 08:02:30 +0900 (金, 22  6月 2012) | 2 lines

Fix excessive deoptimizations in Meteor: kSHL on two Smi-s can easily overflow, which led to deoptimization. In case of overflow call the IC target directly in case instead of deoptimizing. Necessary only for IA32.
Review URL: https://chromiumcodereview.appspot.com//10632010
------------------------------------------------------------------------
r8998 | regis@google.com | 2012-06-22 04:37:15 +0900 (金, 22  6月 2012) | 2 lines

Improve inlining of bit_and operation for Mint and Smi in new compilers.
Review URL: https://chromiumcodereview.appspot.com//10592028
------------------------------------------------------------------------
r8997 | fschneider@google.com | 2012-06-22 03:58:23 +0900 (金, 22  6月 2012) | 4 lines

Correctly reset global isolate state after bailout from the flow-graph compiler.

This CL fixes a bug where the global ic_data_array was not reset when a bailout happened.
Review URL: https://chromiumcodereview.appspot.com//10636004
------------------------------------------------------------------------
r8996 | hausner@google.com | 2012-06-22 03:48:20 +0900 (金, 22  6月 2012) | 6 lines

Do not collect stack trace unnecessarily

The debugger collected stack traces on each exception throw
even when the debugger client specifies "no pause on exception".
This fixes the asserts that Anton saw in some tests.
Review URL: https://chromiumcodereview.appspot.com//10645003
------------------------------------------------------------------------
r8993 | efortuna@google.com | 2012-06-22 02:11:02 +0900 (金, 22  6月 2012) | 2 lines

Add dart:web to VM.
Review URL: https://chromiumcodereview.appspot.com//10574037
------------------------------------------------------------------------
r8986 | srdjan@google.com | 2012-06-22 01:14:48 +0900 (金, 22  6月 2012) | 2 lines

Switch to the new compiler onIA32, making --use-new-compiler default true on IA32 as well.
Review URL: https://chromiumcodereview.appspot.com//10641002
------------------------------------------------------------------------
r8959 | iposva@google.com | 2012-06-21 09:52:49 +0900 (木, 21  6月 2012) | 2 lines

- Remove a few jumps from store barrier code.
Review URL: https://chromiumcodereview.appspot.com//10607002
------------------------------------------------------------------------
r8958 | srdjan@google.com | 2012-06-21 09:43:58 +0900 (木, 21  6月 2012) | 2 lines

Fix bug in inlined Math.sqrt.
Review URL: https://chromiumcodereview.appspot.com//10603004
------------------------------------------------------------------------
r8956 | hausner@google.com | 2012-06-21 09:16:27 +0900 (木, 21  6月 2012) | 5 lines

Fix stuff

Fix for issue 3781: don't hang on to deleted breakpoints (manually tested).
Fix for issue 3390: allow function names in all string interpolation expressions.
Review URL: https://chromiumcodereview.appspot.com//10603003
------------------------------------------------------------------------
r8955 | asiva@google.com | 2012-06-21 09:02:55 +0900 (木, 21  6月 2012) | 4 lines

- Use NoHandleScope in leaf methods
- have a no parameter constructor for NoHandleScope so that we can use that
  in optimized mode when the Isolate is not available.
Review URL: https://chromiumcodereview.appspot.com//10579035
------------------------------------------------------------------------
r8953 | iposva@google.com | 2012-06-21 08:48:26 +0900 (木, 21  6月 2012) | 2 lines

- Implement the filtering store barrier on x64.
Review URL: https://chromiumcodereview.appspot.com//10581049
------------------------------------------------------------------------
r8950 | srdjan@google.com | 2012-06-21 08:19:02 +0900 (木, 21  6月 2012) | 2 lines

Removing more IC calls in optimized code.
Review URL: https://chromiumcodereview.appspot.com//10572050
------------------------------------------------------------------------
r8942 | cshapiro@google.com | 2012-06-21 07:09:20 +0900 (木, 21  6月 2012) | 5 lines

Check that the C string passed to Dart_NewString is valid UTF-8.

BUG=2663

Review URL: https://chromiumcodereview.appspot.com//10584044
------------------------------------------------------------------------
r8939 | iposva@google.com | 2012-06-21 05:37:22 +0900 (木, 21  6月 2012) | 3 lines

- Fix the barrier code when low bits of Smi are zeroes.
- Harden the assembler test for StoreIntoObject to test a variety of Smi values.
Review URL: https://chromiumcodereview.appspot.com//10592023
------------------------------------------------------------------------
r8929 | iposva@google.com | 2012-06-21 03:05:51 +0900 (木, 21  6月 2012) | 3 lines

- Inline the store buffer update into a stub instead of
  calling out into the C++ runtime.
Review URL: https://chromiumcodereview.appspot.com//10578046
------------------------------------------------------------------------
r8914 | srdjan@google.com | 2012-06-21 01:25:11 +0900 (木, 21  6月 2012) | 2 lines

Fuse Comparison->BooleanNegate->Branch.
Review URL: https://chromiumcodereview.appspot.com//10559072
------------------------------------------------------------------------
r8893 | fschneider@google.com | 2012-06-20 19:08:01 +0900 (水, 20  6月 2012) | 25 lines

Fix a bug in SSA renaming.

This CL changes the order of step 2a and 2b in the SSA renaming: Uses of
LoadLocal/StoreLocal must be renamed first so that the environment is correctly
updated for StoreLocal instructions.

A simple example showing the bug:

test_xy() {
  var x = 1;
  var y = 2;
  var z = 3;
  for (var i = 0; i < 5; i++) {
    y = z = x;
    x++;
  }
  return x + y + z;
}

Also in this change:
- changed the printing of SSA operands to v0, v1, .. instead
of t0, t1 to better distinguish them from non-SSA operands.
- make sure that UseVal are always copied when renaming phi 
input operands. 
Review URL: https://chromiumcodereview.appspot.com//10583014
------------------------------------------------------------------------
r8885 | asiva@google.com | 2012-06-20 11:15:08 +0900 (水, 20  6月 2012) | 3 lines

- Fix the type test failure for implicit native closures.
- Turn the test back on.
Review URL: https://chromiumcodereview.appspot.com//10572029
------------------------------------------------------------------------
r8884 | regis@google.com | 2012-06-20 10:33:04 +0900 (水, 20  6月 2012) | 4 lines

Fix type test elimination of function types using static type propagation in
new compiler.
Add test.
Review URL: https://chromiumcodereview.appspot.com//10579033
------------------------------------------------------------------------
r8881 | asiva@google.com | 2012-06-20 08:57:40 +0900 (水, 20  6月 2012) | 2 lines

Rework leaf calls as just simple C calls with a signature and not the NativeArgumentDescriptor.
Review URL: https://chromiumcodereview.appspot.com//10592006
------------------------------------------------------------------------
r8880 | cshapiro@google.com | 2012-06-20 08:38:05 +0900 (水, 20  6月 2012) | 5 lines

Ensure the ByteArray subtypes are known to implement List.

BUG=3319

Review URL: https://chromiumcodereview.appspot.com//10574006
------------------------------------------------------------------------
r8877 | srdjan@google.com | 2012-06-20 06:49:11 +0900 (水, 20  6月 2012) | 2 lines

More ICData cleanups: try to use ICData instead of converting it to another intermediate representation. This sets the stage for more & simpler optimizations based on collected type feedback.
Review URL: https://chromiumcodereview.appspot.com//10594002
------------------------------------------------------------------------
r8871 | srdjan@google.com | 2012-06-20 06:19:00 +0900 (水, 20  6月 2012) | 2 lines

This is https://chromiumcodereview.appspot.com/10581006/ that I forgot to submit, and messed up the original accidentally. Submitting as TBR
Review URL: https://chromiumcodereview.appspot.com//10580024
------------------------------------------------------------------------
r8868 | regis@google.com | 2012-06-20 05:32:44 +0900 (水, 20  6月 2012) | 2 lines

Fix type test elimination using static type propagation in new compiler.
Review URL: https://chromiumcodereview.appspot.com//10578018
------------------------------------------------------------------------
r8863 | hausner@google.com | 2012-06-20 03:52:34 +0900 (水, 20  6月 2012) | 9 lines

Support captured variables in debugger

- Add context level ranges to LocalVarDescriptors
- Add callee-saved context chain register to LocalVarDescriptors
- Add context level and context offset of captured variables
  to LocalVarDescriptors
- Add context chain to ActivationFrame
- Add current context level to ActivationFrame
Review URL: https://chromiumcodereview.appspot.com//10579020
------------------------------------------------------------------------
r8839 | fschneider@google.com | 2012-06-19 20:39:02 +0900 (火, 19  6月 2012) | 37 lines

Second step for computing SSA: renaming.

This CL adds the renaming step to the SSA construction. The renaming pass
initializes a start environment with the initial values of all locals (#null)
 and parameters and removes LoadLocal and StoreLocal instructions from the
 graph.

Right now the renaming does not support functions with parameters yet.
I added a TODO for this. The SSA form for a simple function with an if-statement:

function foo() {
  var v = 0;
  var x;
  if (v == 0) {
    x = 42;
  }
  return x;
}

looks as follows:

 0: [graph]
  #null
  #null
 1: [target]
    t0 <- #0
    t1 <- #null
    t2 <- #0
    t3 <- EqualityCompare(t0 == t2)
    Branch if t3 goto (2, 3)
 2: [target]
    t5 <- #42 goto 4
 3: [target] goto 4
 4: [join]
    t4 <- phi(t1,t5)
    Return t4
Review URL: https://chromiumcodereview.appspot.com//10544206
------------------------------------------------------------------------
r8834 | asiva@google.com | 2012-06-19 15:56:39 +0900 (火, 19  6月 2012) | 3 lines

Temporarily disable store buffer assertion check as it is causing crashes.
Will reenable after fixing it.
Review URL: https://chromiumcodereview.appspot.com//10574012
------------------------------------------------------------------------
r8831 | cshapiro@google.com | 2012-06-19 08:24:30 +0900 (火, 19  6月 2012) | 3 lines

Correct the masks and conditions used to filter cross generation stores.

Review URL: https://chromiumcodereview.appspot.com//10581007
------------------------------------------------------------------------
r8828 | regis@google.com | 2012-06-19 07:42:39 +0900 (火, 19  6月 2012) | 2 lines

Fix bad assert in static type propagation.
Review URL: https://chromiumcodereview.appspot.com//10578004
------------------------------------------------------------------------
r8825 | regis@google.com | 2012-06-19 06:55:52 +0900 (火, 19  6月 2012) | 2 lines

Inline binary And operation for Mint and Smi in new compilers.
Review URL: https://chromiumcodereview.appspot.com//10553040
------------------------------------------------------------------------
r8824 | iposva@google.com | 2012-06-19 06:05:58 +0900 (火, 19  6月 2012) | 2 lines

- Reenable disassembly of stubs: No comments are 0 length.
Review URL: https://chromiumcodereview.appspot.com//10579005
------------------------------------------------------------------------
r8823 | srdjan@google.com | 2012-06-19 06:04:28 +0900 (火, 19  6月 2012) | 2 lines

Temporary fix for static type check elimination in new compiler. Enable tests.
Review URL: https://chromiumcodereview.appspot.com//10580003
------------------------------------------------------------------------
r8818 | asiva@google.com | 2012-06-19 05:20:25 +0900 (火, 19  6月 2012) | 2 lines

Temporary fix for build break. Turn off test.
Review URL: https://chromiumcodereview.appspot.com//10582002
------------------------------------------------------------------------
r8817 | iposva@google.com | 2012-06-19 05:01:28 +0900 (火, 19  6月 2012) | 5 lines

- Avoid doubling 0 when trying to determine a new size for the
  ApiMessageWriter forwarding list. 
- Use matching allocation calls in ApiMessageWriter.
- Sort list of source files.
Review URL: https://chromiumcodereview.appspot.com//10557043
------------------------------------------------------------------------
r8816 | asiva@google.com | 2012-06-19 04:56:06 +0900 (火, 19  6月 2012) | 4 lines

Allow implicit 'close your eyes' of native methods. This will hopefully fix issue 3466.
- when resolving the native method which has been closurized account for the 'this' argument in the count of arguments.
- explicitly copy the 'this' parameter in the closure context as the first parameter before calling the native function. This is done by piggy backing on the CopyParameters code used for functions with optional parameters.
Review URL: https://chromiumcodereview.appspot.com//10535180
------------------------------------------------------------------------
r8811 | vegorov@google.com | 2012-06-19 03:04:22 +0900 (火, 19  6月 2012) | 8 lines

Implement a simple register allocator that tries to keep instruction results in registers.

Add --optimization-filter flag that allows to disbable optimizations for all function which do not match prefix. This allows to quickly localize problems with code generation.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10559035
------------------------------------------------------------------------
r8810 | hausner@google.com | 2012-06-19 03:00:25 +0900 (火, 19  6月 2012) | 2 lines

Remove obsolete String + code
Review URL: https://chromiumcodereview.appspot.com//10562038
------------------------------------------------------------------------
r8783 | fschneider@google.com | 2012-06-18 21:04:30 +0900 (月, 18  6月 2012) | 4 lines

Fix bailout from the optimizing-mode compiler and put SSA construction under a flag.

For now the flag is off by default.
Review URL: https://chromiumcodereview.appspot.com//10568007
------------------------------------------------------------------------
r8780 | vegorov@google.com | 2012-06-18 20:39:04 +0900 (月, 18  6月 2012) | 5 lines

Fix definition of CreateArrayComp::InputAt.

R=fschneider@google.com

Review URL: https://chromiumcodereview.appspot.com//10566025
------------------------------------------------------------------------
r8764 | hausner@google.com | 2012-06-18 09:56:03 +0900 (月, 18  6月 2012) | 2 lines

Turn off support for String + operator in the VM
Review URL: https://chromiumcodereview.appspot.com//10568002
------------------------------------------------------------------------
r8755 | cshapiro@google.com | 2012-06-16 08:45:15 +0900 (土, 16  6月 2012) | 3 lines

Generate code for store buffer updates in open-coded object field stores.

Review URL: https://chromiumcodereview.appspot.com//10536067
------------------------------------------------------------------------
r8754 | asiva@google.com | 2012-06-16 08:32:47 +0900 (土, 16  6月 2012) | 4 lines

For now set the stack buffer size to 16k (we need to compute this during thread start and store it in the worker object instead of the current scheme of setting this up in HandleMessage).

Adjust stack size to 512KB as all tests seem to run with that limit.
Review URL: https://chromiumcodereview.appspot.com//10558013
------------------------------------------------------------------------
r8730 | srdjan@google.com | 2012-06-16 03:12:42 +0900 (土, 16  6月 2012) | 2 lines

Chek stack overflow in while an do-while node (in order to be able to interrupt loops).
Review URL: https://chromiumcodereview.appspot.com//10562010
------------------------------------------------------------------------
r8703 | asiva@google.com | 2012-06-15 10:28:53 +0900 (金, 15  6月 2012) | 2 lines

Have the stack overflow code use the correct stack size set by the platform/thread.h
Review URL: https://chromiumcodereview.appspot.com//10544170
------------------------------------------------------------------------
r8702 | regis@google.com | 2012-06-15 09:56:25 +0900 (金, 15  6月 2012) | 2 lines

Inline Math.sqrt in new compilers.
Review URL: https://chromiumcodereview.appspot.com//10542167
------------------------------------------------------------------------
r8701 | srdjan@google.com | 2012-06-15 09:56:25 +0900 (金, 15  6月 2012) | 2 lines

Fix stack sizes (kDefaultStackSize to 64kB, and kStackSizeBuffer to 4kb) to be able to catch stack overflows.
Review URL: https://chromiumcodereview.appspot.com//10539174
------------------------------------------------------------------------
r8700 | srdjan@google.com | 2012-06-15 09:40:58 +0900 (金, 15  6月 2012) | 2 lines

Improve equality operation (inline, direct calls).
Review URL: https://chromiumcodereview.appspot.com//10545186
------------------------------------------------------------------------
r8699 | asiva@google.com | 2012-06-15 09:19:45 +0900 (金, 15  6月 2012) | 5 lines

Add support for leaf runtime calls
- use a NoGCScope around these calls
- do not save and restore exit frame info, context register etc.
- Do not create a zone and handlescope by default
Review URL: https://chromiumcodereview.appspot.com//10542123
------------------------------------------------------------------------
r8679 | hausner@google.com | 2012-06-15 03:07:48 +0900 (金, 15  6月 2012) | 7 lines

Fix issue 3636, break on exception

Call the "pause on exception" handler in the debugger even when
there are no breakpoints set.

Fixes issue 3636.
Review URL: https://chromiumcodereview.appspot.com//10544159
------------------------------------------------------------------------
r8678 | srdjan@google.com | 2012-06-15 03:07:43 +0900 (金, 15  6月 2012) | 2 lines

Implement polymorphic instance calls.
Review URL: https://chromiumcodereview.appspot.com//10539145
------------------------------------------------------------------------
r8675 | srdjan@google.com | 2012-06-15 02:41:54 +0900 (金, 15  6月 2012) | 2 lines

Add token kind into InstanceCallComp so that we do not need to extract it from name (addresses vego…
Review URL: https://chromiumcodereview.appspot.com//10536162
------------------------------------------------------------------------
r8655 | floitsch@google.com | 2012-06-14 22:05:22 +0900 (木, 14  6月 2012) | 8 lines

Reapply "Refactor Date implementation in VM."

This reapplies fixed versions of commit 7542 and commit 8544.
Original review URLs:
https://chromiumcodereview.appspot.com//10533068
https://chromiumcodereview.appspot.com//10544109

Review URL: https://chromiumcodereview.appspot.com//10534114
------------------------------------------------------------------------
r8648 | whesse@google.com | 2012-06-14 20:47:29 +0900 (木, 14  6月 2012) | 6 lines

Fix flaky test runtime/vm/heap_profiler_test.cc

BUG=3634
TEST=vm/heap_profiler_test

Review URL: https://chromiumcodereview.appspot.com//10534158
------------------------------------------------------------------------
r8639 | cshapiro@google.com | 2012-06-14 10:33:31 +0900 (木, 14  6月 2012) | 3 lines

Fix includes to unbreak the Mac build.

Review URL: https://chromiumcodereview.appspot.com//10543154
------------------------------------------------------------------------
r8638 | cshapiro@google.com | 2012-06-14 10:02:08 +0900 (木, 14  6月 2012) | 3 lines

Fix includes to unbreak the Windows build.

Review URL: https://chromiumcodereview.appspot.com//10539151
------------------------------------------------------------------------
r8636 | cshapiro@google.com | 2012-06-14 09:08:07 +0900 (木, 14  6月 2012) | 10 lines

Implement a heap profiler for the Dart managed heap.

This profiler will write binary HPROF data to a user provided stream that
can later be viewed by tools such as the Eclipse Memory Analyzer.

While all user defined types are accurately described in the profile data,
internal types that are not self-describing appear as empty objects.  This
will be addressed by a future change.

Review URL: https://chromiumcodereview.appspot.com//10452006
------------------------------------------------------------------------
r8633 | regis@google.com | 2012-06-14 08:06:23 +0900 (木, 14  6月 2012) | 2 lines

Fix super call invocation (issue 2028).
Review URL: https://chromiumcodereview.appspot.com//10513008
------------------------------------------------------------------------
r8629 | srdjan@google.com | 2012-06-14 06:13:09 +0900 (木, 14  6月 2012) | 2 lines

Restore changes lost in merge for r8626 (equality operation).
Review URL: https://chromiumcodereview.appspot.com//10546154
------------------------------------------------------------------------
r8626 | srdjan@google.com | 2012-06-14 03:48:46 +0900 (木, 14  6月 2012) | 2 lines

Some cleanups, started implementing checked instance calls, better equality operation.
Review URL: https://chromiumcodereview.appspot.com//10541135
------------------------------------------------------------------------
r8617 | vegorov@google.com | 2012-06-14 01:23:14 +0900 (木, 14  6月 2012) | 9 lines

Fuse comparisons that are used by branches together.

This allows us to eliminate materialization of boolean value.

Fix a bug in ToDoubleComp::LocationSummary on ia32.

R=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10536145
------------------------------------------------------------------------
r8612 | iposva@google.com | 2012-06-14 00:25:08 +0900 (木, 14  6月 2012) | 2 lines

- Fix test expectations.
Review URL: https://chromiumcodereview.appspot.com//10543137
------------------------------------------------------------------------
r8608 | iposva@google.com | 2012-06-13 23:47:33 +0900 (水, 13  6月 2012) | 2 lines

- Remove trailing '\n' when getting the API error message.
Review URL: https://chromiumcodereview.appspot.com//10539133
------------------------------------------------------------------------
r8604 | fschneider@google.com | 2012-06-13 22:36:04 +0900 (水, 13  6月 2012) | 13 lines

First step to SSA construction: Phi insertion.

This CL contains the phi insertion step of the SSA construction algorithmus: The phi instructions inserted are not functional yet. Renaming is not included yet.


I based it on Kevin's CL (http://codereview.chromium.org/10388161/), rebased and fixed a bug (added missing iterator.Advance()) there.

It also reintroduces the Definition IL class because Phi-instructions are also
definitions that are referenced by UseVal.

I also added the set of immediately dominated blocks to each basic block.
This will be needed for pre-order dominator-tree traversal in the renaming pass.
Review URL: https://chromiumcodereview.appspot.com//10539108
------------------------------------------------------------------------
r8595 | vegorov@google.com | 2012-06-13 17:53:54 +0900 (水, 13  6月 2012) | 7 lines

Optimize StoreIndexedComp on ia32&x64.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10543111
------------------------------------------------------------------------
r8593 | vegorov@google.com | 2012-06-13 17:29:40 +0900 (水, 13  6月 2012) | 7 lines

Implement kDoubleToDouble and kIntegerToDouble on ia32 and x64.

Fix bug in assembling of cvtsi2sd on x64.

R=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10534116
------------------------------------------------------------------------
r8586 | hausner@google.com | 2012-06-13 08:01:14 +0900 (水, 13  6月 2012) | 2 lines

Eliminate a couple of uses of String +
Review URL: https://chromiumcodereview.appspot.com//10536129
------------------------------------------------------------------------
r8579 | hausner@google.com | 2012-06-13 06:56:50 +0900 (水, 13  6月 2012) | 7 lines

Add API to configure debugger pause on exception

Still to be done: proper determination whether an exception is
handled or unhandled. We still assume that TypeError and AssertionError
exceptions are unhanded.

Review URL: https://chromiumcodereview.appspot.com//10540121
------------------------------------------------------------------------
r8575 | turnidge@google.com | 2012-06-13 06:07:49 +0900 (水, 13  6月 2012) | 32 lines

Second local mirrors CL.

Implement a few chunks of new mirror functionality.  Many changes, notably:

- Added currentIsolateMirror() to provide non-async access to the
  local isolate mirror.

- Added mirrorOf(o) to provide access to local instance mirrors.

- Fleshed out InstanceMirror, InterfaceMirror, and LibraryMirror to
  various degrees.

- Added the MirroredError hierarchy, which lets the user handle Dart
  errors of various sorts from invocation, etc.

- Introduce lazy resolvers for interface mirrors and library mirrors.
  These allow us to build the self-referential library/interface
  hierarchy without going mad.

- Added better toStrings all around.

- Extended the isolate_mirror_local_test to cover new functionality.

Other changes that were required or seemed prudent:

- Exposed the error hierarchy to the embedder.  They need to be able
  to distinguish different error types in some situations.  Improved
  the documetation around error handles and error propagation.

- Added new functions to the dart embedding api as required.  Added
  tests for all new dart api functions.
Review URL: https://chromiumcodereview.appspot.com//10538043
------------------------------------------------------------------------
r8572 | srdjan@google.com | 2012-06-13 05:18:22 +0900 (水, 13  6月 2012) | 2 lines

Fix a typo in the new compiler's optimizer.
Review URL: https://chromiumcodereview.appspot.com//10548009
------------------------------------------------------------------------
r8555 | srdjan@google.com | 2012-06-13 01:27:18 +0900 (水, 13  6月 2012) | 2 lines

Implement is32 LoadIndexed.
Review URL: https://chromiumcodereview.appspot.com//10534105
------------------------------------------------------------------------
r8554 | srdjan@google.com | 2012-06-13 01:09:02 +0900 (水, 13  6月 2012) | 2 lines

Add code comment to ia32 disassembly as well, bug fix new ia32 compiler, remove use of TMP register outside the assembler. Inlined special methods: ObjectArray, ImmutableArray and GrowableArray and String length getters.
Review URL: https://chromiumcodereview.appspot.com//10536096
------------------------------------------------------------------------
r8551 | iposva@google.com | 2012-06-12 23:14:24 +0900 (火, 12  6月 2012) | 2 lines

- Back to old compiler for ia32.
Review URL: https://chromiumcodereview.appspot.com//10534112
------------------------------------------------------------------------
r8550 | iposva@google.com | 2012-06-12 23:04:14 +0900 (火, 12  6月 2012) | 2 lines

- Temporarily enable the new compiler on ia32.
Review URL: https://chromiumcodereview.appspot.com//10535129
------------------------------------------------------------------------
r8547 | floitsch@google.com | 2012-06-12 22:44:45 +0900 (火, 12  6月 2012) | 7 lines

Revert "Refactor Date implementation in VM."

Also revert "Round days-computation to get rid of daylight-savings differences."

This reverts commit 7542 and commit 8544.

Review URL: https://chromiumcodereview.appspot.com//10534111
------------------------------------------------------------------------
r8542 | floitsch@google.com | 2012-06-12 21:04:36 +0900 (火, 12  6月 2012) | 6 lines

Reapply "Refactor Date implementation in VM."

This reapplies a fixed version of commit 8533.
https://chromiumcodereview.appspot.com//10533068

Review URL: https://chromiumcodereview.appspot.com//10536116
------------------------------------------------------------------------
r8535 | floitsch@google.com | 2012-06-12 19:33:36 +0900 (火, 12  6月 2012) | 5 lines

Revert "Refactor Date implementation in VM."

This reverts commit 8533.

Review URL: https://chromiumcodereview.appspot.com//10536114
------------------------------------------------------------------------
r8533 | floitsch@google.com | 2012-06-12 19:24:58 +0900 (火, 12  6月 2012) | 8 lines

Refactor Date implementation in VM.

Less (and simpler) native functions. More precise semantics (for both the
native functions as well as for the Date class itself).

Fixes issue 3201.

Review URL: https://chromiumcodereview.appspot.com//10533068
------------------------------------------------------------------------
r8531 | iposva@google.com | 2012-06-12 19:14:12 +0900 (火, 12  6月 2012) | 2 lines

- Workaround a problem in the gold linker.
Review URL: https://chromiumcodereview.appspot.com//10538103
------------------------------------------------------------------------
r8530 | iposva@google.com | 2012-06-12 18:30:34 +0900 (火, 12  6月 2012) | 3 lines

- Do not use near jumps for large number of sequential class id
  comparisons.
Review URL: https://chromiumcodereview.appspot.com//10541112
------------------------------------------------------------------------
r8517 | asiva@google.com | 2012-06-12 06:39:05 +0900 (火, 12  6月 2012) | 4 lines

1. Remove recursion during snapshot writing and reading
2. set thread stack size to 128k
3. Fix the native message handler to ensure that it works with the new model of not recursively inlining objects.
Review URL: https://chromiumcodereview.appspot.com//10535066
------------------------------------------------------------------------
r8508 | srdjan@google.com | 2012-06-12 02:17:35 +0900 (火, 12  6月 2012) | 2 lines

Fix x64 breakage.
Review URL: https://chromiumcodereview.appspot.com//10538069
------------------------------------------------------------------------
r8507 | srdjan@google.com | 2012-06-12 02:02:39 +0900 (火, 12  6月 2012) | 3 lines

Add stack check in loops so that loops can be stopped. Optimize relational operations.
Use class-ids to describe type of operation. Should we adapt BinaryOp to use class ids as well?
Review URL: https://chromiumcodereview.appspot.com//10536086
------------------------------------------------------------------------
r8464 | asiva@google.com | 2012-06-09 05:20:54 +0900 (土, 09  6月 2012) | 2 lines

Fix bug in native message writer, the GetMarkedCObjectMark method was shifting teh value incorrectly resulting in it returning bad object ids.
Review URL: https://chromiumcodereview.appspot.com//10541055
------------------------------------------------------------------------
r8462 | vegorov@google.com | 2012-06-09 04:36:26 +0900 (土, 09  6月 2012) | 7 lines

Implement inlined LoadIndexed operation for arrays on x64.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10538064
------------------------------------------------------------------------
r8459 | srdjan@google.com | 2012-06-09 03:20:45 +0900 (土, 09  6月 2012) | 2 lines

Add righ shift test for corner cases, use macro for deopt reasons (all suggested by Slava in a previous CL)
Review URL: https://chromiumcodereview.appspot.com//10539068
------------------------------------------------------------------------
r8457 | hausner@google.com | 2012-06-09 02:51:50 +0900 (土, 09  6月 2012) | 11 lines

Debugger break on TypeError, AssertionError

Add debugger functionality to pause the VM whenever a TypeError
or AssertionError exception happens.

This is a first step towards breaking on handled and unhanded
exceptions in general. We first need to generate more debug info
for catch handlers so we can determine whether an exception will
be handled or not before we unwind the stack to run the catch
clauses.
Review URL: https://chromiumcodereview.appspot.com//10537065
------------------------------------------------------------------------
r8450 | srdjan@google.com | 2012-06-09 01:59:49 +0900 (土, 09  6月 2012) | 2 lines

Implement Smi binops ia32 (new compiler).
Review URL: https://chromiumcodereview.appspot.com//10542079
------------------------------------------------------------------------
r8442 | srdjan@google.com | 2012-06-09 00:13:56 +0900 (土, 09  6月 2012) | 2 lines

Add more intrinsics, enable new compiler's optimized mode for ia32.
Review URL: https://chromiumcodereview.appspot.com//10541069
------------------------------------------------------------------------
r8437 | vegorov@google.com | 2012-06-08 22:11:11 +0900 (金, 08  6月 2012) | 9 lines

Do not reuse tags_ field to store next_ pointer of FreeListElement.

Make tags_ field be valid (i.e. encode size and class id) for free list elements.

R=iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10538022
------------------------------------------------------------------------
r8433 | vegorov@google.com | 2012-06-08 20:27:28 +0900 (金, 08  6月 2012) | 8 lines

Implement inlined version of binary arithmetic operations for doubles.

No attempt to reuse temporary boxes or locally propagate types is done.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10533053
------------------------------------------------------------------------
r8411 | cshapiro@google.com | 2012-06-08 07:29:09 +0900 (金, 08  6月 2012) | 3 lines

Force growth when retrying an old-space allocation.

Review URL: https://chromiumcodereview.appspot.com//10458072
------------------------------------------------------------------------
r8409 | iposva@google.com | 2012-06-08 07:17:42 +0900 (金, 08  6月 2012) | 2 lines

- Simplify logic when setting up handle content.
Review URL: https://chromiumcodereview.appspot.com//10541061
------------------------------------------------------------------------
r8406 | srdjan@google.com | 2012-06-08 04:49:50 +0900 (金, 08  6月 2012) | 3 lines

Inline setters, getters, various cleanups & restructuring.
TODO: cid, token_index and try_index are often passsed around. We should pack them in a data structure.
Review URL: https://chromiumcodereview.appspot.com//10540040
------------------------------------------------------------------------
r8403 | srdjan@google.com | 2012-06-08 03:06:15 +0900 (金, 08  6月 2012) | 2 lines

Implemented missing instructions in ia32, more sharing, removed bailouts, enable optimiziations on ia32 with new compiler.
Review URL: https://chromiumcodereview.appspot.com//10538024
------------------------------------------------------------------------
r8390 | fschneider@google.com | 2012-06-07 21:31:35 +0900 (木, 07  6月 2012) | 9 lines

Add type testers to all IL classes.

This change does not change any functionality.  Until now we only had
a select number of type-testers. The CL adds Is- test predicates and As-
type cast function for all computations.

It is in  preparation for upcoming changes where I need to test different
computations for their type.
Review URL: https://chromiumcodereview.appspot.com//10537051
------------------------------------------------------------------------
r8388 | iposva@google.com | 2012-06-07 20:28:24 +0900 (木, 07  6月 2012) | 2 lines

- Fix build.
Review URL: https://chromiumcodereview.appspot.com//10536051
------------------------------------------------------------------------
r8387 | iposva@google.com | 2012-06-07 20:24:25 +0900 (木, 07  6月 2012) | 2 lines

- Get handle vtable from a static table for predefined classes.
Review URL: https://chromiumcodereview.appspot.com//10540045
------------------------------------------------------------------------
r8371 | cshapiro@google.com | 2012-06-07 08:43:42 +0900 (木, 07  6月 2012) | 9 lines

Intrinsify some ByteArray methods.

get:length is intrinsified for internal and external subtypes.

[] is intrinsified for 8- and 16-bit internal subtypes on ia32.

[] is also intrinsified for 32-bit internal subtypes on x64.

Review URL: https://chromiumcodereview.appspot.com//10546035
------------------------------------------------------------------------
r8351 | srdjan@google.com | 2012-06-07 02:40:45 +0900 (木, 07  6月 2012) | 2 lines

Small efficiency fix.
Review URL: https://chromiumcodereview.appspot.com//10542032
------------------------------------------------------------------------
r8343 | srdjan@google.com | 2012-06-07 00:42:07 +0900 (木, 07  6月 2012) | 5 lines

More code for ia32, more shared code.

CreateArrayComp, EqualityCompareComp, StoreStaticField, LoadStaticField, StoreIndexedComp, StoreInstanceFieldComp, Throw, Rethrow, AssertBooleanComp.
Made more code shared, which has the disadvantage od splitting MakeLocationSummary from EmitNativeCode. Discuss.
Review URL: https://chromiumcodereview.appspot.com//10543013
------------------------------------------------------------------------
r8337 | iposva@google.com | 2012-06-06 23:47:17 +0900 (水, 06  6月 2012) | 2 lines

- Add an isolate field to visitors.
Review URL: https://chromiumcodereview.appspot.com//10502004
------------------------------------------------------------------------
r8336 | vegorov@google.com | 2012-06-06 23:22:52 +0900 (水, 06  6月 2012) | 11 lines

Eliminate RawObject::class_ field entirely.

Removed initializations of class_ field done in runtime and generated code on ia32/x64.

Changed forwarding address encoding used by scavenger: kFreeBit is now used to distinguish evacuated objects from not evacuated because scavenger will never encounter real FreeListElement.

Changed FreeListElement layout to match RawObject layout.

R=iposva@google.com

Review URL: https://chromiumcodereview.appspot.com//10521004
------------------------------------------------------------------------
r8322 | fschneider@google.com | 2012-06-06 20:09:02 +0900 (水, 06  6月 2012) | 9 lines

Add flow graph printing into a .cfg file with flag --print-flow-graph-file.

This CL adds a flag --print-flow-graph-file which produces one
.cfg-file per isolate when enabled. Currently it prints the final
flow graph before code generation.

I also added SuccessorAt and SuccessorCount to allow easy iteration
over the successors of a basic block.
Review URL: https://chromiumcodereview.appspot.com//10446116
------------------------------------------------------------------------
r8292 | srdjan@google.com | 2012-06-06 01:37:38 +0900 (水, 06  6月 2012) | 2 lines

Move inlined type checking code to new compiler ia32. Sharing more and more code between ia32/x64 (ongoing process), refactored x64 code slightly.
Review URL: https://chromiumcodereview.appspot.com//10477020
------------------------------------------------------------------------
r8257 | srdjan@google.com | 2012-06-05 02:06:43 +0900 (火, 05  6月 2012) | 2 lines

Implemented in ia32: branch, strict compare, instance setter, instanceof and assertassigneable with runtime calls only.
Review URL: https://chromiumcodereview.appspot.com//10466006
------------------------------------------------------------------------
r8254 | srdjan@google.com | 2012-06-05 01:08:19 +0900 (火, 05  6月 2012) | 2 lines

More shared code.
Review URL: https://chromiumcodereview.appspot.com//10500005
------------------------------------------------------------------------
r8253 | vegorov@google.com | 2012-06-05 00:54:56 +0900 (火, 05  6月 2012) | 7 lines

Implement AllocateContextComp, ChainContext, CloneContext on ia32

R=fschneider@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10509004
------------------------------------------------------------------------
r8251 | vegorov@google.com | 2012-06-05 00:31:13 +0900 (火, 05  6月 2012) | 5 lines

Implement LoadVMField, StoreVMField, AllocateObjectWithBoundsCheck, InstantiateTypeArguments on ia32.

R=fschneider@google.com

Review URL: https://chromiumcodereview.appspot.com//10511010
------------------------------------------------------------------------
r8244 | vegorov@google.com | 2012-06-04 19:29:00 +0900 (月, 04  6月 2012) | 7 lines

Avoid reading RawObject::class_ directly in the runtime.

Instead rely on tags_ and perform lookups through isolate's class table where appropriately.

R=iposva@google.com

Review URL: https://chromiumcodereview.appspot.com//10444091
------------------------------------------------------------------------
r8220 | hausner@google.com | 2012-06-02 09:07:12 +0900 (土, 02  6月 2012) | 4 lines

Add string encoding to wire protocol

Also, add command to retrieve the source text of a given script.
Review URL: https://chromiumcodereview.appspot.com//10496006
------------------------------------------------------------------------
r8212 | srdjan@google.com | 2012-06-02 03:51:00 +0900 (土, 02  6月 2012) | 2 lines

Submit reviewed Florian's Cl: https://chromiumcodereview.appspot.com/10447143/
Review URL: https://chromiumcodereview.appspot.com//10466004
------------------------------------------------------------------------
r8211 | srdjan@google.com | 2012-06-02 03:38:35 +0900 (土, 02  6月 2012) | 2 lines

Implement optimized unary ops for ia32 as well. Fix a crash in disassembler.
Review URL: https://chromiumcodereview.appspot.com//10453110
------------------------------------------------------------------------
r8207 | srdjan@google.com | 2012-06-02 03:09:40 +0900 (土, 02  6月 2012) | 2 lines

FlowGraphCompiler is not a visitor any longer. Start consolidating shared code between the x64 and ia32 compilers into a FlowGraphCompilerShared. Idea would to use the FlowGraphCompilerShared type from shared code, and FlowGraphCompiler from machine specific code.
Review URL: https://chromiumcodereview.appspot.com//10447133
------------------------------------------------------------------------
r8200 | fschneider@google.com | 2012-06-02 00:55:01 +0900 (土, 02  6月 2012) | 5 lines

Temporarily disable FlowGraphOptimizer on ia32 to make tests pass with --use_new_compiler on.

Once we ported all instructions produced by the FlowGraphOptimizer to ia32 we
can remove this code again.
Review URL: https://chromiumcodereview.appspot.com//10462004
------------------------------------------------------------------------
r8196 | regis@google.com | 2012-06-02 00:26:07 +0900 (土, 02  6月 2012) | 3 lines

Port CopyParameters() to new ia32 compiler.
Use same function order as in x64.
Review URL: https://chromiumcodereview.appspot.com//10451109
------------------------------------------------------------------------
r8190 | vegorov@google.com | 2012-06-01 20:09:27 +0900 (金, 01  6月 2012) | 5 lines

Add DISALLOW_COPY_AND_ASSIGN to InstructionWithInputs.

TBR=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10453115
------------------------------------------------------------------------
r8187 | fschneider@google.com | 2012-06-01 18:28:31 +0900 (金, 01  6月 2012) | 4 lines

Remove unused function GeneratePreEntryCode from ia32 code generator.

It is never invoked and can therefore be removed.
Review URL: https://chromiumcodereview.appspot.com//10449106
------------------------------------------------------------------------
r8181 | asiva@google.com | 2012-06-01 09:15:30 +0900 (金, 01  6月 2012) | 2 lines

Refactor snapshot writing code in preparation for the change to remove recursive calls to WriteObject and ReadObject.
Review URL: https://chromiumcodereview.appspot.com//10446112
------------------------------------------------------------------------
r8180 | asiva@google.com | 2012-06-01 08:50:32 +0900 (金, 01  6月 2012) | 2 lines

Use memmove instead of a loop to read bytes.
Review URL: https://chromiumcodereview.appspot.com//10446104
------------------------------------------------------------------------
r8177 | hausner@google.com | 2012-06-01 07:35:29 +0900 (金, 01  6月 2012) | 13 lines

Eliminate unary plus with hex literals

The spec says unary + is only allowed with integer and floating point literals, not with hex literals. Somebody noticed that the VM accepted
+0x10 as well.

Consequently, the Math.parseInt(str) library function should fail with
a BadNumberFormatException if it is called with a hex number that is preceded by a +.

Fixes issue 1540.

This change exposed that the dart2js core library implementation is
falsely accepting +0xNNN hex numbers. I filed issue 3333.
Review URL: https://chromiumcodereview.appspot.com//10456060
------------------------------------------------------------------------
r8174 | srdjan@google.com | 2012-06-01 05:38:55 +0900 (金, 01  6月 2012) | 2 lines

Adding unary op optimizations, missing assembly operations.
Review URL: https://chromiumcodereview.appspot.com//10440099
------------------------------------------------------------------------
r8173 | hausner@google.com | 2012-06-01 05:17:34 +0900 (金, 01  6月 2012) | 11 lines

Bigger stepping granularity in debugging

- Single step now steps to a safe point on the next line.
- Step into no longer steps into library code.
- Each library has a flag that specifies whether one
  can step into its code.

Later I will add an API to set the per-library flag. Currently
it's set to true for the top-level library and to false for
all other libraries.
Review URL: https://chromiumcodereview.appspot.com//10442088
------------------------------------------------------------------------
r8171 | srdjan@google.com | 2012-06-01 03:09:11 +0900 (金, 01  6月 2012) | 2 lines

Real fix for breakage: if type in DECLARE_FLAG differs from DEFINE_FLAG, windows compiler is the only one who complains. Bravo!
Review URL: https://chromiumcodereview.appspot.com//10459053
------------------------------------------------------------------------
r8169 | srdjan@google.com | 2012-06-01 02:50:30 +0900 (金, 01  6月 2012) | 2 lines

Hopefully fix currently unexplainable windows failures.
Review URL: https://chromiumcodereview.appspot.com//10443111
------------------------------------------------------------------------
r8166 | srdjan@google.com | 2012-06-01 02:24:23 +0900 (金, 01  6月 2012) | 2 lines

Move ReturnInstr to new scheme (x64 and ia32) and implement more code in new ia32 compiler.
Review URL: https://chromiumcodereview.appspot.com//10458050
------------------------------------------------------------------------
r8164 | regis@google.com | 2012-06-01 00:57:06 +0900 (金, 01  6月 2012) | 2 lines

Insert closure calls in conditional expression of assert (issue 1584).
Review URL: https://chromiumcodereview.appspot.com//10446102
------------------------------------------------------------------------
r8163 | vegorov@google.com | 2012-06-01 00:52:39 +0900 (金, 01  6月 2012) | 5 lines

Move Throw and ReThrow to the location based code generation.

R=fschneider@google.com

Review URL: https://chromiumcodereview.appspot.com//10453098
------------------------------------------------------------------------
r8162 | regis@google.com | 2012-06-01 00:51:36 +0900 (金, 01  6月 2012) | 3 lines

Check upper bounds of factory class type parameters when instantiating an
interface (issue 1380).
Review URL: https://chromiumcodereview.appspot.com//10441115
------------------------------------------------------------------------
r8159 | vegorov@google.com | 2012-06-01 00:35:14 +0900 (金, 01  6月 2012) | 7 lines

In generated code for x64 don't load object's class directly from class_ field.

Instead look it up in class table by class index taken from object's tags.

R=iposva@google.com

Review URL: https://chromiumcodereview.appspot.com//10458031
------------------------------------------------------------------------
r8148 | iposva@google.com | 2012-05-31 21:41:37 +0900 (木, 31  5月 2012) | 3 lines

- Rename class index to class id.
- Remove unused method.
Review URL: https://chromiumcodereview.appspot.com//10441111
------------------------------------------------------------------------
r8144 | regis@google.com | 2012-05-31 17:31:30 +0900 (木, 31  5月 2012) | 2 lines

Address review comments in commited cl (issue 10460002).
Review URL: https://chromiumcodereview.appspot.com//10448079
------------------------------------------------------------------------
r8138 | cshapiro@google.com | 2012-05-31 13:20:16 +0900 (木, 31  5月 2012) | 3 lines

Ignore the growth policy when fragmentation prevents allocation.

Review URL: https://chromiumcodereview.appspot.com//10458054
------------------------------------------------------------------------
r8136 | cshapiro@google.com | 2012-05-31 11:49:56 +0900 (木, 31  5月 2012) | 3 lines

Implement growth policy for old space using time and space signals.

Review URL: https://chromiumcodereview.appspot.com//10442073
------------------------------------------------------------------------
r8134 | hausner@google.com | 2012-05-31 08:41:33 +0900 (木, 31  5月 2012) | 4 lines

Clarify error message when illegally accessing 'this'

Fix bug 3185
Review URL: https://chromiumcodereview.appspot.com//10447102
------------------------------------------------------------------------
r8119 | srdjan@google.com | 2012-05-31 02:35:20 +0900 (木, 31  5月 2012) | 2 lines

Fix a bug in ia32 shift left , implemented  more inlined binary operations in x64.
Review URL: https://chromiumcodereview.appspot.com//10440082
------------------------------------------------------------------------
r8117 | turnidge@google.com | 2012-05-31 02:07:19 +0900 (木, 31  5月 2012) | 26 lines

Remove the partially completed code for remote IsolateMirrors and
replace it with the beginnings of a local (same isolate) IsolateMirror
implementation.

Removed old mirror tests and added two new mirror tests.

Even though mirrors.cc is part of the vm, I chose to implement most of
it using the dart embedding interface instead of our internal
interfaces because the embedding interface was more convenient.
mirrors.cc is basically all new in this CL -- don't pay any attention
to diffs for that file.

Added dart embedding functions required for the functionality in this
CL: Dart_DebugName, Dart_GetNativeInstanceFieldCount,
Dart_RootLibrary, Dart_RegisteredLibraryUrls, and Dart_LibraryName.

Extended or modified some existing dart api functions, primarily to
make them propagate error handles properly.

Added tests for new dart embedding api functionality.

Added the ability to determine if a port is local to the current isolate.

Extended NotImplementedException to accept an optional string
argument.  I wanted to give more descriptive error messages.
Review URL: https://chromiumcodereview.appspot.com//10416050
------------------------------------------------------------------------
r8116 | srdjan@google.com | 2012-05-31 01:57:19 +0900 (木, 31  5月 2012) | 2 lines

Started new compiler for ia32. Getters and setters can be intrinsified within the new compiler.
Review URL: https://chromiumcodereview.appspot.com//10458027
------------------------------------------------------------------------
r8110 | srdjan@google.com | 2012-05-31 01:05:10 +0900 (木, 31  5月 2012) | 2 lines

Do pops instead of addq(RSP when possible).
Review URL: https://chromiumcodereview.appspot.com//10458033
------------------------------------------------------------------------
r8109 | srdjan@google.com | 2012-05-31 00:55:46 +0900 (木, 31  5月 2012) | 2 lines

Use temporary variable for StoreIndexed that returns a value.
Review URL: https://chromiumcodereview.appspot.com//10448059
------------------------------------------------------------------------
r8107 | regis@google.com | 2012-05-31 00:13:54 +0900 (木, 31  5月 2012) | 2 lines

Move ExtractConstructorTypeArguments and CatchEntry to new location template.
Review URL: https://chromiumcodereview.appspot.com//10459023
------------------------------------------------------------------------
r8104 | regis@google.com | 2012-05-30 22:47:24 +0900 (水, 30  5月 2012) | 2 lines

Move CreateArray and CreateClosure to new location template.
Review URL: https://chromiumcodereview.appspot.com//10460002
------------------------------------------------------------------------
r8101 | vegorov@google.com | 2012-05-30 21:25:49 +0900 (水, 30  5月 2012) | 5 lines

In generated code for ia32 don't load object's class directly from class_ field.

Instead look it up in class table by class index taken from object's tags.

Review URL: https://chromiumcodereview.appspot.com//10447064
------------------------------------------------------------------------
r8098 | vegorov@google.com | 2012-05-30 20:42:55 +0900 (水, 30  5月 2012) | 5 lines

When generate snapshot use tags_ instead of class_ to store object ids.

This is step towards removal of class_ field.

Review URL: https://chromiumcodereview.appspot.com//10444059
------------------------------------------------------------------------
r8075 | hausner@google.com | 2012-05-30 04:51:51 +0900 (水, 30  5月 2012) | 6 lines

Introduce library ids and info in the wire protocol

- Library hierarchy (imports, prefixes)
- Global (top-level) variables
- Removing breakpoints
Review URL: https://chromiumcodereview.appspot.com//10447045
------------------------------------------------------------------------
r8073 | iposva@google.com | 2012-05-30 03:03:21 +0900 (水, 30  5月 2012) | 3 lines

Address review comments:
- Remove unnecessary store to local variable.
Review URL: https://chromiumcodereview.appspot.com//10446062
------------------------------------------------------------------------
r8072 | turnidge@google.com | 2012-05-30 03:00:45 +0900 (水, 30  5月 2012) | 13 lines

Fix Dart_New so that it works with List.

Specifically, when some interface "I" declares a default class "C",
that class "C" may either implement or not implement "I".  It turns
out that the name lookup is supposed to be different in these two
cases.  Before I only handled one of these cases correctly.

Also, it turns out I was passing bogus parameters to factory constructors.
I was supposed to pass type arguments, but instead I was passing the
wrong thing.  Fixed this.

This should fix issue 2971.
Review URL: https://chromiumcodereview.appspot.com//10441034
------------------------------------------------------------------------
r8050 | fschneider@google.com | 2012-05-29 19:55:23 +0900 (火, 29  5月 2012) | 6 lines

Change three more instructions on x64 to use location-based codegen templates.

This is a straight-forward port of the existing templates. For the future we
may consider refactoring those instructions to be like normal calls with arguments
 pushed on the stack explictly in the IL.
Review URL: https://chromiumcodereview.appspot.com//10456012
------------------------------------------------------------------------
r8010 | srdjan@google.com | 2012-05-26 03:54:12 +0900 (土, 26  5月 2012) | 2 lines

Moved InstantiateTypeArgumentsComp and InstanceOfComp.
Review URL: https://chromiumcodereview.appspot.com//10440053
------------------------------------------------------------------------
r8006 | fschneider@google.com | 2012-05-26 01:59:02 +0900 (土, 26  5月 2012) | 2 lines

Add location summary to AllocateContext and ExtractConstructorInstantiator.
Review URL: https://chromiumcodereview.appspot.com//10442027
------------------------------------------------------------------------
r7973 | fschneider@google.com | 2012-05-25 09:34:33 +0900 (金, 25  5月 2012) | 5 lines

Make CloneContext and ChainContext use location summaries.

Added a helper Location::NoLocation() to indicate that an instruction
does not produce a result.
Review URL: https://chromiumcodereview.appspot.com//10453018
------------------------------------------------------------------------
r7971 | srdjan@google.com | 2012-05-25 09:07:31 +0900 (金, 25  5月 2012) | 2 lines

Use new temp register allocation on binary op.
Review URL: https://chromiumcodereview.appspot.com//10441039
------------------------------------------------------------------------
r7970 | srdjan@google.com | 2012-05-25 09:00:36 +0900 (金, 25  5月 2012) | 2 lines

More intrinsification x64: array index load and store.
Review URL: https://chromiumcodereview.appspot.com//10451026
------------------------------------------------------------------------
r7969 | srdjan@google.com | 2012-05-25 08:57:44 +0900 (金, 25  5月 2012) | 2 lines

When methods cannot be optimized initialize their count to a large negative number, otherwise they keep calling the runtime.
Review URL: https://chromiumcodereview.appspot.com//10421028
------------------------------------------------------------------------
r7968 | fschneider@google.com | 2012-05-25 08:35:21 +0900 (金, 25  5月 2012) | 25 lines

Add location support to five more instructions.

This CL changes:
 EqualityCompare
 LoadInstanceField
 StoreInstanceField
 NativeCall
 BooleanNegate

Most instructions were straight forward. The
 StoreInstanceField is a little odd: In the existing code it
 would leave the RHS (value) in RDX instead of RAX. This
 means that it does not produce a result that can be used.

It seems we currently generate StoreInstanceField only in an
 effect context, and never as part of another expression.
 That's why the current code works.

I changed it to produce a result if necessary and, for now,
 made the register assignment fixed for StoreInstanceField
 to make the result register match the value (second input).

We can add support to allow reusing any input register as a
 result register later, if necessary.
Review URL: https://chromiumcodereview.appspot.com//10450025
------------------------------------------------------------------------
r7962 | srdjan@google.com | 2012-05-25 05:25:37 +0900 (金, 25  5月 2012) | 3 lines

- Port AssertBool and AssertAssigneable to new location template.
- Change AssertAssigneable to always have instantiator and instantiator-type-arguments (if only as a null literal).
Review URL: https://chromiumcodereview.appspot.com//10446019
------------------------------------------------------------------------
r7961 | fschneider@google.com | 2012-05-25 05:14:53 +0900 (金, 25  5月 2012) | 5 lines

Add support for temp locations and port Load-/StoreStaticField to use locations.

The temps are allocated like inputs (can be fixed register or not). Temp registers
are always distinct from all inputs and the output.
Review URL: https://chromiumcodereview.appspot.com//10443013
------------------------------------------------------------------------
r7957 | iposva@google.com | 2012-05-25 03:11:21 +0900 (金, 25  5月 2012) | 2 lines

- Bump the code heap size to avoid running out during testing.
Review URL: https://chromiumcodereview.appspot.com//10450020
------------------------------------------------------------------------
r7952 | srdjan@google.com | 2012-05-25 01:50:57 +0900 (金, 25  5月 2012) | 6 lines

First step toward an optimizing compiler:
- Fix ic-data instrumentation
- Optimize '+' for Smi-s only, by replacing the instance call with inlined operations.
- Add deoptimization stub
- Add deoptimzation support.
Review URL: https://chromiumcodereview.appspot.com//10431006
------------------------------------------------------------------------
r7951 | srdjan@google.com | 2012-05-25 01:15:09 +0900 (金, 25  5月 2012) | 2 lines

Implement some intrinsics on x64, fix a bug in ia32 intrinciscs (must return false if there is a fall-through, so that slow path will be generated).
Review URL: https://chromiumcodereview.appspot.com//10450006
------------------------------------------------------------------------
r7936 | iposva@google.com | 2012-05-24 10:13:04 +0900 (木, 24  5月 2012) | 4 lines

- Rename NativeLoadField/NativeStoreField to LoadVMField/StoreVMField.
- Implement code patterns for LoadVMField/StoreVMField.
- Fix order of inputs in StoreVMField.
Review URL: https://chromiumcodereview.appspot.com//10451006
------------------------------------------------------------------------
r7935 | fschneider@google.com | 2012-05-24 09:53:39 +0900 (木, 24  5月 2012) | 4 lines

Make order of function definitions in intermediate_language_x64.cc consistent.

This is a purely mechanical change moving code around.
Review URL: https://chromiumcodereview.appspot.com//10445003
------------------------------------------------------------------------
r7934 | regis@google.com | 2012-05-24 08:00:20 +0900 (木, 24  5月 2012) | 2 lines

Address review comments missed in previous change.
Review URL: https://chromiumcodereview.appspot.com//10432010
------------------------------------------------------------------------
r7928 | fschneider@google.com | 2012-05-24 07:17:13 +0900 (木, 24  5月 2012) | 5 lines

Move two more instructions to intermediate_language_x64.cc.

This CL changes AllocateObject and AllocateObjectWithBoundsCheck
to use location-based code generator templates.
Review URL: https://chromiumcodereview.appspot.com//10425007
------------------------------------------------------------------------
r7926 | turnidge@google.com | 2012-05-24 06:54:00 +0900 (木, 24  5月 2012) | 2 lines

Make Dart_GetClass work for private classes.
Review URL: https://chromiumcodereview.appspot.com//10433003
------------------------------------------------------------------------
r7925 | regis@google.com | 2012-05-24 06:47:05 +0900 (木, 24  5月 2012) | 2 lines

Disallow repeated formal parameters (issue 2240).
Review URL: https://chromiumcodereview.appspot.com//10434005
------------------------------------------------------------------------
r7923 | hausner@google.com | 2012-05-24 05:28:21 +0900 (木, 24  5月 2012) | 7 lines

Replace linked list of loaded libraries

Replace the linked list of loaded libraries with a growable array
or libraries in the object store. This array will be used in the
debugger, where we use the index of a library in the array as an
id number, similarly to the class id and the table of loaded classes.
Review URL: https://chromiumcodereview.appspot.com//10414084
------------------------------------------------------------------------
r7922 | regis@google.com | 2012-05-24 05:05:40 +0900 (木, 24  5月 2012) | 3 lines

Disallow repeated type parameters (issues 2239 & 2240).
Add test.
Review URL: https://chromiumcodereview.appspot.com//10426002
------------------------------------------------------------------------
r7917 | turnidge@google.com | 2012-05-24 03:32:51 +0900 (木, 24  5月 2012) | 4 lines

spawnUri.  Take two.  This time I'll wait for Anton before committing :-).

See original change 7756 for description.
Review URL: https://chromiumcodereview.appspot.com//10407042
------------------------------------------------------------------------
r7892 | iposva@google.com | 2012-05-23 13:30:38 +0900 (水, 23  5月 2012) | 2 lines

- Enable throwing of OOM on allocation failure.
Review URL: https://chromiumcodereview.appspot.com//10417046
------------------------------------------------------------------------
r7890 | iposva@google.com | 2012-05-23 12:29:00 +0900 (水, 23  5月 2012) | 2 lines

- Add more information to --verbose-gc.
Review URL: https://chromiumcodereview.appspot.com//10414069
------------------------------------------------------------------------
r7888 | srdjan@google.com | 2012-05-23 09:27:01 +0900 (水, 23  5月 2012) | 2 lines

CTX and TMP registers may not be allocated.
Review URL: https://chromiumcodereview.appspot.com//10399136
------------------------------------------------------------------------
r7887 | asiva@google.com | 2012-05-23 09:17:07 +0900 (水, 23  5月 2012) | 2 lines

Trace heap size during initialization after reading the snapshot.
Review URL: https://chromiumcodereview.appspot.com//10414048
------------------------------------------------------------------------
r7884 | fschneider@google.com | 2012-05-23 09:05:30 +0900 (水, 23  5月 2012) | 2 lines

This should avoid duplicating too much boilerplate code.
Review URL: https://chromiumcodereview.appspot.com//10412043
------------------------------------------------------------------------
r7878 | fschneider@google.com | 2012-05-23 05:44:15 +0900 (水, 23  5月 2012) | 4 lines

Add a location summary to LoadLocal, StoreLocal and ConstantVal.

This CL makes those three code generation patterns location-based.
Review URL: https://chromiumcodereview.appspot.com//10416025
------------------------------------------------------------------------
r7871 | regis@google.com | 2012-05-23 03:59:14 +0900 (水, 23  5月 2012) | 3 lines

Properly finalize type with malformed type argument.
Add test.
Review URL: https://chromiumcodereview.appspot.com//10411070
------------------------------------------------------------------------
r7869 | vegorov@google.com | 2012-05-23 03:36:19 +0900 (水, 23  5月 2012) | 7 lines

Convert CurrentContext and StoreContext to locations code generation scheme

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10416031
------------------------------------------------------------------------
r7868 | asiva@google.com | 2012-05-23 03:35:48 +0900 (水, 23  5月 2012) | 2 lines

Revert code heap size back to 8MB and fix the benchmark invocation to set the code heap size for benchmark runs to 10MB so that the compile all run of dart2js will be fine.
Review URL: https://chromiumcodereview.appspot.com//10332296
------------------------------------------------------------------------
r7867 | srdjan@google.com | 2012-05-23 03:31:55 +0900 (水, 23  5月 2012) | 2 lines

More inlined type checking for x64.
Review URL: https://chromiumcodereview.appspot.com//10409067
------------------------------------------------------------------------
r7864 | hausner@google.com | 2012-05-23 03:06:34 +0900 (水, 23  5月 2012) | 2 lines

Introduce remote objects in Debugger protocol
Review URL: https://chromiumcodereview.appspot.com//10407071
------------------------------------------------------------------------
r7860 | iposva@google.com | 2012-05-23 01:54:31 +0900 (水, 23  5月 2012) | 3 lines

- Add a math library. Currently it mostly matches the Math class in dart:core.
- Add a useable Random number generator.
Review URL: https://chromiumcodereview.appspot.com//10389150
------------------------------------------------------------------------
r7839 | srdjan@google.com | 2012-05-22 10:29:37 +0900 (火, 22  5月 2012) | 2 lines

Temporary raise code heap size 8Mb -> 10Mb until compile all in checked mode explicitly increases it.
Review URL: https://chromiumcodereview.appspot.com//10388223
------------------------------------------------------------------------
r7837 | srdjan@google.com | 2012-05-22 09:55:20 +0900 (火, 22  5月 2012) | 2 lines

Started porting inlined type checks to x64 (will be the future pattern for other architectures).
Review URL: https://chromiumcodereview.appspot.com//10414026
------------------------------------------------------------------------
r7835 | fschneider@google.com | 2012-05-22 09:27:16 +0900 (火, 22  5月 2012) | 8 lines

Reland: Migrate {Closure,Instance,Static}Call to use location-based code generation templates.

This is the same CL as http://codereview.chromium.org/10407077/ with compilation on ia32 fixed:

Added missing empty function definitions in intermediate_language_ia32.cc.

TBR=
Review URL: https://chromiumcodereview.appspot.com//10407082
------------------------------------------------------------------------
r7834 | fschneider@google.com | 2012-05-22 09:12:42 +0900 (火, 22  5月 2012) | 4 lines

Reverting r7833 because of failing compilation.

TBR=
Review URL: https://chromiumcodereview.appspot.com//10392191
------------------------------------------------------------------------
r7833 | fschneider@google.com | 2012-05-22 09:01:15 +0900 (火, 22  5月 2012) | 7 lines

Migrate {Closure,Instance,Static}Call to use location-based code generation templates.

Calls that have all arguments pushed on the stack can share a common location-summary.
For the (non-optimizing) flow-graph compiler this means:
1. Nothing to do for the inputs.
2. The result is in fixed register RAX.
Review URL: https://chromiumcodereview.appspot.com//10407077
------------------------------------------------------------------------
r7831 | fschneider@google.com | 2012-05-22 08:19:55 +0900 (火, 22  5月 2012) | 8 lines

Avoid redundant pop/push before Throw/ReThrow in the flow-graph compiler.

Since the runtime call expects its arguments on the stack, we
can just push them in the same way we do in other places.

The current code already assumes that the arguments are pushed in
the correct order.
Review URL: https://chromiumcodereview.appspot.com//10408048
------------------------------------------------------------------------
r7826 | regis@google.com | 2012-05-22 07:21:12 +0900 (火, 22  5月 2012) | 2 lines

Add flag to measure impact of type check elimination.
Review URL: https://chromiumcodereview.appspot.com//10407074
------------------------------------------------------------------------
r7824 | asiva@google.com | 2012-05-22 06:41:49 +0900 (火, 22  5月 2012) | 2 lines

Fix some dart api functions to use the proper unwrap patterns.
Review URL: https://chromiumcodereview.appspot.com//10411038
------------------------------------------------------------------------
r7822 | regis@google.com | 2012-05-22 05:42:34 +0900 (火, 22  5月 2012) | 3 lines

Remove compile-time error for unresolved factory names (issue 3079).
Add test.
Review URL: https://chromiumcodereview.appspot.com//10332276
------------------------------------------------------------------------
r7818 | vegorov@google.com | 2012-05-22 04:51:17 +0900 (火, 22  5月 2012) | 11 lines

Introduce locations based code generation.

Instructions and computations switched to the new code generation scheme should implement two virtual functions:

- locs() should return pointer to a LocationSummary object, that specifies location constraints for the instruction/computation.

- EmitNativeCode() should emit instructions/computations native code using locations provided through LocationSummary object attached to the instruction.

For converted functions instruction pattern should be removed from the FlowGraphCompiler visitor. It will not be used as long as instruction/computation returns non-NULL from locs().

Review URL: https://chromiumcodereview.appspot.com//10382234
------------------------------------------------------------------------
r7811 | fschneider@google.com | 2012-05-22 02:59:02 +0900 (火, 22  5月 2012) | 8 lines

Make saving and restoring of the context around closure calls explicit.

This is a first step to refactor the codegen-templates to be reused
between optimizing and non-optimizing backend.

The context is now explicitly saved in a temporary local variable and
not passed as an argument to the ClosureCall instruction anymore.
Review URL: https://chromiumcodereview.appspot.com//10409043
------------------------------------------------------------------------
r7808 | srdjan@google.com | 2012-05-22 02:37:03 +0900 (火, 22  5月 2012) | 2 lines

Hopefully fixing Windows warnings: fix array member initialization of EmbeddedArray.
Review URL: https://chromiumcodereview.appspot.com//10392182
------------------------------------------------------------------------
r7805 | floitsch@google.com | 2012-05-22 01:11:20 +0900 (火, 22  5月 2012) | 5 lines

Reapply "Add support for timezone offset and timezone name."

This reapplies commit 7800.

Review URL: https://chromiumcodereview.appspot.com//10417009
------------------------------------------------------------------------
r7804 | floitsch@google.com | 2012-05-22 00:13:46 +0900 (火, 22  5月 2012) | 5 lines

Revert "Add support for timezone offset and timezone name."

This reverts commit 7803.

Review URL: https://chromiumcodereview.appspot.com//10416008
------------------------------------------------------------------------
r7803 | floitsch@google.com | 2012-05-22 00:07:11 +0900 (火, 22  5月 2012) | 8 lines

Reapply "Add support for timezone offset and timezone name."

This reapplies commit 7800.
Original CL: https://chromiumcodereview.appspot.com/10383218/

Don't write *foo += x.

Review URL: https://chromiumcodereview.appspot.com//10413031
------------------------------------------------------------------------
r7802 | floitsch@google.com | 2012-05-21 23:40:27 +0900 (月, 21  5月 2012) | 5 lines

Revert "Add support for timezone offset and timezone name."

This reverts commit 7801..

Review URL: https://chromiumcodereview.appspot.com//10399106
------------------------------------------------------------------------
r7801 | floitsch@google.com | 2012-05-21 23:36:43 +0900 (月, 21  5月 2012) | 3 lines

Add support for timezone offset and timezone name.

Review URL: https://chromiumcodereview.appspot.com//10383218
------------------------------------------------------------------------
r7782 | regis@google.com | 2012-05-19 08:59:59 +0900 (土, 19  5月 2012) | 5 lines

Default parameter values are now allowed in interface methods and in abstract
methods, but not in function type aliases.
Made a negative test positive.
Disabled erroneous co19 tests (new co19 issue 123).
Review URL: https://chromiumcodereview.appspot.com//10392175
------------------------------------------------------------------------
r7778 | asiva@google.com | 2012-05-19 08:28:34 +0900 (土, 19  5月 2012) | 2 lines

Remove the special stub code region as we don't need it anymore. With the new frame layout convention we can find the first dart frame quickly.
Review URL: https://chromiumcodereview.appspot.com//10409038
------------------------------------------------------------------------
r7774 | asiva@google.com | 2012-05-19 07:27:06 +0900 (土, 19  5月 2012) | 6 lines

Remove script source from the snapshot in order to reduce the size and to make the image size smaller. When the source for a script is needed we regenerate the source (a close approximation).

The size of the core isolate snapshot (corelibs, builtin, io etc.) prior to
this change is 1438238 bytes and after the change it is 769026 bytes.
The CorelibIsolateStartup times goes from 5389 microseconds to 4843 microseconds.
Review URL: https://chromiumcodereview.appspot.com//10414005
------------------------------------------------------------------------
r7760 | srdjan@google.com | 2012-05-19 05:10:29 +0900 (土, 19  5月 2012) | 2 lines

Start porting fast typechecks to x64.
Review URL: https://chromiumcodereview.appspot.com//10407018
------------------------------------------------------------------------
r7757 | turnidge@google.com | 2012-05-19 03:35:04 +0900 (土, 19  5月 2012) | 2 lines

Revert my last change.
Review URL: https://chromiumcodereview.appspot.com//10332257
------------------------------------------------------------------------
r7756 | turnidge@google.com | 2012-05-19 03:22:10 +0900 (土, 19  5月 2012) | 43 lines

Implement spawnUri from dart:isolate.  This function allows us to
launch an isolate running a different script.  Finally.

Reviewers: This isn't as hard to review as it looks.  Dive right in!

Siggi: Take a look at my test status file changes and make sure I'm
excluding the right stuff.

Much of the churn in the CL comes from moving ownership of the
import_map.  It used to be set per-library and is now set per-isolate.
This caused a lot of superficial diffs.

DART EMBEDDING API CHANGES:

- Dart_IsolateCreateCallback now takes a script_uri and main argument
  instead of a name_prefix argument.  The script_uri argument allows
  the callback to launch different scripts.  The main argument is used
  in creating the isolate debug name.

- Dart_CreateIsolate now takes script_uri and main arguments.  These
  are used to build the isolate's debug name.

- Dart_LibraryTagHandler, Dart_LoadScript, and Dart_LoadLibrary no
  longer take an import_map.

- Added Dart_SetImportMap.

- Added Dart_RootLibrary to provide access to the root library for the
  current isolate.

OTHER STUFF

Add a couple of tests for spawnUri -- the existing tests assume that
scripts end in a .js suffix which isn't going to work out for us.

Changed how the debug name for isolates get built a bit.

Refactored bin/main.cc a bit.  Fixed some problems with error handling
while creating isolates.

Minor refactoring in builtin.dart to always pass is_windows rather
than relying on it being squirreled away.
Review URL: https://chromiumcodereview.appspot.com//10386107
------------------------------------------------------------------------
r7749 | regis@google.com | 2012-05-19 01:19:39 +0900 (土, 19  5月 2012) | 3 lines

Reapply this reverted change:
Implement updated method overriding rules (issue 2943).
Review URL: https://chromiumcodereview.appspot.com//10387186
------------------------------------------------------------------------
r7731 | fschneider@google.com | 2012-05-18 10:04:56 +0900 (金, 18  5月 2012) | 14 lines

Add IR printing into a supplied buffer and formatted comments on x64.

This change refactors printing function for instructions
so that they can be used for different purposes like
printing to stdout (what FlowGraphPrinter currently does),
creating code comments for the disassembler, or in the future
dumping the IR into a file.

I added an abstract interface to iterate over the inputs
 of an computation: InputCount and InputAt. This is only
 an intermediate step likely to change in the future. For
 that I had to bring back the [] operator for zero-operand
 instructions.
Review URL: https://chromiumcodereview.appspot.com//10407031
------------------------------------------------------------------------
r7730 | regis@google.com | 2012-05-18 10:04:34 +0900 (金, 18  5月 2012) | 2 lines

Revert r7729 until Dartium fixes its method override errors.
Review URL: https://chromiumcodereview.appspot.com//10399080
------------------------------------------------------------------------
r7729 | regis@google.com | 2012-05-18 09:28:57 +0900 (金, 18  5月 2012) | 3 lines

Implement updated method overriding rules (issue 2943).
Add language test.
Review URL: https://chromiumcodereview.appspot.com//10388189
------------------------------------------------------------------------
r7725 | cshapiro@google.com | 2012-05-18 07:57:00 +0900 (金, 18  5月 2012) | 5 lines

Reject high- and low-surrogates in escaped code points.

BUG=3097

Review URL: https://chromiumcodereview.appspot.com//10388179
------------------------------------------------------------------------
r7723 | vegorov@google.com | 2012-05-18 06:56:16 +0900 (金, 18  5月 2012) | 16 lines

Extend assembler with ability to produce comments for the generated code.

Extend x64 disassembler with ability to decode and output recorded comments.

Example output (currently comments are emitted only by flow graph compiler at block/instruction boundaries, once instruction printing is refactored and supports printing into buffer simple "instruction" comment will be replaced with the actual IL construct):

        ;; B0
        ;; B1
        ;; instruction
0x007f0fff812525 00000055 49 bb 21 00 b4 04 10  mov    $0x7f1004b40021,%r11
0x007f0fff81252c 0000005c 7f 00 00
0x007f0fff81252f 0000005f 41 53                 push   %r11

R=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10407019
------------------------------------------------------------------------
r7721 | hausner@google.com | 2012-05-18 06:25:20 +0900 (金, 18  5月 2012) | 2 lines

Revert 7718
Review URL: https://chromiumcodereview.appspot.com//10377188
------------------------------------------------------------------------
r7718 | hausner@google.com | 2012-05-18 06:14:33 +0900 (金, 18  5月 2012) | 9 lines

Disallow string plus operator

This is a test to see what (if anything) breaks on the buildbot when
the + operator on String is removed.

Will revert if necessary.

TBR=iposva
Review URL: https://chromiumcodereview.appspot.com//10408013
------------------------------------------------------------------------
r7716 | regis@google.com | 2012-05-18 03:47:45 +0900 (金, 18  5月 2012) | 2 lines

Address a few TODOs related to type propagation.
Review URL: https://chromiumcodereview.appspot.com//10407026
------------------------------------------------------------------------
r7708 | regis@google.com | 2012-05-17 08:21:24 +0900 (木, 17  5月 2012) | 2 lines

First shot at static type propagation and type test elimination.
Review URL: https://chromiumcodereview.appspot.com//10399051
------------------------------------------------------------------------
r7705 | fschneider@google.com | 2012-05-17 07:48:49 +0900 (木, 17  5月 2012) | 7 lines

Remove an unused input operand from ExtractConstructorInstantiator.

The second input is discarded, so we don't need to pass it as input to
the computation. The explicit pop in the code generator is replaced by 
LoadValue.  This is a small step in refactoring the flowgraph-based code 
generator to be shared between multiple backends.
Review URL: https://chromiumcodereview.appspot.com//10391171
------------------------------------------------------------------------
r7697 | srdjan@google.com | 2012-05-17 02:32:20 +0900 (木, 17  5月 2012) | 2 lines

Applied my comment to Kevin's CL (it did not go through in the first place).
Review URL: https://chromiumcodereview.appspot.com//10332200
------------------------------------------------------------------------
r7685 | kmillikin@google.com | 2012-05-16 22:28:02 +0900 (水, 16  5月 2012) | 11 lines

Compute assigned variables and dominance frontiers.

During basic block discovery, compute assigned variables in each
block.  After computing immediate dominators, compute dominance
frontiers.  Both of these will be used for SSA construction.

R=fschneider@google.com,srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10377104
------------------------------------------------------------------------
r7681 | kmillikin@google.com | 2012-05-16 21:10:02 +0900 (水, 16  5月 2012) | 10 lines

Add a global graph entry.

Ensure all blocks including exception handlers are reachable from the
entry.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10399026
------------------------------------------------------------------------
r7675 | asiva@google.com | 2012-05-16 09:47:05 +0900 (水, 16  5月 2012) | 5 lines

Change dart frame and stub frame layout to include the PC of the code executing on the frame. The stack frame layout is as follows:
  ret PC
  saved EBP                          <== EBP
  PC (used to locate RawInstruction) <== ESP
Review URL: https://chromiumcodereview.appspot.com//10375059
------------------------------------------------------------------------
r7674 | srdjan@google.com | 2012-05-16 09:35:33 +0900 (水, 16  5月 2012) | 2 lines

Move code for accessing captured variables into the IL.
Review URL: https://chromiumcodereview.appspot.com//10398046
------------------------------------------------------------------------
r7672 | efortuna@google.com | 2012-05-16 07:28:10 +0900 (水, 16  5月 2012) | 2 lines

Un revert the revert
Review URL: https://chromiumcodereview.appspot.com//10386152
------------------------------------------------------------------------
r7671 | efortuna@google.com | 2012-05-16 07:21:25 +0900 (水, 16  5月 2012) | 3 lines

reverting 7668??
Not clear why this claused widespread breakage. Investigating.
Review URL: https://chromiumcodereview.appspot.com//10388154
------------------------------------------------------------------------
r7669 | asiva@google.com | 2012-05-16 06:52:29 +0900 (水, 16  5月 2012) | 2 lines

Fix issue with stack layout assumption going wrong when a dart function has optional parameters and the number of arguments passed in is incorrect. A call to NoSuchMethodFunction stub is made but the area reserved for the copied arguments/locals is not removed. This results in the NoSuchMethodFunction stub accessing arguments from the wrong location on the stack.
Review URL: https://chromiumcodereview.appspot.com//10383147
------------------------------------------------------------------------
r7668 | fschneider@google.com | 2012-05-16 06:41:25 +0900 (水, 16  5月 2012) | 4 lines

Replace long sequences of popq with a Drop(int) macro instruction.

This is for now only done on x64.
Review URL: https://chromiumcodereview.appspot.com//10383189
------------------------------------------------------------------------
r7664 | turnidge@google.com | 2012-05-16 03:34:58 +0900 (水, 16  5月 2012) | 5 lines

Dart_IsSame -> Dart_IdentityEquals.

Use return value for the equality result.  Made function more
efficient by avoiding a DARTSCOPE.
Review URL: https://chromiumcodereview.appspot.com//10196003
------------------------------------------------------------------------
r7659 | hausner@google.com | 2012-05-16 01:05:40 +0900 (水, 16  5月 2012) | 7 lines

Add a check to JSON code

Addressing Anton's review comment. Also removing a leftover
debugging printf.

TBR=antonm
Review URL: https://chromiumcodereview.appspot.com//10391139
------------------------------------------------------------------------
r7645 | ager@google.com | 2012-05-15 19:40:44 +0900 (火, 15  5月 2012) | 12 lines

Start 'fuzzing' of dart:io APIs and fix first issue found.

Deserialize unsupported Dart objects to Dart_CObject of type
kUnsupported instead of NULL pointers. That way the normal
Dart_CObject validation that tests for supported types will
work out of the box and not crash the VM.

R=sgjesse@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10383179
------------------------------------------------------------------------
r7643 | kmillikin@google.com | 2012-05-15 17:55:56 +0900 (火, 15  5月 2012) | 12 lines

Fix a pair of flow graph construction issues.

The stack height was off by one for throw/rethrow.  Change throw and
rethrow instructions so they never have successors because visiting the
graph and iterating nodes manually with StraightLineSuccessor should
agree.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10332139
------------------------------------------------------------------------
r7640 | sgjesse@google.com | 2012-05-15 16:55:44 +0900 (火, 15  5月 2012) | 8 lines

Remove the SHA1 implementation used by web sockets and use the dart:crypto library one instead.

R=ager@google.com

BUG=none
TEST=tests/standalone/io/web_socket_test.dart

Review URL: https://chromiumcodereview.appspot.com//10398010
------------------------------------------------------------------------
r7628 | hausner@google.com | 2012-05-15 06:10:25 +0900 (火, 15  5月 2012) | 11 lines

Debugger wire protocol: setting breakpoints

- Adding commands to set breakpoints and showing current stack trace.
- Adding a callback hook to signal when a breakpoint gets resolved to
  and actual line number. 
- Adding ids for breakpoints and new breakpoint API functions, deprecating
  the existing ones. 
- Adding one helper function to the JSON class

Anton may want to take a look at the JSON addition.
Review URL: https://chromiumcodereview.appspot.com//10383164
------------------------------------------------------------------------
r7627 | fschneider@google.com | 2012-05-15 05:32:30 +0900 (火, 15  5月 2012) | 4 lines

Move FlowGraphPrinter to a new file.

This change is just moving code around.
Review URL: https://chromiumcodereview.appspot.com//10398015
------------------------------------------------------------------------
r7624 | srdjan@google.com | 2012-05-15 05:01:35 +0900 (火, 15  5月 2012) | 2 lines

Remove TuckTemp, PickTemp, use temporary locals instead.
Review URL: https://chromiumcodereview.appspot.com//10310132
------------------------------------------------------------------------
r7619 | turnidge@google.com | 2012-05-15 02:58:59 +0900 (火, 15  5月 2012) | 12 lines

Speed up the Dart_IsBlah functions by checking the class index.  This
allows us to avoid creating handles (and therefore handle scopes) in
these functions.

Before:
UseDartApi : 66395

After:
UseDartApi : 42730

Main improvement comes from speeding up Dart_IsError.
Review URL: https://chromiumcodereview.appspot.com//10386060
------------------------------------------------------------------------
r7554 | srdjan@google.com | 2012-05-12 01:38:26 +0900 (土, 12  5月 2012) | 2 lines

Fix IC data insertion: do it before the graph is built.
Review URL: https://chromiumcodereview.appspot.com//10378099
------------------------------------------------------------------------
r7524 | regis@google.com | 2012-05-11 08:03:36 +0900 (金, 11  5月 2012) | 3 lines

Implement latest rules prohibiting some self referencing typedefs.
Update tests.
Review URL: https://chromiumcodereview.appspot.com//10377095
------------------------------------------------------------------------
r7518 | hausner@google.com | 2012-05-11 07:04:50 +0900 (金, 11  5月 2012) | 6 lines

Support more debugger commands in the wire protocol

Also add a very simple debugger shell which at this point
is meant to be a debugging help for the debugger code rather
than a user-friendly tool.
Review URL: https://chromiumcodereview.appspot.com//10392017
------------------------------------------------------------------------
r7517 | srdjan@google.com | 2012-05-11 05:23:15 +0900 (金, 11  5月 2012) | 2 lines

With removal of increment operations, each node has a unique id.
Review URL: https://chromiumcodereview.appspot.com//10356108
------------------------------------------------------------------------
r7511 | asiva@google.com | 2012-05-11 04:17:37 +0900 (金, 11  5月 2012) | 2 lines

Resubmit change 7506.
Review URL: https://chromiumcodereview.appspot.com//10387061
------------------------------------------------------------------------
r7509 | srdjan@google.com | 2012-05-11 04:04:09 +0900 (金, 11  5月 2012) | 2 lines

Adding collected type feedback to the IL nodes (only in optimized mode).
Review URL: https://chromiumcodereview.appspot.com//10378093
------------------------------------------------------------------------
r7508 | asiva@google.com | 2012-05-11 03:36:06 +0900 (金, 11  5月 2012) | 2 lines

Revert change 7506 to check on build failure.
Review URL: https://chromiumcodereview.appspot.com//10386073
------------------------------------------------------------------------
r7506 | asiva@google.com | 2012-05-11 03:25:47 +0900 (金, 11  5月 2012) | 8 lines

Fix issue 2888.

Allow for the library tag handler to be setup for the isolate, instead of
while loading a script. This ensures that we can use #import on the boot strap libraries like builtin, uri etc.

This change results in a dart API change and corresponding modifications are
necessary in dartium and App Engine.
Review URL: https://chromiumcodereview.appspot.com//10302020
------------------------------------------------------------------------
r7503 | antonm@google.com | 2012-05-11 03:06:00 +0900 (金, 11  5月 2012) | 5 lines

Fix Mac build.

TBR=iposva@google.com

Review URL: https://chromiumcodereview.appspot.com//10388075
------------------------------------------------------------------------
r7475 | srdjan@google.com | 2012-05-10 07:27:12 +0900 (木, 10  5月 2012) | 3 lines

Fix issue 2939, revert previous change that accepted null as excpetion objects:
throw null throws NullPointerException as per latest spec.
Review URL: https://chromiumcodereview.appspot.com//10392016
------------------------------------------------------------------------
r7472 | srdjan@google.com | 2012-05-10 06:39:58 +0900 (木, 10  5月 2012) | 2 lines

Fix bugs in expression temp allocation, Kevin's CL 10302007 (Remove temporaries using explicit names) and merge with other temp.
Review URL: https://chromiumcodereview.appspot.com//10389041
------------------------------------------------------------------------
r7435 | srdjan@google.com | 2012-05-09 09:03:25 +0900 (水, 09  5月 2012) | 2 lines

Fixed compilation time measurement, restructure some code. Do not use slow ToFullyQualifiedCString in production backend (saves 10% in backend time with compile-all).
Review URL: https://chromiumcodereview.appspot.com//10389023
------------------------------------------------------------------------
r7422 | regis@google.com | 2012-05-09 01:27:43 +0900 (水, 09  5月 2012) | 5 lines

Allow self referencing typedefs (issue 2490).
Fix Type::Name for malformed function types (issue 2340).
Added tests.
Removed bad negative test.
Review URL: https://chromiumcodereview.appspot.com//10388019
------------------------------------------------------------------------
r7420 | srdjan@google.com | 2012-05-09 01:03:15 +0900 (水, 09  5月 2012) | 2 lines

First steps toward a two stages new compiler.
Review URL: https://chromiumcodereview.appspot.com//10356051
------------------------------------------------------------------------
r7403 | ricow@google.com | 2012-05-08 16:16:48 +0900 (火, 08  5月 2012) | 2 lines

Add requested allocation size information to fatal error when heap is exhausted.
Review URL: https://chromiumcodereview.appspot.com//10375046
------------------------------------------------------------------------
r7399 | srdjan@google.com | 2012-05-08 06:37:39 +0900 (火, 08  5月 2012) | 2 lines

Improve type checking, remove unused stub (removed also in x64 in preparation of porting the better type checking code from ia 32 to x64).
Review URL: https://chromiumcodereview.appspot.com//10381045
------------------------------------------------------------------------
r7397 | srdjan@google.com | 2012-05-08 04:49:54 +0900 (火, 08  5月 2012) | 2 lines

Fix bug 2907: cannot instantiate Dynamic.
Review URL: https://chromiumcodereview.appspot.com//10389006
------------------------------------------------------------------------
r7389 | regis@google.com | 2012-05-08 02:34:53 +0900 (火, 08  5月 2012) | 2 lines

Stop postponing instantiation of Type and remove InstantiatedType VM class.
Review URL: https://chromiumcodereview.appspot.com//10380019
------------------------------------------------------------------------
r7354 | regis@google.com | 2012-05-05 08:31:24 +0900 (土, 05  5月 2012) | 2 lines

Fix mac debug build.
Review URL: https://chromiumcodereview.appspot.com//10365026
------------------------------------------------------------------------
r7353 | srdjan@google.com | 2012-05-05 08:28:26 +0900 (土, 05  5月 2012) | 2 lines

Inline type checks for complex uninstantiated types, e.g., List<T>.
Review URL: https://chromiumcodereview.appspot.com//10317026
------------------------------------------------------------------------
r7352 | cshapiro@google.com | 2012-05-05 08:16:09 +0900 (土, 05  5月 2012) | 5 lines

Revert "Revert "Implement {Int,Uint}{8,16,32,64} and Float{32,64} typed arrays.""

This reverts commit 63480a81fccbde001494dd535cd06a8fa02ed261.

Review URL: https://chromiumcodereview.appspot.com//10379018
------------------------------------------------------------------------
r7350 | regis@google.com | 2012-05-05 06:55:10 +0900 (土, 05  5月 2012) | 3 lines

Remove old x64 code generator.
Refactorize compiler and test code to be independent of actual code generator.
Review URL: https://chromiumcodereview.appspot.com//10375017
------------------------------------------------------------------------
r7337 | regis@google.com | 2012-05-05 01:36:27 +0900 (土, 05  5月 2012) | 6 lines

Properly set the element type of literal lists.
Add test.
Keep element type consistent between growable array and backing array.
Fix snapshot reader to set the element type in growable array
Remove run time call checking rest argument.
Review URL: https://chromiumcodereview.appspot.com//10368004
------------------------------------------------------------------------
r7330 | hausner@google.com | 2012-05-05 00:25:49 +0900 (土, 05  5月 2012) | 14 lines

Beginnings of a debugger wire protocol

The debugger wire handler is implemented similarly to the io event handler.
A dedicated thread monitors the debugger port for incoming connection
requests. When a debugger is connected, the VM sends events messages
over the wire and handles debugger requests.

To start the VM with a debugger connection, use the option
--debug:<portnumber>. The VM pauses at the beginning of main()
and waits for a debugger to connect.

Subsequent changes will implement debugger commands one by one.
With this change, the VM only understands "resume" commands. 
Review URL: https://chromiumcodereview.appspot.com//10357003
------------------------------------------------------------------------
r7313 | cshapiro@google.com | 2012-05-04 14:28:10 +0900 (金, 04  5月 2012) | 5 lines

Revert "Implement {Int,Uint}{8,16,32,64} and Float{32,64} typed arrays."

This reverts commit 747dbeaa8f9c0dc1f49d6d6a369c6a3fe2d8b7c9.

Review URL: https://chromiumcodereview.appspot.com//10375007
------------------------------------------------------------------------
r7311 | cshapiro@google.com | 2012-05-04 14:12:19 +0900 (金, 04  5月 2012) | 7 lines

Implement {Int,Uint}{8,16,32,64} and Float{32,64} typed arrays.

Internal and external representations of each array are provided.  A
single interface type implementing the ByteArray and List interfaces
is shared among the internal and external implementation type.

Review URL: https://chromiumcodereview.appspot.com//9958046
------------------------------------------------------------------------
r7305 | srdjan@google.com | 2012-05-04 07:17:44 +0900 (金, 04  5月 2012) | 2 lines

Removing all incr-op nodes.
Review URL: https://chromiumcodereview.appspot.com//10354019
------------------------------------------------------------------------
r7304 | srdjan@google.com | 2012-05-04 07:00:52 +0900 (金, 04  5月 2012) | 2 lines

Using SubtypeTestCache object instead of an array, that way we do not need to patch and can communicate to type tests if there is a cache to update (quicker than looking up code).
Review URL: https://chromiumcodereview.appspot.com//10352012
------------------------------------------------------------------------
r7300 | srdjan@google.com | 2012-05-04 05:27:37 +0900 (金, 04  5月 2012) | 2 lines

Step toward eliminating increment nodes, starting with increment local. Fix a bug in evaluating side effect free nodes.
Review URL: https://chromiumcodereview.appspot.com//10350003
------------------------------------------------------------------------
r7288 | floitsch@google.com | 2012-05-04 00:40:40 +0900 (金, 04  5月 2012) | 5 lines

Reapply "Set the TZ env to get the UTC-ms since epoch."

This reapplies a fixed version of commit 7285.

Review URL: https://chromiumcodereview.appspot.com//10359003
------------------------------------------------------------------------
r7287 | floitsch@google.com | 2012-05-03 23:54:09 +0900 (木, 03  5月 2012) | 5 lines

Revert "Set the TZ env to get the UTC-ms since epoch."

This reverts commit 7285.

Review URL: https://chromiumcodereview.appspot.com//10354011
------------------------------------------------------------------------
r7285 | floitsch@google.com | 2012-05-03 23:46:21 +0900 (木, 03  5月 2012) | 8 lines

Set the TZ env to get the UTC-ms since epoch.

Previously we tried to simply subtract the timezone difference from
the local value. Apparently this doesn't work...

Fixes issue 1268.

Review URL: https://chromiumcodereview.appspot.com//9969098
------------------------------------------------------------------------
r7269 | kmillikin@google.com | 2012-05-03 17:46:10 +0900 (木, 03  5月 2012) | 10 lines

Automatically assign temporary indices to definitions in the IL.

When added to the graph, automatically assign a temporary index (== stack
height) to definitions.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10316005
------------------------------------------------------------------------
r7261 | cshapiro@google.com | 2012-05-03 07:48:02 +0900 (木, 03  5月 2012) | 5 lines

Fix two semantic errors from my previous check-in.

TBR=asiva

Review URL: https://chromiumcodereview.appspot.com//10343010
------------------------------------------------------------------------
r7260 | cshapiro@google.com | 2012-05-03 07:40:48 +0900 (木, 03  5月 2012) | 14 lines

Do not externalize Dart strings as C strings for "print()".

Dart strings with embedded '\0' characters cannot be faithfully
represented as a C string.

This change adds Dart_StringToBytes to the Dart API.  This function
converts a Dart string to array of UTF-8 code units and returns a
length.  Builtin::PrintString now calls Dart_StringToBytes instead of
Dart_StringToCString and, for I/O, fwrite is called instead of fprintf
with the string format specifier.

BUG=1098

Review URL: https://chromiumcodereview.appspot.com//10306002
------------------------------------------------------------------------
r7255 | srdjan@google.com | 2012-05-03 05:49:46 +0900 (木, 03  5月 2012) | 2 lines

Temporary fix for GrowableArray type arguments: use the type arguments stores in GrowableArray instead of the one in the data container (there is a bug that Regis is fixing where data container is always null). Fix assembly subtype cache lookup lookup.
Review URL: https://chromiumcodereview.appspot.com//10345003
------------------------------------------------------------------------
r7235 | iposva@google.com | 2012-05-02 22:22:02 +0900 (水, 02  5月 2012) | 2 lines

- Grow the class table as needed instead of preallocating.
Review URL: https://chromiumcodereview.appspot.com//10311006
------------------------------------------------------------------------
r7211 | regis@google.com | 2012-05-02 10:57:22 +0900 (水, 02  5月 2012) | 3 lines

Check upper bounds of type arguments when allocating objects of a generic type
at run time when they cannot be checked at compile time.
Review URL: https://chromiumcodereview.appspot.com//10280007
------------------------------------------------------------------------
r7210 | srdjan@google.com | 2012-05-02 08:35:17 +0900 (水, 02  5月 2012) | 2 lines

- Fix another side effect issue: never add AstNode to sequence unless they are a statement. Added tests. LoadLocal has now an optional pseudo input.
Review URL: https://chromiumcodereview.appspot.com//10283003
------------------------------------------------------------------------
r7208 | asiva@google.com | 2012-05-02 07:15:26 +0900 (水, 02  5月 2012) | 2 lines

Set up a variable so that the compiler script can be imported using an import map.
Review URL: https://chromiumcodereview.appspot.com//10280003
------------------------------------------------------------------------
r7205 | srdjan@google.com | 2012-05-02 06:23:00 +0900 (水, 02  5月 2012) | 2 lines

Switch from AST node ids to computation ids (cid). In addition to computations, some instructions need it as well (Return, Throw, ReThrow). Currently added to all Instructions and Computations.
Review URL: https://chromiumcodereview.appspot.com//10264031
------------------------------------------------------------------------
r7201 | srdjan@google.com | 2012-05-02 03:43:57 +0900 (水, 02  5月 2012) | 2 lines

Merge two functions that create side effect free compound load nodes.
Review URL: https://chromiumcodereview.appspot.com//10272031
------------------------------------------------------------------------
r7200 | asiva@google.com | 2012-05-02 03:27:19 +0900 (水, 02  5月 2012) | 2 lines

Fix stack pointer reset bug in entry to catch blocks.
Review URL: https://chromiumcodereview.appspot.com//10262033
------------------------------------------------------------------------
r7190 | iposva@google.com | 2012-05-02 00:16:02 +0900 (水, 02  5月 2012) | 5 lines

- Add extra checking when validating objects.
- Properly set the class tags when converting growable arrays
  to fixed length arrays.
- Set the class tag when allocating instantiated type arguments. 
Review URL: https://chromiumcodereview.appspot.com//10271032
------------------------------------------------------------------------
r7186 | iposva@google.com | 2012-05-01 21:54:49 +0900 (火, 01  5月 2012) | 2 lines

- Increase number of classes possible.
Review URL: https://chromiumcodereview.appspot.com//10269026
------------------------------------------------------------------------
r7183 | iposva@google.com | 2012-05-01 18:20:40 +0900 (火, 01  5月 2012) | 3 lines

- Add a class index to the classes.
- Add a class table which assigns individual ids to classes.
Review URL: https://chromiumcodereview.appspot.com//9965042
------------------------------------------------------------------------
r7181 | kmillikin@google.com | 2012-05-01 17:59:54 +0900 (火, 01  5月 2012) | 9 lines

Materialize all constant operands on the stack in the non-optimizing compiler.

This eliminates the distinction between 'value' and 'argument value'.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10264011
------------------------------------------------------------------------
r7176 | asiva@google.com | 2012-05-01 10:14:23 +0900 (火, 01  5月 2012) | 2 lines

Fix build break.
Review URL: https://chromiumcodereview.appspot.com//10269020
------------------------------------------------------------------------
r7175 | asiva@google.com | 2012-05-01 10:00:04 +0900 (火, 01  5月 2012) | 3 lines

Added lib/compiler compile all VM benchmark.
Added frame lookup VM benchmark.
Review URL: https://chromiumcodereview.appspot.com//10178030
------------------------------------------------------------------------
r7173 | srdjan@google.com | 2012-05-01 09:38:02 +0900 (火, 01  5月 2012) | 2 lines

Fix wrong order of execution in compound assignment nodes (located by Kevin). 
Review URL: https://chromiumcodereview.appspot.com//10270028
------------------------------------------------------------------------
r7167 | srdjan@google.com | 2012-05-01 05:46:51 +0900 (火, 01  5月 2012) | 2 lines

Fix disassembler crash.
Review URL: https://chromiumcodereview.appspot.com//10272017
------------------------------------------------------------------------
r7144 | kmillikin@google.com | 2012-04-30 17:53:39 +0900 (月, 30  4月 2012) | 8 lines

Remove some more uses of named temporaries.

Remove all uses of TempVal except those used in expressions with
control flow (&&, ||, and ?:).

R=srdjan@google.com

Review URL: https://chromiumcodereview.appspot.com//10198028
------------------------------------------------------------------------
r7113 | srdjan@google.com | 2012-04-28 09:06:37 +0900 (土, 28  4月 2012) | 2 lines

Simpler and better inlined type checks as discussed. Changed inline type test cache arrays to contain instance class, instance type argument and instantiator type argument (not yet used).
Review URL: https://chromiumcodereview.appspot.com//10243013
------------------------------------------------------------------------
r7052 | asiva@google.com | 2012-04-27 10:10:10 +0900 (金, 27  4月 2012) | 2 lines

Changes to allow for -O2 compiles on macos in debug builds.
Review URL: https://chromiumcodereview.appspot.com//10180013
------------------------------------------------------------------------
r7047 | regis@google.com | 2012-04-27 07:39:27 +0900 (金, 27  4月 2012) | 3 lines

Support cyclic types and F-bounded quantification (issue 439).
Added tests for F-bounded quantification.
Review URL: https://chromiumcodereview.appspot.com//10243001
------------------------------------------------------------------------
r7046 | srdjan@google.com | 2012-04-27 07:17:53 +0900 (金, 27  4月 2012) | 2 lines

Inline type check where type argument that we check against is instantiated.
Review URL: https://chromiumcodereview.appspot.com//10134069
------------------------------------------------------------------------
r7033 | asiva@google.com | 2012-04-27 03:00:53 +0900 (金, 27  4月 2012) | 4 lines

Add a stub_code_space in the heap alongside code_space so that stub code generation happens here and it is easy to determine if a PC is a stub code or not.

This gets rid of the temporary change made in code_generator.cc for fast access to the top dart frame. In addition it will not pollute the pc ==> code cache that I plan to add next as we don't have to store stub pcs in that table.
Review URL: https://chromiumcodereview.appspot.com//10223015
------------------------------------------------------------------------
r6993 | iposva@google.com | 2012-04-26 17:05:41 +0900 (木, 26  4月 2012) | 4 lines

- Improve marking performance by pre-marking RawInstructions objects,
  since they are not currently being collected.
- Update svn:ignore properties.
Review URL: https://chromiumcodereview.appspot.com//10232003
------------------------------------------------------------------------
r6991 | kmillikin@google.com | 2012-04-26 16:36:39 +0900 (木, 26  4月 2012) | 10 lines

Restructure flow-graph translation of increment operations.

Remove all explicitly named temporaries.  Use the flow-graph builder
visitors to track temporary indexes.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10223003
------------------------------------------------------------------------
r6989 | kmillikin@google.com | 2012-04-26 16:28:43 +0900 (木, 26  4月 2012) | 7 lines

Turn more explicitly named temps into uses of definitions.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10228001
------------------------------------------------------------------------
r6988 | cshapiro@google.com | 2012-04-26 15:39:35 +0900 (木, 26  4月 2012) | 3 lines

Explicitly initialize Bigint members after uninitialized allocations.

Review URL: https://chromiumcodereview.appspot.com//10230001
------------------------------------------------------------------------
r6977 | srdjan@google.com | 2012-04-26 06:30:19 +0900 (木, 26  4月 2012) | 2 lines

Fix a typo, caught by windows compiler.
Review URL: https://chromiumcodereview.appspot.com//10161036
------------------------------------------------------------------------
r6975 | srdjan@google.com | 2012-04-26 06:19:08 +0900 (木, 26  4月 2012) | 3 lines

(Redoing the change 6946) Progress toward inlined type checks for classes with type arguments: factor out
code, optimize type arguments of an instance.
Review URL: https://chromiumcodereview.appspot.com//10227006
------------------------------------------------------------------------
r6973 | srdjan@google.com | 2012-04-26 05:32:45 +0900 (木, 26  4月 2012) | 2 lines

Canonicalize type arguments lazily.
Review URL: https://chromiumcodereview.appspot.com//10161030
------------------------------------------------------------------------
r6972 | asiva@google.com | 2012-04-26 05:20:29 +0900 (木, 26  4月 2012) | 2 lines

Address perf regression by using the expected frame layout when traversing frames in the code generator. This is a temporary fix until we have a cache to speed up LookupCode.
Review URL: https://chromiumcodereview.appspot.com//10228010
------------------------------------------------------------------------
r6953 | srdjan@google.com | 2012-04-26 00:43:44 +0900 (木, 26  4月 2012) | 2 lines

Revert change 6946.
Review URL: https://chromiumcodereview.appspot.com//10191020
------------------------------------------------------------------------
r6946 | srdjan@google.com | 2012-04-26 00:21:40 +0900 (木, 26  4月 2012) | 2 lines

Progress toward inlined type checks for classes with type arguments: factor out code, optimize type arguments of an instance.
Review URL: https://chromiumcodereview.appspot.com//10209002
------------------------------------------------------------------------
r6940 | vegorov@google.com | 2012-04-25 22:37:51 +0900 (水, 25  4月 2012) | 8 lines

Reland r6578 without changing the order of pages in the PageSpace::pages_ list.

Linking newly allocated pages into the list's head causes popular pages to move further to the end of the list.  This causes slowdown on the debug VM because method PageSpace::Contains has to do more probes for popular objects.

R=iposva@google.com
BUG=2660

Review URL: https://chromiumcodereview.appspot.com//10191014
------------------------------------------------------------------------
r6928 | kmillikin@google.com | 2012-04-25 18:13:33 +0900 (水, 25  4月 2012) | 10 lines

Introduce Definition and Use types.

Make Bind and PickTemp into definitions.  Allow values to be uses that
name a definition.  Begin converting all uses of (named) Temp into Use.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10201017
------------------------------------------------------------------------
r6920 | asiva@google.com | 2012-04-25 10:15:28 +0900 (水, 25  4月 2012) | 4 lines

Simplify representation of stack frames. Remove the special types DartFrame/StubFrame and instead use StackFrame with methods IsDartFrame and IsStubFrame for frames representing Dart or Stub Code. This eliminates all the complexity that was added to ensure that we always see only one stub frame before hitting a dart frame during iteration.

Fixes bug 6380625 which was another case when we had two stub frames before hitting the dart frame.
Review URL: https://chromiumcodereview.appspot.com//10173008
------------------------------------------------------------------------
r6918 | asiva@google.com | 2012-04-25 09:35:15 +0900 (水, 25  4月 2012) | 2 lines

Move the dart API benchmark to the VM benchmark infrastructure so that it will get run as part of run_vm_tests --benchmarks
Review URL: https://chromiumcodereview.appspot.com//10186008
------------------------------------------------------------------------
r6894 | regis@google.com | 2012-04-25 01:15:37 +0900 (水, 25  4月 2012) | 2 lines

Mark types as instantiated or uninstantiated upon finalization.
Review URL: https://chromiumcodereview.appspot.com//10205006
------------------------------------------------------------------------
r6871 | vegorov@google.com | 2012-04-24 19:49:25 +0900 (火, 24  4月 2012) | 5 lines

Fix target address decoding in ia32 disassembler for CALL_JUMP_INSTR instructions.

R=kmillikin@google.com

Review URL: https://chromiumcodereview.appspot.com//10185001
------------------------------------------------------------------------
r6864 | turnidge@google.com | 2012-04-24 07:26:09 +0900 (火, 24  4月 2012) | 11 lines

Rework mirrors implementation.

(Note that the current mirrors implementation is just a heartbeat
implementation of a single method)

Use native code instead of dart code to do the work.

Use JSON instead of Lists/Maps for commands/responses.

Reenable disabled tests.
Review URL: https://chromiumcodereview.appspot.com//10175011
------------------------------------------------------------------------
r6861 | regis@google.com | 2012-04-24 05:15:43 +0900 (火, 24  4月 2012) | 3 lines

Provide better ToCString description for closures (issue 2680).
Thanks to Ladislav Thon for the suggestion!
Review URL: https://chromiumcodereview.appspot.com//10188004
------------------------------------------------------------------------
r6851 | turnidge@google.com | 2012-04-24 02:36:05 +0900 (火, 24  4月 2012) | 2 lines

Add Dart_New.
Review URL: https://chromiumcodereview.appspot.com//10153002
------------------------------------------------------------------------
r6836 | ager@google.com | 2012-04-23 20:13:05 +0900 (月, 23  4月 2012) | 13 lines

Adjust acceptable wake-up delay in Monitor test.

The monitor wake-up delay is occasionally a bit more than 120 ms
on Windows.

Example flake:
http://build.chromium.org/p/client.dart/builders/vm-win32-release/builds/2353/steps/tests/logs/stdio

R=sgjesse@google.com,iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10139029
------------------------------------------------------------------------
r6820 | asiva@google.com | 2012-04-21 10:36:23 +0900 (土, 21  4月 2012) | 6 lines

Add infrastructure to create and run benchmarks specific to some VM functionality. This is used to measure performance of specific VM functionality (similar to VM unit tests testing specific VM functionality)

run_vm_tests --benchmarks to run all benchmarks
 or
run_vm_tests CorelibCompileAll
Review URL: https://chromiumcodereview.appspot.com//10069039
------------------------------------------------------------------------
r6792 | kasperl@google.com | 2012-04-20 21:14:31 +0900 (金, 20  4月 2012) | 11 lines

Revert "- Free completely empty pages as part of sweep."

This reverts r6578.

TBR'ed (discussed over chat).

R=iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//10167005
------------------------------------------------------------------------
r6778 | srdjan@google.com | 2012-04-20 08:32:49 +0900 (金, 20  4月 2012) | 2 lines

Redo r6764. 
Review URL: https://chromiumcodereview.appspot.com//10095037
------------------------------------------------------------------------
r6777 | regis@google.com | 2012-04-20 07:59:58 +0900 (金, 20  4月 2012) | 4 lines

Map malformed function result type and malformed function parameter type to
Dynamic in production mode (fix issue 5532534).
Fix bad negative test and make it positive.
Review URL: https://chromiumcodereview.appspot.com//10143004
------------------------------------------------------------------------
r6769 | turnidge@google.com | 2012-04-20 06:04:15 +0900 (金, 20  4月 2012) | 9 lines

Remove the deprecated method invocation and field access apis from the
dart embbedding api.  Use the new apis instead.

Fixed a bug where field/function lookup was failing for imported libs.
Added tests.  Had to add a couple of lookup functions to Library.

Fixed a bug in Dart_Invoke -- it wasn't handling a null receiver
correctly.
Review URL: https://chromiumcodereview.appspot.com//10021072
------------------------------------------------------------------------
r6766 | srdjan@google.com | 2012-04-20 05:37:40 +0900 (金, 20  4月 2012) | 2 lines

Reverting CL 6764.
Review URL: https://chromiumcodereview.appspot.com//10128009
------------------------------------------------------------------------
r6764 | srdjan@google.com | 2012-04-20 05:17:44 +0900 (金, 20  4月 2012) | 2 lines

Factored out common cases for type tests, used by instance of and assert assigneable. Using inlined type test cache in assert assigneable.
Review URL: https://chromiumcodereview.appspot.com//10025031
------------------------------------------------------------------------
r6762 | turnidge@google.com | 2012-04-20 04:47:27 +0900 (金, 20  4月 2012) | 38 lines

Use the ThreadPool for all isolates and native ports.  Previously,
each isolate or native port had a dedicated thread.

Refactored the MessageHandler api...

- Added a Run function to allow a MessageHandler to run on a
  ThreadPool.  These functions take a start and end callback to allow for
  isolate initialization and shutdown.

- Made the queue private to the MessageHandler and moved all message
  processing code inside the MessageHandler (got rid of all of the
  different flavors of RunLoop).  This helps remove some code
  duplication and hides the details of how messages are handled.

- Moved all locking and notification out of MessageQueue and moved it
  up to MessageHandler.  Moved OOB support out of MessageQueue and up
  to MessageHandler.  These changes make the MessageQueue much
  simpler.

- Refactored native port and isolate MessageHandlers to share more code.

- Improved --trace_isolates output.

- Added tests for MessageHandler.

Refactored lib/isolate code...

- Use the new MessageHandler::Run api.

- Got rid of the LongJump stuff in RunIsolate.  No longer needed.

- Use the new StartIsolateScope/SwitchIsolateScope to make the code
  less verbose and less error-prone.

- Store top-level isolate errors in the sticky_error.

Added StartIsolateScope/SwitchIsolateScope classes.
Review URL: https://chromiumcodereview.appspot.com//9924015
------------------------------------------------------------------------
r6754 | regis@google.com | 2012-04-20 02:01:28 +0900 (金, 20  4月 2012) | 6 lines

Throw a type error in production mode when the type of the type test is not
declared (issue 2571).
Add test.
Delete bad negative test now covered by new test.
Update status files of different compilers.
Review URL: https://chromiumcodereview.appspot.com//10035058
------------------------------------------------------------------------
r6726 | asiva@google.com | 2012-04-19 14:30:30 +0900 (木, 19  4月 2012) | 2 lines

Fix a pretty blatant GC bug (was the cause of all the weird crashes on windows).
Review URL: https://chromiumcodereview.appspot.com//10025033
------------------------------------------------------------------------
r6718 | srdjan@google.com | 2012-04-19 09:04:47 +0900 (木, 19  4月 2012) | 2 lines

Assign ids to incoming arguments (to be used in checked mode).
Review URL: https://chromiumcodereview.appspot.com//10115053
------------------------------------------------------------------------
r6713 | regis@google.com | 2012-04-19 06:58:46 +0900 (木, 19  4月 2012) | 2 lines

Move type check elimination from backend to graph builder in new compiler.
Review URL: https://chromiumcodereview.appspot.com//10021070
------------------------------------------------------------------------
r6711 | asiva@google.com | 2012-04-19 06:50:15 +0900 (木, 19  4月 2012) | 2 lines

Initialize tags back to 0 before using it.
Review URL: https://chromiumcodereview.appspot.com//10021046
------------------------------------------------------------------------
r6705 | turnidge@google.com | 2012-04-19 03:11:55 +0900 (木, 19  4月 2012) | 5 lines

Add a missing arity check for top-level methods in Dart_Invoke.

Add a new EXPECT_ERROR macro to make it easier to verify meaningful
error messages in tests.
Review URL: https://chromiumcodereview.appspot.com//10115034
------------------------------------------------------------------------
r6698 | hausner@google.com | 2012-04-19 01:09:22 +0900 (木, 19  4月 2012) | 23 lines

Static members are not visible in subclasses

Fix for issue 1598.

Lexical scope comes before inherited names. Also, Static members
are not inherited and are not visible in subclasses.
Code in the subclass (or any other code for that matter) has to
qualify the names of these members with the class name.

We had a few tests that were wrong and only passed in the VM because
this was not implemented correctly.

Also had to fix code in frog and dartdoc.

I hope I ran enough tests. I built an all.deps tree using tools/build.py from the root directory, which brought up the frog and dartdoc issues.

Tested:
tools/test.py --compiler=dart2js --runtime=drt
tools/test.py -c none -r drt
tools/test.py -c frog -r drt
tools/test.py -r vm

Review URL: https://chromiumcodereview.appspot.com//10115005
------------------------------------------------------------------------
r6697 | srdjan@google.com | 2012-04-19 00:53:20 +0900 (木, 19  4月 2012) | 2 lines

Add more timing information.
Review URL: https://chromiumcodereview.appspot.com//10116012
------------------------------------------------------------------------
r6693 | iposva@google.com | 2012-04-19 00:08:59 +0900 (木, 19  4月 2012) | 3 lines

Fix issue 2621:
- Properly restore long_jump_base when returning early.
Review URL: https://chromiumcodereview.appspot.com//10083046
------------------------------------------------------------------------
r6668 | asiva@google.com | 2012-04-18 09:20:30 +0900 (水, 18  4月 2012) | 2 lines

Some minor cleanup.
Review URL: https://chromiumcodereview.appspot.com//10114012
------------------------------------------------------------------------
r6667 | asiva@google.com | 2012-04-18 08:55:42 +0900 (水, 18  4月 2012) | 2 lines

Address review comments.
Review URL: https://chromiumcodereview.appspot.com//10052030
------------------------------------------------------------------------
r6664 | srdjan@google.com | 2012-04-18 08:10:05 +0900 (水, 18  4月 2012) | 2 lines

Fix potential problem with mismatch between ICData inloine cache miss handler in optimizing compiler.
Review URL: https://chromiumcodereview.appspot.com//10114010
------------------------------------------------------------------------
r6661 | srdjan@google.com | 2012-04-18 07:44:41 +0900 (水, 18  4月 2012) | 2 lines

Share intrinsification framework across architectures, started on instrinsification in the new compiler x64.
Review URL: https://chromiumcodereview.appspot.com//10035006
------------------------------------------------------------------------
r6659 | cshapiro@google.com | 2012-04-18 05:53:24 +0900 (水, 18  4月 2012) | 3 lines

Fix an invalid character escape sequence.

Review URL: https://chromiumcodereview.appspot.com//10108025
------------------------------------------------------------------------
r6654 | regis@google.com | 2012-04-18 04:56:29 +0900 (水, 18  4月 2012) | 3 lines

Relax assert so that the ia32 disassembler does not choke on C-heap allocated
constant strings.
Review URL: https://chromiumcodereview.appspot.com//10114002
------------------------------------------------------------------------
r6645 | hausner@google.com | 2012-04-18 01:10:35 +0900 (水, 18  4月 2012) | 5 lines

Fix bug 1991, variable resolution in string interpolation

Check to make sure string interpolation expressions cannot
contain type parameter names.
Review URL: https://chromiumcodereview.appspot.com//10108020
------------------------------------------------------------------------
r6626 | ahe@google.com | 2012-04-17 20:53:56 +0900 (火, 17  4月 2012) | 3 lines

Move cygwin_dir to shared gypi file.

Review URL: https://chromiumcodereview.appspot.com//9877003
------------------------------------------------------------------------
r6613 | regis@google.com | 2012-04-17 09:17:33 +0900 (火, 17  4月 2012) | 3 lines

Implement condition type checks in new compiler, thereby removing last bailouts.
Remove svn:eol-style property on various files.
Review URL: https://chromiumcodereview.appspot.com//9969192
------------------------------------------------------------------------
r6612 | hausner@google.com | 2012-04-17 08:46:55 +0900 (火, 17  4月 2012) | 5 lines

Accept keyword abstract in front of a class declaration

We can just ignore it. The VM has nothing to do for abstract
classes.
Review URL: https://chromiumcodereview.appspot.com//10103014
------------------------------------------------------------------------
r6607 | hausner@google.com | 2012-04-17 07:21:54 +0900 (火, 17  4月 2012) | 5 lines

Implement implicit interfaces

Amazingly, this small change is all it seems to take to implement
implicit interfaces.
Review URL: https://chromiumcodereview.appspot.com//10103009
------------------------------------------------------------------------
r6604 | srdjan@google.com | 2012-04-17 06:37:45 +0900 (火, 17  4月 2012) | 2 lines

Fix issue 2125: do not reparse a function being deoptimized.
Review URL: https://chromiumcodereview.appspot.com//10103005
------------------------------------------------------------------------
r6602 | turnidge@google.com | 2012-04-17 05:30:37 +0900 (火, 17  4月 2012) | 5 lines

Add fast paths for Smi values in the dart embedding api.

This speeds up the UseDartApi microbenchmark by 30%.  Thanks to Carl
for suggesting this.
Review URL: https://chromiumcodereview.appspot.com//10052027
------------------------------------------------------------------------
r6578 | iposva@google.com | 2012-04-16 23:25:00 +0900 (月, 16  4月 2012) | 2 lines

- Free completely empty pages as part of sweep.
Review URL: https://chromiumcodereview.appspot.com//10093010
------------------------------------------------------------------------
r6557 | asiva@google.com | 2012-04-14 11:03:58 +0900 (土, 14  4月 2012) | 2 lines

Remove code index table.
Review URL: https://chromiumcodereview.appspot.com//10082017
------------------------------------------------------------------------
r6544 | srdjan@google.com | 2012-04-14 07:35:57 +0900 (土, 14  4月 2012) | 2 lines

Introduce an equality compare node. Equality will need to be handled specially soon (not just an instance call) and today it needs special code for efficeintly handling null receivers (null-class is never entered into IC data). This fixes a significant performance regression between the old and the new compiler.
Review URL: https://chromiumcodereview.appspot.com//10079018
------------------------------------------------------------------------
r6542 | regis@google.com | 2012-04-14 07:16:59 +0900 (土, 14  4月 2012) | 3 lines

Implement checked mode in new compiler.
The only remaining bailout is the boolean type check for conditions.
Review URL: https://chromiumcodereview.appspot.com//10080015
------------------------------------------------------------------------
r6541 | hausner@google.com | 2012-04-14 07:02:31 +0900 (土, 14  4月 2012) | 4 lines

Fix bug 918

Don't choke to top-level native function declarations.
Review URL: https://chromiumcodereview.appspot.com//10086015
------------------------------------------------------------------------
r6534 | srdjan@google.com | 2012-04-14 02:39:07 +0900 (土, 14  4月 2012) | 2 lines

Measure code generation time as well.
Review URL: https://chromiumcodereview.appspot.com//10084014
------------------------------------------------------------------------
r6532 | srdjan@google.com | 2012-04-14 01:49:22 +0900 (土, 14  4月 2012) | 2 lines

Simplify code in code code generator, move checks to flow graph builder. We can assume that any type analysis will occur before the code generator gets called.
Review URL: https://chromiumcodereview.appspot.com//10069042
------------------------------------------------------------------------
r6493 | asiva@google.com | 2012-04-13 10:07:38 +0900 (金, 13  4月 2012) | 2 lines

Report FATAL OOM error when the old heap space is exhausted.
Review URL: https://chromiumcodereview.appspot.com//10010049
------------------------------------------------------------------------
r6484 | srdjan@google.com | 2012-04-13 06:57:57 +0900 (金, 13  4月 2012) | 2 lines

Add node id for return node.
Review URL: https://chromiumcodereview.appspot.com//10038032
------------------------------------------------------------------------
r6467 | srdjan@google.com | 2012-04-13 02:20:43 +0900 (金, 13  4月 2012) | 2 lines

Eliminated last bailout (except for type checked mode) in the new compiler: generate type arguments for instanceof if needed.
Review URL: https://chromiumcodereview.appspot.com//10071016
------------------------------------------------------------------------
r6453 | ager@google.com | 2012-04-12 14:50:59 +0900 (木, 12  4月 2012) | 11 lines

Fix flaky message queue test.

The test assumes that MessageQueue::Dequeue(0) cannot return NULL.
However, MessageQueue::Dequeue(0) returns NULL in case of spurious
wakeup.

R=turnidge@google.com,sgjesse@google.com
BUG=dartbug.com/2004
TEST=

Review URL: https://chromiumcodereview.appspot.com//10052011
------------------------------------------------------------------------
r6449 | cshapiro@google.com | 2012-04-12 13:12:31 +0900 (木, 12  4月 2012) | 10 lines

Persist the scanning state across invocations of ProcessToSpace.

This provides an signal that scanning is required to complete a
scavenge.  When reinvoking the scanner, scanning now resumes from the
lowest unscanned address instead of from the lowest to-space address,
thereby avoiding repeated work.

BUG=2524

Review URL: https://chromiumcodereview.appspot.com//10065005
------------------------------------------------------------------------
r6446 | regis@google.com | 2012-04-12 09:18:43 +0900 (木, 12  4月 2012) | 4 lines

Do not require type class to be finalized when performing a type test.
However, make sure that the interfaces are resolved (issue 2523).
A later change will cleanup interface resolution code.
Review URL: https://chromiumcodereview.appspot.com//10050034
------------------------------------------------------------------------
r6445 | srdjan@google.com | 2012-04-12 09:14:49 +0900 (木, 12  4月 2012) | 2 lines

Fix performance issue with instanceof String checks on ia32. x64 in new compiler is coming in a following CL: use inlined type-test cache to compare against String interface and simplify test against bool. This CL addresses the issue 2530.
Review URL: https://chromiumcodereview.appspot.com//10056004
------------------------------------------------------------------------
r6443 | srdjan@google.com | 2012-04-12 07:28:03 +0900 (木, 12  4月 2012) | 2 lines

Fix a crash when optimizing instance field increment: if the increment operation gets interrupted because of an exception during increment the collected classes at getter and setter phases may differ (e.g., one class at getter, zero classes at setter).
Review URL: https://chromiumcodereview.appspot.com//10020058
------------------------------------------------------------------------
r6442 | asiva@google.com | 2012-04-12 07:07:47 +0900 (木, 12  4月 2012) | 4 lines

Fix for Issue 2367

The '\r' character was included in the string literal when parsing integer or double literals. This was resulting in incorrect integer values being created.
Review URL: https://chromiumcodereview.appspot.com//10054027
------------------------------------------------------------------------
r6438 | regis@google.com | 2012-04-12 06:24:17 +0900 (木, 12  4月 2012) | 2 lines

Fix lazy initialization of static fields (issue 2472).
Review URL: https://chromiumcodereview.appspot.com//10050022
------------------------------------------------------------------------
r6423 | hausner@google.com | 2012-04-12 03:23:22 +0900 (木, 12  4月 2012) | 9 lines

Introduce a flag to disable string operator +

If allow_string_plus is set to false, the compiler will report an error
when it finds a string literal followed by +. Invoking the + operator on a
string value throws a noSuchMethod exception.

This is temporary code that we'll eliminate once the + operator on
strings is completely removed.
Review URL: https://chromiumcodereview.appspot.com//9960084
------------------------------------------------------------------------
r6422 | regis@google.com | 2012-04-12 03:13:09 +0900 (木, 12  4月 2012) | 5 lines

Modify 'movq reg, reg' encoding in 64-bit code.
Use 0x89 encoding (instead of 0x8B encoding), which is expected by gdb64
older than 7.3.1-gg5 when disassembling a function's prolog (movq rbp, rsp)
for proper unwinding of Dart frames (use --generate_gdb_symbols and -O0).
Review URL: https://chromiumcodereview.appspot.com//10052013
------------------------------------------------------------------------
r6421 | regis@google.com | 2012-04-12 03:12:28 +0900 (木, 12  4月 2012) | 3 lines

Add missing calls to class finalizer in various tests.
Make 'sentinel' and 'transition_sentinel' instances of class Null.
Review URL: https://chromiumcodereview.appspot.com//10034019
------------------------------------------------------------------------
r6420 | regis@google.com | 2012-04-12 02:42:39 +0900 (木, 12  4月 2012) | 2 lines

Eliminate type checks that can successfully be performed at compile time.
Review URL: https://chromiumcodereview.appspot.com//10051011
------------------------------------------------------------------------
r6419 | srdjan@google.com | 2012-04-12 02:35:06 +0900 (木, 12  4月 2012) | 2 lines

Implement finally in new compiler.
Review URL: https://chromiumcodereview.appspot.com//9999045
------------------------------------------------------------------------
r6405 | iposva@google.com | 2012-04-11 20:54:01 +0900 (水, 11  4月 2012) | 2 lines

- Use the free top of old-space pages when allocating.
Review URL: https://chromiumcodereview.appspot.com//10057001
------------------------------------------------------------------------
r6389 | srdjan@google.com | 2012-04-11 08:22:40 +0900 (水, 11  4月 2012) | 2 lines

Try/catch in new compiler. Added try index to appropriate instructions. If any instruction throws an exception, the try index tells us which catch entry the exception belongs to.
Review URL: https://chromiumcodereview.appspot.com//10014006
------------------------------------------------------------------------
r6380 | asiva@google.com | 2012-04-11 05:42:35 +0900 (水, 11  4月 2012) | 3 lines

Fix OS::VSNPrint to make it behave similar to linux and macos versions.
Mathias found this bug will using it in the JSON parser.
Review URL: https://chromiumcodereview.appspot.com//10037018
------------------------------------------------------------------------
r6362 | hausner@google.com | 2012-04-11 00:28:07 +0900 (水, 11  4月 2012) | 5 lines

Basic support for reading and writing JSON objects.

This is a minimal implementation that we can grow as needed
for debugger protocols and isolate communication.
Review URL: https://chromiumcodereview.appspot.com//9949054
------------------------------------------------------------------------
r6348 | cshapiro@google.com | 2012-04-10 11:57:43 +0900 (火, 10  4月 2012) | 5 lines

Process weak reference sets when a scavenge invokes the API callbacks.

BUG=2391

Review URL: https://chromiumcodereview.appspot.com//9956138
------------------------------------------------------------------------
r6341 | asiva@google.com | 2012-04-10 06:50:53 +0900 (火, 10  4月 2012) | 4 lines

Wire GrowableArray to use the internal VM object.

This also fixes issue (5526318 : Make access to GrowableArray objects through the dart api more efficient)
Review URL: https://chromiumcodereview.appspot.com//10012042
------------------------------------------------------------------------
r6340 | srdjan@google.com | 2012-04-10 06:31:15 +0900 (火, 10  4月 2012) | 2 lines

Fix a crash in graoh builder where a throw node is added in an expression tree by the parser: allow throws in expressions by not closing the fragment, instead return null as value.
Review URL: https://chromiumcodereview.appspot.com//10032009
------------------------------------------------------------------------
r6331 | asiva@google.com | 2012-04-10 03:20:23 +0900 (火, 10  4月 2012) | 10 lines

Resubmit change 6302 after fixing the compiler warning on older GCC compiler versions:

Change 6302 description:
- Wire the stack frame iterator to use stack maps for traversing objects if
there are stack maps in the code object. If there are no stack maps it still
does the old style stack frame traversal between fp and sp looking for tagged
pointers.
- Added a mechanism to be able to iterate over the code space and look for a
particular object.
Review URL: https://chromiumcodereview.appspot.com//10030001
------------------------------------------------------------------------
r6304 | asiva@google.com | 2012-04-07 11:04:28 +0900 (土, 07  4月 2012) | 2 lines

Revert change 6302 until the compiler warning is addressed.
Review URL: https://chromiumcodereview.appspot.com//10025003
------------------------------------------------------------------------
r6302 | asiva@google.com | 2012-04-07 10:44:48 +0900 (土, 07  4月 2012) | 5 lines

- Wire the stack frame iterator to use stack maps for traversing objects if there are stack maps in the code object. If there are no stack maps it still does the old style stack frame traversal between fp and sp looking for tagged pointers.
- Added a mechanism to be able to iterate over the code space and look for a particular object.

- Remove registration of code objects into the code index table.
Review URL: https://chromiumcodereview.appspot.com//9791048
------------------------------------------------------------------------
r6294 | srdjan@google.com | 2012-04-07 05:25:21 +0900 (土, 07  4月 2012) | 3 lines

Add a test to check correct references to a global variable that initially throws
a type error.
Review URL: https://chromiumcodereview.appspot.com//10006040
------------------------------------------------------------------------
r6288 | turnidge@google.com | 2012-04-07 03:00:51 +0900 (土, 07  4月 2012) | 7 lines

Inline the StackResource constructor/destructor.

This yields a 29% improvement on the Benchmark_UseDartApi microbenchmark.

To do this, I had to split a few fields from Isolate into a
BaseIsolate class.  Sort of yucky.
Review URL: https://chromiumcodereview.appspot.com//10008030
------------------------------------------------------------------------
r6283 | turnidge@google.com | 2012-04-07 02:05:50 +0900 (土, 07  4月 2012) | 7 lines

Rename Api::NewLocalHandle -> Api::NewHandle.

Api::NewHandle now takes a RawObject* intead of an Object&.
- This makes the code shorter and easier to read.
- This allows us to drop the DARTSCOPE from Dart_GetNativeArgument.
  (6% speedup on Benchmark_UseDartApi)
Review URL: https://chromiumcodereview.appspot.com//10014002
------------------------------------------------------------------------
r6281 | srdjan@google.com | 2012-04-07 01:05:55 +0900 (土, 07  4月 2012) | 3 lines

When checking against non-parametrized types use a cache to hold result tuples (class, result). That cache is stored in the instruction stream. Currently implemented for instanceof, ia32 only. Should migrate to other type tests and architectures.
70x improvement on a benchmark (similar to what is seen in html _unwrap).
Review URL: https://chromiumcodereview.appspot.com//10010029
------------------------------------------------------------------------
r6251 | hausner@google.com | 2012-04-06 07:42:45 +0900 (金, 06  4月 2012) | 6 lines

Fix static field inspection in debugger

- Handle static fields that have no getter (issue 2462).
- Get correct value of initialized fields (issue 2221).
- Add test case.
Review URL: https://chromiumcodereview.appspot.com//10009023
------------------------------------------------------------------------
r6244 | srdjan@google.com | 2012-04-06 04:44:49 +0900 (金, 06  4月 2012) | 2 lines

Move HandlerList to shared ExceptionHandlerList.
Review URL: https://chromiumcodereview.appspot.com//9949020
------------------------------------------------------------------------
r6236 | regis@google.com | 2012-04-06 03:11:42 +0900 (金, 06  4月 2012) | 4 lines

Do not require upper bounds to be resolved and finalized before comparing them
between the expected and actual factory class (issue 2431).
Add test.
Review URL: https://chromiumcodereview.appspot.com//10008017
------------------------------------------------------------------------
r6226 | srdjan@google.com | 2012-04-06 01:23:22 +0900 (金, 06  4月 2012) | 2 lines

Implement object allocation/construction as effect (no result), sequence labels and unchaining from context.
Review URL: https://chromiumcodereview.appspot.com//10005010
------------------------------------------------------------------------
r6206 | srdjan@google.com | 2012-04-05 08:10:21 +0900 (木, 05  4月 2012) | 2 lines

Implement context cloning in new compiler.
Review URL: https://chromiumcodereview.appspot.com//9961019
------------------------------------------------------------------------
r6196 | srdjan@google.com | 2012-04-05 05:56:46 +0900 (木, 05  4月 2012) | 2 lines

Implement closure with type arguments.
Review URL: https://chromiumcodereview.appspot.com//9978014
------------------------------------------------------------------------
r6193 | turnidge@google.com | 2012-04-05 05:31:49 +0900 (木, 05  4月 2012) | 3 lines

Remove many calls to Isolate::Current() in the dart embedding api by
passing the isolate explicitly.
Review URL: https://chromiumcodereview.appspot.com//9956133
------------------------------------------------------------------------
r6189 | turnidge@google.com | 2012-04-05 04:47:22 +0900 (木, 05  4月 2012) | 6 lines

Add a unit test Benchmark_UseDartApi to measure dart api overhead.

Sample output:

Benchmark_UseDartApi: 3.245700 us per iteration
Review URL: https://chromiumcodereview.appspot.com//9979016
------------------------------------------------------------------------
r6187 | hausner@google.com | 2012-04-05 03:51:20 +0900 (木, 05  4月 2012) | 7 lines

Fix debugger crashes

Do not include captured variables in the list of local variables
until the debugger knows how to get their value from the context.

Fixes issue 2401 (http://code.google.com/p/dart/issues/detail?id=2401)
Review URL: https://chromiumcodereview.appspot.com//9961012
------------------------------------------------------------------------
r6180 | srdjan@google.com | 2012-04-05 02:56:53 +0900 (木, 05  4月 2012) | 2 lines

New compiler: implement switch/case in graph builder.
Review URL: https://chromiumcodereview.appspot.com//9959127
------------------------------------------------------------------------
r6179 | srdjan@google.com | 2012-04-05 02:25:35 +0900 (木, 05  4月 2012) | 2 lines

Implement StringConcatNode in flow graph builder (it is ised on for "+" on strings, will be soon removed).
Review URL: https://chromiumcodereview.appspot.com//9959134
------------------------------------------------------------------------
r6163 | floitsch@google.com | 2012-04-04 18:41:10 +0900 (水, 04  4月 2012) | 5 lines

Rename variables in Bigint file.

Addresses review comments from https://chromiumcodereview.appspot.com/9536016

Review URL: https://chromiumcodereview.appspot.com//9959095
------------------------------------------------------------------------
r6145 | regis@google.com | 2012-04-04 05:23:30 +0900 (水, 04  4月 2012) | 3 lines

Add missing type checks for top level static initializers (issue 1980 and
duplicates 1957, 2070, 2224).
Review URL: https://chromiumcodereview.appspot.com//9958091
------------------------------------------------------------------------
r6129 | turnidge@google.com | 2012-04-04 02:51:20 +0900 (水, 04  4月 2012) | 2 lines

Revert my last change due to problems on other platforms.
Review URL: https://chromiumcodereview.appspot.com//9968088
------------------------------------------------------------------------
r6128 | turnidge@google.com | 2012-04-04 02:32:39 +0900 (水, 04  4月 2012) | 6 lines

Detect recursion during compilation of const constructors.

We now give a message like this:

    Illegal recursion in const constructor 'A.'.
Review URL: https://chromiumcodereview.appspot.com//9965081
------------------------------------------------------------------------
r6112 | hausner@google.com | 2012-04-03 06:18:02 +0900 (火, 03  4月 2012) | 4 lines

Fix issue 1569

Report proper error on illegal getter and setter syntax, and bad field declarations.
Review URL: https://chromiumcodereview.appspot.com//9958041
------------------------------------------------------------------------
r6098 | srdjan@google.com | 2012-04-03 03:08:35 +0900 (火, 03  4月 2012) | 2 lines

Implement JumpNode handling (continue, break) in Dowhile and While nodes.
Review URL: https://chromiumcodereview.appspot.com//9958070
------------------------------------------------------------------------
r6068 | regis@google.com | 2012-03-31 07:16:52 +0900 (土, 31  3月 2012) | 9 lines

Use null type argument vector instead of vector of Dynamic for a generic raw
type when possible.
Fix type finalization of type parameters (always finalize in the context of the
class being parameterized and not in the enclosing class where the type
parameter is used).
Fix wrong generic optimization and added a test (a generic type instantiated
from a raw instantiator is not always raw).
Added printing of type argument vectors.
Review URL: https://chromiumcodereview.appspot.com//9939003
------------------------------------------------------------------------
r6067 | srdjan@google.com | 2012-03-31 06:47:23 +0900 (土, 31  3月 2012) | 2 lines

Minor cleanup in assembly code.
Review URL: https://chromiumcodereview.appspot.com//9963032
------------------------------------------------------------------------
r6059 | hausner@google.com | 2012-03-31 03:45:17 +0900 (土, 31  3月 2012) | 9 lines

Fix two compile time const issues

- For equality expressions, the operands do not have to be of same
  type. (Issue 1671)

- Truncating division is allowed for any numerical type, not just
  integer. (Issue 1780) Spec has been updated accordingly and
  co19 issue 106 filed to fix faulty test.
Review URL: https://chromiumcodereview.appspot.com//9969023
------------------------------------------------------------------------
r6050 | srdjan@google.com | 2012-03-31 02:18:34 +0900 (土, 31  3月 2012) | 2 lines

Implement JumpNode for break/continue in for loops.
Review URL: https://chromiumcodereview.appspot.com//9907001
------------------------------------------------------------------------
r6046 | hausner@google.com | 2012-03-31 01:53:55 +0900 (土, 31  3月 2012) | 6 lines

Report error on missing factory class

Fixes issue 974. If an interface declares a constructor, it must
declare a factory class. Report compile-time error if the factory
class is missing.
Review URL: https://chromiumcodereview.appspot.com//9958018
------------------------------------------------------------------------
r6006 | hausner@google.com | 2012-03-30 07:44:47 +0900 (金, 30  3月 2012) | 8 lines

Fix capturing of for-loop variables

It was broken when there were captured variables in inner blocks.
LocalFunctionTest had a test case that was expecting the wrong result.
Add a few more test cases to For2Test.dart

Fixes issue 2338  (http://code.google.com/p/dart/issues/detail?id=2338)
Review URL: https://chromiumcodereview.appspot.com//9921030
------------------------------------------------------------------------
r6003 | srdjan@google.com | 2012-03-30 06:01:48 +0900 (金, 30  3月 2012) | 2 lines

Fix trigonometric intrinsics: if allocation fails remember to release the loaded value on FPU stack.
Review URL: https://chromiumcodereview.appspot.com//9909024
------------------------------------------------------------------------
r5985 | srdjan@google.com | 2012-03-30 02:05:00 +0900 (金, 30  3月 2012) | 2 lines

Intrinsify methods early. Fix some bugs in trinsified code, mark one precision-related bug as SKIP since sometimes it may pass sometimes not.
Review URL: https://chromiumcodereview.appspot.com//9921017
------------------------------------------------------------------------
r5934 | srdjan@google.com | 2012-03-29 00:50:33 +0900 (木, 29  3月 2012) | 3 lines

Factor out super-class and interface array subtype checks into a stub.
Inline more type checks.
Review URL: https://chromiumcodereview.appspot.com//9873014
------------------------------------------------------------------------
r5921 | iposva@google.com | 2012-03-28 10:21:04 +0900 (水, 28  3月 2012) | 2 lines

- Make the URI resolution methods used by the tag handler private.
Review URL: https://chromiumcodereview.appspot.com//9845040
------------------------------------------------------------------------
r5915 | srdjan@google.com | 2012-03-28 08:01:14 +0900 (水, 28  3月 2012) | 3 lines

More type checking performance improvements and a bug fix in intrinsifier.
With "frog --leg", type checked mdoe is now "only" 5x slower (used to be 10x).
Review URL: https://chromiumcodereview.appspot.com//9844003
------------------------------------------------------------------------
r5899 | srdjan@google.com | 2012-03-28 04:48:04 +0900 (水, 28  3月 2012) | 2 lines

Again, forgot to save before uploading/comitting (just added a comment)
Review URL: https://chromiumcodereview.appspot.com//9836128
------------------------------------------------------------------------
r5898 | srdjan@google.com | 2012-03-28 04:40:08 +0900 (水, 28  3月 2012) | 2 lines

Inline checks for super class and interfaces (checked mdoe improvements).
Review URL: https://chromiumcodereview.appspot.com//9863043
------------------------------------------------------------------------
r5889 | srdjan@google.com | 2012-03-28 02:35:45 +0900 (水, 28  3月 2012) | 2 lines

Restructure type checks in ObjectArray []= to accept any value if parameterized type is Dynamic.
Review URL: https://chromiumcodereview.appspot.com//9860019
------------------------------------------------------------------------
r5864 | floitsch@google.com | 2012-03-27 14:28:13 +0900 (火, 27  3月 2012) | 9 lines

Remove redundant assert.

There could be two reasons that this test fails:
1. The uint64-to-double conversion fails at runtime.
2. The windows-compiler rounds the wrong way.

This CL assumes 2.

Review URL: https://chromiumcodereview.appspot.com//9863023
------------------------------------------------------------------------
r5863 | floitsch@google.com | 2012-03-27 14:08:50 +0900 (火, 27  3月 2012) | 3 lines

Implement correct bigint to double conversion.

Review URL: https://chromiumcodereview.appspot.com//9540015
------------------------------------------------------------------------
r5859 | srdjan@google.com | 2012-03-27 07:55:08 +0900 (火, 27  3月 2012) | 2 lines

Fortgot the changes as requested by Regis.
Review URL: https://chromiumcodereview.appspot.com//9836097
------------------------------------------------------------------------
r5858 | srdjan@google.com | 2012-03-27 07:35:01 +0900 (火, 27  3月 2012) | 2 lines

Run intrinsified version of ObjectArray[]= even in checked mode (inline value type check for null and Smi values).
Review URL: https://chromiumcodereview.appspot.com//9865004
------------------------------------------------------------------------
r5847 | srdjan@google.com | 2012-03-27 03:23:37 +0900 (火, 27  3月 2012) | 2 lines

Improve checked mode a little (more to come in a different CL).
Review URL: https://chromiumcodereview.appspot.com//9854030
------------------------------------------------------------------------
r5843 | regis@google.com | 2012-03-27 01:59:37 +0900 (火, 27  3月 2012) | 4 lines

Do not share local function between closurized and non-closurized enclosing
function.
Add test (thanks to Florian for reporting the issue).
Review URL: https://chromiumcodereview.appspot.com//9835070
------------------------------------------------------------------------
r5835 | hausner@google.com | 2012-03-27 00:51:25 +0900 (火, 27  3月 2012) | 25 lines

Stop ignoring compilation errors on compile_all

When compiling all code, stop compiling after the first error.
Previously, we ignored compilation errors.

This was a feature wish so we can detect errors in libraries.
In fact, there are errors in the library, e.g. references
to non-existing top-level functions in utf16 code. And possibly
others. If this code gets checked in, any tests that depends on
--compile_all will break.

First problem:

'dart:utf': Error: line 607 pos 7: identifier 'is16BitCodeUnit' is not declared in this scope
  if (is16BitCodeUnit()) {
      ^

If I hack that, the next one is:

'dart:utf': Error: line 613 pos 9: identifier 'utf16CodeUnitsToCodepoints' is not declared in this scope
        utf16CodeUnitsToCodepoints(codeunits, 0, null, replacementCodepoint));
        ^

Didn't investigate any more than that...
Review URL: https://chromiumcodereview.appspot.com//9836064
------------------------------------------------------------------------
r5803 | asiva@google.com | 2012-03-24 11:56:26 +0900 (土, 24  3月 2012) | 2 lines

Update comment describing the length field in class Bigint.
Review URL: https://chromiumcodereview.appspot.com//9839087
------------------------------------------------------------------------
r5802 | asiva@google.com | 2012-03-24 11:42:56 +0900 (土, 24  3月 2012) | 8 lines

Fix for issue 2233

- Fixed the bigint instance allocation path when full snapshots are read.

- JSRegExp objects are only serialized/deserialized in a message snapshot and
hence do not need that special path. There is an assertion in JSRegExp to
ensure that these objects are not part of a full snapshot.
Review URL: https://chromiumcodereview.appspot.com//9835074
------------------------------------------------------------------------
r5793 | srdjan@google.com | 2012-03-24 06:26:34 +0900 (土, 24  3月 2012) | 2 lines

Add contexts.
Review URL: https://chromiumcodereview.appspot.com//9726024
------------------------------------------------------------------------
r5764 | asiva@google.com | 2012-03-23 10:27:35 +0900 (金, 23  3月 2012) | 5 lines

Second set of changes for implementation of stack map support.

- Added functionality to be able to build stack maps in the compiler and register them into the Code object during Code finalization.
- Merged code_generator_ia32_test.cc and code_generator_x64_test.cc into code_generator_test.cc as the two files were identical.
Review URL: https://chromiumcodereview.appspot.com//9721006
------------------------------------------------------------------------
r5737 | kmillikin@google.com | 2012-03-22 08:45:20 +0900 (木, 22  3月 2012) | 10 lines

Compute immediate dominators using SEMI-NCA.

This is a version of the Lengauer-Tarjan algorithm that is both simpler and
faster.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9729015
------------------------------------------------------------------------
r5668 | hausner@google.com | 2012-03-20 08:35:30 +0900 (火, 20  3月 2012) | 4 lines

Fix use-after-free bug in debugger

This was the cause for crashes on Linux.
Review URL: https://chromiumcodereview.appspot.com//9726017
------------------------------------------------------------------------
r5664 | regis@google.com | 2012-03-20 08:09:06 +0900 (火, 20  3月 2012) | 2 lines

Implement StaticGetter and StaticSetter in new compiler.
Review URL: https://chromiumcodereview.appspot.com//9726011
------------------------------------------------------------------------
r5660 | kmillikin@google.com | 2012-03-20 06:57:06 +0900 (火, 20  3月 2012) | 10 lines

Do not use recursion for depth-first traversal of straight line code.

For straight-line sequences of intermediate instructions, use iteration in
the depth-first search implementation.

R=srdjan@google.com
BUG=
TEST=vm/CodeIndexTable should pass on x64

Review URL: https://chromiumcodereview.appspot.com//9732022
------------------------------------------------------------------------
r5655 | kmillikin@google.com | 2012-03-20 04:39:14 +0900 (火, 20  3月 2012) | 15 lines

Make the CFG depth-first traversal do more work for us.

Turn the depth-first traversal into a pass to discover the graph's basic
block structure.  Record basic-block predecessors in the block entry
instructions.  Also record the last instruction in a block in the block
entry instruction (giving constant-time access to the block's successors).

Also, record the depth-first spanning tree of the traversal to be used for
dominator computation.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9730003
------------------------------------------------------------------------
r5649 | regis@google.com | 2012-03-20 02:02:40 +0900 (火, 20  3月 2012) | 3 lines

Use a local variable to save/restore the context on entry/exit, instead of
explicitly pushing/popping.
Review URL: https://chromiumcodereview.appspot.com//9721004
------------------------------------------------------------------------
r5601 | srdjan@google.com | 2012-03-17 08:06:39 +0900 (土, 17  3月 2012) | 2 lines

Remove possibility of critical edges.
Review URL: https://chromiumcodereview.appspot.com//9722009
------------------------------------------------------------------------
r5600 | kmillikin@google.com | 2012-03-17 07:36:20 +0900 (土, 17  3月 2012) | 10 lines

Make required changes to {ia32,arm} stubbed graph code generator.

The function signature was changed and the platform-independent caller, but
not the platform-specific stub implementations.

TBR=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9722011
------------------------------------------------------------------------
r5599 | hausner@google.com | 2012-03-17 07:28:57 +0900 (土, 17  3月 2012) | 12 lines

Properly recognize closures when setting breakpoints

Local functions and function literals are unknown to the VM
until the enclosing function is compiled. This change introduces
a list of known closures per class, and a function to look up
the innermost closure at a given token index.

The debugger now checks whether there are newly discovered
closures when a function containing a pending breakpoint is
compiled. If necessary, the breakpoint is set to the inner
function.
Review URL: https://chromiumcodereview.appspot.com//9716004
------------------------------------------------------------------------
r5598 | kmillikin@google.com | 2012-03-17 07:20:04 +0900 (土, 17  3月 2012) | 15 lines

Compute preorder as well as postorder basic block orderings.

The Lengauer-Tarjan dominator/dominance frontier algorithm needs to
visit the blocks in reverse preorder (in the first pass) and preorder
(in the second).  Compute that at the same time as postorder (e.g.,
using the same spanning tree).

Take this chance to make the flow graph visitors always operate on a
forward block ordering.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9719003
------------------------------------------------------------------------
r5573 | hausner@google.com | 2012-03-17 01:17:23 +0900 (土, 17  3月 2012) | 2 lines

Remove warning for illegal parameter names
Review URL: https://chromiumcodereview.appspot.com//9704094
------------------------------------------------------------------------
r5571 | srdjan@google.com | 2012-03-17 00:38:43 +0900 (土, 17  3月 2012) | 2 lines

Clean-up CodeGenState: remove unused loop_level and move context_level to CodeGenerator (and add it to FlowGraphBuilder).
Review URL: https://chromiumcodereview.appspot.com//9706086
------------------------------------------------------------------------
r5552 | asiva@google.com | 2012-03-16 12:58:06 +0900 (金, 16  3月 2012) | 4 lines

Fix for issue 2124 - Dart VM crashes on windows

The Array::MakeArray was incorrectly accessing the class_ field before it was initialized.
Review URL: https://chromiumcodereview.appspot.com//9700079
------------------------------------------------------------------------
r5546 | kmillikin@google.com | 2012-03-16 06:52:27 +0900 (金, 16  3月 2012) | 10 lines

Simplify translation of conditionals in the flow graph builder.

Allow the builder to assume that, if control flow reaches a conditional
expresion, there is always control flow to two branches.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9704063
------------------------------------------------------------------------
r5539 | srdjan@google.com | 2012-03-16 05:42:01 +0900 (金, 16  3月 2012) | 2 lines

Make Throw and ReThrow instructions instead of computations. That way they can terminate a basic block.
Review URL: https://chromiumcodereview.appspot.com//9699090
------------------------------------------------------------------------
r5537 | regis@google.com | 2012-03-16 05:16:29 +0900 (金, 16  3月 2012) | 36 lines

Split the computation of uninstantiated type arguments between the factory case
and the constructor case, as suggested in my review of
https://chromiumcodereview.appspot.com/9700003/

Examples of generated IL (first factory, second non-factory).

 foo() { return new List<T>(); }
 moo() { return new A<T>(); }

==== file:///home/regis/test.dart_A_foo
 0: [target]
    t0 <- LoadLocal(this)
    t0 <- NativeLoadField(t0, 16)
    t0 <- ExtractFactoryTypeArguments(t0)
    t0 <- StaticCall(List., t0)
    return t0
==== file:///home/regis/test.dart_A_moo
 0: [target]
    t0 <- #null
    t1 <- LoadLocal(this)
    t1 <- NativeLoadField(t1, 16)
    t2 <- Pick(t1)
    t2 <- ExtractConstructorTypeArguments(t2)
    t0 := t2
    t1 <- ExtractConstructorInstantiator(t1, t2)
    t0 <- AllocateObject(Library:'file:///home/regis/test.dart' Class: A, t0, t1)
    t1 <- Pick(t0)
    t2 <- #3
    StaticCall(A., t1, t2)
    return t0

This change removes the computation that previously returned two values at the
cost of a some small code duplication. We could address this duplication by
exposing the computation recognizing the identity vector at the IL level and
implement a branch.
Review URL: https://chromiumcodereview.appspot.com//9703080
------------------------------------------------------------------------
r5525 | srdjan@google.com | 2012-03-16 00:54:59 +0900 (金, 16  3月 2012) | 2 lines

Fix 2172: report 'int' instead of Smi, Mint and Bigint when throwing TypeError.
Review URL: https://chromiumcodereview.appspot.com//9705041
------------------------------------------------------------------------
r5505 | iposva@google.com | 2012-03-15 10:07:15 +0900 (木, 15  3月 2012) | 3 lines

- Proper inclusion of gypi files, so that they do not override
  existing build flags.
Review URL: https://chromiumcodereview.appspot.com//9701054
------------------------------------------------------------------------
r5503 | asiva@google.com | 2012-03-15 09:42:45 +0900 (木, 15  3月 2012) | 4 lines

Fix build break.

TBR=srdjan.
Review URL: https://chromiumcodereview.appspot.com//9703047
------------------------------------------------------------------------
r5502 | asiva@google.com | 2012-03-15 09:18:05 +0900 (木, 15  3月 2012) | 4 lines

First step towards implementing stack map descriptions for the optimizing compiler.

Add a RawBitmap object and a bitmap builder.
Review URL: https://chromiumcodereview.appspot.com//9701010
------------------------------------------------------------------------
r5501 | hausner@google.com | 2012-03-15 08:49:22 +0900 (木, 15  3月 2012) | 7 lines

Now that it works, make it nice.

INT_MAX is almost as good as INTPTR_MAX, and it has the benefit
that it works on all platforms.

TBR=srdjan
Review URL: https://chromiumcodereview.appspot.com//9704044
------------------------------------------------------------------------
r5500 | hausner@google.com | 2012-03-15 08:37:17 +0900 (木, 15  3月 2012) | 2 lines

More fixing
Review URL: https://chromiumcodereview.appspot.com//9701049
------------------------------------------------------------------------
r5499 | hausner@google.com | 2012-03-15 08:25:14 +0900 (木, 15  3月 2012) | 4 lines

If at first you don't succeed...

...give up.
Review URL: https://chromiumcodereview.appspot.com//9699055
------------------------------------------------------------------------
r5496 | hausner@google.com | 2012-03-15 08:10:35 +0900 (木, 15  3月 2012) | 6 lines

Fix breakpoint location

The debugger code erroneously assumed that PC descriptors are
sorted by ascending token_index. That is not the case. This change
fixes the translation from token index to pc descriptor index.
Review URL: https://chromiumcodereview.appspot.com//9706038
------------------------------------------------------------------------
r5490 | srdjan@google.com | 2012-03-15 06:47:43 +0900 (木, 15  3月 2012) | 4 lines

Add Throw and ReThrow nodes. Rethrow not yet tested (bailout with untested), since it needs the try/catch implementation. Discuss if Throw/ReThrow shoudl be computations or instructions. We have one case in parser where throw is added into the expression tree.

I suggest introducing an EndInstr that has no successor and use it for throw and return. (TODO: Discuss and chnage if necessary). Currently we generate code even after the throw.
Review URL: https://chromiumcodereview.appspot.com//9706032
------------------------------------------------------------------------
r5487 | turnidge@google.com | 2012-03-15 06:19:03 +0900 (木, 15  3月 2012) | 2 lines

Fix failing test on windows.  I was accessing a stat too early.
Review URL: https://chromiumcodereview.appspot.com//9706033
------------------------------------------------------------------------
r5486 | turnidge@google.com | 2012-03-15 06:10:33 +0900 (木, 15  3月 2012) | 6 lines

Another fix for non-mac build:

../runtime/platform/assert.h: In member function ‘void dart::DynamicAssertionHelper::Equals(const E&, const A&) [with E = int, A = uint64_t]’:
../runtime/vm/thread_pool_test.cc:64:   instantiated from here
../runtime/platform/assert.h:98: error: comparison between signed and unsigned integer expressions
Review URL: https://chromiumcodereview.appspot.com//9704037
------------------------------------------------------------------------
r5485 | turnidge@google.com | 2012-03-15 06:04:14 +0900 (木, 15  3月 2012) | 3 lines

Fix wrong initializer order -- not caught on mac build because mac
warnings are busted right now.
Review URL: https://chromiumcodereview.appspot.com//9700039
------------------------------------------------------------------------
r5484 | turnidge@google.com | 2012-03-15 06:00:45 +0900 (木, 15  3月 2012) | 2 lines

Implement ThreadPool.
Review URL: https://chromiumcodereview.appspot.com//9581039
------------------------------------------------------------------------
r5480 | srdjan@google.com | 2012-03-15 03:51:47 +0900 (木, 15  3月 2012) | 24 lines

Implement more of allocation code using type arguments. Type argument extraction for non-factories produces two results, however, instructions can produce only one temporary. Use a stack placeholder so that we have room to push two results. Examples of generated IL (first factory, second non-factory).

  foo() { return new List<T>(); }
  moo() { return new A<T>(); }

==== file:///sources/dartall/dart/runtime/Test.dart_A_foo
 0: [target]
    t1 <- LoadLocal(this)
    t1 <- NativeLoadField(t1, 16)
    t1 <- ExtractTypeArguments(t1)
    t0 <- StaticCall(List., t0)
    return t0
==== file:///sources/dartall/dart/runtime/Test.dart_A_moo
 0: [target]
    t0 <- #null
    t1 <- LoadLocal(this)
    t1 <- NativeLoadField(t1, 16)
    t1 <- ExtractTypeArguments(t1)
    t0 <- AllocateObject(Library:'file:///sources/dartall/dart/runtime/Test.dart' Class: A, t0, t1)
    t1 <- Pick(t0)
    t2 <- #3
    StaticCall(A., t1, t2)
    return t0
Review URL: https://chromiumcodereview.appspot.com//9700003
------------------------------------------------------------------------
r5450 | hausner@google.com | 2012-03-14 09:41:40 +0900 (水, 14  3月 2012) | 7 lines

Compiler warning on named optional params that start with '_'

Temporary change so Dartium can can fix their source. Then convert
the warning to an error message as in change 5444.

TBR=vsm
Review URL: https://chromiumcodereview.appspot.com//9702010
------------------------------------------------------------------------
r5448 | hausner@google.com | 2012-03-14 09:35:16 +0900 (水, 14  3月 2012) | 2 lines

Revert change 5444
Review URL: https://chromiumcodereview.appspot.com//9703004
------------------------------------------------------------------------
r5446 | regis@google.com | 2012-03-14 09:16:22 +0900 (水, 14  3月 2012) | 3 lines

Do not chain the current context on entry in non-closure functions, but
save and restore it on the stack instead, and chain a null context (issue 1613).
Review URL: https://chromiumcodereview.appspot.com//9705004
------------------------------------------------------------------------
r5445 | cshapiro@google.com | 2012-03-14 08:41:59 +0900 (水, 14  3月 2012) | 12 lines

Implement prologue weak persistent handles.

Prologue weak persistent handles are similar to weak persistent
handles but exhibit different behavior during garbage collections that
invoke the prologue and epilogue callbacks.  While weak persistent
handles always weakly reference their referents, prologue weak
persistent handles weakly reference their referents only during a
garbage collection occurs that invokes the prologue and epilogue
callbacks.  During all other garbage collections, prologue weak
persistent handles strongly reference their referents.

Review URL: https://chromiumcodereview.appspot.com//9655011
------------------------------------------------------------------------
r5444 | hausner@google.com | 2012-03-14 08:24:37 +0900 (水, 14  3月 2012) | 6 lines

named optional parameters must not be private

Named optional parameters may not start with an underscore '_'.

Fix issue 434 (http://code.google.com/p/dart/issues/detail?id=434)
Review URL: https://chromiumcodereview.appspot.com//9701001
------------------------------------------------------------------------
r5442 | turnidge@google.com | 2012-03-14 07:08:51 +0900 (水, 14  3月 2012) | 2 lines

Fix unused var warning.
Review URL: https://chromiumcodereview.appspot.com//9693062
------------------------------------------------------------------------
r5441 | turnidge@google.com | 2012-03-14 07:05:08 +0900 (水, 14  3月 2012) | 4 lines

Implement spawnFunction from the new isolate api.

Still need to implement spawnUri, which will be the more difficult one.
Review URL: https://chromiumcodereview.appspot.com//9691005
------------------------------------------------------------------------
r5438 | hausner@google.com | 2012-03-14 06:07:42 +0900 (水, 14  3月 2012) | 2 lines

Address Ivan's review comments.
Review URL: https://chromiumcodereview.appspot.com//9696048
------------------------------------------------------------------------
r5436 | hausner@google.com | 2012-03-14 05:37:49 +0900 (水, 14  3月 2012) | 5 lines

Deoptimize functions before setting breakpoints

Does not yet handle cases where the functions have active frames
on the stack.
Review URL: https://chromiumcodereview.appspot.com//9696020
------------------------------------------------------------------------
r5435 | turnidge@google.com | 2012-03-14 05:36:56 +0900 (水, 14  3月 2012) | 2 lines

Fix unused vars warning.
Review URL: https://chromiumcodereview.appspot.com//9692061
------------------------------------------------------------------------
r5433 | turnidge@google.com | 2012-03-14 04:49:48 +0900 (水, 14  3月 2012) | 4 lines

Add Dart_Invoke, which will replace Dart_InvokeDynamic and Dart_InvokeStatic.

Fixed Dart_SetField to allow us to set a field to null.
Review URL: https://chromiumcodereview.appspot.com//9608024
------------------------------------------------------------------------
r5424 | srdjan@google.com | 2012-03-14 03:17:11 +0900 (水, 14  3月 2012) | 3 lines


Fix another unused variable issue. Tested and built on Linux.
Review URL: https://chromiumcodereview.appspot.com//9689070
------------------------------------------------------------------------
r5421 | srdjan@google.com | 2012-03-14 02:51:02 +0900 (水, 14  3月 2012) | 2 lines

Fix build.
Review URL: https://chromiumcodereview.appspot.com//9689068
------------------------------------------------------------------------
r5419 | srdjan@google.com | 2012-03-14 02:35:05 +0900 (水, 14  3月 2012) | 3 lines

Optional arguments in new compiler.
Includes Issue 9664062: Support allocating and calling closures in the new non-optimizing compiler (with fixes)
Review URL: https://chromiumcodereview.appspot.com//9693020
------------------------------------------------------------------------
r5413 | regis@google.com | 2012-03-14 01:16:12 +0900 (水, 14  3月 2012) | 7 lines

Fix type check to perform a subtype test at top level instead of an
assignability test. This only makes a difference when assigning an instance of
a function type.
Fix a bad language test.
Disable a bad co19 test (issue 99 filed).
Change error message for dynamic type error.
Review URL: https://chromiumcodereview.appspot.com//9664029
------------------------------------------------------------------------
r5392 | kmillikin@google.com | 2012-03-13 21:31:45 +0900 (火, 13  3月 2012) | 10 lines

Support allocating and calling closures in the new non-optimizing compiler.

As part of this change, variable allocation is split out from the backend
code generator.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9664062
------------------------------------------------------------------------
r5379 | iposva@google.com | 2012-03-13 10:26:39 +0900 (火, 13  3月 2012) | 2 lines

- Make RawICData a subclass of RawObject and not RawInstance.
Review URL: https://chromiumcodereview.appspot.com//9691024
------------------------------------------------------------------------
r5377 | iposva@google.com | 2012-03-13 09:59:17 +0900 (火, 13  3月 2012) | 4 lines

- Allow string interpolation in constant strings.
- Add test for constant adjacent strings with and without interpolation.
- Update status files.
Review URL: https://chromiumcodereview.appspot.com//9694024
------------------------------------------------------------------------
r5371 | turnidge@google.com | 2012-03-13 08:59:53 +0900 (火, 13  3月 2012) | 2 lines

Remove unused variable.
Review URL: https://chromiumcodereview.appspot.com//9691020
------------------------------------------------------------------------
r5370 | turnidge@google.com | 2012-03-13 08:51:03 +0900 (火, 13  3月 2012) | 6 lines

Heartbeat implementation of dart:mirrors.

Add the skeleton for the dart:mirrors library in all the appropriate
places.  The only thing we can do right now is ask an Isolate for its
debugName.  Add a few tests.
Review URL: https://chromiumcodereview.appspot.com//9420038
------------------------------------------------------------------------
r5369 | turnidge@google.com | 2012-03-13 07:56:24 +0900 (火, 13  3月 2012) | 2 lines

Tiny fix in Dart_CreateIsolate to allow errors to print correctly.
Review URL: https://chromiumcodereview.appspot.com//9689023
------------------------------------------------------------------------
r5368 | sigmund@google.com | 2012-03-13 07:52:36 +0900 (火, 13  3月 2012) | 6 lines

SendPort + ReceivePort changes:
- document what are valid messages in SendPort.send
- change SendPort.call to return a future of the reply
- remove ReceivePort.singleShot

Review URL: https://chromiumcodereview.appspot.com//9652001
------------------------------------------------------------------------
r5331 | srdjan@google.com | 2012-03-13 01:22:50 +0900 (火, 13  3月 2012) | 2 lines

Implement factory call.
Review URL: https://chromiumcodereview.appspot.com//9664023
------------------------------------------------------------------------
r5329 | srdjan@google.com | 2012-03-13 01:12:04 +0900 (火, 13  3月 2012) | 2 lines

Generate code for instance of: copy from CodeGenerator. More code needed for the instantiator "thing"
Review URL: https://chromiumcodereview.appspot.com//9665029
------------------------------------------------------------------------
r5275 | hausner@google.com | 2012-03-10 09:48:35 +0900 (土, 10  3月 2012) | 4 lines

Fix linux build.

I knew this would happen ;)
Review URL: https://chromiumcodereview.appspot.com//9667019
------------------------------------------------------------------------
r5274 | hausner@google.com | 2012-03-10 09:43:08 +0900 (土, 10  3月 2012) | 6 lines

Teach debugger to ignore breakpoints

Reentrant debugger calls to fetch values may execute dart code as a
side effect. Teach the debugger to ignore any breakpoints it might
hit while doing so.
Review URL: https://chromiumcodereview.appspot.com//9668036
------------------------------------------------------------------------
r5270 | iposva@google.com | 2012-03-10 09:12:55 +0900 (土, 10  3月 2012) | 2 lines

- Support "no_" as well as "no-" prefix on boolean flags.
Review URL: https://chromiumcodereview.appspot.com//9669016
------------------------------------------------------------------------
r5269 | iposva@google.com | 2012-03-10 08:21:09 +0900 (土, 10  3月 2012) | 3 lines

Fix issue 1950:
- enable-checked-mode forces --enable_type_checks and --enable_asserts.
Review URL: https://chromiumcodereview.appspot.com//9668034
------------------------------------------------------------------------
r5267 | srdjan@google.com | 2012-03-10 08:18:09 +0900 (土, 10  3月 2012) | 2 lines

Fix linux build, wliminate unused variable.
Review URL: https://chromiumcodereview.appspot.com//9666027
------------------------------------------------------------------------
r5264 | srdjan@google.com | 2012-03-10 07:40:37 +0900 (土, 10  3月 2012) | 2 lines

Implementing ConstructorCall: part I.
Review URL: https://chromiumcodereview.appspot.com//9646008
------------------------------------------------------------------------
r5253 | srdjan@google.com | 2012-03-10 06:34:58 +0900 (土, 10  3月 2012) | 2 lines

Implement logical AND/OR.
Review URL: https://chromiumcodereview.appspot.com//9649012
------------------------------------------------------------------------
r5250 | regis@google.com | 2012-03-10 06:15:11 +0900 (土, 10  3月 2012) | 2 lines

Generate a dynamic type error when creating an instance with a bound error.
Review URL: https://chromiumcodereview.appspot.com//9665013
------------------------------------------------------------------------
r5243 | regis@google.com | 2012-03-10 03:14:02 +0900 (土, 10  3月 2012) | 5 lines

Fix type checks that wrongly ignored malformed types.
Fix corresponding test.
Fix comment in gypi file.
Fix undeclared type in stream_util.dart.
Review URL: https://chromiumcodereview.appspot.com//9649010
------------------------------------------------------------------------
r5228 | kmillikin@google.com | 2012-03-09 20:41:22 +0900 (金, 09  3月 2012) | 7 lines

Implement increment of locals.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9634009
------------------------------------------------------------------------
r5227 | kmillikin@google.com | 2012-03-09 20:22:33 +0900 (金, 09  3月 2012) | 7 lines

Implement compilation of conditional expressions.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9639010
------------------------------------------------------------------------
r5223 | kmillikin@google.com | 2012-03-09 18:39:29 +0900 (金, 09  3月 2012) | 7 lines

Support compilation of ArrayNode.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9635016
------------------------------------------------------------------------
r5219 | kmillikin@google.com | 2012-03-09 18:02:20 +0900 (金, 09  3月 2012) | 7 lines

Support compilation of for loops.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9635014
------------------------------------------------------------------------
r5203 | asiva@google.com | 2012-03-09 08:52:26 +0900 (金, 09  3月 2012) | 2 lines

Fix from() to point to the correct value in RawGrowableObjectArray.
Review URL: https://chromiumcodereview.appspot.com//9652015
------------------------------------------------------------------------
r5201 | iposva@google.com | 2012-03-09 08:38:29 +0900 (金, 09  3月 2012) | 2 lines

- Fix Windows build: use the global name for the API entry.
Review URL: https://chromiumcodereview.appspot.com//9648015
------------------------------------------------------------------------
r5199 | iposva@google.com | 2012-03-09 08:29:45 +0900 (金, 09  3月 2012) | 2 lines

- Move finalization until after the classes in dart:builtin have been loaded.
Review URL: https://chromiumcodereview.appspot.com//9652016
------------------------------------------------------------------------
r5189 | asiva@google.com | 2012-03-09 04:23:24 +0900 (金, 09  3月 2012) | 2 lines

Use GrowableObjectArray in ic-data.
Review URL: https://chromiumcodereview.appspot.com//9630003
------------------------------------------------------------------------
r5185 | turnidge@google.com | 2012-03-09 03:36:56 +0900 (金, 09  3月 2012) | 2 lines

Start using Dart_SetField and Dart_GetField in the vm.
Review URL: https://chromiumcodereview.appspot.com//9642003
------------------------------------------------------------------------
r5179 | srdjan@google.com | 2012-03-09 02:15:35 +0900 (金, 09  3月 2012) | 2 lines

Implement strict comparison and native calls in flow graph compiler x64.
Review URL: https://chromiumcodereview.appspot.com//9624025
------------------------------------------------------------------------
r5160 | kmillikin@google.com | 2012-03-08 20:06:02 +0900 (木, 08  3月 2012) | 10 lines

Handle instance field and indexed increment operations.

Handle pre- and post-increment (decrement) in effect and non-effect
contexts.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9622002
------------------------------------------------------------------------
r5159 | kmillikin@google.com | 2012-03-08 19:00:26 +0900 (木, 08  3月 2012) | 9 lines

Implement branching control flow in the non-optimizing graph compiler.

Bind a label on block entry, implement branching.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9623005
------------------------------------------------------------------------
r5148 | asiva@google.com | 2012-03-08 10:24:34 +0900 (木, 08  3月 2012) | 2 lines

Use GrowableObjectArray in the debugger instance/static field lists.
Review URL: https://chromiumcodereview.appspot.com//9634002
------------------------------------------------------------------------
r5142 | floitsch@google.com | 2012-03-08 09:09:54 +0900 (木, 08  3月 2012) | 5 lines

Fix bit-or and bit-xor for two negative bigints.

Fixes issue 2049.

Review URL: https://chromiumcodereview.appspot.com//9625027
------------------------------------------------------------------------
r5135 | iposva@google.com | 2012-03-08 07:57:57 +0900 (木, 08  3月 2012) | 2 lines

- Proper URI resolution when loading scripts from the standalone binary.
Review URL: https://chromiumcodereview.appspot.com//9614006
------------------------------------------------------------------------
r5126 | turnidge@google.com | 2012-03-08 06:28:14 +0900 (木, 08  3月 2012) | 2 lines

Remove unused variable in my last CL.
Review URL: https://chromiumcodereview.appspot.com//9624020
------------------------------------------------------------------------
r5124 | turnidge@google.com | 2012-03-08 06:15:58 +0900 (木, 08  3月 2012) | 10 lines

Adds new apis Dart_GetField/Dart_SetField.

These are intended to replace Dart_{Get,Set}{Static,Instance}Field.

---

Mess with Library::PrivateName.

Add field/function lookup to Library.
Review URL: https://chromiumcodereview.appspot.com//9616044
------------------------------------------------------------------------
r5123 | srdjan@google.com | 2012-03-08 06:12:29 +0900 (木, 08  3月 2012) | 2 lines

Implement '==', '!=' and instanceof (without code generation).
Review URL: https://chromiumcodereview.appspot.com//9615025
------------------------------------------------------------------------
r5112 | cshapiro@google.com | 2012-03-08 04:38:51 +0900 (木, 08  3月 2012) | 3 lines

Implement a garbage collection prologue and epilogue callback mechanism.

Review URL: https://chromiumcodereview.appspot.com//9605033
------------------------------------------------------------------------
r5111 | cshapiro@google.com | 2012-03-08 04:29:32 +0900 (木, 08  3月 2012) | 3 lines

Address two review comments from 9531001.

Review URL: https://chromiumcodereview.appspot.com//9546042
------------------------------------------------------------------------
r5109 | asiva@google.com | 2012-03-08 04:14:02 +0900 (木, 08  3月 2012) | 4 lines

Add a first class GrowableObjectArray type in the VM and use it internally in the VM at all spots were we use GrowableArray first and then copy the contents into an Array object.

Next step is to use this type in growable_array.dart
Review URL: https://chromiumcodereview.appspot.com//9594028
------------------------------------------------------------------------
r5081 | floitsch@google.com | 2012-03-07 21:51:45 +0900 (水, 07  3月 2012) | 3 lines

Handle Bigint.toCString when remainder equals 0.

Review URL: https://chromiumcodereview.appspot.com//9620002
------------------------------------------------------------------------
r5072 | kmillikin@google.com | 2012-03-07 19:24:01 +0900 (水, 07  3月 2012) | 12 lines

Turn CopyTemp and SetTemp into instructions.

These were always used and assumed to be in a stylized form (CopyTemp in
Bind and SetTemp in Do).  Make this required by the IL.  This change allows
eliminating the relative indexing in favor of temporary names, without
restructuring the compiler at all.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9616005
------------------------------------------------------------------------
r5069 | floitsch@google.com | 2012-03-07 18:39:22 +0900 (水, 07  3月 2012) | 3 lines

Make pow call unambiguous.

Review URL: https://chromiumcodereview.appspot.com//9600078
------------------------------------------------------------------------
r5068 | floitsch@google.com | 2012-03-07 17:25:32 +0900 (水, 07  3月 2012) | 3 lines

Implement BigintOperations::ToDecimalCString.

Review URL: https://chromiumcodereview.appspot.com//9536016
------------------------------------------------------------------------
r5064 | regis@google.com | 2012-03-07 11:23:12 +0900 (水, 07  3月 2012) | 9 lines

Generate dynamic type errors according to spec.
Fix a few bad tests.
Turn a couple negative tests in multi-tests.
Triage a few co19 failing tests.

Still to do:
Check bounds of generic types at runtime in checked mode.
Stop reporting bounds error in new operator as a compile time error.
Review URL: https://chromiumcodereview.appspot.com//9615035
------------------------------------------------------------------------
r5063 | srdjan@google.com | 2012-03-07 09:40:48 +0900 (水, 07  3月 2012) | 2 lines

Eliminate IncrOpStaticFieldNode, replace a set of nodes.
Review URL: https://chromiumcodereview.appspot.com//9592031
------------------------------------------------------------------------
r5062 | iposva@google.com | 2012-03-07 09:28:36 +0900 (水, 07  3月 2012) | 2 lines

- Fix new/free mismatch.
Review URL: https://chromiumcodereview.appspot.com//9618034
------------------------------------------------------------------------
r5055 | srdjan@google.com | 2012-03-07 06:02:56 +0900 (水, 07  3月 2012) | 2 lines

Implement DoWhile.
Review URL: https://chromiumcodereview.appspot.com//9553008
------------------------------------------------------------------------
r5012 | kmillikin@google.com | 2012-03-06 18:49:21 +0900 (火, 06  3月 2012) | 34 lines

Implement postfix indexed increment.

Chosen because of its wartiness.  A pair of new computations are introduced
to allow the IL to express duplication of temporaries and storing to
temporaries.  These will be translated away by the optimizing compiler, but
allow the instruction stream to represent exactly the deoptimization state
we are intereseted in (with at most one deopt point per instruction).

Translation of:

test(a, i) {
  return a[i]++;
}

is

 0: [target]
    t0 <-#0
    t1 <-LoadLocal(a)
    t2 <-LoadLocal(i)
    t3 <-CopyTemp(-1)
    t4 <-CopyTemp(-1)
    t3 <-InstanceCall([], t3, t4)
    SetTemp(-3)
    t4 <-#1
    t3 <-InstanceCall(+, t3, t4)
    InstanceCall([]=, t1, t2, t3)
    return t0

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9601011
------------------------------------------------------------------------
r4991 | hausner@google.com | 2012-03-06 08:47:34 +0900 (火, 06  3月 2012) | 12 lines

Re-introduce string concatenation

This change re-introduces concatenation of adjacent
string literals, i.e. the compiler concatenates "abc" "123"
into the literal "abc123" at compile time. If the literals
contain interpolations, the concatenation happens at
runtime.

The change also re-introduces interpolated compile-time
string literal constants, but the feature is disabled because
several tests need to be changed.
Review URL: https://chromiumcodereview.appspot.com//9582040
------------------------------------------------------------------------
r4987 | iposva@google.com | 2012-03-06 07:54:02 +0900 (火, 06  3月 2012) | 2 lines

- Reintroduce a library privacy disabling option.
Review URL: https://chromiumcodereview.appspot.com//9594040
------------------------------------------------------------------------
r4972 | srdjan@google.com | 2012-03-06 04:07:08 +0900 (火, 06  3月 2012) | 2 lines

Add Load/Store Static/Instance fields.
Review URL: https://chromiumcodereview.appspot.com//9586024
------------------------------------------------------------------------
r4938 | kmillikin@google.com | 2012-03-05 19:26:07 +0900 (月, 05  3月 2012) | 7 lines

Remove an unneeded temp in instance setters and indexed stores.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9588001
------------------------------------------------------------------------
r4917 | cshapiro@google.com | 2012-03-03 11:30:20 +0900 (土, 03  3月 2012) | 15 lines

Implement weak references sets and provide an embedding API.

Weak reference sets are similar to "populations" or "weak pairs".
Like these structures, objects in a key set preserve members of an
associated value set.  Unlike these structures, a weak reference set
is not a general associative container.  Weak reference sets exist
for the duration of a garbage collection.

Weak reference sets are proceesed iteratively allowing values of one
weak reference to be keys of a other weak reference sets.  The garbage
collector will process weak reference sets iteratively, revisiting all
unmarked weak reference sets if any one weak reference set is marked.
This process repeates until a fixed-point is reached.

Review URL: https://chromiumcodereview.appspot.com//9531001
------------------------------------------------------------------------
r4915 | asiva@google.com | 2012-03-03 10:53:26 +0900 (土, 03  3月 2012) | 7 lines

- Always write a Null Object for Code objects
- Do not populate the FunctionsCache array as it causes the function cache
  to become inconsistent if we execute some dart code before capturing a
  snapshot.
- Allow preallocation of objects even when generating snapshot and remove the
  flag preallocate_objects_called_ (use a null test instead).
Review URL: https://chromiumcodereview.appspot.com//9580036
------------------------------------------------------------------------
r4912 | hausner@google.com | 2012-03-03 09:39:04 +0900 (土, 03  3月 2012) | 6 lines

Fix bug 1557

Better handling of malformed library tags.

TBR=iposva
Review URL: https://chromiumcodereview.appspot.com//9582036
------------------------------------------------------------------------
r4910 | hausner@google.com | 2012-03-03 08:43:34 +0900 (土, 03  3月 2012) | 7 lines

Support breakpoints in closures

Properly set breakpoints in the code of closure functions.
Fix bug 1894.

Also renaming StackTrace to DebuggerStackTrace since we already have a class Stacktrace in the VM.
Review URL: https://chromiumcodereview.appspot.com//9572022
------------------------------------------------------------------------
r4902 | srdjan@google.com | 2012-03-03 06:52:03 +0900 (土, 03  3月 2012) | 2 lines

It is the setter that can have a result, but not the StoreInstanceFieldNode.
Review URL: https://chromiumcodereview.appspot.com//9581016
------------------------------------------------------------------------
r4893 | hausner@google.com | 2012-03-03 03:08:56 +0900 (土, 03  3月 2012) | 2 lines

Placate Windows compiler
Review URL: https://chromiumcodereview.appspot.com//9580014
------------------------------------------------------------------------
r4891 | hausner@google.com | 2012-03-03 03:01:38 +0900 (土, 03  3月 2012) | 13 lines

Splitting debugger breakpoints into two parts

Splitting breakpoints into SourceBreakpoint that represent
a user-defined source location of a breakpoint, and
CodeBreakpoint, which represents a code location. There can
be more than one CodeBreakpoint per SourceBreakpoint, e.g.
for functions that are also called as closures (and are thus
compiled twice.)

Functions are no longer compiled as a side effect of setting
a breakpoint. When they eventually get compiled, the previously
recorded SourceBreakpoint is found and a CodeBreakpoint is set.
Review URL: https://chromiumcodereview.appspot.com//9581013
------------------------------------------------------------------------
r4889 | srdjan@google.com | 2012-03-03 02:53:28 +0900 (土, 03  3月 2012) | 2 lines

Added stack overflow checks at backward branches in order to allow interrupting endless loops. Better code will detect if the loop calready contains calls and therefore can omit the extra check (in next compiler).
Review URL: https://chromiumcodereview.appspot.com//9562045
------------------------------------------------------------------------
r4861 | kmillikin@google.com | 2012-03-02 18:47:49 +0900 (金, 02  3月 2012) | 31 lines

Support instance getters and setters, indexed loads and stores.

These can be supported as instance calls.  In the case of instance
setters and indexed stores, there is a new computation type because of
the semantics of preserving the value.  For the example program:

void test(e) {
  print(e.forty_two);
  print(e.forty_two = 41);
}

we generate the graph:

 0: [target]
    t0 <-LoadLocal(e)
    t0 <-InstanceCall(get:forty_two, t0)
    StaticCall(print, t0)
    t0 <-#0
    t1 <-LoadLocal(e)
    t2 <-#41
    t0 <-InstanceSetter(t0, t1, t2)
    StaticCall(print, t0)
    return #null

and emit the correct code.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9570015
------------------------------------------------------------------------
r4859 | kmillikin@google.com | 2012-03-02 18:03:45 +0900 (金, 02  3月 2012) | 14 lines

Implement StaticCall and InstanceCall in the new code generator.

1. Introduce a value visitor for argument values.

2. Add enough information to StaticCallComp and InstanceCallComp IL
computations so that we can generate code.

3. Enable code generation for them.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9564006
------------------------------------------------------------------------
r4850 | cshapiro@google.com | 2012-03-02 10:27:27 +0900 (金, 02  3月 2012) | 3 lines

Check array bounds using an overflow-safe comparison.

Review URL: https://chromiumcodereview.appspot.com//9569044
------------------------------------------------------------------------
r4846 | turnidge@google.com | 2012-03-02 09:38:18 +0900 (金, 02  3月 2012) | 2 lines

Revert my last change.  Odd test failures that I will investigate tomorrow.
Review URL: https://chromiumcodereview.appspot.com//9570051
------------------------------------------------------------------------
r4842 | turnidge@google.com | 2012-03-02 08:57:49 +0900 (金, 02  3月 2012) | 4 lines

Make the message queue private in the message handler.

Move locking up from the message queue to the message handler.
Review URL: https://chromiumcodereview.appspot.com//9570046
------------------------------------------------------------------------
r4832 | srdjan@google.com | 2012-03-02 07:02:41 +0900 (金, 02  3月 2012) | 2 lines

Fix crash in inline cache: forgot to GC properly RawICData. Various cleanups.
Review URL: https://chromiumcodereview.appspot.com//9567023
------------------------------------------------------------------------
r4819 | regis@google.com | 2012-03-02 04:54:19 +0900 (金, 02  3月 2012) | 4 lines

Check type argument bounds of interfaces in type tests (work in progress).
Add a new test.
Fix broken tests.
Review URL: https://chromiumcodereview.appspot.com//9565016
------------------------------------------------------------------------
r4809 | srdjan@google.com | 2012-03-02 02:43:27 +0900 (金, 02  3月 2012) | 2 lines

Adding Native Call node : a native function consists of that node, it does call into C runtime. In this case I am not sure if we should copy all fields from AstNode to Computation node or should we store the AstNode and access data indirectly.
Review URL: https://chromiumcodereview.appspot.com//9559012
------------------------------------------------------------------------
r4804 | srdjan@google.com | 2012-03-02 02:03:52 +0900 (金, 02  3月 2012) | 2 lines

Get rid of CHECK_ALIVE, test only is_open during sequence node traversal.
Review URL: https://chromiumcodereview.appspot.com//9538017
------------------------------------------------------------------------
r4786 | kmillikin@google.com | 2012-03-01 18:49:13 +0900 (木, 01  3月 2012) | 15 lines

Remove non-useful duplicated code from the flow graph builder.

For most AST nodes, there is a core of the translation that is shared
for all contexts and only the handling of the final computation
differs.  Make this last part virtual and the visit functions
non-virtual by default.

We can still override visit functions if we want truly different
translations.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9540008
------------------------------------------------------------------------
r4774 | srdjan@google.com | 2012-03-01 09:03:03 +0900 (木, 01  3月 2012) | 2 lines

Fix Issue 1844: Throw exception instead of crashing if the size of allocated array is too large (or negative). 
Review URL: https://chromiumcodereview.appspot.com//9549008
------------------------------------------------------------------------
r4773 | srdjan@google.com | 2012-03-01 08:53:07 +0900 (木, 01  3月 2012) | 12 lines

Fix Issue 1846: Improve error reporting in presence of imports. With this CL:

'/Users/srdjan/bdartall/dart/runtime/bug3.dart': Error: line 2 pos 1: unexpected token 'abstract'
abstract class A { }
^
'/Users/srdjan/bdartall/dart/runtime/bug2.dart': Error: line 2 pos 1: library handler failed
#import("bug3.dart");
^
'/Users/srdjan/bdartall/dart/runtime/bug1.dart': Error: line 2 pos 1: library handler failed
#import("bug2.dart");
^
Review URL: https://chromiumcodereview.appspot.com//9559001
------------------------------------------------------------------------
r4772 | cshapiro@google.com | 2012-03-01 08:51:01 +0900 (木, 01  3月 2012) | 14 lines

Guard calls to ByteAddr when a ByteArray copy length is 0.

It is permitted to specify a start index equal to the array length
when the copy length is 0.  This runs afoul of an assertion in
ByteAddr that validates 0 <= index < length.  Consistent with other
methods to retrieve a raw element address, we now guard this call with
an implicit check for this boundary condition by ensuring length is
greater than zero.

In addition, some simple unit tests for ByteArray::Copy have been added.

BUG=1891

Review URL: https://chromiumcodereview.appspot.com//9560001
------------------------------------------------------------------------
r4734 | asiva@google.com | 2012-02-29 11:46:29 +0900 (水, 29  2月 2012) | 5 lines

Changes to shrink the token stream representation from two words to one word.
On standalone dartium which has about 50000 tokens in the libraries (core, coreimpl, builtin, io etc.) this reduces the heap size by about 180kb. The size of the standalone snapshot buffer reduces by about 72kb.

Also moved the keyword symbol table to the object store so that it does not have to repopulated on every script compilation. Should benefit regular user script load times.
Review URL: https://chromiumcodereview.appspot.com//9462003
------------------------------------------------------------------------
r4732 | regis@google.com | 2012-02-29 11:14:18 +0900 (水, 29  2月 2012) | 8 lines

Add support for malformed types and postpone some related errors from compile
time to execution time.

Still to do (once spec is clarified):
- properly handle generic type bounds errors
- properly handle 'instance of' type checks involving malformed types
- fix bad tests
Review URL: https://chromiumcodereview.appspot.com//9515011
------------------------------------------------------------------------
r4730 | srdjan@google.com | 2012-02-29 10:08:19 +0900 (水, 29  2月 2012) | 2 lines

Fix issue 1845: Mint BIT_AND Smi was incorrect for negative Smi-s. Jump to slow case on negative Smi since the result will be Mint anyway.
Review URL: https://chromiumcodereview.appspot.com//9526001
------------------------------------------------------------------------
r4725 | hausner@google.com | 2012-02-29 06:53:35 +0900 (水, 29  2月 2012) | 4 lines

Teach the flow graph compiler to play nice with the debugger

Add PC descriptors for return statements. Fixing blood red build bot.
Review URL: https://chromiumcodereview.appspot.com//9523001
------------------------------------------------------------------------
r4721 | hausner@google.com | 2012-02-29 04:35:45 +0900 (水, 29  2月 2012) | 6 lines

Fix debugger stepping on Linux

Missing instance field initialization. Bah!

TBR=regis
Review URL: https://chromiumcodereview.appspot.com//9513005
------------------------------------------------------------------------
r4717 | asiva@google.com | 2012-02-29 03:36:39 +0900 (水, 29  2月 2012) | 3 lines

Changes to get rid of dependency on openssl in the dart VM.
(This will enable dartium to be built on the windows platform).
Review URL: https://chromiumcodereview.appspot.com//9481019
------------------------------------------------------------------------
r4716 | asiva@google.com | 2012-02-29 03:21:57 +0900 (水, 29  2月 2012) | 2 lines

Allow Dart_Null to be passed in for the import map in Dart_LoadLibrary and Dart_LoadScript.
Review URL: https://chromiumcodereview.appspot.com//9447041
------------------------------------------------------------------------
r4685 | kmillikin@google.com | 2012-02-28 23:17:17 +0900 (火, 28  2月 2012) | 10 lines

Add a stubbed-out implementation of FlowGraphCompiler for ia32 and arm.

It bails out if FlowGraphCompiler::CompileGraph is called, all other public
API functions are UNIMPLEMENTED.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9479004
------------------------------------------------------------------------
r4681 | floitsch@google.com | 2012-02-28 22:19:50 +0900 (火, 28  2月 2012) | 5 lines

Implement Double.{toString, toStringAsExponential, toStringAsPrecision}

Also switch to -0.0.

Review URL: https://chromiumcodereview.appspot.com//9113043
------------------------------------------------------------------------
r4674 | kmillikin@google.com | 2012-02-28 20:34:27 +0900 (火, 28  2月 2012) | 9 lines

Allocate and finalize a code object on x64 if the new compiler succeeds.

If the new compiler completed, use the code that it produced.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9474001
------------------------------------------------------------------------
r4666 | kmillikin@google.com | 2012-02-28 18:11:18 +0900 (火, 28  2月 2012) | 50 lines

Implement x64 compilation for loading and storing local variables.

Continue to bailout on optional parameters and context-allocated local
variables.

Implement compilation of Bind and Do instructions, LoadLocal and StoreLocal
computations, and temporary values.  Temporary allocation assumes they obey
a stack-discipline and have a single use---so any use is always the last
use.  Temporaries can then be allocated via push and used via pop.  This
dart function:

hukairs(a) {
  var b, c;
  c = b = a;
  return c;
}

compiles to this annotated generated code snippet:

	;; StoreLocal(b, #null)
  66:	mov    $0x7f99303c0021,%rax
  70:	mov    %rax,-0x8(%rbp)
	;; StoreLocal(c, #null)
  74:	mov    $0x7f99303c0021,%rax
  7e:	mov    %rax,-0x10(%rbp)
	;; t0 <-LoadLocal(a)
  82:	mov    0x10(%rbp),%ax
  86:	push   %rax
	;; t0 <-StoreLocal(b, t0)
  87:	pop    %rax
  88:	mov    %rax,-0x8(%rbp)
  8c:	push   %rax
	;; StoreLocal(c, t0)
  8d:	pop    %rax
  8e:	mov    %rax,-0x10(%rbp)
	;; t0 <-LoadLocal(c)
  92:	mov    -0x10(%rbp),%ax
  96:	push   %rax
	;; return t0
  97:	pop    %rax
	;; ...
  bf:	mov    %rbp,%rsp
  c2:	pop    %rbp
  c3:	retq

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9447102
------------------------------------------------------------------------
r4664 | kmillikin@google.com | 2012-02-28 17:58:49 +0900 (火, 28  2月 2012) | 12 lines

Expand the instruction visitor to visit computations and values.

For compilation passes we will want a visitor that can reach computations
and values, rather than virtual functions in the computation/value classes.
Implement the visitor signature and double dispatching.  Use it to remove
the virtual Print functions.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9471010
------------------------------------------------------------------------
r4656 | srdjan@google.com | 2012-02-28 10:31:44 +0900 (火, 28  2月 2012) | 2 lines

Cleaned up usage of Function::code, since it may be misunderstood that it points to the only Code object that belongs to that function. That is not the case, there can be several Code object generated for the same function. "Renamed" "code()" to "CurrentCode()", use unoptimized_code where it is clear that we are using unoptimized code only. If compiled, there is a 1:1 correspondence between function and unoptimized code.
Review URL: https://chromiumcodereview.appspot.com//9475031
------------------------------------------------------------------------
r4648 | hausner@google.com | 2012-02-28 08:03:19 +0900 (火, 28  2月 2012) | 2 lines

Print more info in debugger tests
Review URL: https://chromiumcodereview.appspot.com//9475030
------------------------------------------------------------------------
r4647 | sigmund@google.com | 2012-02-28 07:50:44 +0900 (火, 28  2月 2012) | 36 lines

isolates refactor: this change introduces 'dart:isolate' as a library. This is a
big global change, so let me explain in more detail. This refactoring CL does
the following:
- moves all the dart code for isolates in a common library (lib/isolate)

- changes frog to understand 'dart:isolate' imoprts by loading the code from the
  location above.

- changes the vm to undernstand 'dart:isolate' imports by creating a separate
  library that is part of the bootstrap. This follows the same code-structure
  that Todd suggested in his CL introducing the mirror library

- changes dartc to use the shared isolate library as the source of truth for
  type checking. I left around some of the internal js code in dartc so that the
  backend continues to work for apps that don't use isolates.

- changes all tests that use isolates to import the library explicitly (this is a large bulk of the files in this CL)

- changes test status for tests we can't fix in this repo (e.g. co19)

- splits the isolate library code to make it possible to preserve some tests
  without exposing internal types (e.g. tests about
  serialization/deserialization)

- changes the create_sdk script to copy the isolate library to the sdk

- includes the isolate library in dartdoc

I'll wait for at least one lgtm from each area (dartc, vm, frog, sdk)

There is one important pending thing this CL doesn't do:
- update test_runner.dart: This should be updated next time we upload the new
  binaries to tool/testing/bin
- dartium specific changes: Vijay, is there anything I need to do for dartium?

Review URL: https://chromiumcodereview.appspot.com//9422019
------------------------------------------------------------------------
r4641 | hausner@google.com | 2012-02-28 07:18:00 +0900 (火, 28  2月 2012) | 2 lines

Fix merge error, Debug_StepInto test
Review URL: https://chromiumcodereview.appspot.com//9481018
------------------------------------------------------------------------
r4639 | hausner@google.com | 2012-02-28 07:00:28 +0900 (火, 28  2月 2012) | 9 lines

StepOver, StepInto, StepOut

Implement single stepping in the debugger.
- Add PC descriptors for function return
- functions to set temporary breakpoints on all
  locations in a function.
- patching/restoring of function return code pattern
- determine call target of instance calls
Review URL: https://chromiumcodereview.appspot.com//9484002
------------------------------------------------------------------------
r4633 | srdjan@google.com | 2012-02-28 03:41:57 +0900 (火, 28  2月 2012) | 3 lines

Fix issue 1857: code lookup was wrong when searching for exception handler.
(TODO: reevaluate who is using the function's code reference).
Review URL: https://chromiumcodereview.appspot.com//9480006
------------------------------------------------------------------------
r4601 | kmillikin@google.com | 2012-02-27 17:28:51 +0900 (月, 27  2月 2012) | 14 lines

Add enough compiler support to compile empty functions on x64.

Implement a simple compilation visitor for the intermediate language.  Copy
code from the x64 code generator to support compilation of functions with no
arguments, no locals, and that return a literal.

Compiled code is not used, but it can be disassembled and visually checked
against the code from the old code generator.

R=srdjan@google.com
BUG=
TEST=expected to pass all tests on x64

Review URL: https://chromiumcodereview.appspot.com//9464009
------------------------------------------------------------------------
r4600 | kmillikin@google.com | 2012-02-27 17:04:24 +0900 (月, 27  2月 2012) | 28 lines

Ensure that outgoing constant arguments will be materialized.

This keeps the IL simple for the benefit of the optimizing compiler.
It intentionally relies on a particular temporary allocation strategy
for the non-optimizing compiler.

For the dart function

main() {
  var x = 2;
  hukairs(1, x, 3);
}

The flow graph is:

 0: [target]
    StoreLocal(x, #2)
    t0 <-#1
    t1 <-LoadLocal(x)
    t2 <-#3
    StaticCall(hukairs, t0, t1, t2)
    return #null

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9463007
------------------------------------------------------------------------
r4599 | kmillikin@google.com | 2012-02-27 16:56:37 +0900 (月, 27  2月 2012) | 9 lines

Incorporate some review comments.

Clean up a couple of style TODOs from an earlier review.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9455054
------------------------------------------------------------------------
r4584 | hausner@google.com | 2012-02-25 09:47:06 +0900 (土, 25  2月 2012) | 6 lines

Fixing bugs: 1612, 1843, 1847

- Fix error location when referring to types in object allocation.
- Handle CR/LF correctly at beginning of source.
- Detect duplicate identifier in typedef declaration.
Review URL: https://chromiumcodereview.appspot.com//9466030
------------------------------------------------------------------------
r4583 | srdjan@google.com | 2012-02-25 09:33:25 +0900 (土, 25  2月 2012) | 5 lines

Do not count invocations but usage of a function, i.e., increment a function's counter at IC calls and at return operations in unoptimized code. (TODO: increment count at static calls as well). There is no checking at method entry any more. The function counter reporting is not measuring the invocation count but much more how much time we spend in a method. Removed counter at backward branches.
Renamed flags to:
--optimization_counter_threshold (default 2000)
--report_usage_count
Review URL: https://chromiumcodereview.appspot.com//9460015
------------------------------------------------------------------------
r4582 | srdjan@google.com | 2012-02-25 08:27:24 +0900 (土, 25  2月 2012) | 2 lines

Move CodeGenerator::DescriptorList into shared part.
Review URL: https://chromiumcodereview.appspot.com//9465028
------------------------------------------------------------------------
r4580 | srdjan@google.com | 2012-02-25 07:37:57 +0900 (土, 25  2月 2012) | 2 lines

Added LoadLiteralComp, StrictCompareComp; implement InstanceCallNode.
Review URL: https://chromiumcodereview.appspot.com//9456033
------------------------------------------------------------------------
r4556 | asiva@google.com | 2012-02-24 08:43:14 +0900 (金, 24  2月 2012) | 4 lines

Fix build break.

TBR=srdjan
Review URL: https://chromiumcodereview.appspot.com//9455032
------------------------------------------------------------------------
r4555 | asiva@google.com | 2012-02-24 08:01:45 +0900 (金, 24  2月 2012) | 2 lines

Change the generated dart test in CodeIndexTableTest so that it does not induce a deep recursion in the dart code generator.
Review URL: https://chromiumcodereview.appspot.com//9454024
------------------------------------------------------------------------
r4554 | srdjan@google.com | 2012-02-24 07:51:18 +0900 (金, 24  2月 2012) | 2 lines

New compiler, intermediate language, type testing and casting changes as agreed with Kevin.
Review URL: https://chromiumcodereview.appspot.com//9454022
------------------------------------------------------------------------
r4551 | srdjan@google.com | 2012-02-24 05:03:02 +0900 (金, 24  2月 2012) | 2 lines

When tracing type checks in runtime, also print the method where the type check occured.
Review URL: https://chromiumcodereview.appspot.com//9447028
------------------------------------------------------------------------
r4550 | hausner@google.com | 2012-02-24 04:55:57 +0900 (金, 24  2月 2012) | 6 lines

Fix handling of unresolved names

Fixes issue 1805 (http://code.google.com/p/dart/issues/detail?id=1805)

The VM didn't turn unresolved identifiers into instance getter calls in all cases. Refactored the code that handles primary expressions.
Review URL: https://chromiumcodereview.appspot.com//9453020
------------------------------------------------------------------------
r4549 | srdjan@google.com | 2012-02-24 04:24:14 +0900 (金, 24  2月 2012) | 3 lines

Enable new compiler in x64 mode (bail-out all the time, but we can use automated testing).
Disable CodeIndexTable test inde debug x64. This CL includes a pending CL from Kevin (will wait for it to be submitted).
Review URL: https://chromiumcodereview.appspot.com//9443021
------------------------------------------------------------------------
r4547 | kmillikin@google.com | 2012-02-24 03:29:58 +0900 (金, 24  2月 2012) | 11 lines

Implement a simple InstructionVisitor class.

The instruction visitor visits each block and for each block each
instruction.  Rewrite the instruction printing code to use this new
visitor.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9453014
------------------------------------------------------------------------
r4546 | kmillikin@google.com | 2012-02-24 03:15:11 +0900 (金, 24  2月 2012) | 11 lines

Add type testing and casting support.

Introduce a virtual tag() function to Instruction classes, use it to
implement type testing and casting.  Use type testing and casting to
eliminate some virtual functions on the instruction classes.

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9454012
------------------------------------------------------------------------
r4545 | kmillikin@google.com | 2012-02-24 03:09:44 +0900 (金, 24  2月 2012) | 10 lines

Fix a pair of bugs in the translation of 'if' nodes.

The condition graph fragment was appended twice, and the join did not
properly handle the case of nonlocal exits from the arms of the 'if'.

R=srdjan@google.com
BUG=
TEST=all tests pass in x64 release mode with --use_new_compiler

Review URL: https://chromiumcodereview.appspot.com//9456009
------------------------------------------------------------------------
r4541 | srdjan@google.com | 2012-02-24 01:14:01 +0900 (金, 24  2月 2012) | 4 lines

Added LongJump for bailout. When trying to fix all crashes, CHECK_ALIVE did  not scale well as bailing out mechanism.
Implemented UnaryOpNode. Fix crashes.
(this CL also includes the patches from https://chromiumcodereview.appspot.com/9429056/, will remove them once syncing with submitted 9429056)
Review URL: https://chromiumcodereview.appspot.com//9443002
------------------------------------------------------------------------
r4520 | sgjesse@google.com | 2012-02-23 20:11:48 +0900 (木, 23  2月 2012) | 5 lines

Port async file operations to be using native ports instead or an isolate

R=ager@google.com

Review URL: https://chromiumcodereview.appspot.com//9415043
------------------------------------------------------------------------
r4515 | kmillikin@google.com | 2012-02-23 18:09:45 +0900 (木, 23  2月 2012) | 44 lines

Recognize basic block entries in the flow graph.

Also, instead of keeping a list of all instructions, keep a list of only
block entries.  The printing implementation is changed (for the better) to
use the new representation.  With --use_new_compiler and --print_flow_graph
the function:

main() {
  var f = 1;
  var n = 5;
  while (n > 0) {
    f = f * n;
    n = n - 1;
  }
  print(f);
}

prints as:

 0: [target]
    StoreLocal(f, #1)
    StoreLocal(n, #5) goto 1
 1: [join]
    t0 <-LoadLocal(n)
    t0 <-InstanceCall(>, t0, #0)
    if t0 goto(2, 3)
 2: [target]
    t0 <-LoadLocal(f)
    t1 <-LoadLocal(n)
    t0 <-InstanceCall(*, t0, t1)
    StoreLocal(f, t0)
    t0 <-LoadLocal(n)
    t0 <-InstanceCall(-, t0, #1)
    StoreLocal(n, t0) goto 1
 3: [target]
    t0 <-LoadLocal(f)
    StaticCall(print, t0)
    return #null

R=srdjan@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9429056
------------------------------------------------------------------------
r4503 | srdjan@google.com | 2012-02-23 07:41:56 +0900 (木, 23  2月 2012) | 2 lines

Fix Issue 1804: Forgot to rename one virtual function.
Review URL: https://chromiumcodereview.appspot.com//9429072
------------------------------------------------------------------------
r4493 | iposva@google.com | 2012-02-23 06:40:07 +0900 (木, 23  2月 2012) | 4 lines

Fix issue 732:
- Add handling for #resource library tags: Ignore at runtime, they are only used
  by the Dart Editor at the moment.
Review URL: https://chromiumcodereview.appspot.com//9431038
------------------------------------------------------------------------
r4481 | regis@google.com | 2012-02-23 03:42:09 +0900 (木, 23  2月 2012) | 2 lines

Fix typo in --verify_implements functionality (issue 1291).
Review URL: https://chromiumcodereview.appspot.com//9433047
------------------------------------------------------------------------
r4478 | srdjan@google.com | 2012-02-23 02:54:57 +0900 (木, 23  2月 2012) | 2 lines

Disable invocation of otpimizing compiler on x64 regardless of optimization_invocation_threshold value.
Review URL: https://chromiumcodereview.appspot.com//9431036
------------------------------------------------------------------------
r4476 | regis@google.com | 2012-02-23 02:48:05 +0900 (木, 23  2月 2012) | 2 lines

Generic bound errors are static type errors not to be reported by the VM.
Review URL: https://chromiumcodereview.appspot.com//9428015
------------------------------------------------------------------------
r4466 | kmillikin@google.com | 2012-02-23 01:38:56 +0900 (木, 23  2月 2012) | 8 lines

Required rename on x64 platform.

Due to a name clash, rename class Instruction => InstructionPattern.

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9429055
------------------------------------------------------------------------
r4460 | kmillikin@google.com | 2012-02-23 00:20:13 +0900 (木, 23  2月 2012) | 42 lines

Initial implementation of a flow-graph builder for Dart's AST.

Visit the AST and generate an instruction (ie, not basic-block) flow
graph.

The flow graph for the simple function:

main() {
  var f = 1;
  var n = 5;
  while (n > 0) {
    f = f * n;
    n = n - 1;
  }
  print(f);
}

is:

       1: StoreLocal(f, #1)
       2: StoreLocal(n, #5)
       3: [join]
       4: t0 <-LoadLocal(n)
       5: t0 <-InstanceCall(>, t0, #0)
       6: if t0 goto(7, 15)
       7: [target]
       8: t0 <-LoadLocal(f)
       9: t1 <-LoadLocal(n)
      10: t0 <-InstanceCall(*, t0, t1)
      11: StoreLocal(f, t0)
      12: t0 <-LoadLocal(n)
      13: t0 <-InstanceCall(-, t0, #1)
      14: StoreLocal(n, t0) goto 3
      15: [target]
      16: t0 <-LoadLocal(f)
      17: StaticCall(print, t0)
      18: return #null

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9414003
------------------------------------------------------------------------
r4423 | cshapiro@google.com | 2012-02-22 12:52:12 +0900 (水, 22  2月 2012) | 13 lines

Thread the weak persistent handle free-list through the raw_ field.

As free-list pointers are either the address of the next free handle
or NULL, raw_ fields should conveniently appear as a smi and be
ignored during weak reference processing.  Ordinary persistent handles
already reuse the raw_ field for this purpose and rely on confusing
free-list links with tagged smi values.

Of course, nothing strictly requires that the addresses of handles be
aligned in just the right way.  So, just in case, new asserts check
that raw_ field values are not confusable with tagged heap addresses.

Review URL: https://chromiumcodereview.appspot.com//9413003
------------------------------------------------------------------------
r4417 | srdjan@google.com | 2012-02-22 09:40:03 +0900 (水, 22  2月 2012) | 3 lines

ICData is now a wrapper object that refers to the calling function, target name, ic data array, etc. The old ICData C++ class that wrapped around an Array is removed. The advantage is that the ICData object remains the same, only its ic_data array object is being  modified as classes are added..
TODO: store ICData-s into function so that the type feedback can be easily extracted (currently must traverse the unoptimized code).
Review URL: https://chromiumcodereview.appspot.com//9395016
------------------------------------------------------------------------
r4416 | iposva@google.com | 2012-02-22 09:36:14 +0900 (水, 22  2月 2012) | 2 lines

- Windows only: Move the BN library link dependency into the standalone binaries.
Review URL: https://chromiumcodereview.appspot.com//9433021
------------------------------------------------------------------------
r4411 | srdjan@google.com | 2012-02-22 07:07:59 +0900 (水, 22  2月 2012) | 2 lines

Fix cacthing exception object: a null exception is always caught.
Review URL: https://chromiumcodereview.appspot.com//9416067
------------------------------------------------------------------------
r4401 | srdjan@google.com | 2012-02-22 02:34:00 +0900 (水, 22  2月 2012) | 2 lines

Fix issue 979: operator arity must be verified.
Review URL: https://chromiumcodereview.appspot.com//9414005
------------------------------------------------------------------------
r4375 | sgjesse@google.com | 2012-02-18 19:10:28 +0900 (土, 18  2月 2012) | 10 lines

Move MessageWriter from snapshot files to dart_api_message files

Also renamed MessageWriter to ApiMessageWriter

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9407010
------------------------------------------------------------------------
r4349 | sgjesse@google.com | 2012-02-17 16:54:51 +0900 (金, 17  2月 2012) | 8 lines

Fix Windows build error

R=ricow@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9420044
------------------------------------------------------------------------
r4348 | sgjesse@google.com | 2012-02-17 16:43:24 +0900 (金, 17  2月 2012) | 14 lines

Add API function Dart_ZoneAllocate

This provides the embedder with the option for allocating temporary C
objects in the current ApiZone.

Zone allocation is especially useful when building a graph of
Dart_CObject structures for posting using Dart_PostCObject.

R=iposva@google.com, turnidge@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9347040
------------------------------------------------------------------------
r4336 | iposva@google.com | 2012-02-17 04:59:19 +0900 (金, 17  2月 2012) | 3 lines

- Add dart:json, dart:uri and dart:utf8 to the known and builtin libraries.
- Unify and simplify the building of the creation of the source file.
Review URL: https://chromiumcodereview.appspot.com//9417012
------------------------------------------------------------------------
r4328 | sigmund@google.com | 2012-02-17 03:20:41 +0900 (金, 17  2月 2012) | 6 lines

remove promise:
 - removes promise from corelib (use future instead)
 - move tests that depend on promises and proxies into samples/proxy/
 - remove dependence on promise from the rest of the system and tests

Review URL: https://chromiumcodereview.appspot.com//9401030
------------------------------------------------------------------------
r4303 | srdjan@google.com | 2012-02-16 18:07:32 +0900 (木, 16  2月 2012) | 2 lines

Fix rethrow by allowing exception object to be Null Object.
Review URL: https://chromiumcodereview.appspot.com//9416006
------------------------------------------------------------------------
r4302 | srdjan@google.com | 2012-02-16 17:42:00 +0900 (木, 16  2月 2012) | 2 lines

Fix crash in assembler when tracing function (must be zone handle). Fixes bug 1709.
Review URL: https://chromiumcodereview.appspot.com//9415002
------------------------------------------------------------------------
r4291 | cshapiro@google.com | 2012-02-16 05:56:15 +0900 (木, 16  2月 2012) | 13 lines

Ignore deleted handles when processing weak roots.

Previously, deleted weak persistent handles in live handle blocks were
always assumed live.  With this change, dead handles are always ignored.

When a handle is deleted NULL is stored into the raw object member. This
looks like a Smi encoded 0.  As the handle blocks do not otherwise encode
which elements are live in an allocated block, the garbage collector now
uses this signal to distinguish live handles from deleted handles.

BUG=1640

Review URL: https://chromiumcodereview.appspot.com//9398014
------------------------------------------------------------------------
r4289 | asiva@google.com | 2012-02-16 05:53:28 +0900 (木, 16  2月 2012) | 8 lines

Implement capability to use the same library prefix for multiple library imports (currently this is flagged as an error).

e.g:

#import("mylib101.dart", prefix:"mylib");
#import("mylib102.dart", prefix:"mylib");
#import("mylib103.dart", prefix:"mylib");
Review URL: https://chromiumcodereview.appspot.com//9363048
------------------------------------------------------------------------
r4281 | turnidge@google.com | 2012-02-16 04:25:22 +0900 (木, 16  2月 2012) | 2 lines

Revert my last change.  Windows dislikes long strings...
Review URL: https://chromiumcodereview.appspot.com//9407017
------------------------------------------------------------------------
r4280 | turnidge@google.com | 2012-02-16 04:14:03 +0900 (木, 16  2月 2012) | 36 lines

Make gen files more human-readable by using a string initializer
instead of an integer array initializer.

For example, the initializer in builtin_gen.cc now looks something like this:

const char Builtin::builtin_source_[] =
 
  // ----- bin/builtin.dart -----

  "// Copyright (c) 2011, the Dart project authors.  Please see the AUTHORS file\n"
  "// for details. All rights reserved. Use of this source code is governed by a\n"
  "// BSD-style license that can be found in the LICENSE file.\n"
  "\n"
  "#library(\"builtin\");\n"
  "#import(\"dart:nativewrappers\");\n"
  "#import(\"dart:coreimpl\");\n"
  "\n"
  "void print(arg) {\n"
  "  _Logger._printString(arg.toString());\n" /* L10 */
  "}\n"
  "\n"
  "void exit(int status) {\n"
  "  if (status is !int) {\n"
  "    throw new IllegalArgumentException(\"int status expected\");\n"
  "  }\n"
  "  _exit(status);\n"
  "}\n"
  "\n"
  "_exit(int status) native \"Exit\";\n" /* L20 */
  "\n"
  "class _Logger {\n"
  "  static void _printString(String s) native \"Logger_PrintString\";\n"
  "}\n"

;
Review URL: https://chromiumcodereview.appspot.com//9348112
------------------------------------------------------------------------
r4244 | cshapiro@google.com | 2012-02-15 11:51:11 +0900 (水, 15  2月 2012) | 3 lines

Add multi-byte ByteArray access methods to the Dart API.

Review URL: https://chromiumcodereview.appspot.com//9384027
------------------------------------------------------------------------
r4240 | regis@google.com | 2012-02-15 09:44:16 +0900 (水, 15  2月 2012) | 2 lines

Simplify type resolution in parser.
Review URL: https://chromiumcodereview.appspot.com//9395017
------------------------------------------------------------------------
r4228 | sgjesse@google.com | 2012-02-15 00:26:01 +0900 (水, 15  2月 2012) | 8 lines

Add missing backref collection when reading mint and bigint objects in a native message handler

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9372024
------------------------------------------------------------------------
r4201 | regis@google.com | 2012-02-14 09:58:56 +0900 (火, 14  2月 2012) | 3 lines

Fix context unchaining (issue 5991015).
Add test.
Review URL: https://chromiumcodereview.appspot.com//9392020
------------------------------------------------------------------------
r4199 | asiva@google.com | 2012-02-14 07:50:19 +0900 (火, 14  2月 2012) | 45 lines

Implement support for specifying string interopolation style variable substitution in the import and source statements.

e.g:
sivamach[runtime]>more /workspace/asiva/expr/test1.dart
#library('test1.dart');
#import('${GOOGLE}$SRC/test2.dart');
#import('$DART/test3.dart');
test1() {
  print("test1");
}
main() {
  test1();
  test2();
  test3();
}
sivamach[runtime]>more /workspace/asiva/expr/src/test2.dart
#library('test2.dart');
#source('$GOOGLE$SRC/test2a.dart');
test2() {
  print("test2");
  test2a();
}
sivamach[runtime]>more /workspace/asiva/expr/src/test2a.dart
test2a() {
  print("test2a");
}
sivamach[runtime]>more /workspace/asiva/expr/src/test3.dart
#library('test3.dart');
#source('test3a.dart');
test3() {
  print("test3");
  test3a();
}
sivamach[runtime]>more /workspace/asiva/expr/src/test3a.dart
test3a() {
  print("test3a");
}

sivamach[runtime]>out/Debug_ia32/dart --import_map=GOOGLE,/workspace/asiva/expr --import_map=SRC,src --import_map=DART,/workspace/asiva/expr/src /workspace/asiva/expr/test1.dart
test1
test2
test2a
test3
test3a
Review URL: https://chromiumcodereview.appspot.com//9359009
------------------------------------------------------------------------
r4187 | srdjan@google.com | 2012-02-13 23:23:10 +0900 (月, 13  2月 2012) | 2 lines

Print top level functions as well when reproting invocation count.
Review URL: https://chromiumcodereview.appspot.com//9390001
------------------------------------------------------------------------
r4171 | srdjan@google.com | 2012-02-12 16:10:09 +0900 (日, 12  2月 2012) | 3 lines

Intrinsify InternalByteArray's get_length and []. 
Disallow intrinsification of non-corelib methods. Recognize private classes for intrinsification.
Review URL: https://chromiumcodereview.appspot.com//9383004
------------------------------------------------------------------------
r4164 | cshapiro@google.com | 2012-02-11 13:34:44 +0900 (土, 11  2月 2012) | 12 lines

Add external byte array API and finalize external strings and byte arrays.

This change adds peer and callback arguments to the external byte array
constructor and moves the peer, callback, and data storage into a VM
peer object.  At construction time, a weak persistent handle and VM
callback is associated with the VM peer.  The VM callback will delete
the VM peer and invokes the user callback to reclaim the user peer.

This change also activates the callback support for the various classes of
external strings.

Review URL: https://chromiumcodereview.appspot.com//9368049
------------------------------------------------------------------------
r4159 | hausner@google.com | 2012-02-11 10:02:09 +0900 (土, 11  2月 2012) | 10 lines

Add PC descriptor for ret instruction

Adding a new kind of PcDescriptor to mark the location of
function returns in generated code. This will be needed to
put a single-step breakpoint just before the function return.

Also adding a NOP instruction after the ret, so that the
function return code pattern adds up to 5 bytes, which is needed
to patch in a breakpoint call.
Review URL: https://chromiumcodereview.appspot.com//9385022
------------------------------------------------------------------------
r4136 | iposva@google.com | 2012-02-11 02:08:22 +0900 (土, 11  2月 2012) | 2 lines

- Revert r4135: va_copy is not available everywhere.
Review URL: https://chromiumcodereview.appspot.com//9381009
------------------------------------------------------------------------
r4135 | iposva@google.com | 2012-02-11 01:59:41 +0900 (土, 11  2月 2012) | 4 lines

Fix http://dartbug.com/1133:
- Incrementally concat error messages to avoid hitting
  a maximum error message size.
Review URL: https://chromiumcodereview.appspot.com//9334007
------------------------------------------------------------------------
r4121 | srdjan@google.com | 2012-02-10 17:30:53 +0900 (金, 10  2月 2012) | 4 lines

Optimizing code generator expects that every AST node is traversed once, i.e., the nodes are not reused. Unfortunately this is not the case in  assignment operations with arrays (e.g. a[i] += 3).
The proper solution would be to clone array and index nodes but that would require too many changes. Long term we can't / won't use AST nodes for optimization purposes.
Short term fix is here: load array and index and release their CodeGenInfo before value is traversed so that the value computation can set its own CodeGenInfo on the same node.
Review URL: https://chromiumcodereview.appspot.com//9373025
------------------------------------------------------------------------
r4096 | regis@google.com | 2012-02-10 06:28:53 +0900 (金, 10  2月 2012) | 10 lines

Represent declared type parameters of a class as an array of TypeParameter
rather than an array of String and simplify code accordingly.
Rename the field holding type parameter bounds of a class.

Note: I retract my earlier suggestion to Srdjan to represent interfaces of a
class (as well as its canonical types) as a TypeArguments. This would require
more code to check for an empty array and for growing the array. Besides, these
are really arrays and have nothing to do with type arguments. I removed the
corresponding TODO(srdjan).
Review URL: https://chromiumcodereview.appspot.com//9368032
------------------------------------------------------------------------
r4078 | sgjesse@google.com | 2012-02-09 23:09:03 +0900 (木, 09  2月 2012) | 10 lines

Add support for big integers to the native message format

Also fixed snapshotting of negative big integers.

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9363023
------------------------------------------------------------------------
r4073 | sgjesse@google.com | 2012-02-09 19:21:38 +0900 (木, 09  2月 2012) | 8 lines

Add support for medium integers to the native message format

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9348048
------------------------------------------------------------------------
r4071 | sgjesse@google.com | 2012-02-09 18:34:31 +0900 (木, 09  2月 2012) | 8 lines

Add support for byte arrays to native messages

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9348019
------------------------------------------------------------------------
r4068 | sgjesse@google.com | 2012-02-09 17:47:19 +0900 (木, 09  2月 2012) | 17 lines

Decode the Dart message into a Dart_CMessage structure before calling the native port callback

The native port callback is now passed the message as a decodes
Dart_CMessage structure. The Dart_CMessage structure is allocated
in a zone and the callback receiving it should expect the
lifetime to be controlled by the caller.

Added support for zones which do not require a current
isolate. Changed the GrowableArray to support allocating in
aprovided zone instead of the zone for the current isolate.

R=turnidge@google.com, asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9325022
------------------------------------------------------------------------
r4024 | sgjesse@google.com | 2012-02-08 18:22:46 +0900 (水, 08  2月 2012) | 8 lines

Add integer min/max constants to globals.h

R=ager@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9363018
------------------------------------------------------------------------
r4013 | hausner@google.com | 2012-02-08 08:27:51 +0900 (水, 08  2月 2012) | 6 lines

Fix issue 1246

continue; inside a switch statement jumps to outer loop.

http://code.google.com/p/dart/issues/detail?id=1246
Review URL: https://chromiumcodereview.appspot.com//9347032
------------------------------------------------------------------------
r4000 | hausner@google.com | 2012-02-08 01:40:38 +0900 (水, 08  2月 2012) | 2 lines

Placate linux compiler
Review URL: https://chromiumcodereview.appspot.com//9349019
------------------------------------------------------------------------
r3999 | hausner@google.com | 2012-02-08 01:37:24 +0900 (水, 08  2月 2012) | 4 lines

Fix string escape, recognize escaped newline

Fix issue 1350 (http://code.google.com/p/dart/issues/detail?id=1350)
Review URL: https://chromiumcodereview.appspot.com//9346005
------------------------------------------------------------------------
r3982 | sgjesse@google.com | 2012-02-07 18:18:22 +0900 (火, 07  2月 2012) | 10 lines

Move the thread local functions to the Thread class in runtime/platform

This gets rid of all the platform specific isolate_*.h and isolate_*.cc files.

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9328042
------------------------------------------------------------------------
r3973 | regis@google.com | 2012-02-07 07:45:05 +0900 (火, 07  2月 2012) | 2 lines

Test again the library url in the error message shortened in r3965.
Review URL: https://chromiumcodereview.appspot.com//9340001
------------------------------------------------------------------------
r3971 | srdjan@google.com | 2012-02-07 07:16:44 +0900 (火, 07  2月 2012) | 3 lines

Fixed a bug in isNegate intrinsified code, fixed negation for doubles (handling of negative zeros). Added tests. Fix issue 1554.
Factored out parts of X86Decoder::InstructionDecode in order to satisfy lint (500 lines max per function).
Review URL: https://chromiumcodereview.appspot.com//9338002
------------------------------------------------------------------------
r3965 | regis@google.com | 2012-02-07 04:52:02 +0900 (火, 07  2月 2012) | 2 lines

Add token index position to classes and types for more accurate error reporting.
Review URL: https://chromiumcodereview.appspot.com//9325047
------------------------------------------------------------------------
r3964 | sgjesse@google.com | 2012-02-07 04:31:32 +0900 (火, 07  2月 2012) | 8 lines

Spelling corrections to the API header file

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9332007
------------------------------------------------------------------------
r3947 | sgjesse@google.com | 2012-02-07 00:42:15 +0900 (火, 07  2月 2012) | 20 lines

Implemented encoding af a Dart_CMessage structure into a Dart message. Currently supported types are:

  Boolean
  Smi
  Double
  String
  Array

The encoding uses the upper bits of the Dart_CObject type field for "marking" already written objects with their object id for generating backward references. After serialization these mark are removed.

Added the API Dart_PostCMessage for encoding and posting a Dart_CMessage structure.

Removed the API Dart_PostIntArray and used Dart_PostCMessage instead.

R=asive@google.com,turnidge@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9104041
------------------------------------------------------------------------
r3922 | srdjan@google.com | 2012-02-04 07:25:16 +0900 (土, 04  2月 2012) | 2 lines

Fix for issue 1307: throw runtime exception instead of reporting a compile time error if a static call cannot be resolved.
Review URL: https://chromiumcodereview.appspot.com//9316100
------------------------------------------------------------------------
r3870 | srdjan@google.com | 2012-02-03 04:50:43 +0900 (金, 03  2月 2012) | 2 lines

Fix build: Mac compiler does not complain about a missing return :-(. Eliminated return type, made function void.
Review URL: https://chromiumcodereview.appspot.com//9309063
------------------------------------------------------------------------
r3869 | srdjan@google.com | 2012-02-03 04:44:55 +0900 (金, 03  2月 2012) | 3 lines

Intrinisifed more core library methods: isNaN, isNegative, cos, sin.
TODO: inline those methods in otpimized code.
Review URL: https://chromiumcodereview.appspot.com//9320023
------------------------------------------------------------------------
r3863 | turnidge@google.com | 2012-02-03 04:05:06 +0900 (金, 03  2月 2012) | 5 lines

Dart_PropagateError, take 2.

This change hopefully takes care of the non-mac build issues.  The
checked mode failures are fixed in a separate cl.
Review URL: https://chromiumcodereview.appspot.com//9316071
------------------------------------------------------------------------
r3856 | srdjan@google.com | 2012-02-03 03:22:25 +0900 (金, 03  2月 2012) | 9 lines

Fix for issue r1469: DartVM appears to not GC closure reachable memory properly

(The issue was diagnosed and solved by Siva)

The problem appears when allocating large arrays that are stored in a context.
We allocate large arrays directly in the old space. The context in which these arrays are stored is in the new space. When we do an old gen GC we were not first scavenging the new space. As a result the large arrays still remained when we did the old-gen GC, resulting in OOM.

The fix is to do both a new gen scavenge and an old gen mark-sweep when we run out of space in the old gen.
Review URL: https://chromiumcodereview.appspot.com//9317054
------------------------------------------------------------------------
r3835 | sgjesse@google.com | 2012-02-02 19:49:49 +0900 (木, 02  2月 2012) | 10 lines

Allocate a Dart_CMessage structure when decoding a message into C structures

Changed tests to use zone allocation for C structures.

R=asiva@google.com, turnidge@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9159066
------------------------------------------------------------------------
r3831 | sgjesse@google.com | 2012-02-02 18:55:18 +0900 (木, 02  2月 2012) | 25 lines

Add support for lists and backward references when decoding a message to a Dart_CObject object

The C message reader can now read lists created like this:

  new List()
  new List<int>()
  new List<String>()
  new List<double>()
  new List<bool>()

The backward references are now resolved and already allocated
Dart_CObject objects are reused when there is a backward reference.

The reuse of the Dart_CObject objects poses the issue of which objects
where allocated with the supplied allocator and which where not.

Currently this will work best with a zone allocator. This will be added
to the tests in a subsequent change.

R=asiva@google.com, turnidge@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9303031
------------------------------------------------------------------------
r3830 | sgjesse@google.com | 2012-02-02 17:59:26 +0900 (木, 02  2月 2012) | 12 lines

Change the thread interface in runtime/platform and use it starting all threads

The platform thread interface (dart::thread) is now refactored to an
all static interface as suggested by iposva@ and asiva@. Use this
interface for running all threads in the VM.

R=ager@google.com, iposva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9141005
------------------------------------------------------------------------
r3823 | turnidge@google.com | 2012-02-02 08:39:28 +0900 (木, 02  2月 2012) | 5 lines

Revert Dart_PropagateError until I can track down the problems in
checked mode tests.

Sorry for the hubbub.
Review URL: https://chromiumcodereview.appspot.com//9314053
------------------------------------------------------------------------
r3822 | asiva@google.com | 2012-02-02 08:18:14 +0900 (木, 02  2月 2012) | 2 lines

Fix for issue 1456 - register libraries read from a partial snapshot
Review URL: https://chromiumcodereview.appspot.com//9314048
------------------------------------------------------------------------
r3821 | turnidge@google.com | 2012-02-02 07:53:02 +0900 (木, 02  2月 2012) | 2 lines

Remove unused variable.
Review URL: https://chromiumcodereview.appspot.com//9315043
------------------------------------------------------------------------
r3819 | turnidge@google.com | 2012-02-02 07:49:36 +0900 (木, 02  2月 2012) | 5 lines

More fixes for non-mac builds.

- Don't use NULL in arithmetic in LongJump::IsSafeToJump
- Various functions need to return a faux value on unreachable branches.
Review URL: https://chromiumcodereview.appspot.com//9315041
------------------------------------------------------------------------
r3817 | turnidge@google.com | 2012-02-02 07:40:13 +0900 (木, 02  2月 2012) | 2 lines

Remove some unused variables to fix the linux build.
Review URL: https://chromiumcodereview.appspot.com//9310039
------------------------------------------------------------------------
r3815 | turnidge@google.com | 2012-02-02 07:34:16 +0900 (木, 02  2月 2012) | 15 lines

Add Dart_PropagateError.

This function can be used in native functions to properly pass all
errors up the stack.

Set the long jump base in the Compiler instead of outside of the
compiler.  A bunch of errors that used to be propagated through the
sticky_error are now propagated through return values.  This includes
all of the DartEntry and DartLibraryCall functions.

In particular, we no longer use the long jump to cross dart frames.
Instead errors are propagated across dart frames using the same
mechanism that we use for unhandled exceptions.  I've added assertions
to make sure that we only use the long jump when it is "safe".
Review URL: https://chromiumcodereview.appspot.com//9169102
------------------------------------------------------------------------
r3812 | ajohnsen@google.com | 2012-02-02 06:48:27 +0900 (木, 02  2月 2012) | 2 lines

Use ByteArray's native for Socket and File.
Review URL: https://chromiumcodereview.appspot.com//9235067
------------------------------------------------------------------------
r3804 | turnidge@google.com | 2012-02-02 03:53:40 +0900 (木, 02  2月 2012) | 13 lines

Add support for native ports in the vm.

Dart_NewNativePort creates a port associated with a C handler
function.  When messages come in on this port, they are forwarded to
the C function for processing.

To support this, refactored PortMap so that it operates on a new
MessageHandler type instead of directly on Isolates.

For now, native ports have a dedicated single thread.  Eventually we
will back native ports (and possibly Isolates as well) by a shared
thread pool.
Review URL: https://chromiumcodereview.appspot.com//9169063
------------------------------------------------------------------------
r3768 | hausner@google.com | 2012-02-01 09:49:47 +0900 (水, 01  2月 2012) | 5 lines

Allow assignment expressions in conditional expressions

Fix issue 1243 (http://code.google.com/p/dart/issues/detail?id=1243)
Also fix issue 1370 (name of internal temporary variables, order of expression evaluation.)
Review URL: https://chromiumcodereview.appspot.com//9310007
------------------------------------------------------------------------
r3745 | srdjan@google.com | 2012-02-01 05:05:24 +0900 (水, 01  2月 2012) | 5 lines

Fix for bug 1229: Unary operator plus is not allowed ... except for literals.
Add tests for incorrect literals, e.g. "+ 5".

Added a temporary token kTIGHTADD that represents an ADD not terminated by a whitespace. It is temporary and eliminated in the parser (code generator ot AST do not see it). It is used to recognize correct literals.
Review URL: https://chromiumcodereview.appspot.com//9264051
------------------------------------------------------------------------
r3738 | hausner@google.com | 2012-02-01 03:10:08 +0900 (水, 01  2月 2012) | 4 lines

Debugger API: get local variables of an activation frame

Also add a test case where the evaluation of a field name results in an error during the evaluation of the field.
Review URL: https://chromiumcodereview.appspot.com//9264058
------------------------------------------------------------------------
r3707 | regis@google.com | 2012-01-31 12:44:01 +0900 (火, 31  1月 2012) | 2 lines

Fix build breakage.
Review URL: https://chromiumcodereview.appspot.com//9302025
------------------------------------------------------------------------
r3703 | regis@google.com | 2012-01-31 09:07:07 +0900 (火, 31  1月 2012) | 7 lines

Store resolved library prefix in unresolved class object in order not to repeat
unnecessary library prefix resolution.
Remove redundant Type::NewParameterizedType() helper.
Simplify parsing of qualified identifiers.
Cleanup parsing of factory methods.
Fix resolution of imported types (add tests).
Review URL: https://chromiumcodereview.appspot.com//9233039
------------------------------------------------------------------------
r3683 | sgjesse@google.com | 2012-01-30 17:53:11 +0900 (月, 30  1月 2012) | 10 lines

Change friend declaration

Visual Studio requires the friend declaration for the actual class using a private method. GCC lives with a friend declaration for a sub-class.

TBR=ager@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9121073
------------------------------------------------------------------------
r3682 | sgjesse@google.com | 2012-01-30 17:29:31 +0900 (月, 30  1月 2012) | 13 lines

Implementation of message reader for converting a message snapshot into a C structure

It currently supports a limited number of types null, boolean, smi,
double, one byte string and arrays of these.

There is still no public function in the API to access this.

R=asiva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9235063
------------------------------------------------------------------------
r3673 | hausner@google.com | 2012-01-28 08:00:55 +0900 (土, 28  1月 2012) | 7 lines

Fix listing of source scripts in debugger

The cache of loaded scripts must be initialized to null when loading
from a snapshot.

Fix for issue 1345.
Review URL: https://chromiumcodereview.appspot.com//9121060
------------------------------------------------------------------------
r3666 | srdjan@google.com | 2012-01-28 06:04:12 +0900 (土, 28  1月 2012) | 2 lines

Use inlined double temporary object for unary operation, add tests. Fix disassembler crash.
Review URL: https://chromiumcodereview.appspot.com//9297026
------------------------------------------------------------------------
r3660 | srdjan@google.com | 2012-01-28 01:54:14 +0900 (土, 28  1月 2012) | 3 lines

Fix a perfrormance degradation in Mandelbrot: double comparison may have
left and right temporary objects.
Review URL: https://chromiumcodereview.appspot.com//9225008
------------------------------------------------------------------------
r3639 | srdjan@google.com | 2012-01-27 10:14:47 +0900 (金, 27  1月 2012) | 4 lines

Allocate inlined temporary double objects only if the parent node supports it;
fixes bug http://b/issue?id=5903071
More optimizations can be added later.
Review URL: https://chromiumcodereview.appspot.com//9288086
------------------------------------------------------------------------
r3638 | hausner@google.com | 2012-01-27 10:01:01 +0900 (金, 27  1月 2012) | 2 lines

Not my day today
Review URL: https://chromiumcodereview.appspot.com//9113100
------------------------------------------------------------------------
r3637 | hausner@google.com | 2012-01-27 09:49:02 +0900 (金, 27  1月 2012) | 4 lines

Fix new test in checked mode

Murphy is in a really bad mood today...
Review URL: https://chromiumcodereview.appspot.com//9289061
------------------------------------------------------------------------
r3636 | hausner@google.com | 2012-01-27 09:33:00 +0900 (金, 27  1月 2012) | 2 lines

More lottery wins...
Review URL: https://chromiumcodereview.appspot.com//9235082
------------------------------------------------------------------------
r3635 | hausner@google.com | 2012-01-27 09:29:47 +0900 (金, 27  1月 2012) | 4 lines

Bingo

Tripped the linux compiler again...
Review URL: https://chromiumcodereview.appspot.com//9113099
------------------------------------------------------------------------
r3634 | hausner@google.com | 2012-01-27 09:27:12 +0900 (金, 27  1月 2012) | 4 lines

Add debugger functions to inspect objects and classes.

Next steps: inspect global variables, better support for inspecting local variables on stack.
Review URL: https://chromiumcodereview.appspot.com//9288071
------------------------------------------------------------------------
r3632 | regis@google.com | 2012-01-27 08:50:29 +0900 (金, 27  1月 2012) | 4 lines

Simplify parsing of 'new' operator.
Fix checking of default factory type parameters (add new tests).
Start cleanup of class resolution code in parser and finalizer.
Review URL: https://chromiumcodereview.appspot.com//9290065
------------------------------------------------------------------------
r3614 | cshapiro@google.com | 2012-01-26 12:36:04 +0900 (木, 26  1月 2012) | 3 lines

Fix a build break caused by an new execution test that cannot run on ARM.

Review URL: https://chromiumcodereview.appspot.com//9169073
------------------------------------------------------------------------
r3613 | cshapiro@google.com | 2012-01-26 11:42:08 +0900 (木, 26  1月 2012) | 8 lines

Add ByteArray interface and provide internal and external implementations.

The new ByteArray interface supersedes the ByteBuffer type which allowed
only external data storage.  This type has been removed and replaced by
the more flexible ByteArray with a default implementation that stores its
elements on the managed heap.

Review URL: https://chromiumcodereview.appspot.com//9195031
------------------------------------------------------------------------
r3592 | ngeoffray@google.com | 2012-01-25 17:09:47 +0900 (水, 25  1月 2012) | 2 lines

Change error message (and not the internal method names) to report 'final field' instead of 'const field'.
Review URL: https://chromiumcodereview.appspot.com//9117025
------------------------------------------------------------------------
r3587 | regis@google.com | 2012-01-25 10:30:14 +0900 (水, 25  1月 2012) | 2 lines

Allow the list of type parameters in the default factory clause to be omitted.
Review URL: https://chromiumcodereview.appspot.com//9169032
------------------------------------------------------------------------
r3578 | regis@google.com | 2012-01-25 07:37:45 +0900 (水, 25  1月 2012) | 2 lines

Remove support for obsolete syntax of factory methods and default classes.
Review URL: https://chromiumcodereview.appspot.com//9285031
------------------------------------------------------------------------
r3576 | turnidge@google.com | 2012-01-25 07:02:53 +0900 (水, 25  1月 2012) | 3 lines

Don't access a message after it has been enqueued.  It may be deleted
at that point.
Review URL: https://chromiumcodereview.appspot.com//9288001
------------------------------------------------------------------------
r3575 | hausner@google.com | 2012-01-25 06:51:04 +0900 (水, 25  1月 2012) | 2 lines

Any time now...
Review URL: https://chromiumcodereview.appspot.com//9283043
------------------------------------------------------------------------
r3574 | hausner@google.com | 2012-01-25 06:46:40 +0900 (水, 25  1月 2012) | 2 lines

If at first you don't succeed...
Review URL: https://chromiumcodereview.appspot.com//9117051
------------------------------------------------------------------------
r3573 | hausner@google.com | 2012-01-25 06:38:56 +0900 (水, 25  1月 2012) | 2 lines

Appease picky linux gcc.
Review URL: https://chromiumcodereview.appspot.com//9285030
------------------------------------------------------------------------
r3572 | hausner@google.com | 2012-01-25 06:33:40 +0900 (水, 25  1月 2012) | 2 lines

Fix local variable info in debugger stack trace.
Review URL: https://chromiumcodereview.appspot.com//9117042
------------------------------------------------------------------------
r3571 | hausner@google.com | 2012-01-25 06:33:04 +0900 (水, 25  1月 2012) | 2 lines

Add functions to list library and script urls in an isolate.
Review URL: https://chromiumcodereview.appspot.com//9117015
------------------------------------------------------------------------
r3565 | iposva@google.com | 2012-01-25 05:24:12 +0900 (水, 25  1月 2012) | 2 lines

- Avoid running into an unimplemented and add more debugging help.
Review URL: https://chromiumcodereview.appspot.com//9212059
------------------------------------------------------------------------
r3562 | turnidge@google.com | 2012-01-25 04:31:01 +0900 (水, 25  1月 2012) | 30 lines

OOB messages and general message refactor.

(1)
No longer give embedders direct access to inter-isolate messages.
Instead, keep these messages in an internal queue and rely on the
embedder only to provide notifications.  This simplifies the api in
numerous ways:

 - post message callback drops parameters and becomes message notify callback.
 - close port callback goes away
 - Dart_Message type goes away
 - Dart_HandleMessage gets a simpler signature

Updated the custom_isolate_test to show what use of the new apis looks like.

(2)
Begin to add support for out-of-band (OOB) messages.  These messages
supercede regular messages in the queue.  We will attempt to deliver
these messages even while code is running, by using the isolate
interrupt mechanism.  These messages are not user-visible.  They will
be used by the runtime internally to implement things like reflection.

Renamed PortMessage to Message.

Refactored message sending apis in PortMap and Isolate.

Modified MessageQueue to be aware of multiple priorities.

Modify Dart_HandleMessage to process multiple OOB messages
Review URL: https://chromiumcodereview.appspot.com//9182001
------------------------------------------------------------------------
r3537 | ager@google.com | 2012-01-24 16:36:59 +0900 (火, 24  1月 2012) | 13 lines

Split dart:builtin into dart:builtin and dart:io.

- dart:builtin is implicitly imported.
- dart:io has to be explicitly imported.

I will update the macos and windows stable test binaries when we
are happy with the solution.

R=iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9254026
------------------------------------------------------------------------
r3509 | regis@google.com | 2012-01-24 04:56:35 +0900 (火, 24  1月 2012) | 2 lines

Optimize parsing of qualified identifiers.
Review URL: https://chromiumcodereview.appspot.com//9271023
------------------------------------------------------------------------
r3470 | hausner@google.com | 2012-01-21 07:10:59 +0900 (土, 21  1月 2012) | 5 lines

Implement deletion of breakpoints

- deletion of breakpoints
- better cleanup of debugger resources
Review URL: https://chromiumcodereview.appspot.com//9271008
------------------------------------------------------------------------
r3453 | asiva@google.com | 2012-01-20 09:55:39 +0900 (金, 20  1月 2012) | 4 lines

Improve compile times for swarm application startup
- Avoid creation of getter/setter symbol when all we need to do is a lookup
- Add LookupGetterFunction/LookupSetterFunction to avoid having to create the getter name/setter name before doing a lookup
Review URL: https://chromiumcodereview.appspot.com//9265021
------------------------------------------------------------------------
r3443 | hausner@google.com | 2012-01-20 03:52:08 +0900 (金, 20  1月 2012) | 4 lines

Fix compiler stats timer code

Account for recursive start/stop of timer. This has probably been broken since the beginning, but was only caught now after Siva added an assert in timer code.
Review URL: https://chromiumcodereview.appspot.com//9150040
------------------------------------------------------------------------
r3442 | ager@google.com | 2012-01-20 03:33:32 +0900 (金, 20  1月 2012) | 7 lines

Fix a couple of isolate-related memory leaks that show up a lot in valgrind output.

R=hausner@google.com,iposva@google.com
BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9150031
------------------------------------------------------------------------
r3441 | regis@google.com | 2012-01-20 03:31:55 +0900 (金, 20  1月 2012) | 2 lines

Skip qualified identifiers that are part of ignored types.
Review URL: https://chromiumcodereview.appspot.com//9150036
------------------------------------------------------------------------
r3423 | asiva@google.com | 2012-01-19 10:50:32 +0900 (木, 19  1月 2012) | 3 lines

Improve compilation times for swarm application startup.
- Avoid multiple calls to LookupFunction and LookupField once for static and once for dynamic.
Review URL: https://chromiumcodereview.appspot.com//9252033
------------------------------------------------------------------------
r3422 | hausner@google.com | 2012-01-19 09:51:39 +0900 (木, 19  1月 2012) | 4 lines

Fix named parameter function calls

Issue 1199
Review URL: https://chromiumcodereview.appspot.com//9252027
------------------------------------------------------------------------
r3420 | hausner@google.com | 2012-01-19 08:15:56 +0900 (木, 19  1月 2012) | 4 lines

Set breakpoint at url, line number

Add debugger functionality to set breakpoint at given url and line number.
Review URL: https://chromiumcodereview.appspot.com//9240014
------------------------------------------------------------------------
r3417 | regis@google.com | 2012-01-19 07:00:40 +0900 (木, 19  1月 2012) | 3 lines

Simplify integer arithmetic code.
Optimize Mint multiplication in 32-bit mode.
Review URL: https://chromiumcodereview.appspot.com//9112050
------------------------------------------------------------------------
r3416 | turnidge@google.com | 2012-01-19 06:46:27 +0900 (木, 19  1月 2012) | 61 lines

Give isolates names to be used during debugging.

Implement --trace_isolates.

-------------

Sample output of --trace_isolates for the CrossIsolateMessageTest:

[+] Starting isolate:
    isolate:    CrossIsolateMessageTest.dart/main-7112
[+] Starting isolate:
    isolate:    CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
[+] Starting isolate:
    isolate:    CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/main-7112
    reply_port: 7117
    dest:       CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
    dest_port:  7115
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
    reply_port: 7118
    dest:       CrossIsolateMessageTest.dart/main-7112
    dest_port:  7117
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/main-7112
    reply_port: 7119
    dest:       CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
    dest_port:  7114
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
    reply_port: 7120
    dest:       CrossIsolateMessageTest.dart/main-7112
    dest_port:  7119
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/main-7112
    reply_port: 0
    dest:       CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
    dest_port:  7120
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
    reply_port: 0
    dest:       CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
    dest_port:  7118
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
    reply_port: 0
    dest:       CrossIsolateMessageTest.dart/main-7112
    dest_port:  7116
[>] Posting message:
    source:     CrossIsolateMessageTest.dart/main-7112
    reply_port: 0
    dest:       CrossIsolateMessageTest.dart/main-7112
    dest_port:  7113
[-] Stopping isolate:
    isolate:    CrossIsolateMessageTest.dart/CrossIsolate2.main-7115
[-] Stopping isolate:
    isolate:    CrossIsolateMessageTest.dart/CrossIsolate1.main-7114
[-] Stopping isolate:
    isolate:    CrossIsolateMessageTest.dart/main-7112
Review URL: https://chromiumcodereview.appspot.com//9242035
------------------------------------------------------------------------
r3413 | asiva@google.com | 2012-01-19 05:10:18 +0900 (木, 19  1月 2012) | 4 lines

Improve function compilation times for swarm application startup.
- Add a String::Equals(const String& str) method.
- Pass in isolate parameter if present for some handle creation functions.
Review URL: https://chromiumcodereview.appspot.com//9232017
------------------------------------------------------------------------
r3404 | regis@google.com | 2012-01-19 03:08:04 +0900 (木, 19  1月 2012) | 3 lines

Ignore parsed types of local variables in unchecked mode and replace them with
the Dynamic type.
Review URL: https://chromiumcodereview.appspot.com//9232016
------------------------------------------------------------------------
r3403 | hausner@google.com | 2012-01-19 02:58:05 +0900 (木, 19  1月 2012) | 5 lines

Report error on duplicate supertypes

Report error if the same type appears more than once in the implements
or extends list.
Review URL: https://chromiumcodereview.appspot.com//9252001
------------------------------------------------------------------------
r3380 | asiva@google.com | 2012-01-18 09:20:17 +0900 (水, 18  1月 2012) | 4 lines

Use special allocation functions for object creation while deserializing from a full snapshot in order to avoid the following:
- unnecessary initialization of objects with null
- avoid handle creation
Review URL: https://chromiumcodereview.appspot.com//9139067
------------------------------------------------------------------------
r3376 | regis@google.com | 2012-01-18 07:52:54 +0900 (水, 18  1月 2012) | 2 lines

Enable remaining execution tests on x64.
Review URL: https://chromiumcodereview.appspot.com//9242025
------------------------------------------------------------------------
r3368 | hausner@google.com | 2012-01-18 06:16:27 +0900 (水, 18  1月 2012) | 2 lines

Improve error message for some unresolved identifiers
Review URL: https://chromiumcodereview.appspot.com//9246001
------------------------------------------------------------------------
r3367 | turnidge@google.com | 2012-01-18 04:54:02 +0900 (水, 18  1月 2012) | 5 lines

Make the "sticky error" an Error instead of a String.

I do this in preparation for using the sticky error to implement
isolate unwinding.
Review URL: https://chromiumcodereview.appspot.com//9186058
------------------------------------------------------------------------
r3365 | asiva@google.com | 2012-01-18 03:29:54 +0900 (水, 18  1月 2012) | 3 lines

- Account for the possibility of timer objects being nested.
- Time library and source loading
Review URL: https://chromiumcodereview.appspot.com//9228007
------------------------------------------------------------------------
r3349 | sgjesse@google.com | 2012-01-17 19:29:24 +0900 (火, 17  1月 2012) | 10 lines

Move Mutex and Monitor from vm/ to platform/

The tests are still in runtime/vm/thread_test.cc.

R=ager@google.com, iposva@google.com

BUG=
TEST=

Review URL: https://chromiumcodereview.appspot.com//9196002
------------------------------------------------------------------------
r3337 | sgjesse@google.com | 2012-01-16 22:23:40 +0900 (月, 16  1月 2012) | 11 lines

Move utils.h and utils.cc from runtime/vm to runtime/platform

Moved additional parts of globals.h from vm/ to platform/ to support
types and constants used by utils.*.

R=ager@google.com, iposva@google.com

BUG=
TEST=

Review URL: http://codereview.chromium.org//9209001
------------------------------------------------------------------------
r3335 | sgjesse@google.com | 2012-01-16 21:28:10 +0900 (月, 16  1月 2012) | 29 lines

Move assert.h/assert.cc from runtime/vm to runtime/platform

The purpose of this change is twofold:

1. Source in the bin directory can now use the same assertions as
   source in the vm directory. The ASSERT macro used by the code
   in runtime/bin was just defined to use assert from the standard
   C library.
2. Moving other implementation parts from runtime/vm to
   runtime/platform (e.g. classes Monitor and Mutex) for sharing
   between runtime/bin and runtime/vm will be easier as these
   implementations rely on these assertion macros.

Created two gypi files for the platform directory. One for the
headers and one for the source. The source one is only included
when building the VM library and will be present in libdart.a
when the dart executable is linked.

All the code for asserts is still in the dart namespace.

Also re-arranged the order of includes to be alphabetically in
the files touched.

R=ager@google.com, iposva@google.com

BUG=
TEST=

Review URL: http://codereview.chromium.org//9189003
------------------------------------------------------------------------
r3318 | hausner@google.com | 2012-01-14 09:44:10 +0900 (土, 14  1月 2012) | 4 lines

More parser stuff to handle pseudo keywords as identifiers

More pathological cases.
Review URL: http://codereview.chromium.org//9212018
------------------------------------------------------------------------
r3313 | iposva@google.com | 2012-01-14 07:46:32 +0900 (土, 14  1月 2012) | 2 lines

- More cleanup after the kSAR -> kSHR rename.
Review URL: http://codereview.chromium.org//9212016
------------------------------------------------------------------------
r3307 | regis@google.com | 2012-01-14 05:07:54 +0900 (土, 14  1月 2012) | 4 lines

Port a couple more stubs to x64.
Fix integer implementation issues.
Enable all tests on x64.
Review URL: http://codereview.chromium.org//9114054
------------------------------------------------------------------------
r3305 | hausner@google.com | 2012-01-14 04:41:33 +0900 (土, 14  1月 2012) | 4 lines

Fix frog build

Doesn't handle pseudo kw right.
Review URL: http://codereview.chromium.org//9174011
------------------------------------------------------------------------
r3303 | hausner@google.com | 2012-01-14 04:24:50 +0900 (土, 14  1月 2012) | 6 lines

Proper handling of built-in identifiers

Allow pseudo-keywords (built-in identifiers) as regular identifiers for anything but class names, interface names, typedef names.

Still todo: Update blacklist of class/interface names, disallow pseudo-keywords as type parameter names.
Review URL: http://codereview.chromium.org//9107070
------------------------------------------------------------------------
r3279 | iposva@google.com | 2012-01-13 18:10:48 +0900 (金, 13  1月 2012) | 2 lines

- Remove support for ">>>" operator.
Review URL: http://codereview.chromium.org//9203004
------------------------------------------------------------------------
r3274 | cshapiro@google.com | 2012-01-13 10:39:23 +0900 (金, 13  1月 2012) | 3 lines

Rename the VM internal class ByteArray to ByteVector.

Review URL: http://codereview.chromium.org//9139080
------------------------------------------------------------------------
r3273 | cshapiro@google.com | 2012-01-13 10:23:42 +0900 (金, 13  1月 2012) | 7 lines

Provide API support for weak handles and post-mortem finalization.

In addition, this change separates the storage of weak persistent
handles from ordinary persistent handles.  An ordinary persistent
handle now stores no other data than the raw pointer value.

Review URL: http://codereview.chromium.org//9148051
------------------------------------------------------------------------
r3271 | asiva@google.com | 2012-01-13 09:38:19 +0900 (金, 13  1月 2012) | 2 lines

Create temporary handles in the snapshot object during initialization and use them instead of creating temporary handles in each deserialization function.
Review URL: http://codereview.chromium.org//9166012
------------------------------------------------------------------------
r3219 | turnidge@google.com | 2012-01-12 10:01:46 +0900 (木, 12  1月 2012) | 3 lines

Standardize error printing a bit by moving it to the Error object and
descendants.
Review URL: http://codereview.chromium.org//9148048
------------------------------------------------------------------------
r3171 | vsm@google.com | 2012-01-11 09:28:26 +0900 (水, 11  1月 2012) | 5 lines

Build fix for mac/clang

This should get Dartium Mac bots green.

Review URL: http://codereview.chromium.org//9175002
------------------------------------------------------------------------
r3168 | turnidge@google.com | 2012-01-11 06:42:21 +0900 (水, 11  1月 2012) | 17 lines

Introduce the Error object class in the vm. It represents all of the
things that may go wrong while invoking the dart api.

Here are the four types of error:

- ApiError = the user misused one of the dart apis
- LanguageError = a language-level problem, e.g. compiler error
- UnhandledException = an uncaught exception made its way to the embedder
- UnwindError = a forced isolate interrupt

This cl is the first of a series. I plan to move the point of
creation for LanguageErrors into the Parser, etc. I also plan to move
the longjmp's out of dart_api_impl.cc. I also also plan to implement
UnwindErrors later.

(Copied from Issue 9085031 due to subversion problems)
Review URL: http://codereview.chromium.org//9166016
------------------------------------------------------------------------
r3167 | turnidge@google.com | 2012-01-11 06:20:03 +0900 (水, 11  1月 2012) | 2 lines

Comment-only change to track down some svn issues I'm having.
Review URL: http://codereview.chromium.org//9179002
------------------------------------------------------------------------
r3160 | asiva@google.com | 2012-01-11 03:47:38 +0900 (水, 11  1月 2012) | 3 lines

- Pass in the isolate parameter when creating handles.
- Store the current isolate pointer in the snapshot reader object and use it instead of calling Isolate::Current() during the deserializing process.
Review URL: http://codereview.chromium.org//9124012
------------------------------------------------------------------------
r3155 | ager@google.com | 2012-01-11 01:50:14 +0900 (水, 11  1月 2012) | 8 lines

Cleanup gypi mess.

My change that introduced a platform directory shared between vm and bin runtime components did not correctly update gypi files.

BUG=
TEST=

Review URL: http://codereview.chromium.org//9124030
------------------------------------------------------------------------
r3124 | regis@google.com | 2012-01-10 09:32:51 +0900 (火, 10  1月 2012) | 2 lines

Print stop message.
Review URL: http://codereview.chromium.org//9128002
------------------------------------------------------------------------
r3122 | regis@google.com | 2012-01-10 09:01:47 +0900 (火, 10  1月 2012) | 3 lines

A class/interface cannot implement/extend a type parameter (issues 886 and 887).
Added tests.
Review URL: http://codereview.chromium.org//9153006
------------------------------------------------------------------------
r3063 | asiva@google.com | 2012-01-07 09:06:31 +0900 (土, 07  1月 2012) | 3 lines

- Remove redundant initialization in Array::New
- Add timer for measuing isolate initialization
Review URL: http://codereview.chromium.org//9108036
------------------------------------------------------------------------
r3030 | ager@google.com | 2012-01-06 20:28:21 +0900 (金, 06  1月 2012) | 11 lines

Introduce runtime/platform directory for code shared between vm
and bin.

Cleaned up globals.h. Common parts now in platform/globals.h.
vm specific parts are in vm/globals.h and bin/globals.h is gone.

R=sgjesse@google.com,iposva@google.com
BUG=
TEST=

Review URL: http://codereview.chromium.org//9114008
------------------------------------------------------------------------
r3020 | iposva@google.com | 2012-01-06 09:13:58 +0900 (金, 06  1月 2012) | 3 lines

- Bump the code heap to avoid running out when running with compile all and
  the DOM/HTML libraries.
Review URL: http://codereview.chromium.org//9116029
------------------------------------------------------------------------
r3017 | hausner@google.com | 2012-01-06 07:33:37 +0900 (金, 06  1月 2012) | 5 lines

Getting value of local variables on stack trace

Introduce concept of scope in local variable info, according
to mirror proposal.
Review URL: http://codereview.chromium.org//8983034
------------------------------------------------------------------------
r3013 | hausner@google.com | 2012-01-06 06:28:32 +0900 (金, 06  1月 2012) | 6 lines

Second try at additional nested block in functions.

The last change broke dartium tests because as a side effect, the generated
code size increased by 2 or 3 percent. Fixed this unintended side
effect.
Review URL: http://codereview.chromium.org//9109024
------------------------------------------------------------------------
r2980 | vsm@google.com | 2012-01-05 15:31:17 +0900 (木, 05  1月 2012) | 9 lines

Reverting r2970 to fix Dartium break

This should get the Dartium bot green again.

TBR=hausner

TEST=language/HelloDartTest

Review URL: http://codereview.chromium.org//9116002
------------------------------------------------------------------------
r2976 | hausner@google.com | 2012-01-05 10:47:10 +0900 (木, 05  1月 2012) | 2 lines

Fix potential problem with expression evaluation.
Review URL: http://codereview.chromium.org//9110001
------------------------------------------------------------------------
r2972 | vsm@google.com | 2012-01-05 09:24:52 +0900 (木, 05  1月 2012) | 9 lines

Fix sign extension issue with clang/gcc

This is an adaptation of antonm's CL with mods suggested by asiva

http://codereview.chromium.org/9003015

Dartium Mac tests pass with this.

Review URL: http://codereview.chromium.org//9091016
------------------------------------------------------------------------
r2970 | hausner@google.com | 2012-01-05 06:31:23 +0900 (木, 05  1月 2012) | 4 lines

Put function parameters into their own scope.

Local function variables in the outermost scope can shadow function parameters.
Review URL: http://codereview.chromium.org//9088024
------------------------------------------------------------------------
r2937 | iposva@google.com | 2012-01-04 17:08:39 +0900 (水, 04  1月 2012) | 2 lines

- Fix build.
Review URL: http://codereview.chromium.org//9008060
------------------------------------------------------------------------
r2936 | iposva@google.com | 2012-01-04 17:04:04 +0900 (水, 04  1月 2012) | 3 lines

- Add a size field to the header.
- Make use of the field when available to avoid accessing the class.
Review URL: http://codereview.chromium.org//9072011
------------------------------------------------------------------------
r2931 | iposva@google.com | 2012-01-04 10:27:57 +0900 (水, 04  1月 2012) | 3 lines

Fix issue 1023:
- Throw OutOfMemoryException when allocation fails.
Review URL: http://codereview.chromium.org//9030013
------------------------------------------------------------------------
r2930 | hausner@google.com | 2012-01-04 10:12:04 +0900 (水, 04  1月 2012) | 5 lines

Fix issues 968 and 998

968: don't crash if no class name given after 'default'
998: eliminate code generator diagnostic output on stdout
Review URL: http://codereview.chromium.org//9072012
------------------------------------------------------------------------
r2926 | asiva@google.com | 2012-01-04 08:25:51 +0900 (水, 04  1月 2012) | 2 lines

Cleanup some of the tests to use the macro TEST_CASE instead of UNIT_TEST_CASE
Review URL: http://codereview.chromium.org//9075008
------------------------------------------------------------------------
r2880 | iposva@google.com | 2011-12-30 08:05:40 +0900 (金, 30 12月 2011) | 2 lines

- Fix try lock on Lion.
Review URL: http://codereview.chromium.org//9022041
------------------------------------------------------------------------
r2844 | asiva@google.com | 2011-12-28 10:55:58 +0900 (水, 28 12月 2011) | 2 lines

Push raw_null instead of smi 0 in all places were we setup the return value location before calling into the runtime.
Review URL: http://codereview.chromium.org//8965071
------------------------------------------------------------------------
r2839 | asiva@google.com | 2011-12-28 09:13:57 +0900 (水, 28 12月 2011) | 2 lines

Move include of limits.h to globals.h
Review URL: http://codereview.chromium.org//9005037
------------------------------------------------------------------------
r2838 | asiva@google.com | 2011-12-28 08:54:30 +0900 (水, 28 12月 2011) | 2 lines

Make snapshots 32 or 64 bit compliant by using Write<int64_t> and Read<int64_t> for intptr_t types and adjust Smi values into Smi/Mint or BigInt based on the value read.
Review URL: http://codereview.chromium.org//9021042
------------------------------------------------------------------------
r2836 | iposva@google.com | 2011-12-28 07:59:54 +0900 (水, 28 12月 2011) | 3 lines

- Fix a couple near branches that were out of reach.
- Implement slow case for AllocateContext and AllocateClosure stubs.
Review URL: http://codereview.chromium.org//9046009
------------------------------------------------------------------------
r2798 | asiva@google.com | 2011-12-23 09:46:00 +0900 (金, 23 12月 2011) | 2 lines

In CheckIsolate process only if we have any unfinalized classes.
Review URL: http://codereview.chromium.org//9027025
------------------------------------------------------------------------
r2797 | iposva@google.com | 2011-12-23 09:31:17 +0900 (金, 23 12月 2011) | 2 lines

- Return 0 in the unreachable case.
Review URL: http://codereview.chromium.org//9022025
------------------------------------------------------------------------
r2796 | iposva@google.com | 2011-12-23 09:14:05 +0900 (金, 23 12月 2011) | 4 lines

- Promote objects from new gen to old space if they survived a scavenge.
- Properly initialize the tags in intrinsified allocation.
- Check for valid tag bits.
Review URL: http://codereview.chromium.org//9027017
------------------------------------------------------------------------
r2793 | srdjan@google.com | 2011-12-23 08:27:21 +0900 (金, 23 12月 2011) | 2 lines

Do back propagation of types(classes) for checks in load and store indexed.
Review URL: http://codereview.chromium.org//9022019
------------------------------------------------------------------------
r2791 | floitsch@google.com | 2011-12-23 07:18:21 +0900 (金, 23 12月 2011) | 3 lines

ToStringAsFixed returns now 0 instead of -0.

Review URL: http://codereview.chromium.org//8958018
------------------------------------------------------------------------
r2790 | floitsch@google.com | 2011-12-23 07:03:35 +0900 (金, 23 12月 2011) | 3 lines

Implement Double.toStringAsFixed.

Review URL: http://codereview.chromium.org//8728006
------------------------------------------------------------------------
r2788 | srdjan@google.com | 2011-12-23 06:41:26 +0900 (金, 23 12月 2011) | 2 lines

Propagate more local variable types: if a load local is followed by a deoptimizationtype check, set the local to have that type from now on.
Review URL: http://codereview.chromium.org//9025025
------------------------------------------------------------------------
r2761 | sgjesse@google.com | 2011-12-23 00:32:33 +0900 (金, 23 12月 2011) | 8 lines

Move comment to the right place

R=iposva@google.com

BUG=
TEST=

Review URL: http://codereview.chromium.org//9025014
------------------------------------------------------------------------
r2740 | sgjesse@google.com | 2011-12-22 17:21:41 +0900 (木, 22 12月 2011) | 11 lines

Update the isolate interrupt test

* Space out the interrupts by short sleeps
* Use a constant instead of the magic number 3 for the number of interrups

R=iposva@google.com

BUG=dart:906
TEST=VM test IsolateInterrupt

Review URL: http://codereview.chromium.org//9016007
------------------------------------------------------------------------
r2739 | srdjan@google.com | 2011-12-22 10:12:59 +0900 (木, 22 12月 2011) | 2 lines

More optimizations.
Review URL: http://codereview.chromium.org//8999031
------------------------------------------------------------------------
r2737 | hausner@google.com | 2011-12-22 09:21:41 +0900 (木, 22 12月 2011) | 4 lines

Fix linux build

Picky compiler.
Review URL: http://codereview.chromium.org//9016032
------------------------------------------------------------------------
r2736 | hausner@google.com | 2011-12-22 09:17:15 +0900 (木, 22 12月 2011) | 6 lines

Retrieve value of local variables in stack frames.

Works for stack-based variables. Need more work to distinguish between
stack and context (captured) variables.
 
Review URL: http://codereview.chromium.org//9019029
------------------------------------------------------------------------
r2732 | srdjan@google.com | 2011-12-22 07:46:01 +0900 (木, 22 12月 2011) | 2 lines

More optimizations: in binary operations check sometimesnnn for two classes instead of one; call some target operators directly (checked call) instead of via inline cache call; allow smi/double binary operations to be inlined.
Review URL: http://codereview.chromium.org//8995019
------------------------------------------------------------------------
r2731 | srdjan@google.com | 2011-12-22 07:37:21 +0900 (木, 22 12月 2011) | 2 lines

Optimize indexed store for growable array (intrinsification and inlined optimized).
Review URL: http://codereview.chromium.org//9020030
------------------------------------------------------------------------
r2725 | srdjan@google.com | 2011-12-22 06:35:25 +0900 (木, 22 12月 2011) | 2 lines

X64: check all cases with "__ movq(FieldAddress" and converted them to StoreIntoObject if appropriate.
Review URL: http://codereview.chromium.org//9017024
------------------------------------------------------------------------
r2721 | asiva@google.com | 2011-12-22 04:59:00 +0900 (木, 22 12月 2011) | 4 lines

Fix win32 build break.

TBR=hausner
Review URL: http://codereview.chromium.org//9017026
------------------------------------------------------------------------
r2718 | asiva@google.com | 2011-12-22 04:37:37 +0900 (木, 22 12月 2011) | 2 lines

Refactor some of the snapshot writer classes to eliminate code duplication.
Review URL: http://codereview.chromium.org//9018002
------------------------------------------------------------------------
r2714 | srdjan@google.com | 2011-12-22 03:36:53 +0900 (木, 22 12月 2011) | 2 lines

Check all cases with "__ movl(FieldAddress" and converted them to StoreIntoObject where appropriate.
Review URL: http://codereview.chromium.org//9021025
------------------------------------------------------------------------
r2711 | cshapiro@google.com | 2011-12-22 02:50:38 +0900 (木, 22 12月 2011) | 3 lines

Do not use C++ const references in the C interface.

Review URL: http://codereview.chromium.org//9017018
------------------------------------------------------------------------
r2707 | iposva@google.com | 2011-12-22 02:26:02 +0900 (木, 22 12月 2011) | 3 lines

- Fix outdated use of factory clause.
- Update error messages.
Review URL: http://codereview.chromium.org//8949043
------------------------------------------------------------------------
r2674 | asiva@google.com | 2011-12-21 07:38:12 +0900 (水, 21 12月 2011) | 2 lines

Use StorePointer instead of direct assignments of objects.
Review URL: http://codereview.chromium.org//9007032
------------------------------------------------------------------------
r2673 | srdjan@google.com | 2011-12-21 07:05:41 +0900 (水, 21 12月 2011) | 4 lines

Add (debug) printing when IC is used in optimized code (must eliminate it).
Do Smi binary op only on two Smi-s.
Increase deopt counter limit to 5., which still may be too low. Deopt counter is here mainly to prevent drastic performance degradations because of bugs or missing implementations.
Review URL: http://codereview.chromium.org//9007027
------------------------------------------------------------------------
r2671 | hausner@google.com | 2011-12-21 06:40:28 +0900 (水, 21 12月 2011) | 8 lines

First part of inspecting local variables

This change introduces variable descriptors that describe the name, stack slot index, and source code stretch in which a variable is valid.

Activation frames in the stack trace now can enumerate the variables that are active in that frame.

Next step: fetch the value of variables from the stack.
Review URL: http://codereview.chromium.org//8992020
------------------------------------------------------------------------
r2616 | sgjesse@google.com | 2011-12-20 18:21:43 +0900 (火, 20 12月 2011) | 9 lines

Fix issue 906

R=iposva@google.com

BUG=dart:906

TEST=

Review URL: http://codereview.chromium.org//8995008
------------------------------------------------------------------------
r2611 | srdjan@google.com | 2011-12-20 11:11:18 +0900 (火, 20 12月 2011) | 3 lines

Fix a bug in intrinsified Array_setIndexed type check.
Optimize unary double operation negate.
Review URL: http://codereview.chromium.org//8996024
------------------------------------------------------------------------
r2610 | cshapiro@google.com | 2011-12-20 11:10:37 +0900 (火, 20 12月 2011) | 3 lines

Disable the weak persistent handle test on non-ia32 targets.

Review URL: http://codereview.chromium.org//9008002
------------------------------------------------------------------------
r2609 | asiva@google.com | 2011-12-20 11:04:24 +0900 (火, 20 12月 2011) | 5 lines

Changes to create an application snapshot which can be layered on top
after an isolate is created and initialized.

Added an option --use_script_snapshot which creates a snapshot of the specified script in an isolate, shuts that down and restarts on a new isolate and loads the script from the snapshot buffer and executes it.
Review URL: http://codereview.chromium.org//8970004
------------------------------------------------------------------------
r2607 | cshapiro@google.com | 2011-12-20 10:44:53 +0900 (火, 20 12月 2011) | 3 lines

Implement weak persistent handles in the Dart API.

Review URL: http://codereview.chromium.org//8984006
------------------------------------------------------------------------
r2593 | iposva@google.com | 2011-12-20 04:29:10 +0900 (火, 20 12月 2011) | 4 lines

- Trigger old-gen GCs when needed.
- Sweep large pages.
- Handle free list elements when calculating sizes.
Review URL: http://codereview.chromium.org//8996011
------------------------------------------------------------------------
r2557 | regis@google.com | 2011-12-17 09:56:02 +0900 (土, 17 12月 2011) | 2 lines

Port code generator to x64.
Review URL: http://codereview.chromium.org//8984003
------------------------------------------------------------------------
r2555 | iposva@google.com | 2011-12-17 08:40:41 +0900 (土, 17 12月 2011) | 2 lines

- Honor max_capacity even for large page allocation.
Review URL: http://codereview.chromium.org//8962006
------------------------------------------------------------------------
r2553 | iposva@google.com | 2011-12-17 08:28:31 +0900 (土, 17 12月 2011) | 2 lines

- Apply review feedback.
Review URL: http://codereview.chromium.org//8976013
------------------------------------------------------------------------
r2548 | srdjan@google.com | 2011-12-17 08:16:00 +0900 (土, 17 12月 2011) | 2 lines

More optimizations and cleanups.
Review URL: http://codereview.chromium.org//8972005
------------------------------------------------------------------------
r2533 | hausner@google.com | 2011-12-17 04:11:39 +0900 (土, 17 12月 2011) | 4 lines

One small step towards sanity

Make 'class' a proper keyword, and 'extends' too. Adjusting the VM compiler to the language spec.
Review URL: http://codereview.chromium.org//8968021
------------------------------------------------------------------------
r2531 | turnidge@google.com | 2011-12-17 03:48:53 +0900 (土, 17 12月 2011) | 2 lines

Fix initializer order (build break on some platforms).
Review URL: http://codereview.chromium.org//8963026
------------------------------------------------------------------------
r2529 | turnidge@google.com | 2011-12-17 03:41:20 +0900 (土, 17 12月 2011) | 15 lines

Add support for interrupting an isolate in the vm.  Interrupts are
implemented by extending the existing support for stack overflow
checking in the vm.  When an interrupt is scheduled for an isolate, we
overwrite the isolate's stack limit with a value guaranteed to cause a
stack overflow.

We support multiple kinds of interrupts, encoded in the low bits of
the stack limit.

Add Dart_InterruptIsolate and Dart_InterruptIsolateCallback to the
dart embedding api to allow the embedder to request and handle
interrupts.

Add EXPECT_SUBSTRING(needle, haystack) testing macro.
Review URL: http://codereview.chromium.org//8851008
------------------------------------------------------------------------
r2496 | asiva@google.com | 2011-12-16 09:31:33 +0900 (金, 16 12月 2011) | 3 lines

Add Double::NewCanonical and Mint::NewCanonical so that it is possible to
canonicalize double and mint constants without having to create an object first.
Review URL: http://codereview.chromium.org//8963001
------------------------------------------------------------------------
r2487 | srdjan@google.com | 2011-12-16 07:39:21 +0900 (金, 16 12月 2011) | 2 lines

Use deopt on some instructions that have not collected type feedback when optimizing compierl kicks in. Optimize SAR.
Review URL: http://codereview.chromium.org//8972002
------------------------------------------------------------------------
r2485 | iposva@google.com | 2011-12-16 07:37:35 +0900 (金, 16 12月 2011) | 2 lines

- Implement the old sweeper.
Review URL: http://codereview.chromium.org//8898034
------------------------------------------------------------------------
r2451 | srdjan@google.com | 2011-12-15 09:46:27 +0900 (木, 15 12月 2011) | 2 lines

Optimize instance setters for non-implicit-setters and for setters with multiple targets.
Review URL: http://codereview.chromium.org//8945002
------------------------------------------------------------------------
r2438 | turnidge@google.com | 2011-12-15 03:27:58 +0900 (木, 15 12月 2011) | 2 lines

If an unhandled exception occurs in Dart_RunLoop, pass it out to the caller.
Review URL: http://codereview.chromium.org//8918028
------------------------------------------------------------------------
r2436 | asiva@google.com | 2011-12-15 03:09:18 +0900 (木, 15 12月 2011) | 5 lines

Changes to set up the object tag bits
- sets up canonical
- sets up created from a snapshot
Added code to capture the tag bits during snapshot generation.
Review URL: http://codereview.chromium.org//8879063
------------------------------------------------------------------------
r2409 | srdjan@google.com | 2011-12-14 10:18:12 +0900 (水, 14 12月 2011) | 2 lines

Fix truncate divide bug (reported by sra) when dividing MIN_SMI by -1.
Review URL: http://codereview.chromium.org//8931016
------------------------------------------------------------------------
r2398 | regis@google.com | 2011-12-14 06:19:36 +0900 (水, 14 12月 2011) | 3 lines

Rename type parameter to comply with upcoming corelib changes.
Update error message in class finalizer.
Review URL: http://codereview.chromium.org//8933014
------------------------------------------------------------------------
r2397 | srdjan@google.com | 2011-12-14 06:09:13 +0900 (水, 14 12月 2011) | 2 lines

Optimize truncated divide (intrinsics and inline).
Review URL: http://codereview.chromium.org//8934010
------------------------------------------------------------------------
r2394 | regis@google.com | 2011-12-14 04:35:07 +0900 (水, 14 12月 2011) | 3 lines

Implement revised factories in the VM.
Emit warnings when obsolete syntax is used.
Review URL: http://codereview.chromium.org//8921033
------------------------------------------------------------------------
r2365 | srdjan@google.com | 2011-12-13 10:11:28 +0900 (火, 13 12月 2011) | 2 lines

Added type propagation from store to load locals, but only within a sequence node (not across basic block).
Review URL: http://codereview.chromium.org//8919025
------------------------------------------------------------------------
r2351 | srdjan@google.com | 2011-12-13 03:59:20 +0900 (火, 13 12月 2011) | 2 lines

Allocate double temporaries in old space, because they belong there. Canonicalize more double literals.
Review URL: http://codereview.chromium.org//8921012
------------------------------------------------------------------------
r2345 | srdjan@google.com | 2011-12-13 02:24:47 +0900 (火, 13 12月 2011) | 2 lines

Implement two-arguments-check inline cache. Use it first for Smi binary operations.
Review URL: http://codereview.chromium.org//8827015
------------------------------------------------------------------------
r2331 | regis@google.com | 2011-12-10 09:38:09 +0900 (土, 10 12月 2011) | 2 lines

Port jump and call instruction decoding and patching for x64 (2nd try).
Review URL: http://codereview.chromium.org//8898014
------------------------------------------------------------------------
r2330 | regis@google.com | 2011-12-10 08:54:13 +0900 (土, 10 12月 2011) | 2 lines

Fix build breakage (partially revert r2327).
Review URL: http://codereview.chromium.org//8895015
------------------------------------------------------------------------
r2327 | regis@google.com | 2011-12-10 07:46:44 +0900 (土, 10 12月 2011) | 2 lines

Port jump and call instruction decoding and patching for x64.
Review URL: http://codereview.chromium.org//8896017
------------------------------------------------------------------------
r2324 | regis@google.com | 2011-12-10 06:32:14 +0900 (土, 10 12月 2011) | 4 lines

Helper ast node sequences must not wrongly grab ownership of the enclosing
scope (fix issue 736).
Add test.
Review URL: http://codereview.chromium.org//8893008
------------------------------------------------------------------------
r2320 | hausner@google.com | 2011-12-10 04:29:37 +0900 (土, 10 12月 2011) | 4 lines

First debugger API unit test

Add unit test file, expose more debugger functionality in the API.
Review URL: http://codereview.chromium.org//8872049
------------------------------------------------------------------------
r2319 | antonm@google.com | 2011-12-10 03:20:31 +0900 (土, 10 12月 2011) | 7 lines

Properly account for RawObject size.

Recently tags_ field has been added, but visitor hasn't been updated.

Maybe we should provide a helper on RawInstance to access native field
by index and remove code duplication with Instance.NativeFieldAddr.
Review URL: http://codereview.chromium.org//8898002
------------------------------------------------------------------------
r2317 | cshapiro@google.com | 2011-12-10 02:25:44 +0900 (土, 10 12月 2011) | 7 lines

Add an interface for retrieving the value of unsigned 64-bit integers.

With this change, IntegerValue is renamed to IntegerToInt64 for symmetry
with the new IntegerToUint64 interface.  Also uses of UInt64 have been
replaced with Uint64 for naming consistency.

Review URL: http://codereview.chromium.org//8585049
------------------------------------------------------------------------
r2295 | srdjan@google.com | 2011-12-09 10:44:10 +0900 (金, 09 12月 2011) | 2 lines

Fix crash from issue 744: evaluate left first before deopt happens (strict comparison).
Review URL: http://codereview.chromium.org//8873044
------------------------------------------------------------------------
r2292 | cshapiro@google.com | 2011-12-09 08:50:40 +0900 (金, 09 12月 2011) | 3 lines

Use specialized unwrapping methods for reading Double and Bool values.

Review URL: http://codereview.chromium.org//8888031
------------------------------------------------------------------------
r2291 | turnidge@google.com | 2011-12-09 08:38:05 +0900 (金, 09 12月 2011) | 2 lines

Add missing file from last cl.
Review URL: http://codereview.chromium.org//8888032
------------------------------------------------------------------------
r2290 | turnidge@google.com | 2011-12-09 08:35:34 +0900 (金, 09 12月 2011) | 4 lines

Teach the assembler how to generate multi-byte nops.  Teach the
disassembler to understand them.  Use multi-byte nops in Align().  Add
tests.
Review URL: http://codereview.chromium.org//8888020
------------------------------------------------------------------------
r2287 | iposva@google.com | 2011-12-09 08:08:15 +0900 (金, 09 12月 2011) | 2 lines

- Use "#if defined" when checking for DEBUG.
Review URL: http://codereview.chromium.org//8879038
------------------------------------------------------------------------
r2286 | regis@google.com | 2011-12-09 08:00:55 +0900 (金, 09 12月 2011) | 3 lines

Adjust index of type parameters at finalization time (fix issue 718).
Add test.
Review URL: http://codereview.chromium.org//8872037
------------------------------------------------------------------------
r2213 | srdjan@google.com | 2011-12-08 09:47:52 +0900 (木, 08 12月 2011) | 2 lines

Fix for intrinsified Math.sqrt method, added test.
Review URL: http://codereview.chromium.org//8866010
------------------------------------------------------------------------
r2211 | asiva@google.com | 2011-12-08 09:43:06 +0900 (木, 08 12月 2011) | 9 lines

Add a tags field to RawObject so that we can tag objects with certain values,
e.g:
- object is canonical
- object was created from snapshot
etc.

Once we have class Ids implemented the current class_ and flags_ words can be
compressed into a single header word.
Review URL: http://codereview.chromium.org//8827016
------------------------------------------------------------------------
r2209 | asiva@google.com | 2011-12-08 09:23:21 +0900 (木, 08 12月 2011) | 2 lines

Add test to expose bug in initialization of objects with native fields in the inline allocation stub. The tests are skipped as another CL fixes the bug.
Review URL: http://codereview.chromium.org//8875001
------------------------------------------------------------------------
r2208 | regis@google.com | 2011-12-08 09:16:55 +0900 (木, 08 12月 2011) | 2 lines

Fix handling of unresolved upper bounds in factory declarations (issue 721).
Review URL: http://codereview.chromium.org//8862002
------------------------------------------------------------------------
r2207 | regis@google.com | 2011-12-08 09:14:07 +0900 (木, 08 12月 2011) | 2 lines

Fix win32 build.
Review URL: http://codereview.chromium.org//8853002
------------------------------------------------------------------------
r2206 | regis@google.com | 2011-12-08 09:03:08 +0900 (木, 08 12月 2011) | 3 lines

Add 64-bit stubs to call into the runtime and to call native functions.
Fix 64-bit assembler bugs.
Review URL: http://codereview.chromium.org//8818001
------------------------------------------------------------------------
r2202 | asiva@google.com | 2011-12-08 07:40:50 +0900 (木, 08 12月 2011) | 2 lines

Add additional asserts in the snapshot writer/reader code.
Review URL: http://codereview.chromium.org//8868001
------------------------------------------------------------------------
r2198 | hausner@google.com | 2011-12-08 07:13:49 +0900 (木, 08 12月 2011) | 5 lines

First bits of external debugger API

The debugger API is in a separate set of files. Embedders do not have
to include the debug api if they don't need to.
Review URL: http://codereview.chromium.org//8826007
------------------------------------------------------------------------
r2150 | cshapiro@google.com | 2011-12-07 08:08:29 +0900 (水, 07 12月 2011) | 3 lines

Add macros for specifying 64-bit integer literals.

Review URL: http://codereview.chromium.org//8604007
------------------------------------------------------------------------
r2149 | turnidge@google.com | 2011-12-07 08:01:46 +0900 (水, 07 12月 2011) | 4 lines

Use a preallocated StackOverflowException rather than allocating one
while our stack is hurting.  This allows us to get rid of the stack
tweaking which we do in this case.
Review URL: http://codereview.chromium.org//8823001
------------------------------------------------------------------------
r2133 | srdjan@google.com | 2011-12-07 02:47:47 +0900 (水, 07 12月 2011) | 2 lines

Canonicalize TypeArguments.
Review URL: http://codereview.chromium.org//8773026
------------------------------------------------------------------------
r2105 | asiva@google.com | 2011-12-06 09:34:49 +0900 (火, 06 12月 2011) | 8 lines

First step towards generation of application script snapshots
- Introduce 3 kinds of snapshots (full, application script and messages)
- Added a dart API function to be used for generating an application snapshot
  and for loading the script from an application snapshot.

Next step is to introduce special handling in the WriteTo and ReadFrom
snapshot functions for 'kind == Snapshot::kScript'
Review URL: http://codereview.chromium.org//8772061
------------------------------------------------------------------------
r2093 | hausner@google.com | 2011-12-06 06:44:11 +0900 (火, 06 12月 2011) | 2 lines

More fixing linux.
Review URL: http://codereview.chromium.org//8806022
------------------------------------------------------------------------
r2091 | hausner@google.com | 2011-12-06 06:40:44 +0900 (火, 06 12月 2011) | 4 lines

Fix linux build

Mac doesn't care when you compare signed and unsigned values it seems...
Review URL: http://codereview.chromium.org//8803025
------------------------------------------------------------------------
r2089 | hausner@google.com | 2011-12-06 06:11:39 +0900 (火, 06 12月 2011) | 6 lines

Debugger step 2

Add ActivationFrame and StackTrace classes.
Add Breakpoint info: url and line number.
Fix breakpoint stub so breakpoints don't get patched over by PatchStaticCall
Review URL: http://codereview.chromium.org//8775060
------------------------------------------------------------------------
r2085 | regis@google.com | 2011-12-06 04:22:27 +0900 (火, 06 12月 2011) | 2 lines

Support qualified factory names (fix issue 514).
Review URL: http://codereview.chromium.org//8804019
------------------------------------------------------------------------
r2080 | turnidge@google.com | 2011-12-06 02:55:01 +0900 (火, 06 12月 2011) | 3 lines

Add Dart_IsExternalString and Dart_ExternalStringGetPeer to the dart
embedding api.
Review URL: http://codereview.chromium.org//8775039
------------------------------------------------------------------------
r2053 | iposva@google.com | 2011-12-03 14:39:26 +0900 (土, 03 12月 2011) | 2 lines

- Add free list to be used for sweep phase of mark-sweep collector.
Review URL: http://codereview.chromium.org//8787012
------------------------------------------------------------------------
r2002 | srdjan@google.com | 2011-12-02 08:19:59 +0900 (金, 02 12月 2011) | 5 lines

Ongoing renaming of type classes:

TypeArguments -> AbstractTypeArguments
TypeArray -> TypeArguments
Review URL: http://codereview.chromium.org//8776020
------------------------------------------------------------------------
r1999 | asiva@google.com | 2011-12-02 08:04:22 +0900 (金, 02 12月 2011) | 2 lines

Refactor the gypi files to eliminate some redundancy.
Review URL: http://codereview.chromium.org//8772016
------------------------------------------------------------------------
r1992 | srdjan@google.com | 2011-12-02 06:14:48 +0900 (金, 02 12月 2011) | 2 lines

Address Regis' comments, replace AbstractType with Type where possible.
Review URL: http://codereview.chromium.org//8772009
------------------------------------------------------------------------
r1990 | turnidge@google.com | 2011-12-02 04:17:10 +0900 (金, 02 12月 2011) | 15 lines

Add some checking macros:

CHECK_ISOLATE -- make sure that there is a current isolate.
CHECK_NO_ISOLATE -- the opposite.
CHECK_ISOLATE_SCOPE -- make sure that there is a current isolate and it has an API scope.

DARTSCOPE changes to call CHECK_ISOLATE_SCOPE.  If you don't want
that, use DARTSCOPE_NOCHECKS.

Went through all of the DART_EXPORT function and made sure they all
had the appropriate checking.

Rewrite DARTSCOPE a bit to avoid evaluating the macro param multiple
times.
Review URL: http://codereview.chromium.org//8733011
------------------------------------------------------------------------
r1989 | turnidge@google.com | 2011-12-02 03:59:23 +0900 (金, 02 12月 2011) | 2 lines

Add some ::'s to disambiguate calls for the win32 build.
Review URL: http://codereview.chromium.org//8773015
------------------------------------------------------------------------
r1988 | turnidge@google.com | 2011-12-02 03:18:06 +0900 (金, 02 12月 2011) | 2 lines

Stop using void* types in the dart embedding api.
Review URL: http://codereview.chromium.org//8761007
------------------------------------------------------------------------
r1987 | srdjan@google.com | 2011-12-02 01:54:52 +0900 (金, 02 12月 2011) | 10 lines

Renaming type classes as discussed:

Type -> AbstractType
ParameterizedType -> Type

TODO: 

TypeArguments -> AbstractTypeArguments
TypeArray -> TypeArguments
Review URL: http://codereview.chromium.org//8761011
------------------------------------------------------------------------
r1972 | podivilov@google.com | 2011-12-01 20:59:35 +0900 (木, 01 12月 2011) | 5 lines

Introduce Dart_SetVMFlags API function.

It should be possible to set command line arguments without providing isolate init callback.

Review URL: http://codereview.chromium.org//8713012
------------------------------------------------------------------------
r1962 | iposva@google.com | 2011-12-01 11:11:40 +0900 (木, 01 12月 2011) | 2 lines

- Implement a simple old-generation marker.
Review URL: http://codereview.chromium.org//8761006
------------------------------------------------------------------------
r1959 | regis@google.com | 2011-12-01 10:44:01 +0900 (木, 01 12月 2011) | 2 lines

Port object tests to x64.
Review URL: http://codereview.chromium.org//8758012
------------------------------------------------------------------------
r1958 | asiva@google.com | 2011-12-01 09:30:25 +0900 (木, 01 12月 2011) | 4 lines

- Refactor the isolate callback mechanism to also include creation of the
  isolate, this enables creation of isolates using a snapshot
- remove source buffers of corelib, coreimpl-lib and builtin-lib from the binary
Review URL: http://codereview.chromium.org//8673002
------------------------------------------------------------------------
r1955 | regis@google.com | 2011-12-01 08:55:30 +0900 (木, 01 12月 2011) | 3 lines

Disable x64 disassembler under win32.
Add x64 assembler macros.
Review URL: http://codereview.chromium.org//8760015
------------------------------------------------------------------------
r1953 | regis@google.com | 2011-12-01 08:12:46 +0900 (木, 01 12月 2011) | 2 lines

Disassembler for x64.
Review URL: http://codereview.chromium.org//8758005
------------------------------------------------------------------------
r1952 | srdjan@google.com | 2011-12-01 08:10:39 +0900 (木, 01 12月 2011) | 2 lines

Better fix for printing (after discussing it with Ivan and Regis)
Review URL: http://codereview.chromium.org//8761004
------------------------------------------------------------------------
r1951 | regis@google.com | 2011-12-01 07:02:21 +0900 (木, 01 12月 2011) | 2 lines

Initial revision of assembler for x64.
Review URL: http://codereview.chromium.org//8747023
------------------------------------------------------------------------
r1950 | srdjan@google.com | 2011-12-01 06:55:22 +0900 (木, 01 12月 2011) | 2 lines

Fix breakage in printing.
Review URL: http://codereview.chromium.org//8761003
------------------------------------------------------------------------
r1941 | srdjan@google.com | 2011-12-01 06:14:22 +0900 (木, 01 12月 2011) | 2 lines

Use ParametrizedType instead of Type where appropriate. Expand ToCString of type related classes. Do not instantiate abtract classes Type and TypeArguments (e.g., through Type::null());
Review URL: http://codereview.chromium.org//8742028
------------------------------------------------------------------------
r1934 | hausner@google.com | 2011-12-01 03:55:37 +0900 (木, 01 12月 2011) | 4 lines

Properly detect name collisions at library level

Fixing issue 592
Review URL: http://codereview.chromium.org//8724015
------------------------------------------------------------------------
r1929 | hausner@google.com | 2011-12-01 02:10:56 +0900 (木, 01 12月 2011) | 2 lines

Fix linux build.
Review URL: http://codereview.chromium.org//8749007
------------------------------------------------------------------------
r1928 | hausner@google.com | 2011-12-01 02:04:45 +0900 (木, 01 12月 2011) | 9 lines

Very first steps for a debugger

- Introduce Debugger class.
- Each isolate has a debugger object.
- Introduce stubs that can be put in place of static or dynamic
  Dart function calls.
- Very rudimentary command line option to place a breakpoint
  at the beginning of a function.
Review URL: http://codereview.chromium.org//8687037
------------------------------------------------------------------------
r1911 | srdjan@google.com | 2011-11-30 10:58:25 +0900 (水, 30 11月 2011) | 2 lines

Inline instance of test with List<Dynamic>.
Review URL: http://codereview.chromium.org//8686016
------------------------------------------------------------------------
r1908 | turnidge@google.com | 2011-11-30 07:11:52 +0900 (水, 30 11月 2011) | 2 lines

Fix checked mode test.
Review URL: http://codereview.chromium.org//8735006
------------------------------------------------------------------------
r1907 | turnidge@google.com | 2011-11-30 07:06:16 +0900 (水, 30 11月 2011) | 2 lines

Fix the linux build.
Review URL: http://codereview.chromium.org//8724008
------------------------------------------------------------------------
r1906 | turnidge@google.com | 2011-11-30 06:55:13 +0900 (水, 30 11月 2011) | 45 lines

Add a mid-sized integration test for the Dart Embedding Api which
demonstrates how to create a custom isolate abstraction.  In this
test, we use an event queue to share a single thread among our custom
isolates.

Add a callback which allows embedders to see when a port is created.
Not sure if I should keep this or not.

New apis:
  Dart_CreatePort() -- allocates a port id and adds a port->isolate mapping.
  Dart_IsolateHasActivePorts() -- does the current isolate have open ports?
  (this name a bit awkward...)

Bail out of PortMap::ClosePorts() early if there are no open ports.
This suppresses calls to the close_port_callback when there are no
open ports.

Use DART_CHECK_VALID to provide better error output when the test lib
has errors.

-------------------------
Sample output of the test:

-- (isolate=0x815600) Constructing isolate
-- Enter: CustomIsolateImpl_start --
-- Adding port (7111) -> isolate (0x830800) --
-- Adding StartEvent to queue --
-- Exit: CustomIsolateImpl_start --
-- Adding port (7112) -> isolate (0x815600) --
-- Posting message dest(7111) reply(0) --
-- Adding MessageEvent to queue --
-- Starting event loop --
>> StartEvent with isolate(0x830800)--
-- (isolate=0x830800) Running isolateMain
$$ MessageEvent with dest port 7111--
-- (isolate=0x830800) Received: 42
-- Posting message dest(7112) reply(0) --
-- Adding MessageEvent to queue --
$$ MessageEvent with dest port 7112--
-- Closing port (7112) --
-- Adding ShutdownEvent to queue --
-- (isolate=0x815600) Received: 43
<< ShutdownEvent with isolate(0x815600)--
-- Finished event loop --
Review URL: http://codereview.chromium.org//8588040
------------------------------------------------------------------------
r1904 | turnidge@google.com | 2011-11-30 06:41:00 +0900 (水, 30 11月 2011) | 8 lines

Add Dart API scoping around the call to Dart_HandleMessage.  This
allows us to print the error message in the case that there is an uncaught
exception while handling an inter-isolate message.


Add a couple of unit tests that exercise
Dart_RunLoop/Dart_HandleMessage a bit.
Review URL: http://codereview.chromium.org//8659012
------------------------------------------------------------------------
r1898 | regis@google.com | 2011-11-30 02:00:16 +0900 (水, 30 11月 2011) | 6 lines

Update function type checking in VM after spec change (issue 444):
- the return types must be covariant or contravariant (an earlier version of the
  guide specified contravariance only).
- the names of optional parameters must match in the same order (an earlier
  version of the spec specified that any subset was allowed, no order required).
Review URL: http://codereview.chromium.org//8664015
------------------------------------------------------------------------
r1883 | iposva@google.com | 2011-11-29 09:26:04 +0900 (火, 29 11月 2011) | 2 lines

- Ignore marking bits when visiting pointers.
Review URL: http://codereview.chromium.org//8727015
------------------------------------------------------------------------
r1882 | iposva@google.com | 2011-11-29 08:44:08 +0900 (火, 29 11月 2011) | 2 lines

- Add support for marking bits in the object header.
Review URL: http://codereview.chromium.org//8728016
------------------------------------------------------------------------
r1881 | srdjan@google.com | 2011-11-29 08:38:39 +0900 (火, 29 11月 2011) | 2 lines

More --use_slow_path tests, add that VMOption to two tests.
Review URL: http://codereview.chromium.org//8725009
------------------------------------------------------------------------
r1873 | regis@google.com | 2011-11-29 04:08:25 +0900 (火, 29 11月 2011) | 2 lines

Fix slow path for allocation of implicit closures (issue 613).
Review URL: http://codereview.chromium.org//8664005
------------------------------------------------------------------------
r1866 | srdjan@google.com | 2011-11-29 02:08:38 +0900 (火, 29 11月 2011) | 2 lines

Add flag --use_slow_path to test slow paths. Started with implementation for implicit closure allocation.
Review URL: http://codereview.chromium.org//8713015
------------------------------------------------------------------------
r1829 | srdjan@google.com | 2011-11-24 10:14:15 +0900 (木, 24 11月 2011) | 2 lines

Move more nodes to the optimizing code generator.
Review URL: http://codereview.chromium.org//8678033
------------------------------------------------------------------------
r1827 | regis@google.com | 2011-11-24 09:26:18 +0900 (木, 24 11月 2011) | 4 lines

Optimize type checks of list and map literals.
Introduce an ast node for explicit 'assignable to' type checks.
Remove Instance::Is() helper.
Review URL: http://codereview.chromium.org//8678031
------------------------------------------------------------------------
r1822 | hausner@google.com | 2011-11-24 07:39:22 +0900 (木, 24 11月 2011) | 4 lines

Fix even more builds

My code is apparently breaking everywhere except on the Mac...
Review URL: http://codereview.chromium.org//8680031
------------------------------------------------------------------------
r1820 | hausner@google.com | 2011-11-24 07:34:14 +0900 (木, 24 11月 2011) | 4 lines

Fix Windows build

Write once, fix everywhere...
Review URL: http://codereview.chromium.org//8680029
------------------------------------------------------------------------
r1819 | hausner@google.com | 2011-11-24 07:31:09 +0900 (木, 24 11月 2011) | 23 lines

Allow optional initializing formals again

After removing optional initializing formal parameters from the VM
yesterday, the language team decided that they should be allowed
and made usable.

- The name of an optional initializing formal is the name of
  the field it initializes.
- The parameter is only visible at the call site of the constructor,
  to name the parameter.
- The parameter is NOT visible in the constructor's initializer list
  and body.

class A {
  A([this.x = 10]);
  A.bad([this.x = 10]) : y = x;  // Error: parameter x not in scope
  A.ok([this.x = 10]) { print(x); } // Refers to field x, not parameter x.
  var x, y; 
}

o = new A(x: 50);  // o.x == 50.
o = new A();       // o.x == 10.
Review URL: http://codereview.chromium.org//8682025
------------------------------------------------------------------------
r1814 | regis@google.com | 2011-11-24 05:14:27 +0900 (木, 24 11月 2011) | 4 lines

Fix build breakage.
Check type of list and map literals in checked mode only, and with an
"assignable to" test rather than a "instance of" test.
Review URL: http://codereview.chromium.org//8677019
------------------------------------------------------------------------
r1813 | srdjan@google.com | 2011-11-24 05:09:11 +0900 (木, 24 11月 2011) | 2 lines

Do not type checks at returns of implicit getter.
Review URL: http://codereview.chromium.org//8678020
------------------------------------------------------------------------
r1811 | srdjan@google.com | 2011-11-24 04:48:25 +0900 (木, 24 11月 2011) | 2 lines

Fix bug 557: Disallow user side allocation of ImmutableArray. Also added "instantiation-checks" for some other VM-internal classes.
Review URL: http://codereview.chromium.org//8648003
------------------------------------------------------------------------
r1809 | regis@google.com | 2011-11-24 04:34:23 +0900 (木, 24 11月 2011) | 6 lines

Implement type checking of list literals (issue 220).
Remove expose_core_impl flag.
Add tests.
Fix tests.
Cleanup type checking of map literals.
Review URL: http://codereview.chromium.org//8676001
------------------------------------------------------------------------
r1774 | srdjan@google.com | 2011-11-23 10:37:18 +0900 (水, 23 11月 2011) | 2 lines

Fix crash reported by Florian.
Review URL: http://codereview.chromium.org//8665008
------------------------------------------------------------------------
r1770 | srdjan@google.com | 2011-11-23 09:36:36 +0900 (水, 23 11月 2011) | 2 lines

Factor out code part for instanceof, and hardwire "is bool" check.
Review URL: http://codereview.chromium.org//8592008
------------------------------------------------------------------------
r1764 | regis@google.com | 2011-11-23 06:42:07 +0900 (水, 23 11月 2011) | 6 lines

Implement type checking of map literals (issue 221).
Support proper syntax for map literals (at most one type argument is allowed)
and give a warning when legacy syntax is used.
Add tests.
Fix tests.
Review URL: http://codereview.chromium.org//8637018
------------------------------------------------------------------------
r1759 | turnidge@google.com | 2011-11-23 04:42:38 +0900 (水, 23 11月 2011) | 2 lines

Reorder the functions in dart_api_impl.cc to match dart_api.h.
Review URL: http://codereview.chromium.org//8636021
------------------------------------------------------------------------
r1755 | hausner@google.com | 2011-11-23 04:09:54 +0900 (水, 23 11月 2011) | 6 lines

Initializing formals can't be optional parameters

Add new error message to VM compiler.
Remove all optional initializing formals from library
and tests.
Review URL: http://codereview.chromium.org//8619008
------------------------------------------------------------------------
r1730 | ager@google.com | 2011-11-22 17:34:16 +0900 (火, 22 11月 2011) | 6 lines

Use relative path to cygwin on Windows for the runtime
build.

The DEPTH variable is apparently not stable across a 
full checkout or a checkout with only the runtime.
Review URL: http://codereview.chromium.org//8636006
------------------------------------------------------------------------
r1728 | asiva@google.com | 2011-11-22 10:22:07 +0900 (火, 22 11月 2011) | 3 lines

Check for presence of native resolver in library for classes which have native fields only in regular run mode not while generating snapshots.
While generating snapshots the native resolver is not set and would trigger this error.
Review URL: http://codereview.chromium.org//8618011
------------------------------------------------------------------------
r1723 | asiva@google.com | 2011-11-22 08:16:32 +0900 (火, 22 11月 2011) | 2 lines

Fix issue-545 IsObjectStoreTypeId was not updated correctly after new types (StringInterface and ListInterface) were added.
Review URL: http://codereview.chromium.org//8623003
------------------------------------------------------------------------
r1720 | asiva@google.com | 2011-11-22 07:17:41 +0900 (火, 22 11月 2011) | 4 lines

Library prefix should be an identifier
(we don't yet check that it is not a reserved keyword, that can be done only
after we are able to store the keyword table as a singleton in the vm isolate)
Review URL: http://codereview.chromium.org//8500006
------------------------------------------------------------------------
r1718 | asiva@google.com | 2011-11-22 06:07:40 +0900 (火, 22 11月 2011) | 2 lines

Make the implicit constructor private for zone, handlescope and nohandlescope classes.
Review URL: http://codereview.chromium.org//8562008
------------------------------------------------------------------------
r1716 | asiva@google.com | 2011-11-22 04:47:32 +0900 (火, 22 11月 2011) | 2 lines

Fix signature for external string API methods.
Review URL: http://codereview.chromium.org//8527027
------------------------------------------------------------------------
r1715 | regis@google.com | 2011-11-22 04:35:53 +0900 (火, 22 11月 2011) | 2 lines

null is an instance of Dynamic (fix issue 443).
Review URL: http://codereview.chromium.org//8592004
------------------------------------------------------------------------
r1712 | turnidge@google.com | 2011-11-22 04:09:51 +0900 (火, 22 11月 2011) | 6 lines

Start using UNWRAP_NONNULL to check inputs to dart api functions.

Improve a few error messages.

Lots of testing.
Review URL: http://codereview.chromium.org//8528018
------------------------------------------------------------------------
r1711 | regis@google.com | 2011-11-22 02:47:49 +0900 (火, 22 11月 2011) | 3 lines

Add missing argument to HANDLESCOPE().
Siva is investigating why this is only failing now and only on Win32.
Review URL: http://codereview.chromium.org//8547013
------------------------------------------------------------------------
r1708 | regis@google.com | 2011-11-22 02:06:52 +0900 (火, 22 11月 2011) | 6 lines

Update comments in core lib showing proper factory syntax.
Improve error messages reported from class finalizer.
Fix parser error reporting to be thread safe.
Reformat type error and failed assertion messages to be consistent.
Add one more new factory syntax test.
Review URL: http://codereview.chromium.org//8549033
------------------------------------------------------------------------
r1706 | ager@google.com | 2011-11-22 00:47:21 +0900 (火, 22 11月 2011) | 10 lines

Fix gclient runhooks on Windows for a full checkout.

The problem was incorrect setting of and use of the DEPTH gyp
variable.

R=whesse@google.com
BUG=496
TEST=

Review URL: http://codereview.chromium.org//8472007
------------------------------------------------------------------------
r1679 | cshapiro@google.com | 2011-11-19 09:33:23 +0900 (土, 19 11月 2011) | 13 lines

Implement external strings.

External strings refer to character data in memory located outside of
the managed heap.  This memory is considered to be owned by the
embedding application.  To help with the management of external
memory, the virtual machine allows the embedding application to
register for a "death notice" when an external string object is
garbage collected.  A death notice takes the form of a callback
invoked by the garbage collector with the address of the external
memory.  Death notices will be implemented in the garbage collector by
future commit.

Review URL: http://codereview.chromium.org//8383029
------------------------------------------------------------------------
r1676 | srdjan@google.com | 2011-11-19 07:49:52 +0900 (土, 19 11月 2011) | 2 lines

Print uninstantiated type with --trace_type_checks for instanceof (easier to identify what caused calls to runtime).
Review URL: http://codereview.chromium.org//8598023
------------------------------------------------------------------------
r1671 | srdjan@google.com | 2011-11-19 05:36:42 +0900 (土, 19 11月 2011) | 2 lines

Do not allow allocation of FallThroughError and AssertionError by the user.
Review URL: http://codereview.chromium.org//8569013
------------------------------------------------------------------------
r1664 | hausner@google.com | 2011-11-19 02:50:32 +0900 (土, 19 11月 2011) | 17 lines

Better error handling when scanning library tags

Fixes Issue 516 
http://code.google.com/p/dart/issues/detail?id=516

#!/dart_bin
##library("foo");

void main() {
  print("goodbye");
}


Errors encountered while loading script: '/private/tmp/t.dart': Error: line 2 pos 2: Unrecognized library tag
##library("foo");
 ^
Review URL: http://codereview.chromium.org//8586052
------------------------------------------------------------------------
r1662 | regis@google.com | 2011-11-19 02:47:12 +0900 (土, 19 11月 2011) | 3 lines

Fix code generation issue with new factory syntax.
Convert VM core library to new factory syntax.
Review URL: http://codereview.chromium.org//8602004
------------------------------------------------------------------------
r1643 | asiva@google.com | 2011-11-18 09:09:13 +0900 (金, 18 11月 2011) | 4 lines

Change loaded_ flag in RawLibrary to load_state_ in order to register different
states of the load process.
This state can then be used to ensure we report errors on duplicate loads.
Review URL: http://codereview.chromium.org//8520030
------------------------------------------------------------------------
r1633 | regis@google.com | 2011-11-18 06:42:55 +0900 (金, 18 11月 2011) | 5 lines

Fix parsing of factory calls (issue 500).
Add test.
Fix test.
Adjust co19 status file.
Review URL: http://codereview.chromium.org//8591025
------------------------------------------------------------------------
r1629 | asiva@google.com | 2011-11-18 06:04:43 +0900 (金, 18 11月 2011) | 5 lines

Implement automatic loading of dart:core_native_fields library
with predefined classes having native fields.
Classes that need native fields in them can import this library and
extend these predefined classes.
Review URL: http://codereview.chromium.org//8537023
------------------------------------------------------------------------
r1626 | asiva@google.com | 2011-11-18 05:53:35 +0900 (金, 18 11月 2011) | 3 lines

Fix assertion during throwing an exception.
We could be throwing an exception from a stub frame and not have any dart frames at all, just treat the stack trace as empty in this case and go with an unhandled exception.
Review URL: http://codereview.chromium.org//8587041
------------------------------------------------------------------------
r1621 | hausner@google.com | 2011-11-18 03:53:16 +0900 (金, 18 11月 2011) | 2 lines

Will be used by the debugger to find static calls in Dart code.
Review URL: http://codereview.chromium.org//8588014
------------------------------------------------------------------------
r1605 | iposva@google.com | 2011-11-17 17:41:42 +0900 (木, 17 11月 2011) | 2 lines

- Allocate instantiated type arguments in new gen.
Review URL: http://codereview.chromium.org//8588027
------------------------------------------------------------------------
r1604 | ager@google.com | 2011-11-17 15:57:39 +0900 (木, 17 11月 2011) | 10 lines

Test for immutable Lists in ListSet API methods.

Using the file and socket API it was possible to modify immutable
arrays.

R=sgjesse@google.com,turnidge@google.com
BUG=
TEST=

Review URL: http://codereview.chromium.org//8575004
------------------------------------------------------------------------
r1601 | cshapiro@google.com | 2011-11-17 12:18:52 +0900 (木, 17 11月 2011) | 3 lines

Add an external array type to support typed arrays.

Review URL: http://codereview.chromium.org//8429027
------------------------------------------------------------------------
r1595 | regis@google.com | 2011-11-17 08:49:04 +0900 (木, 17 11月 2011) | 17 lines

Support correct factory syntax in the VM as decribed in the spec.
Change the default value of --silent_warnings from true to false, so that
warnings are visible when legacy factory syntax is used.

In order to facilitate transition of libraries and user programs, legacy factory
syntax is still supported by 2 workarounds, but warnings are printed.

The first workaround allows the factory clause to omit the type
parameter list, which otherwise has to match exactly with the list of
type parameters in the factory class declaration.

The second workaround allows a factory method to omit the type
parameter list. In that case, the type parameter list of the enclosing
class is used instead.

Workarounds will be removed to enforce correct factory syntax at a later time.
Review URL: http://codereview.chromium.org//8585004
------------------------------------------------------------------------
r1593 | srdjan@google.com | 2011-11-17 08:38:05 +0900 (木, 17 11月 2011) | 2 lines

Better tracing of deoptimization (added a reason id and printing of source). Fix a bug with excessive deoptimization for null receiver -- caused by  (null).toString().
Review URL: http://codereview.chromium.org//8588002
------------------------------------------------------------------------
r1589 | srdjan@google.com | 2011-11-17 07:52:56 +0900 (木, 17 11月 2011) | 2 lines

Fix integer's % operation; fix parsing of doubles; update co19 tests.
Review URL: http://codereview.chromium.org//8468025
------------------------------------------------------------------------
r1585 | asiva@google.com | 2011-11-17 06:12:38 +0900 (木, 17 11月 2011) | 2 lines

Report an error when Dart_ListGetAsBytes does not get an integer list.
Review URL: http://codereview.chromium.org//8523036
------------------------------------------------------------------------
r1550 | asiva@google.com | 2011-11-16 06:19:27 +0900 (水, 16 11月 2011) | 2 lines

Support command line parameters to specify a url to file name mapping. This is used during snapshot generation so that a URL is mapped to a physical file name.
Review URL: http://codereview.chromium.org//8439061
------------------------------------------------------------------------
r1539 | srdjan@google.com | 2011-11-16 03:02:12 +0900 (水, 16 11月 2011) | 5 lines

Fix throwing ObjectNotClosure instead of null exception if closure is null.
Fix integer compareTo if other is a double NaN.
Fix Expect.stringEqual to accept null as arguments.
Update co19 status file.
Review URL: http://codereview.chromium.org//8528050
------------------------------------------------------------------------
r1538 | iposva@google.com | 2011-11-16 02:47:21 +0900 (水, 16 11月 2011) | 4 lines

- Avoid allocating variable length arrays on the stack.
- Fix C++ warning about copying vtables.
- Use correct delete for PortMap entries.
Review URL: http://codereview.chromium.org//8555024
------------------------------------------------------------------------
r1522 | cshapiro@google.com | 2011-11-15 07:25:07 +0900 (火, 15 11月 2011) | 3 lines

Wait on the monotonic clock to guard against changes to the system clock.

Review URL: http://codereview.chromium.org//8463032
------------------------------------------------------------------------
r1517 | cshapiro@google.com | 2011-11-15 03:03:02 +0900 (火, 15 11月 2011) | 3 lines

Use a common subroutine for the snapshot reading and writing of strings.

Review URL: http://codereview.chromium.org//8340017
------------------------------------------------------------------------
r1499 | asiva@google.com | 2011-11-12 14:55:22 +0900 (土, 12 11月 2011) | 2 lines

Changes to pass the current isolate to all runtime and native calls.
Review URL: http://codereview.chromium.org//8528010
------------------------------------------------------------------------
r1495 | cshapiro@google.com | 2011-11-12 10:54:18 +0900 (土, 12 11月 2011) | 3 lines

Add methods for creating Bigint objects from unsigned 64-bit integers.

Review URL: http://codereview.chromium.org//8539034
------------------------------------------------------------------------
r1493 | hausner@google.com | 2011-11-12 09:45:17 +0900 (土, 12 11月 2011) | 14 lines

More info in disassembled code

Print out first 5 elements of an array object, rather than
just 'Array'. This helps in particular in disassembled
method and stub calls which now print the content of the
IC cache and ArgumentsDescriptor arrays. E.g.:

0x7404a5    ff7508            push [ebp+0x8]
0x7404a8    ff750c            push [ebp+0xc]
0x7404ab    b9012f7000        mov ecx,0x702f01  Array[bitAndFromInteger, 1, null, null]
0x7404b0    bafd050003        mov edx,0x30005fd  Array[2, 2, null]
0x7404b5    e8b6fcffff        call 0x740170  [stub: InlineCache]
0x7404ba    83c408            add esp,0x8
Review URL: http://codereview.chromium.org//8491061
------------------------------------------------------------------------
r1488 | hausner@google.com | 2011-11-12 09:10:28 +0900 (土, 12 11月 2011) | 2 lines

Nix obsolete function prototype
Review URL: http://codereview.chromium.org//8536038
------------------------------------------------------------------------
r1479 | srdjan@google.com | 2011-11-12 07:23:45 +0900 (土, 12 11月 2011) | 3 lines

Stop building blind: report errors with factories and parametrized types.
Enable test. This CL expects the frog/leg changes to be submitted first.
Review URL: http://codereview.chromium.org//8511070
------------------------------------------------------------------------
r1475 | regis@google.com | 2011-11-12 06:38:49 +0900 (土, 12 11月 2011) | 2 lines

Second attempt at finalizing all classes in the VM (fix issue 364).
Review URL: http://codereview.chromium.org//8491055
------------------------------------------------------------------------
r1470 | turnidge@google.com | 2011-11-12 04:31:04 +0900 (土, 12 11月 2011) | 37 lines

Deal with unhandled exceptions the same way in all Dart api functions.

--

Terminology change: invalid handles are now called error handles.

Unhandled exceptions used to be a kind of valid handle.  Now they are
a kind of error handle.

For the Dart_Invoke* functions, this means that the standard
error-checking blob drops from two tests to one test and is
harder to mess up.

Many other Dart api functions (Dart_ToString, for example) previously
dealt with unhandled exceptions by turning them into terse error
messages.  Now these functions preserve information about the
exceptions and generate better error messages.

Changed Dart_HandleMessage to return success/failure.  It seemed to fit.

--

Details:

Dart_IsValid becomes Dart_IsError (negated sense).

Dart_GetError now knows how to print a stack trace semi-nicely.

Dart_ExceptionOccurred -> Dart_IsUnhandledException.

Renamed ApiFailure class to ApiError to fit better.

ApiError now has a "data" pointer that points to either an error
message string or to an unhandled exception object.

Documentation changes aplenty.
Review URL: http://codereview.chromium.org//8501034
------------------------------------------------------------------------
r1469 | srdjan@google.com | 2011-11-12 03:52:53 +0900 (土, 12 11月 2011) | 5 lines

Giving up on the change to report errors with factories and generic types.
This means that you will continue to have crashes in Debug mode, but you will be able to "run" in Release mode. Best solution is to get rid of generic types in Link until factories and generic types have been fully implemented. Until then we do not know what can happen when running in release mode.

Still trying to figure out how to test frog and leg correctly.
Review URL: http://codereview.chromium.org//8540013
------------------------------------------------------------------------
r1464 | srdjan@google.com | 2011-11-12 02:04:00 +0900 (土, 12 11月 2011) | 6 lines

Require legacy form of type parameters in factories and report errors if a factory class does not have a required parametrized type (fixes crashes in VM). Fix frog code, however, there are frogs problem with --compileall:

leg/util/link_implementation.dart:38:12: error: wrong number of arguments, expected 0 but found 2
    return new Link<T>(element, this);
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
Review URL: http://codereview.chromium.org//8515024
------------------------------------------------------------------------
r1427 | asiva@google.com | 2011-11-11 06:08:18 +0900 (金, 11 11月 2011) | 4 lines

Cache isolate in the StackTrace object to that we don't call
Isolate::Current in the destructor, HandleScope and Zone.
TBR=iposva (already reviewed change on other client).
Review URL: http://codereview.chromium.org//8523013
------------------------------------------------------------------------
r1423 | turnidge@google.com | 2011-11-11 04:48:55 +0900 (金, 11 11月 2011) | 2 lines

Windows produces different output for __FUNCTION__.  Canonicalize.
Review URL: http://codereview.chromium.org//8524006
------------------------------------------------------------------------
r1420 | turnidge@google.com | 2011-11-11 04:34:54 +0900 (金, 11 11月 2011) | 2 lines

Try __func__ -> __FUNCTION__
Review URL: http://codereview.chromium.org//8515007
------------------------------------------------------------------------
r1419 | srdjan@google.com | 2011-11-11 04:33:25 +0900 (金, 11 11月 2011) | 2 lines

Intrinsify StringBase.isEmpty and inline StringBase.get:length.
Review URL: http://codereview.chromium.org//8526005
------------------------------------------------------------------------
r1418 | turnidge@google.com | 2011-11-11 04:29:02 +0900 (金, 11 11月 2011) | 2 lines

Give up on using va_copy for now and get the build working.
Review URL: http://codereview.chromium.org//8469004
------------------------------------------------------------------------
r1416 | turnidge@google.com | 2011-11-11 04:18:25 +0900 (金, 11 11月 2011) | 2 lines

Include <stdarg.h>
Review URL: http://codereview.chromium.org//8524004
------------------------------------------------------------------------
r1415 | turnidge@google.com | 2011-11-11 04:10:53 +0900 (金, 11 11月 2011) | 8 lines

Here's a template for how I plan on doing error-checking on inputs for
dart api functions.

Any comments before I change everything?

Any way I could get away without creating the extra Object handle by
doing sneaky tricks?
Review URL: http://codereview.chromium.org//8507035
------------------------------------------------------------------------
r1411 | srdjan@google.com | 2011-11-11 03:04:42 +0900 (金, 11 11月 2011) | 2 lines

Implement %= and assign a couple of tests.
Review URL: http://codereview.chromium.org//8509032
------------------------------------------------------------------------
r1408 | srdjan@google.com | 2011-11-11 02:28:11 +0900 (金, 11 11月 2011) | 2 lines

For instanceof inline check against right hand class id possible and interface String for OneByteString (positive checks only). Improves frog runtime by about 20%. Future work will be based on collecting types and using that data in optimized code. Add tracing of instance of type checks.
Review URL: http://codereview.chromium.org//8508035
------------------------------------------------------------------------
r1382 | regis@google.com | 2011-11-10 10:39:06 +0900 (木, 10 11月 2011) | 2 lines

Revert r1380 that is breaking frog.
Review URL: http://codereview.chromium.org//8509031
------------------------------------------------------------------------
r1380 | regis@google.com | 2011-11-10 08:33:48 +0900 (木, 10 11月 2011) | 2 lines

Finalize all classes (fix issue 364).
Review URL: http://codereview.chromium.org//8506001
------------------------------------------------------------------------
r1373 | srdjan@google.com | 2011-11-10 07:27:43 +0900 (木, 10 11月 2011) | 2 lines

Update tests, fix printing of doubles.
Review URL: http://codereview.chromium.org//8505026
------------------------------------------------------------------------
r1372 | srdjan@google.com | 2011-11-10 06:36:32 +0900 (木, 10 11月 2011) | 2 lines

Add type check tracing (--trace_type_checks). Inline type checks with class types that have only Dynamic type arguments (or none) and with List<Dynamic> interface.
Review URL: http://codereview.chromium.org//8503034
------------------------------------------------------------------------
r1360 | srdjan@google.com | 2011-11-10 01:25:23 +0900 (木, 10 11月 2011) | 2 lines

Fix crash when running with --report_invocation_count.
Review URL: http://codereview.chromium.org//8497032
------------------------------------------------------------------------
r1329 | srdjan@google.com | 2011-11-09 06:36:31 +0900 (水, 09 11月 2011) | 2 lines

Runtime type checking should be skipped for Object as destination type.
Review URL: http://codereview.chromium.org//8503028
------------------------------------------------------------------------
r1327 | turnidge@google.com | 2011-11-09 04:38:58 +0900 (水, 09 11月 2011) | 2 lines

Turn off ObjectEquals test for x64.
Review URL: http://codereview.chromium.org//8497020
------------------------------------------------------------------------
r1326 | turnidge@google.com | 2011-11-09 04:18:22 +0900 (水, 09 11月 2011) | 13 lines

Renaming:

Dart_ObjectToString -> Dart_ToString
Dart_Objects_Equal -> Dart_ObjectEquals
Dart_IsInstanceOf -> Dart_ObjectIsType
Dart_ReThrowException -> Dart_RethrowException

Added:

Dart_IsSame: === operation

Added a couple of tests.
Review URL: http://codereview.chromium.org//8490016
------------------------------------------------------------------------
r1285 | antonm@google.com | 2011-11-08 16:00:44 +0900 (火, 08 11月 2011) | 2 lines

Bump stack size for pure Dart isolates.
Review URL: http://codereview.chromium.org//8495007
------------------------------------------------------------------------
r1278 | turnidge@google.com | 2011-11-08 10:11:23 +0900 (火, 08 11月 2011) | 2 lines

Fix the build.
Review URL: http://codereview.chromium.org//8495001
------------------------------------------------------------------------
r1276 | turnidge@google.com | 2011-11-08 09:12:59 +0900 (火, 08 11月 2011) | 10 lines

Allow printf-style arguments for Dart_Error and Api::Error.

Convert one error message to use the new facility for testing
purposes.  The rest of the errors will be improved in follow-on
changes.

Add tests.

Minor comment fixes in dart_api_impl.h.
Review URL: http://codereview.chromium.org//8492015
------------------------------------------------------------------------
r1273 | hausner@google.com | 2011-11-08 07:36:28 +0900 (火, 08 11月 2011) | 4 lines

Capturing for loop variables correctly

Re-introduce a "fresh copy" of the for loop variable(s) in each iteration. Adding a minimal test to check that closures capture the value of the particular loop iteration. 
Review URL: http://codereview.chromium.org//8490019
------------------------------------------------------------------------
r1230 | turnidge@google.com | 2011-11-05 09:09:36 +0900 (土, 05 11月 2011) | 8 lines

Add Dart_Null, Dart_True, and Dart_False.

Fix Dart_NewPersistentHandle so it won't break if passed one of these
persistent handles.

Reviewer: Should I document that these new functions return a
persistent handle?
Review URL: http://codereview.chromium.org//8446009
------------------------------------------------------------------------
r1229 | cshapiro@google.com | 2011-11-05 08:41:58 +0900 (土, 05 11月 2011) | 3 lines

Allow allocation of four byte strings through the Dart API.

Review URL: http://codereview.chromium.org//8474014
------------------------------------------------------------------------
r1226 | srdjan@google.com | 2011-11-05 07:51:19 +0900 (土, 05 11月 2011) | 2 lines

Emit node id at every call to runtime.
Review URL: http://codereview.chromium.org//8475013
------------------------------------------------------------------------
r1225 | asiva@google.com | 2011-11-05 07:08:13 +0900 (土, 05 11月 2011) | 3 lines

- Fix the snapshot generation python script to return an error code when snapshot generation fails and print the error message.
- Split isolate creation into CreateIsolate and InitializeIsolate so that we don't get SEGVs when there is a failure compiling the corelib dart sources during the bootstrap process
Review URL: http://codereview.chromium.org//8334031
------------------------------------------------------------------------
r1220 | srdjan@google.com | 2011-11-05 05:10:23 +0900 (土, 05 11月 2011) | 2 lines

Fix pc descriptor emission for skipped unary oepration +. Eliminates last co19 crash.
Review URL: http://codereview.chromium.org//8479006
------------------------------------------------------------------------
r1208 | hausner@google.com | 2011-11-05 02:04:40 +0900 (土, 05 11月 2011) | 4 lines

Address Regis' review feedback

TBR
Review URL: http://codereview.chromium.org//8475005
------------------------------------------------------------------------
r1205 | srdjan@google.com | 2011-11-05 01:30:29 +0900 (土, 05 11月 2011) | 2 lines

Fix more co19 crashes. Introduce GET_NATIVE_ARGUMENT that throws an illegal argument exception if the native argument is of incorrect type.
Review URL: http://codereview.chromium.org//8476002
------------------------------------------------------------------------
r1201 | hausner@google.com | 2011-11-05 00:58:55 +0900 (土, 05 11月 2011) | 4 lines

Experimental version without native constructor support

The semantics of native constructors are not really clear. Instead of a native constructor, write a regular Dart constructor that calls a native function in the constructor body instead.
Review URL: http://codereview.chromium.org//8450016
------------------------------------------------------------------------
r1195 | ager@google.com | 2011-11-04 21:25:53 +0900 (金, 04 11月 2011) | 6 lines

Renaming Array -> List in the VM API.

BUG=
TEST=

Review URL: http://codereview.chromium.org//8372094
------------------------------------------------------------------------
r1173 | srdjan@google.com | 2011-11-04 07:31:32 +0900 (金, 04 11月 2011) | 4 lines

Fixes to co19 crashes:
- Null is a valid exception object.
- Throw exception in array copy.
Review URL: http://codereview.chromium.org//8437106
------------------------------------------------------------------------
r1172 | hausner@google.com | 2011-11-04 07:29:57 +0900 (金, 04 11月 2011) | 5 lines

Separating constructor parsing from function parsing

Make parsing functions and constructors more readable by separating
the two into disjoint functions.
Review URL: http://codereview.chromium.org//8417056
------------------------------------------------------------------------
r1167 | srdjan@google.com | 2011-11-04 06:45:00 +0900 (金, 04 11月 2011) | 2 lines

Fix issue 5564152 (VM crash): stack at exit of method was incorrect. Smi equality with Mint was calling operator ==, the result was pushed instead of evaluated to either push a boolean object or to jump to a label. 
Review URL: http://codereview.chromium.org//8451010
------------------------------------------------------------------------
r1161 | hausner@google.com | 2011-11-04 05:07:35 +0900 (金, 04 11月 2011) | 5 lines

No returns allowed in constructors

Add compiler error message when a constructor explicitly returns a
value. Fixes bug/issue 224.
Review URL: http://codereview.chromium.org//8450009
------------------------------------------------------------------------
r1159 | srdjan@google.com | 2011-11-04 03:37:44 +0900 (金, 04 11月 2011) | 2 lines

Restructure instance setter and finish the last 1/3 of increment instance field optimization.
Review URL: http://codereview.chromium.org//8439059
------------------------------------------------------------------------
r1156 | srdjan@google.com | 2011-11-04 03:03:39 +0900 (金, 04 11月 2011) | 2 lines

Fix issue: 5427703 (compareTo), fix parsing of -0.0.
Review URL: http://codereview.chromium.org//8430037
------------------------------------------------------------------------
r1130 | hausner@google.com | 2011-11-03 09:36:27 +0900 (木, 03 11月 2011) | 5 lines

Fix problem with named arguments in constructors

When generating the implicit super call to the body, the argument
names have to be duplicated from the implicit initializer call.
Review URL: http://codereview.chromium.org//8386065
------------------------------------------------------------------------
r1120 | srdjan@google.com | 2011-11-03 05:42:23 +0900 (木, 03 11月 2011) | 2 lines

Intrinsify String.charCodeAt, String.length and String.hashCode. Improves frog performance by 2x.
Review URL: http://codereview.chromium.org//8440051
------------------------------------------------------------------------
r1102 | hausner@google.com | 2011-11-03 02:19:15 +0900 (木, 03 11月 2011) | 12 lines

Two-phase constructors

This CL fixes the initializer evaluation order and brings the VM fully up to spec.

Constructors are executed in two phases: the initializer phase and the constructor body phase. An additional implicit parameter tells the constructor code whether to execute the initializer list or the body (or both).

If the super initializer call is not at the end of the initializer list, the super constructor has to be called twice. The arguments to the super initializer have to be evaluated and stored in temporary local variables. At the beginning of the constructor block, a second implicit super call is inserted.

If the super initializer call happens to be at the end of the list, none of this madness has to happen, except for the extra implicit parameter to the constructor.

 
Review URL: http://codereview.chromium.org//8440014
------------------------------------------------------------------------
r1100 | mattsh@google.com | 2011-11-03 01:58:25 +0900 (木, 03 11月 2011) | 6 lines

use more distinctive pattern to mark where dart source goes

BUG=
TEST=

Review URL: http://codereview.chromium.org//8363018
------------------------------------------------------------------------
r1097 | srdjan@google.com | 2011-11-03 01:20:58 +0900 (木, 03 11月 2011) | 2 lines

Optimize 2/3 of instance field increment operation.
Review URL: http://codereview.chromium.org//8439023
------------------------------------------------------------------------
r1064 | regis@google.com | 2011-11-02 10:40:34 +0900 (水, 02 11月 2011) | 4 lines

Perform type canonicalization as part of type finalization.
Remove signature type cache from signature classes, since type canonicalization
has the same effect.
Review URL: http://codereview.chromium.org//8437028
------------------------------------------------------------------------
r1059 | asiva@google.com | 2011-11-02 09:48:33 +0900 (水, 02 11月 2011) | 2 lines

Add command line options to specify the various heap size parameters.
Review URL: http://codereview.chromium.org//8423023
------------------------------------------------------------------------
r1058 | srdjan@google.com | 2011-11-02 09:36:10 +0900 (水, 02 11月 2011) | 2 lines

Print Bigints in decimal format.
Review URL: http://codereview.chromium.org//8351050
------------------------------------------------------------------------
r1053 | regis@google.com | 2011-11-02 08:38:09 +0900 (水, 02 11月 2011) | 2 lines

Simplify canonicalization of constants and types.
Review URL: http://codereview.chromium.org//8442001
------------------------------------------------------------------------
r1045 | regis@google.com | 2011-11-02 07:00:06 +0900 (水, 02 11月 2011) | 2 lines

Canonicalize types.
Review URL: http://codereview.chromium.org//8372041
------------------------------------------------------------------------
r1034 | turnidge@google.com | 2011-11-02 03:11:36 +0900 (水, 02 11月 2011) | 2 lines

Reorganize dart_api.h and add a bunch of documentation.
Review URL: http://codereview.chromium.org//8343045
------------------------------------------------------------------------
r983 | srdjan@google.com | 2011-11-01 09:12:12 +0900 (火, 01 11月 2011) | 2 lines

Fix for bug 5270133 by preventing wrong canonicalization. Fixes problem of sporadic Dart failures when running in checked mode. Fixed wrong tests.
Review URL: http://codereview.chromium.org//8432016
------------------------------------------------------------------------
r973 | regis@google.com | 2011-11-01 06:16:15 +0900 (火, 01 11月 2011) | 3 lines

Fix parsing of named parameters (issue 243).
Add corresponding test.
Review URL: http://codereview.chromium.org//8387046
------------------------------------------------------------------------
r972 | asiva@google.com | 2011-11-01 06:08:39 +0900 (火, 01 11月 2011) | 4 lines

Enhance the array access API to deal with any objct that implements the list interface.

A future change will consider making the growable array a first class VM object so that access to growable array would be more efficient through the API.
Review URL: http://codereview.chromium.org//8417003
------------------------------------------------------------------------
r971 | asiva@google.com | 2011-11-01 05:53:44 +0900 (火, 01 11月 2011) | 2 lines

When generating snapshots for a specified script don't include the builtin library by default. The DOM snap shot for instance does not want the builtin library. If the builtin library is needed it needs to be explicitly imported in the specified script.
Review URL: http://codereview.chromium.org//8343071
------------------------------------------------------------------------
r970 | turnidge@google.com | 2011-11-01 05:18:07 +0900 (火, 01 11月 2011) | 3 lines

DART_CHECK_VALID -- abort on an invalid handle.
EXPECT_VALID -- check handle validity in unit tests.
Review URL: http://codereview.chromium.org//8401010
------------------------------------------------------------------------
r966 | antonm@google.com | 2011-11-01 04:07:48 +0900 (火, 01 11月 2011) | 2 lines

Make DartVM build with clang.
Review URL: http://codereview.chromium.org//8381037
------------------------------------------------------------------------
r963 | regis@google.com | 2011-11-01 03:45:16 +0900 (火, 01 11月 2011) | 4 lines

Verify that user classes do not extend any of Bool, Double, ObjectArray,
ImmutableArray, GrowableObjectArray, IntegerImplementation, Smi, Mint,
BigInt, OneByteString, TwoByteString, FourByteString.
Review URL: http://codereview.chromium.org//8429013
------------------------------------------------------------------------
r958 | antonm@google.com | 2011-11-01 02:49:28 +0900 (火, 01 11月 2011) | 5 lines

Proper reg for deoptiomization.

EAX may get overwritten by the operation.  Original value can be restored from ECX.

Review URL: http://codereview.chromium.org//8430007
------------------------------------------------------------------------
r955 | srdjan@google.com | 2011-11-01 01:48:21 +0900 (火, 01 11月 2011) | 2 lines

Print also comments with --print_flags
Review URL: http://codereview.chromium.org//8413056
------------------------------------------------------------------------
r944 | olonho@google.com | 2011-10-31 21:53:54 +0900 (月, 31 10月 2011) | 2 lines

Add missed size check for kTypeArray.
Review URL: http://codereview.chromium.org//8403041
------------------------------------------------------------------------
r923 | srdjan@google.com | 2011-10-29 07:25:05 +0900 (土, 29 10月 2011) | 3 lines

Special code for equality comparison for Smi, allowing null on left or right without calling deoptimization. The full solution is to implement two arguments type feedback collection (maybe also collect null classes for
equality comparison?)
Review URL: http://codereview.chromium.org//8413047
------------------------------------------------------------------------
r922 | regis@google.com | 2011-10-29 07:24:18 +0900 (土, 29 10月 2011) | 3 lines

Verify that user classes/interfaces do not extend/implement any of bool, num,
int, double, String, Function, or Dynamic.
Review URL: http://codereview.chromium.org//8416052
------------------------------------------------------------------------
r901 | asiva@google.com | 2011-10-29 02:32:29 +0900 (土, 29 10月 2011) | 5 lines

Report NullPointerException when we try to construct a regular expression
using a NULL pointer.
Report NullPointerException instead of ObjectNotClosureException when the
closure object is Null.
Review URL: http://codereview.chromium.org//8363034
------------------------------------------------------------------------
r892 | srdjan@google.com | 2011-10-29 00:21:42 +0900 (土, 29 10月 2011) | 2 lines

More strict non-equal cleanups in library code
Review URL: http://codereview.chromium.org//8413018
------------------------------------------------------------------------
r862 | regis@google.com | 2011-10-28 09:00:31 +0900 (金, 28 10月 2011) | 3 lines

Add support for 'Dynamic' type in the VM.
Add a test and disable if for dartc.
Review URL: http://codereview.chromium.org//8403005
------------------------------------------------------------------------
r859 | srdjan@google.com | 2011-10-28 07:11:16 +0900 (金, 28 10月 2011) | 2 lines

Use strict equality when comparing with null, especially when null is a default value.
Review URL: http://codereview.chromium.org//8400038
------------------------------------------------------------------------
r845 | srdjan@google.com | 2011-10-28 03:06:17 +0900 (金, 28 10月 2011) | 2 lines

bool != int (Windows has the best C compiler).
Review URL: http://codereview.chromium.org//8400030
------------------------------------------------------------------------
r844 | srdjan@google.com | 2011-10-28 02:43:04 +0900 (金, 28 10月 2011) | 2 lines

Fix excessive reoptimization (guard test lost somehow). Fixes problems in Dart.
Review URL: http://codereview.chromium.org//8412004
------------------------------------------------------------------------
r835 | srdjan@google.com | 2011-10-28 00:19:27 +0900 (金, 28 10月 2011) | 2 lines

Restructure instance calls in optimizing compiler with the goal of eliminating all remaining inline cache calls in optimized code.
Review URL: http://codereview.chromium.org//8404009
------------------------------------------------------------------------
r781 | turnidge@google.com | 2011-10-27 06:06:18 +0900 (木, 27 10月 2011) | 2 lines

Handle spurious wakeups properly.
Review URL: http://codereview.chromium.org//8392044
------------------------------------------------------------------------
r779 | regis@google.com | 2011-10-27 05:58:34 +0900 (木, 27 10月 2011) | 3 lines

Rename the VM internal 'var' type to 'Dynamic' type.
This change does not implement support for the built-in identifier 'Dynamic'.
Review URL: http://codereview.chromium.org//8403003
------------------------------------------------------------------------
r778 | turnidge@google.com | 2011-10-27 05:38:41 +0900 (木, 27 10月 2011) | 14 lines

Refactor the dart api a bit:

- Dart_Result is gone.  Dart_Handle mostly replaces it.
- Name/signature changes
  - IsValidResult -> IsValid
  - GetErrorCString -> GetError
  - many more...
- Make details of persistent handle freelist private.
- Add persistent "True" handle to api state.

Things I am not doing in this changelist:

- Documentation updates
Review URL: http://codereview.chromium.org//8380020
------------------------------------------------------------------------
r771 | regis@google.com | 2011-10-27 04:03:29 +0900 (木, 27 10月 2011) | 5 lines

Fix type tests involving an implicit closure of a non-parameterized class
extending a parameterized class.
Add corresponding test.
Disable new test for dartc (filed new issue 5516001).
Review URL: http://codereview.chromium.org//8393033
------------------------------------------------------------------------
r770 | srdjan@google.com | 2011-10-27 03:47:17 +0900 (木, 27 10月 2011) | 2 lines

Store IC data instead of array of classes in AST node, so that we can easier access targets and future multi-check IC data. 
Review URL: http://codereview.chromium.org//8394061
------------------------------------------------------------------------
r766 | regis@google.com | 2011-10-27 02:59:55 +0900 (木, 27 10月 2011) | 4 lines

Fix issue 235.
Add test.
Disable new test for dartc.
Review URL: http://codereview.chromium.org//8394057
------------------------------------------------------------------------
r726 | regis@google.com | 2011-10-26 08:16:16 +0900 (水, 26 10月 2011) | 2 lines

Cleanups.
Review URL: http://codereview.chromium.org//8390021
------------------------------------------------------------------------
r713 | regis@google.com | 2011-10-26 05:21:22 +0900 (水, 26 10月 2011) | 4 lines

Complete generic closure type checking.
Disable a bad test in co19 (issue 5512850).
Replace workaround by permanent fix for issue 5474672.
Review URL: http://codereview.chromium.org//8391007
------------------------------------------------------------------------
r712 | srdjan@google.com | 2011-10-26 04:27:24 +0900 (水, 26 10月 2011) | 2 lines

Fix crash on Linux,
Review URL: http://codereview.chromium.org//8391013
------------------------------------------------------------------------
r706 | srdjan@google.com | 2011-10-26 03:35:49 +0900 (水, 26 10月 2011) | 2 lines

Implement new inline cache. Delete a lot of unused code (most of change).
Review URL: http://codereview.chromium.org//8379013
------------------------------------------------------------------------
r690 | ager@google.com | 2011-10-25 21:16:04 +0900 (火, 25 10月 2011) | 11 lines

Improve error handling in the process library.

Verify that the arguments have the types expected by the
implementation. Require a List instance containing builtin
Strings as the arguments. Require a builtin String path.

R=sgjesse@google.com
BUG=
TEST=

Review URL: http://codereview.chromium.org//8383037
------------------------------------------------------------------------
r689 | benl@google.com | 2011-10-25 21:07:26 +0900 (火, 25 10月 2011) | 4 lines

Fix tests broken by proxy changes.

TBR=ager
Review URL: http://codereview.chromium.org//8351032
------------------------------------------------------------------------
r667 | turnidge@google.com | 2011-10-25 08:44:29 +0900 (火, 25 10月 2011) | 2 lines

Add Dart_GetNativeArgumentCount() and a test.
Review URL: http://codereview.chromium.org//8382017
------------------------------------------------------------------------
r666 | srdjan@google.com | 2011-10-25 08:42:47 +0900 (火, 25 10月 2011) | 2 lines

Code patching support and tests for new inline caches.
Review URL: http://codereview.chromium.org//8351019
------------------------------------------------------------------------
r663 | hausner@google.com | 2011-10-25 08:06:01 +0900 (火, 25 10月 2011) | 5 lines

Implicitly move super constructor call

Implicitly move super constructor call to the end of the initializer
list. Some code failed after r412.
Review URL: http://codereview.chromium.org//8380023
------------------------------------------------------------------------
r658 | regis@google.com | 2011-10-25 07:31:30 +0900 (火, 25 10月 2011) | 6 lines

Fix wrong detection of duplicate definition of function types (issue 187).
Duplicate import of a function type alias must be detected, but duplicate
import of a compiler generated canonical function type is necessary for proper
class resolution and is permitted.
Add tests.
Review URL: http://codereview.chromium.org//8375033
------------------------------------------------------------------------
r646 | antonm@google.com | 2011-10-25 04:33:02 +0900 (火, 25 10月 2011) | 3 lines

Proper string comparison.

Review URL: http://codereview.chromium.org//8360027
------------------------------------------------------------------------
r638 | srdjan@google.com | 2011-10-25 02:45:34 +0900 (火, 25 10月 2011) | 2 lines

Fix broken build on non-ia32 architectures.
Review URL: http://codereview.chromium.org//8382009
------------------------------------------------------------------------
r636 | srdjan@google.com | 2011-10-25 02:04:12 +0900 (火, 25 10月 2011) | 4 lines

Transitioning to new IC structure: change IC data to include function name; pass IC data instead of function name when calling instance function.

New IC doc: http://goo.gl/fS2Hk
Review URL: http://codereview.chromium.org//8357034
------------------------------------------------------------------------
r623 | cshapiro@google.com | 2011-10-22 09:18:29 +0900 (土, 22 10月 2011) | 3 lines

Declare the index as an intptr_t when the count is also an intptr_t.

Review URL: http://codereview.chromium.org//8369022
------------------------------------------------------------------------
r622 | iposva@google.com | 2011-10-22 08:22:18 +0900 (土, 22 10月 2011) | 2 lines

Revert https://code.google.com/p/dart/source/detail?r=597
Review URL: http://codereview.chromium.org//8370016
------------------------------------------------------------------------
r619 | cshapiro@google.com | 2011-10-22 07:05:49 +0900 (土, 22 10月 2011) | 5 lines

Deserialize string data directly into a newly allocated object.

BUG=5283593

Review URL: http://codereview.chromium.org//8359023
------------------------------------------------------------------------
r616 | cshapiro@google.com | 2011-10-22 05:33:29 +0900 (土, 22 10月 2011) | 5 lines

Implement case mapping using the Unicode default case mapping algorithm.

BUG=5425968

Review URL: http://codereview.chromium.org//8333001
------------------------------------------------------------------------
r607 | regis@google.com | 2011-10-22 02:44:04 +0900 (土, 22 10月 2011) | 3 lines

Fix member overriding rules in VM according to latest spec.
Fix tests accordingly.
Review URL: http://codereview.chromium.org//8360022
------------------------------------------------------------------------
r598 | antonm@google.com | 2011-10-21 21:46:34 +0900 (金, 21 10月 2011) | 2 lines

Igonre closure classes when looking for duplication.
Review URL: http://codereview.chromium.org//8363027
------------------------------------------------------------------------
r597 | jrgfogh@google.com | 2011-10-21 21:30:48 +0900 (金, 21 10月 2011) | 3 lines

Fixed a problem with spurious wakeups.

Review URL: http://codereview.chromium.org//8362026
------------------------------------------------------------------------
r596 | srdjan@google.com | 2011-10-21 16:03:17 +0900 (金, 21 10月 2011) | 2 lines

Some performance improvements to make raytracer faster (e.g, support intensified operation in mixed double/smi, constant folding).
Review URL: http://codereview.chromium.org//8355041
------------------------------------------------------------------------
r593 | asiva@google.com | 2011-10-21 08:29:06 +0900 (金, 21 10月 2011) | 7 lines

Add an imported into list for libraries so that it is possible to lookup
the local scope at the imported site in order to check if a variable is already
defined.

Added a check for duplicate definitions during class finialization which
checks for duplicate definitions.
Review URL: http://codereview.chromium.org//8342046
------------------------------------------------------------------------
r591 | asiva@google.com | 2011-10-21 08:03:43 +0900 (金, 21 10月 2011) | 6 lines

Fix intermittent simarm build breakage on macos.

cc1plus: warnings being treated as errors
./vm/object.h: In static member function 'static dart::RawString* dart::ClassFinalizer::FinalizeTypeWhileParsing(const dart::Type&)':
./vm/object.h:274: warning: variable 'this' might be clobbered by 'longjmp' or 'vfork'
Review URL: http://codereview.chromium.org//8361017
------------------------------------------------------------------------
r568 | turnidge@google.com | 2011-10-20 04:13:55 +0900 (木, 20 10月 2011) | 2 lines

Minimal change to get win32 build working again.
Review URL: http://codereview.chromium.org//8352014
------------------------------------------------------------------------
r566 | turnidge@google.com | 2011-10-20 03:41:33 +0900 (木, 20 10月 2011) | 5 lines

Use the distinguished class, ApiFailure, to signal when a Dart_Result is
invalid.

We eventually plan to drop the Dart_Result type entirely, but this change allows us to try out the functionality before we munge the user-visible api.
Review URL: http://codereview.chromium.org//8334009
------------------------------------------------------------------------
r558 | antonm@google.com | 2011-10-20 01:40:50 +0900 (木, 20 10月 2011) | 3 lines

Setup necessary zones.

Review URL: http://codereview.chromium.org//8342039
------------------------------------------------------------------------
r556 | iposva@google.com | 2011-10-20 00:44:55 +0900 (木, 20 10月 2011) | 2 lines

- Remove the remaining Array interface.
Review URL: http://codereview.chromium.org//8348025
------------------------------------------------------------------------
r546 | srdjan@google.com | 2011-10-19 17:27:39 +0900 (水, 19 10月 2011) | 2 lines

Wrong condition caused repeated deoptimizations and performance degradation especially on Meteor.
Review URL: http://codereview.chromium.org//8343024
------------------------------------------------------------------------
r540 | cshapiro@google.com | 2011-10-19 07:36:16 +0900 (水, 19 10月 2011) | 3 lines

Use the narrowest character width possible for substrings.

Review URL: http://codereview.chromium.org//8346014
------------------------------------------------------------------------
r536 | turnidge@google.com | 2011-10-19 06:41:43 +0900 (水, 19 10月 2011) | 3 lines

Fix more races in MessageQueue_WaitNotify.  My notifies could show up
before my waits, and I would timeout.
Review URL: http://codereview.chromium.org//8347013
------------------------------------------------------------------------
r535 | turnidge@google.com | 2011-10-19 06:23:06 +0900 (水, 19 10月 2011) | 2 lines

Deleting the wrong message in FlushAll...
Review URL: http://codereview.chromium.org//8347010
------------------------------------------------------------------------
r534 | turnidge@google.com | 2011-10-19 06:19:27 +0900 (水, 19 10月 2011) | 2 lines

Fix race.
Review URL: http://codereview.chromium.org//8344017
------------------------------------------------------------------------
r531 | regis@google.com | 2011-10-19 06:07:44 +0900 (水, 19 10月 2011) | 2 lines

Address review comments of previously submitted cl 8329005.
Review URL: http://codereview.chromium.org//8347008
------------------------------------------------------------------------
r526 | turnidge@google.com | 2011-10-19 05:38:36 +0900 (水, 19 10月 2011) | 3 lines

Add a sleep at the end of MessageQueue_WaitNotify to give the spawned
thread time to properly exit.
Review URL: http://codereview.chromium.org//8345013
------------------------------------------------------------------------
r516 | turnidge@google.com | 2011-10-19 02:54:07 +0900 (水, 19 10月 2011) | 36 lines

Allow embedders to provide custom message delivery for an isolate.

==============

Added Dart_SetPostMessageCallback and Dart_SetClosePortCallback.
These allow the embedder to provide custom message/port behavior
for their application. The vm provides standard implementations
that work with the standard run loop.

Added Dart_HandleMessage, which processes one message on the
current isolate. Embedders can use this to write their own
message processing loops. Rewrote code to use this internally.

Added Isolate::StandardRunLoop() to share code between
Dart_RunLoop and lib/isolate.cc

Changed the interface to PortMap::PostMessage. PostMessage is
now agnostic to message delivery mechanism. Note that PortMap is
now out of the "ReceiveMessage" business entirely. Moved
MessageQueue and friends out to message_queue.cc/h.

Moved the monitor from the Isolate into the MessageQueue. No
need for outsiders to mess. Added MessageQueue::Wait. Moved
monitor locking from PortMap into MessageQueue itself, which was
easier for me to reason about. Wrote some tests.

Removed PortMessage::Handle. The code turned into Dart_HandleMessage.

Regularized the nomenclature around ports. Type is now always
Dart_Port instead of intptr_t. Variables end in _port instead of
_id. Use the term "dest" instead of "target" or "send".

Added a family of new tests to port_test.

Added EXPECT_NE to the test framework.
Review URL: http://codereview.chromium.org//8297004
------------------------------------------------------------------------
r504 | regis@google.com | 2011-10-18 13:32:01 +0900 (火, 18 10月 2011) | 2 lines

Temporary workaround for issue 5474672.
Review URL: http://codereview.chromium.org//8341007
------------------------------------------------------------------------
r503 | regis@google.com | 2011-10-18 09:59:54 +0900 (火, 18 10月 2011) | 5 lines

Replace calls to Class::IsParameterized() by either
  Class::NumTypeParameters() > 0
or by
  Class::NumTypeArguments() > 0.
Review URL: http://codereview.chromium.org//8329005
------------------------------------------------------------------------
r500 | hausner@google.com | 2011-10-18 08:51:28 +0900 (火, 18 10月 2011) | 2 lines

Interpolated strings are never considered compile time const
Review URL: http://codereview.chromium.org//8318031
------------------------------------------------------------------------
r499 | cshapiro@google.com | 2011-10-18 08:49:48 +0900 (火, 18 10月 2011) | 3 lines

Add a const qualifier to string handles which are not reassigned.

Review URL: http://codereview.chromium.org//8339002
------------------------------------------------------------------------
r498 | hausner@google.com | 2011-10-18 08:41:32 +0900 (火, 18 10月 2011) | 2 lines

Fix mysterious build breakage that nobody can explain.
Review URL: http://codereview.chromium.org//8339003
------------------------------------------------------------------------
r489 | regis@google.com | 2011-10-18 08:00:09 +0900 (火, 18 10月 2011) | 2 lines

Verify method overrides in checked mode only (fix issue 69).
Review URL: http://codereview.chromium.org//8319020
------------------------------------------------------------------------
r485 | regis@google.com | 2011-10-18 05:22:42 +0900 (火, 18 10月 2011) | 2 lines

Merge the 3 different closure nodes into a single node.
Review URL: http://codereview.chromium.org//8294013
------------------------------------------------------------------------
r479 | regis@google.com | 2011-10-18 04:03:32 +0900 (火, 18 10月 2011) | 7 lines

Set type argument vector at compile time in type of closure parameters; this
require the introduction of a signature type cached in signature functions.
Support printing of the name of an instantiated signature type, e.g. print
'(int) => int' instead of '<T>(T) => T<int>'.
Avoid cycles when printing the name of illegal types during error reporting by
checking that the type is not being finalized.
Review URL: http://codereview.chromium.org//8289027
------------------------------------------------------------------------
r466 | srdjan@google.com | 2011-10-17 21:29:49 +0900 (月, 17 10月 2011) | 2 lines

Fix 5442338: Return true if the pc descriptor verifier skips verification because of too many descriptors to check.
Review URL: http://codereview.chromium.org//8318002
------------------------------------------------------------------------
r465 | srdjan@google.com | 2011-10-17 20:27:22 +0900 (月, 17 10月 2011) | 4 lines

Fix for bug 5442338 (crash in deoptimization): when optimized code calls deoptimization stub, check if the function was already deoptimized previously before attempting to restore unoptimized code.

Add test case when optimized code of a deoptimized function is several time on stack, and deoptimization occurs after the function was already deoptimized.
Review URL: http://codereview.chromium.org//8311017
------------------------------------------------------------------------
r460 | regis@google.com | 2011-10-15 07:02:50 +0900 (土, 15 10月 2011) | 4 lines

Rename class AssertError to AssertionError in the VM (fix issue 119).
Move VM specific tests to the correct tests directory.
Enable asserts in the VM when type checks are enabled.
Review URL: http://codereview.chromium.org//8294005
------------------------------------------------------------------------
r416 | regis@google.com | 2011-10-14 06:34:48 +0900 (金, 14 10月 2011) | 4 lines

Set type argument vector at run time in instantiated closure objects.
Set type argument vector at compile time in type of closure variables.
TODO: Set type argument vector at compile time in type of closure parameters.
Review URL: http://codereview.chromium.org//8271008
------------------------------------------------------------------------
r412 | hausner@google.com | 2011-10-14 05:16:38 +0900 (金, 14 10月 2011) | 12 lines

Create implicit super constructor call if necessary

Create an implicit call to the super constructor if no explicit
call is present, and also if the constructor does not have an
initializer list at all.

The evaluation order is still not conforming to the spec. Thus,
a couple of tests that happened to pass before now fail.

Fix issue 85
https://code.google.com/p/dart/issues/detail?id=85
Review URL: http://codereview.chromium.org//8286003
------------------------------------------------------------------------
r411 | asiva@google.com | 2011-10-14 05:09:21 +0900 (金, 14 10月 2011) | 2 lines

Changes to handle unresolved qualified identifiers.
Review URL: http://codereview.chromium.org//8247014
------------------------------------------------------------------------
r404 | asiva@google.com | 2011-10-14 02:10:35 +0900 (金, 14 10月 2011) | 2 lines

Ensure that the passed in raw pointer is not used in SetRaw().
Review URL: http://codereview.chromium.org//8231028
------------------------------------------------------------------------
r376 | srdjan@google.com | 2011-10-13 05:04:19 +0900 (木, 13 10月 2011) | 2 lines

Handle bug 5442338: PCDescriptors generated wrongly, disallowing optimizations, causing assert failures in debug. Fixed also assembly code generation in optimized code (a jumbo could be far). The test code from bug 5442338 can run now successfully.
Review URL: http://codereview.chromium.org//8240005
------------------------------------------------------------------------
r359 | hausner@google.com | 2011-10-12 08:50:19 +0900 (水, 12 10月 2011) | 4 lines

Implement index operator super call

Last portion of super operator calls.
Review URL: http://codereview.chromium.org//8234022
------------------------------------------------------------------------
r357 | regis@google.com | 2011-10-12 08:42:20 +0900 (水, 12 10月 2011) | 4 lines

Inline allocation of implicit closures.
Consolidate generation of closure allocation stubs into one function.
Fix type name printing when printing ast.
Review URL: http://codereview.chromium.org//8234016
------------------------------------------------------------------------
r335 | hausner@google.com | 2011-10-12 01:49:35 +0900 (水, 12 10月 2011) | 2 lines

Implement super operator calls
Review URL: http://codereview.chromium.org//8222015
------------------------------------------------------------------------
r321 | asiva@google.com | 2011-10-11 09:37:11 +0900 (火, 11 10月 2011) | 2 lines

Fix compilation warnings/errors seen with newer versions of gcc compiler.
Review URL: http://codereview.chromium.org//8222017
------------------------------------------------------------------------
r305 | cshapiro@google.com | 2011-10-11 03:47:53 +0900 (火, 11 10月 2011) | 3 lines

Remove unneeded predicate variables.

Review URL: https://chromereviews.googleplex.com/3570017
------------------------------------------------------------------------
r267 | regis@google.com | 2011-10-08 08:52:29 +0900 (土, 08 10月 2011) | 2 lines

Inline type checks for num, int, double, bool, String, and Function interfaces.
Review URL: https://chromereviews.googleplex.com/3557013
------------------------------------------------------------------------
r249 | regis@google.com | 2011-10-08 03:31:02 +0900 (土, 08 10月 2011) | 2 lines

Avoid accessing the object store when checking for var class or void class.
Review URL: https://chromereviews.googleplex.com/3562016
------------------------------------------------------------------------
r244 | hausner@google.com | 2011-10-08 03:02:30 +0900 (土, 08 10月 2011) | 4 lines

Supercall skipping

Trivial change. Fixes b/5384453
Review URL: https://chromereviews.googleplex.com/3570015
------------------------------------------------------------------------
r224 | srdjan@google.com | 2011-10-07 23:51:45 +0900 (金, 07 10月 2011) | 2 lines

Fix bool type checks for checked mode. Fast case is now always executed.
Review URL: https://chromereviews.googleplex.com/3577016
------------------------------------------------------------------------
r213 | ngeoffray@google.com | 2011-10-07 21:47:56 +0900 (金, 07 10月 2011) | 2 lines

Add default arguments for regexp flags.
Review URL: https://chromereviews.googleplex.com/3558016
------------------------------------------------------------------------
r208 | srdjan@google.com | 2011-10-07 20:16:57 +0900 (金, 07 10月 2011) | 2 lines

The simplest change to enable optimizing compiler in type checked mode. Every node that needs  type checking code will be executed by unoptimized code.
Review URL: https://chromereviews.googleplex.com/3577012
------------------------------------------------------------------------
r205 | iposva@google.com | 2011-10-07 18:26:03 +0900 (金, 07 10月 2011) | 3 lines

Fix bug 5425848:
- Handle LibraryPrefix entries when growing a library dictionary.
Review URL: https://chromereviews.googleplex.com/3570013
------------------------------------------------------------------------
r202 | iposva@google.com | 2011-10-07 17:44:46 +0900 (金, 07 10月 2011) | 2 lines

- Revert r80: Too large an impact on running in debug mode.
Review URL: https://chromereviews.googleplex.com/3558014
------------------------------------------------------------------------
r199 | kasperl@google.com | 2011-10-07 17:03:04 +0900 (金, 07 10月 2011) | 12 lines

Get rid of the support for the old parameter syntax.

I've CC'ed Matthias too and I wouldn't be surprised if he can
find a nicer way of dealing with this, but this is pretty
simple and allows me to make progress on getting rid of the
old syntax.

R=iposva@google.com
BUG=
TEST=

Review URL: https://chromereviews.googleplex.com/3569013
------------------------------------------------------------------------
r177 | cshapiro@google.com | 2011-10-07 09:18:59 +0900 (金, 07 10月 2011) | 6 lines

Prove, instead of disprove, element width compatibility.

This improves robustness by ensuring that only one predicate variable
is true before selecting the implementation method.

Review URL: https://chromereviews.googleplex.com/3562012
------------------------------------------------------------------------
r169 | cshapiro@google.com | 2011-10-07 07:42:24 +0900 (金, 07 10月 2011) | 16 lines

Implement support for reading and writing UTF-8 encoded strings.

In the past, characters in C strings were assumed to encode themselves
and when converting Dart strings to C strings characters were narrowed
to 8-bit values.

With this change, C strings are assumed to be UTF-8 encoded.
Converting a C string to a Dart string applies UTF-8 decoding and
converting a Dart string to a C string applies UTF-8 encoding.

Also part of this change are new methods to construct uninitialized
string objects and to copy string data.

BUG=5343358

Review URL: https://chromereviews.googleplex.com/3557012
------------------------------------------------------------------------
r168 | regis@google.com | 2011-10-07 07:40:45 +0900 (金, 07 10月 2011) | 3 lines

Support optional named arguments at the dart_entry level in the VM.
Fix bug 5422033: Const expressions don't work with named arguments.
Review URL: https://chromereviews.googleplex.com/3552015
------------------------------------------------------------------------
r166 | regis@google.com | 2011-10-07 07:35:01 +0900 (金, 07 10月 2011) | 2 lines

Inline condition type check.
Review URL: https://chromereviews.googleplex.com/3534018
------------------------------------------------------------------------
r140 | asiva@google.com | 2011-10-07 03:33:36 +0900 (金, 07 10月 2011) | 5 lines

5419598: Add a setjmp around the isolate spawning code so that parse errors
are caught and reported as errors.
5417103: Add a setjmp around Dart_Run_Loop so that parse errors
are caught and reported as errors.
Review URL: https://chromereviews.googleplex.com/3553012
------------------------------------------------------------------------
r138 | srdjan@google.com | 2011-10-07 01:31:31 +0900 (金, 07 10月 2011) | 2 lines

Fix resolving of implicit closures: treat null objects same as instances of Object.
Review URL: https://chromereviews.googleplex.com/3551013
------------------------------------------------------------------------
r121 | floitsch@google.com | 2011-10-06 23:21:57 +0900 (木, 06 10月 2011) | 3 lines

Rename Time to Duration and adapt methods.

Review URL: https://chromereviews.googleplex.com/3536013
------------------------------------------------------------------------
r107 | floitsch@google.com | 2011-10-06 19:14:49 +0900 (木, 06 10月 2011) | 3 lines

Rename DateTime to Date.

Review URL: https://chromereviews.googleplex.com/3529013
------------------------------------------------------------------------
r97 | srdjan@google.com | 2011-10-06 16:46:45 +0900 (木, 06 10月 2011) | 2 lines

Address Siva's suggestion.
Review URL: https://chromereviews.googleplex.com/3546013
------------------------------------------------------------------------
r81 | hausner@google.com | 2011-10-06 07:39:25 +0900 (木, 06 10月 2011) | 4 lines

Initializer expressions must not access 'this'

Catch explicit and implicit accesses to 'this' in initializer list of constructors.
Review URL: https://chromereviews.googleplex.com/3517020
------------------------------------------------------------------------
r80 | cshapiro@google.com | 2011-10-06 07:38:38 +0900 (木, 06 10月 2011) | 5 lines

Wrap method bodies in a NoGCScope when receiving raw pointer arguments.

BUG=5413582

Review URL: https://chromereviews.googleplex.com/3521023
------------------------------------------------------------------------
r51 | srdjan@google.com | 2011-10-06 01:39:25 +0900 (木, 06 10月 2011) | 2 lines

Fix build.
Review URL: https://chromereviews.googleplex.com/3515026
------------------------------------------------------------------------
r50 | srdjan@google.com | 2011-10-06 01:31:37 +0900 (木, 06 10月 2011) | 2 lines

Terminate IC data array with a null group (preparation for new style of inline caching; easier to terminate when iterating over the array in assembly).
Review URL: https://chromereviews.googleplex.com/3507023
------------------------------------------------------------------------
r48 | srdjan@google.com | 2011-10-06 01:27:07 +0900 (木, 06 10月 2011) | 2 lines

Fix Dart_InvokeDynamic api to handle the null receiver properly: call Object's methods (e.g., "toString", "noSuchMethod").
Review URL: https://chromereviews.googleplex.com/3525014
------------------------------------------------------------------------
r46 | srdjan@google.com | 2011-10-06 01:25:14 +0900 (木, 06 10月 2011) | 2 lines

Terminate IC data array with a null group (preparation for new style of inline caching; easier to terminate when iterating over the array in assembly).
Review URL: https://chromereviews.googleplex.com/3507023
------------------------------------------------------------------------
r15 | dgrove@google.com | 2011-10-05 14:20:07 +0900 (水, 05 10月 2011) | 1 line

Initial checkin.
------------------------------------------------------------------------
